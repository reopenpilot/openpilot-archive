#include "live.h"

namespace {
#define DIM 22
#define EDIM 21
#define MEDIM 21
typedef void (*Hfun)(double *, double *, double *);
const static double MAHA_THRESH_4 = 7.814727903251177;
const static double MAHA_THRESH_9 = 7.814727903251177;
const static double MAHA_THRESH_10 = 7.814727903251177;
const static double MAHA_THRESH_12 = 7.814727903251177;
const static double MAHA_THRESH_35 = 7.814727903251177;
const static double MAHA_THRESH_32 = 9.487729036781154;
const static double MAHA_THRESH_13 = 7.814727903251177;
const static double MAHA_THRESH_14 = 7.814727903251177;
const static double MAHA_THRESH_33 = 7.814727903251177;

/******************************************************************************
 *                       Code generated with SymPy 1.12                       *
 *                                                                            *
 *              See http://www.sympy.org/ for more information.               *
 *                                                                            *
 *                         This file is part of 'ekf'                         *
 ******************************************************************************/
void H(double *in_vec, double *out_7787276368106327593) {
   out_7787276368106327593[0] = 0;
   out_7787276368106327593[1] = -sin(in_vec[1])*sin(in_vec[2])*in_vec[4] - sin(in_vec[1])*cos(in_vec[2])*in_vec[3] - cos(in_vec[1])*in_vec[5];
   out_7787276368106327593[2] = -sin(in_vec[2])*cos(in_vec[1])*in_vec[3] + cos(in_vec[1])*cos(in_vec[2])*in_vec[4];
   out_7787276368106327593[3] = cos(in_vec[1])*cos(in_vec[2]);
   out_7787276368106327593[4] = sin(in_vec[2])*cos(in_vec[1]);
   out_7787276368106327593[5] = -sin(in_vec[1]);
   out_7787276368106327593[6] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (-sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_7787276368106327593[7] = -sin(in_vec[0])*sin(in_vec[1])*in_vec[5] + sin(in_vec[0])*sin(in_vec[2])*cos(in_vec[1])*in_vec[4] + sin(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_7787276368106327593[8] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]))*in_vec[4];
   out_7787276368106327593[9] = sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]);
   out_7787276368106327593[10] = sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) + cos(in_vec[0])*cos(in_vec[2]);
   out_7787276368106327593[11] = sin(in_vec[0])*cos(in_vec[1]);
   out_7787276368106327593[12] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (-sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) + sin(in_vec[2])*cos(in_vec[0]))*in_vec[3] - sin(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_7787276368106327593[13] = -sin(in_vec[1])*cos(in_vec[0])*in_vec[5] + sin(in_vec[2])*cos(in_vec[0])*cos(in_vec[1])*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_7787276368106327593[14] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (sin(in_vec[0])*cos(in_vec[2]) - sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[3];
   out_7787276368106327593[15] = sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]);
   out_7787276368106327593[16] = -sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]);
   out_7787276368106327593[17] = cos(in_vec[0])*cos(in_vec[1]);
}
void err_fun(double *nom_x, double *delta_x, double *out_3994570353758879094) {
   out_3994570353758879094[0] = delta_x[0] + nom_x[0];
   out_3994570353758879094[1] = delta_x[1] + nom_x[1];
   out_3994570353758879094[2] = delta_x[2] + nom_x[2];
   out_3994570353758879094[3] = -0.5*delta_x[3]*nom_x[4] - 0.5*delta_x[4]*nom_x[5] - 0.5*delta_x[5]*nom_x[6] + 1.0*nom_x[3];
   out_3994570353758879094[4] = 0.5*delta_x[3]*nom_x[3] + 0.5*delta_x[4]*nom_x[6] - 0.5*delta_x[5]*nom_x[5] + 1.0*nom_x[4];
   out_3994570353758879094[5] = -0.5*delta_x[3]*nom_x[6] + 0.5*delta_x[4]*nom_x[3] + 0.5*delta_x[5]*nom_x[4] + 1.0*nom_x[5];
   out_3994570353758879094[6] = 0.5*delta_x[3]*nom_x[5] - 0.5*delta_x[4]*nom_x[4] + 0.5*delta_x[5]*nom_x[3] + 1.0*nom_x[6];
   out_3994570353758879094[7] = delta_x[6] + nom_x[7];
   out_3994570353758879094[8] = delta_x[7] + nom_x[8];
   out_3994570353758879094[9] = delta_x[8] + nom_x[9];
   out_3994570353758879094[10] = delta_x[9] + nom_x[10];
   out_3994570353758879094[11] = delta_x[10] + nom_x[11];
   out_3994570353758879094[12] = delta_x[11] + nom_x[12];
   out_3994570353758879094[13] = delta_x[12] + nom_x[13];
   out_3994570353758879094[14] = delta_x[13] + nom_x[14];
   out_3994570353758879094[15] = delta_x[14] + nom_x[15];
   out_3994570353758879094[16] = delta_x[15] + nom_x[16];
   out_3994570353758879094[17] = delta_x[16] + nom_x[17];
   out_3994570353758879094[18] = delta_x[17] + nom_x[18];
   out_3994570353758879094[19] = delta_x[18] + nom_x[19];
   out_3994570353758879094[20] = delta_x[19] + nom_x[20];
   out_3994570353758879094[21] = delta_x[20] + nom_x[21];
}
void inv_err_fun(double *nom_x, double *true_x, double *out_3013500251537954332) {
   out_3013500251537954332[0] = -nom_x[0] + true_x[0];
   out_3013500251537954332[1] = -nom_x[1] + true_x[1];
   out_3013500251537954332[2] = -nom_x[2] + true_x[2];
   out_3013500251537954332[3] = 2*nom_x[3]*true_x[4] - 2*nom_x[4]*true_x[3] + 2*nom_x[5]*true_x[6] - 2*nom_x[6]*true_x[5];
   out_3013500251537954332[4] = 2*nom_x[3]*true_x[5] - 2*nom_x[4]*true_x[6] - 2*nom_x[5]*true_x[3] + 2*nom_x[6]*true_x[4];
   out_3013500251537954332[5] = 2*nom_x[3]*true_x[6] + 2*nom_x[4]*true_x[5] - 2*nom_x[5]*true_x[4] - 2*nom_x[6]*true_x[3];
   out_3013500251537954332[6] = -nom_x[7] + true_x[7];
   out_3013500251537954332[7] = -nom_x[8] + true_x[8];
   out_3013500251537954332[8] = -nom_x[9] + true_x[9];
   out_3013500251537954332[9] = -nom_x[10] + true_x[10];
   out_3013500251537954332[10] = -nom_x[11] + true_x[11];
   out_3013500251537954332[11] = -nom_x[12] + true_x[12];
   out_3013500251537954332[12] = -nom_x[13] + true_x[13];
   out_3013500251537954332[13] = -nom_x[14] + true_x[14];
   out_3013500251537954332[14] = -nom_x[15] + true_x[15];
   out_3013500251537954332[15] = -nom_x[16] + true_x[16];
   out_3013500251537954332[16] = -nom_x[17] + true_x[17];
   out_3013500251537954332[17] = -nom_x[18] + true_x[18];
   out_3013500251537954332[18] = -nom_x[19] + true_x[19];
   out_3013500251537954332[19] = -nom_x[20] + true_x[20];
   out_3013500251537954332[20] = -nom_x[21] + true_x[21];
}
void H_mod_fun(double *state, double *out_93920884344451630) {
   out_93920884344451630[0] = 1.0;
   out_93920884344451630[1] = 0;
   out_93920884344451630[2] = 0;
   out_93920884344451630[3] = 0;
   out_93920884344451630[4] = 0;
   out_93920884344451630[5] = 0;
   out_93920884344451630[6] = 0;
   out_93920884344451630[7] = 0;
   out_93920884344451630[8] = 0;
   out_93920884344451630[9] = 0;
   out_93920884344451630[10] = 0;
   out_93920884344451630[11] = 0;
   out_93920884344451630[12] = 0;
   out_93920884344451630[13] = 0;
   out_93920884344451630[14] = 0;
   out_93920884344451630[15] = 0;
   out_93920884344451630[16] = 0;
   out_93920884344451630[17] = 0;
   out_93920884344451630[18] = 0;
   out_93920884344451630[19] = 0;
   out_93920884344451630[20] = 0;
   out_93920884344451630[21] = 0;
   out_93920884344451630[22] = 1.0;
   out_93920884344451630[23] = 0;
   out_93920884344451630[24] = 0;
   out_93920884344451630[25] = 0;
   out_93920884344451630[26] = 0;
   out_93920884344451630[27] = 0;
   out_93920884344451630[28] = 0;
   out_93920884344451630[29] = 0;
   out_93920884344451630[30] = 0;
   out_93920884344451630[31] = 0;
   out_93920884344451630[32] = 0;
   out_93920884344451630[33] = 0;
   out_93920884344451630[34] = 0;
   out_93920884344451630[35] = 0;
   out_93920884344451630[36] = 0;
   out_93920884344451630[37] = 0;
   out_93920884344451630[38] = 0;
   out_93920884344451630[39] = 0;
   out_93920884344451630[40] = 0;
   out_93920884344451630[41] = 0;
   out_93920884344451630[42] = 0;
   out_93920884344451630[43] = 0;
   out_93920884344451630[44] = 1.0;
   out_93920884344451630[45] = 0;
   out_93920884344451630[46] = 0;
   out_93920884344451630[47] = 0;
   out_93920884344451630[48] = 0;
   out_93920884344451630[49] = 0;
   out_93920884344451630[50] = 0;
   out_93920884344451630[51] = 0;
   out_93920884344451630[52] = 0;
   out_93920884344451630[53] = 0;
   out_93920884344451630[54] = 0;
   out_93920884344451630[55] = 0;
   out_93920884344451630[56] = 0;
   out_93920884344451630[57] = 0;
   out_93920884344451630[58] = 0;
   out_93920884344451630[59] = 0;
   out_93920884344451630[60] = 0;
   out_93920884344451630[61] = 0;
   out_93920884344451630[62] = 0;
   out_93920884344451630[63] = 0;
   out_93920884344451630[64] = 0;
   out_93920884344451630[65] = 0;
   out_93920884344451630[66] = -0.5*state[4];
   out_93920884344451630[67] = -0.5*state[5];
   out_93920884344451630[68] = -0.5*state[6];
   out_93920884344451630[69] = 0;
   out_93920884344451630[70] = 0;
   out_93920884344451630[71] = 0;
   out_93920884344451630[72] = 0;
   out_93920884344451630[73] = 0;
   out_93920884344451630[74] = 0;
   out_93920884344451630[75] = 0;
   out_93920884344451630[76] = 0;
   out_93920884344451630[77] = 0;
   out_93920884344451630[78] = 0;
   out_93920884344451630[79] = 0;
   out_93920884344451630[80] = 0;
   out_93920884344451630[81] = 0;
   out_93920884344451630[82] = 0;
   out_93920884344451630[83] = 0;
   out_93920884344451630[84] = 0;
   out_93920884344451630[85] = 0;
   out_93920884344451630[86] = 0;
   out_93920884344451630[87] = 0.5*state[3];
   out_93920884344451630[88] = 0.5*state[6];
   out_93920884344451630[89] = -0.5*state[5];
   out_93920884344451630[90] = 0;
   out_93920884344451630[91] = 0;
   out_93920884344451630[92] = 0;
   out_93920884344451630[93] = 0;
   out_93920884344451630[94] = 0;
   out_93920884344451630[95] = 0;
   out_93920884344451630[96] = 0;
   out_93920884344451630[97] = 0;
   out_93920884344451630[98] = 0;
   out_93920884344451630[99] = 0;
   out_93920884344451630[100] = 0;
   out_93920884344451630[101] = 0;
   out_93920884344451630[102] = 0;
   out_93920884344451630[103] = 0;
   out_93920884344451630[104] = 0;
   out_93920884344451630[105] = 0;
   out_93920884344451630[106] = 0;
   out_93920884344451630[107] = 0;
   out_93920884344451630[108] = -0.5*state[6];
   out_93920884344451630[109] = 0.5*state[3];
   out_93920884344451630[110] = 0.5*state[4];
   out_93920884344451630[111] = 0;
   out_93920884344451630[112] = 0;
   out_93920884344451630[113] = 0;
   out_93920884344451630[114] = 0;
   out_93920884344451630[115] = 0;
   out_93920884344451630[116] = 0;
   out_93920884344451630[117] = 0;
   out_93920884344451630[118] = 0;
   out_93920884344451630[119] = 0;
   out_93920884344451630[120] = 0;
   out_93920884344451630[121] = 0;
   out_93920884344451630[122] = 0;
   out_93920884344451630[123] = 0;
   out_93920884344451630[124] = 0;
   out_93920884344451630[125] = 0;
   out_93920884344451630[126] = 0;
   out_93920884344451630[127] = 0;
   out_93920884344451630[128] = 0;
   out_93920884344451630[129] = 0.5*state[5];
   out_93920884344451630[130] = -0.5*state[4];
   out_93920884344451630[131] = 0.5*state[3];
   out_93920884344451630[132] = 0;
   out_93920884344451630[133] = 0;
   out_93920884344451630[134] = 0;
   out_93920884344451630[135] = 0;
   out_93920884344451630[136] = 0;
   out_93920884344451630[137] = 0;
   out_93920884344451630[138] = 0;
   out_93920884344451630[139] = 0;
   out_93920884344451630[140] = 0;
   out_93920884344451630[141] = 0;
   out_93920884344451630[142] = 0;
   out_93920884344451630[143] = 0;
   out_93920884344451630[144] = 0;
   out_93920884344451630[145] = 0;
   out_93920884344451630[146] = 0;
   out_93920884344451630[147] = 0;
   out_93920884344451630[148] = 0;
   out_93920884344451630[149] = 0;
   out_93920884344451630[150] = 0;
   out_93920884344451630[151] = 0;
   out_93920884344451630[152] = 0;
   out_93920884344451630[153] = 1.0;
   out_93920884344451630[154] = 0;
   out_93920884344451630[155] = 0;
   out_93920884344451630[156] = 0;
   out_93920884344451630[157] = 0;
   out_93920884344451630[158] = 0;
   out_93920884344451630[159] = 0;
   out_93920884344451630[160] = 0;
   out_93920884344451630[161] = 0;
   out_93920884344451630[162] = 0;
   out_93920884344451630[163] = 0;
   out_93920884344451630[164] = 0;
   out_93920884344451630[165] = 0;
   out_93920884344451630[166] = 0;
   out_93920884344451630[167] = 0;
   out_93920884344451630[168] = 0;
   out_93920884344451630[169] = 0;
   out_93920884344451630[170] = 0;
   out_93920884344451630[171] = 0;
   out_93920884344451630[172] = 0;
   out_93920884344451630[173] = 0;
   out_93920884344451630[174] = 0;
   out_93920884344451630[175] = 1.0;
   out_93920884344451630[176] = 0;
   out_93920884344451630[177] = 0;
   out_93920884344451630[178] = 0;
   out_93920884344451630[179] = 0;
   out_93920884344451630[180] = 0;
   out_93920884344451630[181] = 0;
   out_93920884344451630[182] = 0;
   out_93920884344451630[183] = 0;
   out_93920884344451630[184] = 0;
   out_93920884344451630[185] = 0;
   out_93920884344451630[186] = 0;
   out_93920884344451630[187] = 0;
   out_93920884344451630[188] = 0;
   out_93920884344451630[189] = 0;
   out_93920884344451630[190] = 0;
   out_93920884344451630[191] = 0;
   out_93920884344451630[192] = 0;
   out_93920884344451630[193] = 0;
   out_93920884344451630[194] = 0;
   out_93920884344451630[195] = 0;
   out_93920884344451630[196] = 0;
   out_93920884344451630[197] = 1.0;
   out_93920884344451630[198] = 0;
   out_93920884344451630[199] = 0;
   out_93920884344451630[200] = 0;
   out_93920884344451630[201] = 0;
   out_93920884344451630[202] = 0;
   out_93920884344451630[203] = 0;
   out_93920884344451630[204] = 0;
   out_93920884344451630[205] = 0;
   out_93920884344451630[206] = 0;
   out_93920884344451630[207] = 0;
   out_93920884344451630[208] = 0;
   out_93920884344451630[209] = 0;
   out_93920884344451630[210] = 0;
   out_93920884344451630[211] = 0;
   out_93920884344451630[212] = 0;
   out_93920884344451630[213] = 0;
   out_93920884344451630[214] = 0;
   out_93920884344451630[215] = 0;
   out_93920884344451630[216] = 0;
   out_93920884344451630[217] = 0;
   out_93920884344451630[218] = 0;
   out_93920884344451630[219] = 1.0;
   out_93920884344451630[220] = 0;
   out_93920884344451630[221] = 0;
   out_93920884344451630[222] = 0;
   out_93920884344451630[223] = 0;
   out_93920884344451630[224] = 0;
   out_93920884344451630[225] = 0;
   out_93920884344451630[226] = 0;
   out_93920884344451630[227] = 0;
   out_93920884344451630[228] = 0;
   out_93920884344451630[229] = 0;
   out_93920884344451630[230] = 0;
   out_93920884344451630[231] = 0;
   out_93920884344451630[232] = 0;
   out_93920884344451630[233] = 0;
   out_93920884344451630[234] = 0;
   out_93920884344451630[235] = 0;
   out_93920884344451630[236] = 0;
   out_93920884344451630[237] = 0;
   out_93920884344451630[238] = 0;
   out_93920884344451630[239] = 0;
   out_93920884344451630[240] = 0;
   out_93920884344451630[241] = 1.0;
   out_93920884344451630[242] = 0;
   out_93920884344451630[243] = 0;
   out_93920884344451630[244] = 0;
   out_93920884344451630[245] = 0;
   out_93920884344451630[246] = 0;
   out_93920884344451630[247] = 0;
   out_93920884344451630[248] = 0;
   out_93920884344451630[249] = 0;
   out_93920884344451630[250] = 0;
   out_93920884344451630[251] = 0;
   out_93920884344451630[252] = 0;
   out_93920884344451630[253] = 0;
   out_93920884344451630[254] = 0;
   out_93920884344451630[255] = 0;
   out_93920884344451630[256] = 0;
   out_93920884344451630[257] = 0;
   out_93920884344451630[258] = 0;
   out_93920884344451630[259] = 0;
   out_93920884344451630[260] = 0;
   out_93920884344451630[261] = 0;
   out_93920884344451630[262] = 0;
   out_93920884344451630[263] = 1.0;
   out_93920884344451630[264] = 0;
   out_93920884344451630[265] = 0;
   out_93920884344451630[266] = 0;
   out_93920884344451630[267] = 0;
   out_93920884344451630[268] = 0;
   out_93920884344451630[269] = 0;
   out_93920884344451630[270] = 0;
   out_93920884344451630[271] = 0;
   out_93920884344451630[272] = 0;
   out_93920884344451630[273] = 0;
   out_93920884344451630[274] = 0;
   out_93920884344451630[275] = 0;
   out_93920884344451630[276] = 0;
   out_93920884344451630[277] = 0;
   out_93920884344451630[278] = 0;
   out_93920884344451630[279] = 0;
   out_93920884344451630[280] = 0;
   out_93920884344451630[281] = 0;
   out_93920884344451630[282] = 0;
   out_93920884344451630[283] = 0;
   out_93920884344451630[284] = 0;
   out_93920884344451630[285] = 1.0;
   out_93920884344451630[286] = 0;
   out_93920884344451630[287] = 0;
   out_93920884344451630[288] = 0;
   out_93920884344451630[289] = 0;
   out_93920884344451630[290] = 0;
   out_93920884344451630[291] = 0;
   out_93920884344451630[292] = 0;
   out_93920884344451630[293] = 0;
   out_93920884344451630[294] = 0;
   out_93920884344451630[295] = 0;
   out_93920884344451630[296] = 0;
   out_93920884344451630[297] = 0;
   out_93920884344451630[298] = 0;
   out_93920884344451630[299] = 0;
   out_93920884344451630[300] = 0;
   out_93920884344451630[301] = 0;
   out_93920884344451630[302] = 0;
   out_93920884344451630[303] = 0;
   out_93920884344451630[304] = 0;
   out_93920884344451630[305] = 0;
   out_93920884344451630[306] = 0;
   out_93920884344451630[307] = 1.0;
   out_93920884344451630[308] = 0;
   out_93920884344451630[309] = 0;
   out_93920884344451630[310] = 0;
   out_93920884344451630[311] = 0;
   out_93920884344451630[312] = 0;
   out_93920884344451630[313] = 0;
   out_93920884344451630[314] = 0;
   out_93920884344451630[315] = 0;
   out_93920884344451630[316] = 0;
   out_93920884344451630[317] = 0;
   out_93920884344451630[318] = 0;
   out_93920884344451630[319] = 0;
   out_93920884344451630[320] = 0;
   out_93920884344451630[321] = 0;
   out_93920884344451630[322] = 0;
   out_93920884344451630[323] = 0;
   out_93920884344451630[324] = 0;
   out_93920884344451630[325] = 0;
   out_93920884344451630[326] = 0;
   out_93920884344451630[327] = 0;
   out_93920884344451630[328] = 0;
   out_93920884344451630[329] = 1.0;
   out_93920884344451630[330] = 0;
   out_93920884344451630[331] = 0;
   out_93920884344451630[332] = 0;
   out_93920884344451630[333] = 0;
   out_93920884344451630[334] = 0;
   out_93920884344451630[335] = 0;
   out_93920884344451630[336] = 0;
   out_93920884344451630[337] = 0;
   out_93920884344451630[338] = 0;
   out_93920884344451630[339] = 0;
   out_93920884344451630[340] = 0;
   out_93920884344451630[341] = 0;
   out_93920884344451630[342] = 0;
   out_93920884344451630[343] = 0;
   out_93920884344451630[344] = 0;
   out_93920884344451630[345] = 0;
   out_93920884344451630[346] = 0;
   out_93920884344451630[347] = 0;
   out_93920884344451630[348] = 0;
   out_93920884344451630[349] = 0;
   out_93920884344451630[350] = 0;
   out_93920884344451630[351] = 1.0;
   out_93920884344451630[352] = 0;
   out_93920884344451630[353] = 0;
   out_93920884344451630[354] = 0;
   out_93920884344451630[355] = 0;
   out_93920884344451630[356] = 0;
   out_93920884344451630[357] = 0;
   out_93920884344451630[358] = 0;
   out_93920884344451630[359] = 0;
   out_93920884344451630[360] = 0;
   out_93920884344451630[361] = 0;
   out_93920884344451630[362] = 0;
   out_93920884344451630[363] = 0;
   out_93920884344451630[364] = 0;
   out_93920884344451630[365] = 0;
   out_93920884344451630[366] = 0;
   out_93920884344451630[367] = 0;
   out_93920884344451630[368] = 0;
   out_93920884344451630[369] = 0;
   out_93920884344451630[370] = 0;
   out_93920884344451630[371] = 0;
   out_93920884344451630[372] = 0;
   out_93920884344451630[373] = 1.0;
   out_93920884344451630[374] = 0;
   out_93920884344451630[375] = 0;
   out_93920884344451630[376] = 0;
   out_93920884344451630[377] = 0;
   out_93920884344451630[378] = 0;
   out_93920884344451630[379] = 0;
   out_93920884344451630[380] = 0;
   out_93920884344451630[381] = 0;
   out_93920884344451630[382] = 0;
   out_93920884344451630[383] = 0;
   out_93920884344451630[384] = 0;
   out_93920884344451630[385] = 0;
   out_93920884344451630[386] = 0;
   out_93920884344451630[387] = 0;
   out_93920884344451630[388] = 0;
   out_93920884344451630[389] = 0;
   out_93920884344451630[390] = 0;
   out_93920884344451630[391] = 0;
   out_93920884344451630[392] = 0;
   out_93920884344451630[393] = 0;
   out_93920884344451630[394] = 0;
   out_93920884344451630[395] = 1.0;
   out_93920884344451630[396] = 0;
   out_93920884344451630[397] = 0;
   out_93920884344451630[398] = 0;
   out_93920884344451630[399] = 0;
   out_93920884344451630[400] = 0;
   out_93920884344451630[401] = 0;
   out_93920884344451630[402] = 0;
   out_93920884344451630[403] = 0;
   out_93920884344451630[404] = 0;
   out_93920884344451630[405] = 0;
   out_93920884344451630[406] = 0;
   out_93920884344451630[407] = 0;
   out_93920884344451630[408] = 0;
   out_93920884344451630[409] = 0;
   out_93920884344451630[410] = 0;
   out_93920884344451630[411] = 0;
   out_93920884344451630[412] = 0;
   out_93920884344451630[413] = 0;
   out_93920884344451630[414] = 0;
   out_93920884344451630[415] = 0;
   out_93920884344451630[416] = 0;
   out_93920884344451630[417] = 1.0;
   out_93920884344451630[418] = 0;
   out_93920884344451630[419] = 0;
   out_93920884344451630[420] = 0;
   out_93920884344451630[421] = 0;
   out_93920884344451630[422] = 0;
   out_93920884344451630[423] = 0;
   out_93920884344451630[424] = 0;
   out_93920884344451630[425] = 0;
   out_93920884344451630[426] = 0;
   out_93920884344451630[427] = 0;
   out_93920884344451630[428] = 0;
   out_93920884344451630[429] = 0;
   out_93920884344451630[430] = 0;
   out_93920884344451630[431] = 0;
   out_93920884344451630[432] = 0;
   out_93920884344451630[433] = 0;
   out_93920884344451630[434] = 0;
   out_93920884344451630[435] = 0;
   out_93920884344451630[436] = 0;
   out_93920884344451630[437] = 0;
   out_93920884344451630[438] = 0;
   out_93920884344451630[439] = 1.0;
   out_93920884344451630[440] = 0;
   out_93920884344451630[441] = 0;
   out_93920884344451630[442] = 0;
   out_93920884344451630[443] = 0;
   out_93920884344451630[444] = 0;
   out_93920884344451630[445] = 0;
   out_93920884344451630[446] = 0;
   out_93920884344451630[447] = 0;
   out_93920884344451630[448] = 0;
   out_93920884344451630[449] = 0;
   out_93920884344451630[450] = 0;
   out_93920884344451630[451] = 0;
   out_93920884344451630[452] = 0;
   out_93920884344451630[453] = 0;
   out_93920884344451630[454] = 0;
   out_93920884344451630[455] = 0;
   out_93920884344451630[456] = 0;
   out_93920884344451630[457] = 0;
   out_93920884344451630[458] = 0;
   out_93920884344451630[459] = 0;
   out_93920884344451630[460] = 0;
   out_93920884344451630[461] = 1.0;
}
void f_fun(double *state, double dt, double *out_8487489803491521865) {
   out_8487489803491521865[0] = dt*state[7] + state[0];
   out_8487489803491521865[1] = dt*state[8] + state[1];
   out_8487489803491521865[2] = dt*state[9] + state[2];
   out_8487489803491521865[3] = dt*(-0.5*state[4]*state[10] - 0.5*state[5]*state[11] - 0.5*state[6]*state[12]) + state[3];
   out_8487489803491521865[4] = dt*(0.5*state[3]*state[10] + 0.5*state[5]*state[12] - 0.5*state[6]*state[11]) + state[4];
   out_8487489803491521865[5] = dt*(0.5*state[3]*state[11] - 0.5*state[4]*state[12] + 0.5*state[6]*state[10]) + state[5];
   out_8487489803491521865[6] = dt*(0.5*state[3]*state[12] + 0.5*state[4]*state[11] - 0.5*state[5]*state[10]) + state[6];
   out_8487489803491521865[7] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]) + state[7];
   out_8487489803491521865[8] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]) + state[8];
   out_8487489803491521865[9] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]) + state[9];
   out_8487489803491521865[10] = state[10];
   out_8487489803491521865[11] = state[11];
   out_8487489803491521865[12] = state[12];
   out_8487489803491521865[13] = state[13];
   out_8487489803491521865[14] = state[14];
   out_8487489803491521865[15] = state[15];
   out_8487489803491521865[16] = state[16];
   out_8487489803491521865[17] = state[17];
   out_8487489803491521865[18] = state[18];
   out_8487489803491521865[19] = state[19];
   out_8487489803491521865[20] = state[20];
   out_8487489803491521865[21] = state[21];
}
void F_fun(double *state, double dt, double *out_774633978175335393) {
   out_774633978175335393[0] = 1;
   out_774633978175335393[1] = 0;
   out_774633978175335393[2] = 0;
   out_774633978175335393[3] = 0;
   out_774633978175335393[4] = 0;
   out_774633978175335393[5] = 0;
   out_774633978175335393[6] = dt;
   out_774633978175335393[7] = 0;
   out_774633978175335393[8] = 0;
   out_774633978175335393[9] = 0;
   out_774633978175335393[10] = 0;
   out_774633978175335393[11] = 0;
   out_774633978175335393[12] = 0;
   out_774633978175335393[13] = 0;
   out_774633978175335393[14] = 0;
   out_774633978175335393[15] = 0;
   out_774633978175335393[16] = 0;
   out_774633978175335393[17] = 0;
   out_774633978175335393[18] = 0;
   out_774633978175335393[19] = 0;
   out_774633978175335393[20] = 0;
   out_774633978175335393[21] = 0;
   out_774633978175335393[22] = 1;
   out_774633978175335393[23] = 0;
   out_774633978175335393[24] = 0;
   out_774633978175335393[25] = 0;
   out_774633978175335393[26] = 0;
   out_774633978175335393[27] = 0;
   out_774633978175335393[28] = dt;
   out_774633978175335393[29] = 0;
   out_774633978175335393[30] = 0;
   out_774633978175335393[31] = 0;
   out_774633978175335393[32] = 0;
   out_774633978175335393[33] = 0;
   out_774633978175335393[34] = 0;
   out_774633978175335393[35] = 0;
   out_774633978175335393[36] = 0;
   out_774633978175335393[37] = 0;
   out_774633978175335393[38] = 0;
   out_774633978175335393[39] = 0;
   out_774633978175335393[40] = 0;
   out_774633978175335393[41] = 0;
   out_774633978175335393[42] = 0;
   out_774633978175335393[43] = 0;
   out_774633978175335393[44] = 1;
   out_774633978175335393[45] = 0;
   out_774633978175335393[46] = 0;
   out_774633978175335393[47] = 0;
   out_774633978175335393[48] = 0;
   out_774633978175335393[49] = 0;
   out_774633978175335393[50] = dt;
   out_774633978175335393[51] = 0;
   out_774633978175335393[52] = 0;
   out_774633978175335393[53] = 0;
   out_774633978175335393[54] = 0;
   out_774633978175335393[55] = 0;
   out_774633978175335393[56] = 0;
   out_774633978175335393[57] = 0;
   out_774633978175335393[58] = 0;
   out_774633978175335393[59] = 0;
   out_774633978175335393[60] = 0;
   out_774633978175335393[61] = 0;
   out_774633978175335393[62] = 0;
   out_774633978175335393[63] = 0;
   out_774633978175335393[64] = 0;
   out_774633978175335393[65] = 0;
   out_774633978175335393[66] = 1;
   out_774633978175335393[67] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[11] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_774633978175335393[68] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[12] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[10] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[11]);
   out_774633978175335393[69] = 0;
   out_774633978175335393[70] = 0;
   out_774633978175335393[71] = 0;
   out_774633978175335393[72] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_774633978175335393[73] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_774633978175335393[74] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_774633978175335393[75] = 0;
   out_774633978175335393[76] = 0;
   out_774633978175335393[77] = 0;
   out_774633978175335393[78] = 0;
   out_774633978175335393[79] = 0;
   out_774633978175335393[80] = 0;
   out_774633978175335393[81] = 0;
   out_774633978175335393[82] = 0;
   out_774633978175335393[83] = 0;
   out_774633978175335393[84] = 0;
   out_774633978175335393[85] = 0;
   out_774633978175335393[86] = 0;
   out_774633978175335393[87] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[11] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_774633978175335393[88] = 1;
   out_774633978175335393[89] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[12] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[11] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[10]);
   out_774633978175335393[90] = 0;
   out_774633978175335393[91] = 0;
   out_774633978175335393[92] = 0;
   out_774633978175335393[93] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_774633978175335393[94] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_774633978175335393[95] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_774633978175335393[96] = 0;
   out_774633978175335393[97] = 0;
   out_774633978175335393[98] = 0;
   out_774633978175335393[99] = 0;
   out_774633978175335393[100] = 0;
   out_774633978175335393[101] = 0;
   out_774633978175335393[102] = 0;
   out_774633978175335393[103] = 0;
   out_774633978175335393[104] = 0;
   out_774633978175335393[105] = 0;
   out_774633978175335393[106] = 0;
   out_774633978175335393[107] = 0;
   out_774633978175335393[108] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[12] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[10] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[11]);
   out_774633978175335393[109] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[12] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[11] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[10]);
   out_774633978175335393[110] = 1;
   out_774633978175335393[111] = 0;
   out_774633978175335393[112] = 0;
   out_774633978175335393[113] = 0;
   out_774633978175335393[114] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_774633978175335393[115] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_774633978175335393[116] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_774633978175335393[117] = 0;
   out_774633978175335393[118] = 0;
   out_774633978175335393[119] = 0;
   out_774633978175335393[120] = 0;
   out_774633978175335393[121] = 0;
   out_774633978175335393[122] = 0;
   out_774633978175335393[123] = 0;
   out_774633978175335393[124] = 0;
   out_774633978175335393[125] = 0;
   out_774633978175335393[126] = 0;
   out_774633978175335393[127] = 0;
   out_774633978175335393[128] = 0;
   out_774633978175335393[129] = 0;
   out_774633978175335393[130] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_774633978175335393[131] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[18] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[16] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[17]);
   out_774633978175335393[132] = 1;
   out_774633978175335393[133] = 0;
   out_774633978175335393[134] = 0;
   out_774633978175335393[135] = 0;
   out_774633978175335393[136] = 0;
   out_774633978175335393[137] = 0;
   out_774633978175335393[138] = 0;
   out_774633978175335393[139] = 0;
   out_774633978175335393[140] = 0;
   out_774633978175335393[141] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_774633978175335393[142] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_774633978175335393[143] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_774633978175335393[144] = 0;
   out_774633978175335393[145] = 0;
   out_774633978175335393[146] = 0;
   out_774633978175335393[147] = 0;
   out_774633978175335393[148] = 0;
   out_774633978175335393[149] = 0;
   out_774633978175335393[150] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[17] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_774633978175335393[151] = 0;
   out_774633978175335393[152] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]);
   out_774633978175335393[153] = 0;
   out_774633978175335393[154] = 1;
   out_774633978175335393[155] = 0;
   out_774633978175335393[156] = 0;
   out_774633978175335393[157] = 0;
   out_774633978175335393[158] = 0;
   out_774633978175335393[159] = 0;
   out_774633978175335393[160] = 0;
   out_774633978175335393[161] = 0;
   out_774633978175335393[162] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_774633978175335393[163] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_774633978175335393[164] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_774633978175335393[165] = 0;
   out_774633978175335393[166] = 0;
   out_774633978175335393[167] = 0;
   out_774633978175335393[168] = 0;
   out_774633978175335393[169] = 0;
   out_774633978175335393[170] = 0;
   out_774633978175335393[171] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]);
   out_774633978175335393[172] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[18] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[17] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[16]);
   out_774633978175335393[173] = 0;
   out_774633978175335393[174] = 0;
   out_774633978175335393[175] = 0;
   out_774633978175335393[176] = 1;
   out_774633978175335393[177] = 0;
   out_774633978175335393[178] = 0;
   out_774633978175335393[179] = 0;
   out_774633978175335393[180] = 0;
   out_774633978175335393[181] = 0;
   out_774633978175335393[182] = 0;
   out_774633978175335393[183] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_774633978175335393[184] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_774633978175335393[185] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_774633978175335393[186] = 0;
   out_774633978175335393[187] = 0;
   out_774633978175335393[188] = 0;
   out_774633978175335393[189] = 0;
   out_774633978175335393[190] = 0;
   out_774633978175335393[191] = 0;
   out_774633978175335393[192] = 0;
   out_774633978175335393[193] = 0;
   out_774633978175335393[194] = 0;
   out_774633978175335393[195] = 0;
   out_774633978175335393[196] = 0;
   out_774633978175335393[197] = 0;
   out_774633978175335393[198] = 1;
   out_774633978175335393[199] = 0;
   out_774633978175335393[200] = 0;
   out_774633978175335393[201] = 0;
   out_774633978175335393[202] = 0;
   out_774633978175335393[203] = 0;
   out_774633978175335393[204] = 0;
   out_774633978175335393[205] = 0;
   out_774633978175335393[206] = 0;
   out_774633978175335393[207] = 0;
   out_774633978175335393[208] = 0;
   out_774633978175335393[209] = 0;
   out_774633978175335393[210] = 0;
   out_774633978175335393[211] = 0;
   out_774633978175335393[212] = 0;
   out_774633978175335393[213] = 0;
   out_774633978175335393[214] = 0;
   out_774633978175335393[215] = 0;
   out_774633978175335393[216] = 0;
   out_774633978175335393[217] = 0;
   out_774633978175335393[218] = 0;
   out_774633978175335393[219] = 0;
   out_774633978175335393[220] = 1;
   out_774633978175335393[221] = 0;
   out_774633978175335393[222] = 0;
   out_774633978175335393[223] = 0;
   out_774633978175335393[224] = 0;
   out_774633978175335393[225] = 0;
   out_774633978175335393[226] = 0;
   out_774633978175335393[227] = 0;
   out_774633978175335393[228] = 0;
   out_774633978175335393[229] = 0;
   out_774633978175335393[230] = 0;
   out_774633978175335393[231] = 0;
   out_774633978175335393[232] = 0;
   out_774633978175335393[233] = 0;
   out_774633978175335393[234] = 0;
   out_774633978175335393[235] = 0;
   out_774633978175335393[236] = 0;
   out_774633978175335393[237] = 0;
   out_774633978175335393[238] = 0;
   out_774633978175335393[239] = 0;
   out_774633978175335393[240] = 0;
   out_774633978175335393[241] = 0;
   out_774633978175335393[242] = 1;
   out_774633978175335393[243] = 0;
   out_774633978175335393[244] = 0;
   out_774633978175335393[245] = 0;
   out_774633978175335393[246] = 0;
   out_774633978175335393[247] = 0;
   out_774633978175335393[248] = 0;
   out_774633978175335393[249] = 0;
   out_774633978175335393[250] = 0;
   out_774633978175335393[251] = 0;
   out_774633978175335393[252] = 0;
   out_774633978175335393[253] = 0;
   out_774633978175335393[254] = 0;
   out_774633978175335393[255] = 0;
   out_774633978175335393[256] = 0;
   out_774633978175335393[257] = 0;
   out_774633978175335393[258] = 0;
   out_774633978175335393[259] = 0;
   out_774633978175335393[260] = 0;
   out_774633978175335393[261] = 0;
   out_774633978175335393[262] = 0;
   out_774633978175335393[263] = 0;
   out_774633978175335393[264] = 1;
   out_774633978175335393[265] = 0;
   out_774633978175335393[266] = 0;
   out_774633978175335393[267] = 0;
   out_774633978175335393[268] = 0;
   out_774633978175335393[269] = 0;
   out_774633978175335393[270] = 0;
   out_774633978175335393[271] = 0;
   out_774633978175335393[272] = 0;
   out_774633978175335393[273] = 0;
   out_774633978175335393[274] = 0;
   out_774633978175335393[275] = 0;
   out_774633978175335393[276] = 0;
   out_774633978175335393[277] = 0;
   out_774633978175335393[278] = 0;
   out_774633978175335393[279] = 0;
   out_774633978175335393[280] = 0;
   out_774633978175335393[281] = 0;
   out_774633978175335393[282] = 0;
   out_774633978175335393[283] = 0;
   out_774633978175335393[284] = 0;
   out_774633978175335393[285] = 0;
   out_774633978175335393[286] = 1;
   out_774633978175335393[287] = 0;
   out_774633978175335393[288] = 0;
   out_774633978175335393[289] = 0;
   out_774633978175335393[290] = 0;
   out_774633978175335393[291] = 0;
   out_774633978175335393[292] = 0;
   out_774633978175335393[293] = 0;
   out_774633978175335393[294] = 0;
   out_774633978175335393[295] = 0;
   out_774633978175335393[296] = 0;
   out_774633978175335393[297] = 0;
   out_774633978175335393[298] = 0;
   out_774633978175335393[299] = 0;
   out_774633978175335393[300] = 0;
   out_774633978175335393[301] = 0;
   out_774633978175335393[302] = 0;
   out_774633978175335393[303] = 0;
   out_774633978175335393[304] = 0;
   out_774633978175335393[305] = 0;
   out_774633978175335393[306] = 0;
   out_774633978175335393[307] = 0;
   out_774633978175335393[308] = 1;
   out_774633978175335393[309] = 0;
   out_774633978175335393[310] = 0;
   out_774633978175335393[311] = 0;
   out_774633978175335393[312] = 0;
   out_774633978175335393[313] = 0;
   out_774633978175335393[314] = 0;
   out_774633978175335393[315] = 0;
   out_774633978175335393[316] = 0;
   out_774633978175335393[317] = 0;
   out_774633978175335393[318] = 0;
   out_774633978175335393[319] = 0;
   out_774633978175335393[320] = 0;
   out_774633978175335393[321] = 0;
   out_774633978175335393[322] = 0;
   out_774633978175335393[323] = 0;
   out_774633978175335393[324] = 0;
   out_774633978175335393[325] = 0;
   out_774633978175335393[326] = 0;
   out_774633978175335393[327] = 0;
   out_774633978175335393[328] = 0;
   out_774633978175335393[329] = 0;
   out_774633978175335393[330] = 1;
   out_774633978175335393[331] = 0;
   out_774633978175335393[332] = 0;
   out_774633978175335393[333] = 0;
   out_774633978175335393[334] = 0;
   out_774633978175335393[335] = 0;
   out_774633978175335393[336] = 0;
   out_774633978175335393[337] = 0;
   out_774633978175335393[338] = 0;
   out_774633978175335393[339] = 0;
   out_774633978175335393[340] = 0;
   out_774633978175335393[341] = 0;
   out_774633978175335393[342] = 0;
   out_774633978175335393[343] = 0;
   out_774633978175335393[344] = 0;
   out_774633978175335393[345] = 0;
   out_774633978175335393[346] = 0;
   out_774633978175335393[347] = 0;
   out_774633978175335393[348] = 0;
   out_774633978175335393[349] = 0;
   out_774633978175335393[350] = 0;
   out_774633978175335393[351] = 0;
   out_774633978175335393[352] = 1;
   out_774633978175335393[353] = 0;
   out_774633978175335393[354] = 0;
   out_774633978175335393[355] = 0;
   out_774633978175335393[356] = 0;
   out_774633978175335393[357] = 0;
   out_774633978175335393[358] = 0;
   out_774633978175335393[359] = 0;
   out_774633978175335393[360] = 0;
   out_774633978175335393[361] = 0;
   out_774633978175335393[362] = 0;
   out_774633978175335393[363] = 0;
   out_774633978175335393[364] = 0;
   out_774633978175335393[365] = 0;
   out_774633978175335393[366] = 0;
   out_774633978175335393[367] = 0;
   out_774633978175335393[368] = 0;
   out_774633978175335393[369] = 0;
   out_774633978175335393[370] = 0;
   out_774633978175335393[371] = 0;
   out_774633978175335393[372] = 0;
   out_774633978175335393[373] = 0;
   out_774633978175335393[374] = 1;
   out_774633978175335393[375] = 0;
   out_774633978175335393[376] = 0;
   out_774633978175335393[377] = 0;
   out_774633978175335393[378] = 0;
   out_774633978175335393[379] = 0;
   out_774633978175335393[380] = 0;
   out_774633978175335393[381] = 0;
   out_774633978175335393[382] = 0;
   out_774633978175335393[383] = 0;
   out_774633978175335393[384] = 0;
   out_774633978175335393[385] = 0;
   out_774633978175335393[386] = 0;
   out_774633978175335393[387] = 0;
   out_774633978175335393[388] = 0;
   out_774633978175335393[389] = 0;
   out_774633978175335393[390] = 0;
   out_774633978175335393[391] = 0;
   out_774633978175335393[392] = 0;
   out_774633978175335393[393] = 0;
   out_774633978175335393[394] = 0;
   out_774633978175335393[395] = 0;
   out_774633978175335393[396] = 1;
   out_774633978175335393[397] = 0;
   out_774633978175335393[398] = 0;
   out_774633978175335393[399] = 0;
   out_774633978175335393[400] = 0;
   out_774633978175335393[401] = 0;
   out_774633978175335393[402] = 0;
   out_774633978175335393[403] = 0;
   out_774633978175335393[404] = 0;
   out_774633978175335393[405] = 0;
   out_774633978175335393[406] = 0;
   out_774633978175335393[407] = 0;
   out_774633978175335393[408] = 0;
   out_774633978175335393[409] = 0;
   out_774633978175335393[410] = 0;
   out_774633978175335393[411] = 0;
   out_774633978175335393[412] = 0;
   out_774633978175335393[413] = 0;
   out_774633978175335393[414] = 0;
   out_774633978175335393[415] = 0;
   out_774633978175335393[416] = 0;
   out_774633978175335393[417] = 0;
   out_774633978175335393[418] = 1;
   out_774633978175335393[419] = 0;
   out_774633978175335393[420] = 0;
   out_774633978175335393[421] = 0;
   out_774633978175335393[422] = 0;
   out_774633978175335393[423] = 0;
   out_774633978175335393[424] = 0;
   out_774633978175335393[425] = 0;
   out_774633978175335393[426] = 0;
   out_774633978175335393[427] = 0;
   out_774633978175335393[428] = 0;
   out_774633978175335393[429] = 0;
   out_774633978175335393[430] = 0;
   out_774633978175335393[431] = 0;
   out_774633978175335393[432] = 0;
   out_774633978175335393[433] = 0;
   out_774633978175335393[434] = 0;
   out_774633978175335393[435] = 0;
   out_774633978175335393[436] = 0;
   out_774633978175335393[437] = 0;
   out_774633978175335393[438] = 0;
   out_774633978175335393[439] = 0;
   out_774633978175335393[440] = 1;
}
void h_4(double *state, double *unused, double *out_2528256780518921720) {
   out_2528256780518921720[0] = state[10] + state[13];
   out_2528256780518921720[1] = state[11] + state[14];
   out_2528256780518921720[2] = state[12] + state[15];
}
void H_4(double *state, double *unused, double *out_7049746969205757561) {
   out_7049746969205757561[0] = 0;
   out_7049746969205757561[1] = 0;
   out_7049746969205757561[2] = 0;
   out_7049746969205757561[3] = 0;
   out_7049746969205757561[4] = 0;
   out_7049746969205757561[5] = 0;
   out_7049746969205757561[6] = 0;
   out_7049746969205757561[7] = 0;
   out_7049746969205757561[8] = 0;
   out_7049746969205757561[9] = 0;
   out_7049746969205757561[10] = 1;
   out_7049746969205757561[11] = 0;
   out_7049746969205757561[12] = 0;
   out_7049746969205757561[13] = 1;
   out_7049746969205757561[14] = 0;
   out_7049746969205757561[15] = 0;
   out_7049746969205757561[16] = 0;
   out_7049746969205757561[17] = 0;
   out_7049746969205757561[18] = 0;
   out_7049746969205757561[19] = 0;
   out_7049746969205757561[20] = 0;
   out_7049746969205757561[21] = 0;
   out_7049746969205757561[22] = 0;
   out_7049746969205757561[23] = 0;
   out_7049746969205757561[24] = 0;
   out_7049746969205757561[25] = 0;
   out_7049746969205757561[26] = 0;
   out_7049746969205757561[27] = 0;
   out_7049746969205757561[28] = 0;
   out_7049746969205757561[29] = 0;
   out_7049746969205757561[30] = 0;
   out_7049746969205757561[31] = 0;
   out_7049746969205757561[32] = 0;
   out_7049746969205757561[33] = 1;
   out_7049746969205757561[34] = 0;
   out_7049746969205757561[35] = 0;
   out_7049746969205757561[36] = 1;
   out_7049746969205757561[37] = 0;
   out_7049746969205757561[38] = 0;
   out_7049746969205757561[39] = 0;
   out_7049746969205757561[40] = 0;
   out_7049746969205757561[41] = 0;
   out_7049746969205757561[42] = 0;
   out_7049746969205757561[43] = 0;
   out_7049746969205757561[44] = 0;
   out_7049746969205757561[45] = 0;
   out_7049746969205757561[46] = 0;
   out_7049746969205757561[47] = 0;
   out_7049746969205757561[48] = 0;
   out_7049746969205757561[49] = 0;
   out_7049746969205757561[50] = 0;
   out_7049746969205757561[51] = 0;
   out_7049746969205757561[52] = 0;
   out_7049746969205757561[53] = 0;
   out_7049746969205757561[54] = 0;
   out_7049746969205757561[55] = 0;
   out_7049746969205757561[56] = 1;
   out_7049746969205757561[57] = 0;
   out_7049746969205757561[58] = 0;
   out_7049746969205757561[59] = 1;
   out_7049746969205757561[60] = 0;
   out_7049746969205757561[61] = 0;
   out_7049746969205757561[62] = 0;
   out_7049746969205757561[63] = 0;
   out_7049746969205757561[64] = 0;
   out_7049746969205757561[65] = 0;
}
void h_9(double *state, double *unused, double *out_7170740815486647369) {
   out_7170740815486647369[0] = state[10];
   out_7170740815486647369[1] = state[11];
   out_7170740815486647369[2] = state[12];
}
void H_9(double *state, double *unused, double *out_6808557322576166916) {
   out_6808557322576166916[0] = 0;
   out_6808557322576166916[1] = 0;
   out_6808557322576166916[2] = 0;
   out_6808557322576166916[3] = 0;
   out_6808557322576166916[4] = 0;
   out_6808557322576166916[5] = 0;
   out_6808557322576166916[6] = 0;
   out_6808557322576166916[7] = 0;
   out_6808557322576166916[8] = 0;
   out_6808557322576166916[9] = 0;
   out_6808557322576166916[10] = 1;
   out_6808557322576166916[11] = 0;
   out_6808557322576166916[12] = 0;
   out_6808557322576166916[13] = 0;
   out_6808557322576166916[14] = 0;
   out_6808557322576166916[15] = 0;
   out_6808557322576166916[16] = 0;
   out_6808557322576166916[17] = 0;
   out_6808557322576166916[18] = 0;
   out_6808557322576166916[19] = 0;
   out_6808557322576166916[20] = 0;
   out_6808557322576166916[21] = 0;
   out_6808557322576166916[22] = 0;
   out_6808557322576166916[23] = 0;
   out_6808557322576166916[24] = 0;
   out_6808557322576166916[25] = 0;
   out_6808557322576166916[26] = 0;
   out_6808557322576166916[27] = 0;
   out_6808557322576166916[28] = 0;
   out_6808557322576166916[29] = 0;
   out_6808557322576166916[30] = 0;
   out_6808557322576166916[31] = 0;
   out_6808557322576166916[32] = 0;
   out_6808557322576166916[33] = 1;
   out_6808557322576166916[34] = 0;
   out_6808557322576166916[35] = 0;
   out_6808557322576166916[36] = 0;
   out_6808557322576166916[37] = 0;
   out_6808557322576166916[38] = 0;
   out_6808557322576166916[39] = 0;
   out_6808557322576166916[40] = 0;
   out_6808557322576166916[41] = 0;
   out_6808557322576166916[42] = 0;
   out_6808557322576166916[43] = 0;
   out_6808557322576166916[44] = 0;
   out_6808557322576166916[45] = 0;
   out_6808557322576166916[46] = 0;
   out_6808557322576166916[47] = 0;
   out_6808557322576166916[48] = 0;
   out_6808557322576166916[49] = 0;
   out_6808557322576166916[50] = 0;
   out_6808557322576166916[51] = 0;
   out_6808557322576166916[52] = 0;
   out_6808557322576166916[53] = 0;
   out_6808557322576166916[54] = 0;
   out_6808557322576166916[55] = 0;
   out_6808557322576166916[56] = 1;
   out_6808557322576166916[57] = 0;
   out_6808557322576166916[58] = 0;
   out_6808557322576166916[59] = 0;
   out_6808557322576166916[60] = 0;
   out_6808557322576166916[61] = 0;
   out_6808557322576166916[62] = 0;
   out_6808557322576166916[63] = 0;
   out_6808557322576166916[64] = 0;
   out_6808557322576166916[65] = 0;
}
void h_10(double *state, double *unused, double *out_3884670649463800725) {
   out_3884670649463800725[0] = 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0] + state[16] + state[19];
   out_3884670649463800725[1] = 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1] + state[17] + state[20];
   out_3884670649463800725[2] = 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[2] + state[18] + state[21];
}
void H_10(double *state, double *unused, double *out_4358002926250039592) {
   out_4358002926250039592[0] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*pow(state[0], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_4358002926250039592[1] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_4358002926250039592[2] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[2];
   out_4358002926250039592[3] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_4358002926250039592[4] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_4358002926250039592[5] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_4358002926250039592[6] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_4358002926250039592[7] = 0;
   out_4358002926250039592[8] = 0;
   out_4358002926250039592[9] = 0;
   out_4358002926250039592[10] = 0;
   out_4358002926250039592[11] = 0;
   out_4358002926250039592[12] = 0;
   out_4358002926250039592[13] = 0;
   out_4358002926250039592[14] = 0;
   out_4358002926250039592[15] = 0;
   out_4358002926250039592[16] = 1;
   out_4358002926250039592[17] = 0;
   out_4358002926250039592[18] = 0;
   out_4358002926250039592[19] = 1;
   out_4358002926250039592[20] = 0;
   out_4358002926250039592[21] = 0;
   out_4358002926250039592[22] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_4358002926250039592[23] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*pow(state[1], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_4358002926250039592[24] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1]*state[2];
   out_4358002926250039592[25] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_4358002926250039592[26] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_4358002926250039592[27] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_4358002926250039592[28] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_4358002926250039592[29] = 0;
   out_4358002926250039592[30] = 0;
   out_4358002926250039592[31] = 0;
   out_4358002926250039592[32] = 0;
   out_4358002926250039592[33] = 0;
   out_4358002926250039592[34] = 0;
   out_4358002926250039592[35] = 0;
   out_4358002926250039592[36] = 0;
   out_4358002926250039592[37] = 0;
   out_4358002926250039592[38] = 0;
   out_4358002926250039592[39] = 1;
   out_4358002926250039592[40] = 0;
   out_4358002926250039592[41] = 0;
   out_4358002926250039592[42] = 1;
   out_4358002926250039592[43] = 0;
   out_4358002926250039592[44] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[0]*state[2];
   out_4358002926250039592[45] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[1]*state[2];
   out_4358002926250039592[46] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*pow(state[2], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_4358002926250039592[47] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_4358002926250039592[48] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_4358002926250039592[49] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_4358002926250039592[50] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_4358002926250039592[51] = 0;
   out_4358002926250039592[52] = 0;
   out_4358002926250039592[53] = 0;
   out_4358002926250039592[54] = 0;
   out_4358002926250039592[55] = 0;
   out_4358002926250039592[56] = 0;
   out_4358002926250039592[57] = 0;
   out_4358002926250039592[58] = 0;
   out_4358002926250039592[59] = 0;
   out_4358002926250039592[60] = 0;
   out_4358002926250039592[61] = 0;
   out_4358002926250039592[62] = 1;
   out_4358002926250039592[63] = 0;
   out_4358002926250039592[64] = 0;
   out_4358002926250039592[65] = 1;
}
void h_12(double *state, double *unused, double *out_6588492251690931110) {
   out_6588492251690931110[0] = state[0];
   out_6588492251690931110[1] = state[1];
   out_6588492251690931110[2] = state[2];
}
void H_12(double *state, double *unused, double *out_2030290561173795766) {
   out_2030290561173795766[0] = 1;
   out_2030290561173795766[1] = 0;
   out_2030290561173795766[2] = 0;
   out_2030290561173795766[3] = 0;
   out_2030290561173795766[4] = 0;
   out_2030290561173795766[5] = 0;
   out_2030290561173795766[6] = 0;
   out_2030290561173795766[7] = 0;
   out_2030290561173795766[8] = 0;
   out_2030290561173795766[9] = 0;
   out_2030290561173795766[10] = 0;
   out_2030290561173795766[11] = 0;
   out_2030290561173795766[12] = 0;
   out_2030290561173795766[13] = 0;
   out_2030290561173795766[14] = 0;
   out_2030290561173795766[15] = 0;
   out_2030290561173795766[16] = 0;
   out_2030290561173795766[17] = 0;
   out_2030290561173795766[18] = 0;
   out_2030290561173795766[19] = 0;
   out_2030290561173795766[20] = 0;
   out_2030290561173795766[21] = 0;
   out_2030290561173795766[22] = 0;
   out_2030290561173795766[23] = 1;
   out_2030290561173795766[24] = 0;
   out_2030290561173795766[25] = 0;
   out_2030290561173795766[26] = 0;
   out_2030290561173795766[27] = 0;
   out_2030290561173795766[28] = 0;
   out_2030290561173795766[29] = 0;
   out_2030290561173795766[30] = 0;
   out_2030290561173795766[31] = 0;
   out_2030290561173795766[32] = 0;
   out_2030290561173795766[33] = 0;
   out_2030290561173795766[34] = 0;
   out_2030290561173795766[35] = 0;
   out_2030290561173795766[36] = 0;
   out_2030290561173795766[37] = 0;
   out_2030290561173795766[38] = 0;
   out_2030290561173795766[39] = 0;
   out_2030290561173795766[40] = 0;
   out_2030290561173795766[41] = 0;
   out_2030290561173795766[42] = 0;
   out_2030290561173795766[43] = 0;
   out_2030290561173795766[44] = 0;
   out_2030290561173795766[45] = 0;
   out_2030290561173795766[46] = 1;
   out_2030290561173795766[47] = 0;
   out_2030290561173795766[48] = 0;
   out_2030290561173795766[49] = 0;
   out_2030290561173795766[50] = 0;
   out_2030290561173795766[51] = 0;
   out_2030290561173795766[52] = 0;
   out_2030290561173795766[53] = 0;
   out_2030290561173795766[54] = 0;
   out_2030290561173795766[55] = 0;
   out_2030290561173795766[56] = 0;
   out_2030290561173795766[57] = 0;
   out_2030290561173795766[58] = 0;
   out_2030290561173795766[59] = 0;
   out_2030290561173795766[60] = 0;
   out_2030290561173795766[61] = 0;
   out_2030290561173795766[62] = 0;
   out_2030290561173795766[63] = 0;
   out_2030290561173795766[64] = 0;
   out_2030290561173795766[65] = 0;
}
void h_35(double *state, double *unused, double *out_7285704233339267220) {
   out_7285704233339267220[0] = state[7];
   out_7285704233339267220[1] = state[8];
   out_7285704233339267220[2] = state[9];
}
void H_35(double *state, double *unused, double *out_3683084911833150185) {
   out_3683084911833150185[0] = 0;
   out_3683084911833150185[1] = 0;
   out_3683084911833150185[2] = 0;
   out_3683084911833150185[3] = 0;
   out_3683084911833150185[4] = 0;
   out_3683084911833150185[5] = 0;
   out_3683084911833150185[6] = 0;
   out_3683084911833150185[7] = 1;
   out_3683084911833150185[8] = 0;
   out_3683084911833150185[9] = 0;
   out_3683084911833150185[10] = 0;
   out_3683084911833150185[11] = 0;
   out_3683084911833150185[12] = 0;
   out_3683084911833150185[13] = 0;
   out_3683084911833150185[14] = 0;
   out_3683084911833150185[15] = 0;
   out_3683084911833150185[16] = 0;
   out_3683084911833150185[17] = 0;
   out_3683084911833150185[18] = 0;
   out_3683084911833150185[19] = 0;
   out_3683084911833150185[20] = 0;
   out_3683084911833150185[21] = 0;
   out_3683084911833150185[22] = 0;
   out_3683084911833150185[23] = 0;
   out_3683084911833150185[24] = 0;
   out_3683084911833150185[25] = 0;
   out_3683084911833150185[26] = 0;
   out_3683084911833150185[27] = 0;
   out_3683084911833150185[28] = 0;
   out_3683084911833150185[29] = 0;
   out_3683084911833150185[30] = 1;
   out_3683084911833150185[31] = 0;
   out_3683084911833150185[32] = 0;
   out_3683084911833150185[33] = 0;
   out_3683084911833150185[34] = 0;
   out_3683084911833150185[35] = 0;
   out_3683084911833150185[36] = 0;
   out_3683084911833150185[37] = 0;
   out_3683084911833150185[38] = 0;
   out_3683084911833150185[39] = 0;
   out_3683084911833150185[40] = 0;
   out_3683084911833150185[41] = 0;
   out_3683084911833150185[42] = 0;
   out_3683084911833150185[43] = 0;
   out_3683084911833150185[44] = 0;
   out_3683084911833150185[45] = 0;
   out_3683084911833150185[46] = 0;
   out_3683084911833150185[47] = 0;
   out_3683084911833150185[48] = 0;
   out_3683084911833150185[49] = 0;
   out_3683084911833150185[50] = 0;
   out_3683084911833150185[51] = 0;
   out_3683084911833150185[52] = 0;
   out_3683084911833150185[53] = 1;
   out_3683084911833150185[54] = 0;
   out_3683084911833150185[55] = 0;
   out_3683084911833150185[56] = 0;
   out_3683084911833150185[57] = 0;
   out_3683084911833150185[58] = 0;
   out_3683084911833150185[59] = 0;
   out_3683084911833150185[60] = 0;
   out_3683084911833150185[61] = 0;
   out_3683084911833150185[62] = 0;
   out_3683084911833150185[63] = 0;
   out_3683084911833150185[64] = 0;
   out_3683084911833150185[65] = 0;
}
void h_32(double *state, double *unused, double *out_8259652859746551262) {
   out_8259652859746551262[0] = state[3];
   out_8259652859746551262[1] = state[4];
   out_8259652859746551262[2] = state[5];
   out_8259652859746551262[3] = state[6];
}
void H_32(double *state, double *unused, double *out_402650776263772915) {
   out_402650776263772915[0] = 0;
   out_402650776263772915[1] = 0;
   out_402650776263772915[2] = 0;
   out_402650776263772915[3] = 1;
   out_402650776263772915[4] = 0;
   out_402650776263772915[5] = 0;
   out_402650776263772915[6] = 0;
   out_402650776263772915[7] = 0;
   out_402650776263772915[8] = 0;
   out_402650776263772915[9] = 0;
   out_402650776263772915[10] = 0;
   out_402650776263772915[11] = 0;
   out_402650776263772915[12] = 0;
   out_402650776263772915[13] = 0;
   out_402650776263772915[14] = 0;
   out_402650776263772915[15] = 0;
   out_402650776263772915[16] = 0;
   out_402650776263772915[17] = 0;
   out_402650776263772915[18] = 0;
   out_402650776263772915[19] = 0;
   out_402650776263772915[20] = 0;
   out_402650776263772915[21] = 0;
   out_402650776263772915[22] = 0;
   out_402650776263772915[23] = 0;
   out_402650776263772915[24] = 0;
   out_402650776263772915[25] = 0;
   out_402650776263772915[26] = 1;
   out_402650776263772915[27] = 0;
   out_402650776263772915[28] = 0;
   out_402650776263772915[29] = 0;
   out_402650776263772915[30] = 0;
   out_402650776263772915[31] = 0;
   out_402650776263772915[32] = 0;
   out_402650776263772915[33] = 0;
   out_402650776263772915[34] = 0;
   out_402650776263772915[35] = 0;
   out_402650776263772915[36] = 0;
   out_402650776263772915[37] = 0;
   out_402650776263772915[38] = 0;
   out_402650776263772915[39] = 0;
   out_402650776263772915[40] = 0;
   out_402650776263772915[41] = 0;
   out_402650776263772915[42] = 0;
   out_402650776263772915[43] = 0;
   out_402650776263772915[44] = 0;
   out_402650776263772915[45] = 0;
   out_402650776263772915[46] = 0;
   out_402650776263772915[47] = 0;
   out_402650776263772915[48] = 0;
   out_402650776263772915[49] = 1;
   out_402650776263772915[50] = 0;
   out_402650776263772915[51] = 0;
   out_402650776263772915[52] = 0;
   out_402650776263772915[53] = 0;
   out_402650776263772915[54] = 0;
   out_402650776263772915[55] = 0;
   out_402650776263772915[56] = 0;
   out_402650776263772915[57] = 0;
   out_402650776263772915[58] = 0;
   out_402650776263772915[59] = 0;
   out_402650776263772915[60] = 0;
   out_402650776263772915[61] = 0;
   out_402650776263772915[62] = 0;
   out_402650776263772915[63] = 0;
   out_402650776263772915[64] = 0;
   out_402650776263772915[65] = 0;
   out_402650776263772915[66] = 0;
   out_402650776263772915[67] = 0;
   out_402650776263772915[68] = 0;
   out_402650776263772915[69] = 0;
   out_402650776263772915[70] = 0;
   out_402650776263772915[71] = 0;
   out_402650776263772915[72] = 1;
   out_402650776263772915[73] = 0;
   out_402650776263772915[74] = 0;
   out_402650776263772915[75] = 0;
   out_402650776263772915[76] = 0;
   out_402650776263772915[77] = 0;
   out_402650776263772915[78] = 0;
   out_402650776263772915[79] = 0;
   out_402650776263772915[80] = 0;
   out_402650776263772915[81] = 0;
   out_402650776263772915[82] = 0;
   out_402650776263772915[83] = 0;
   out_402650776263772915[84] = 0;
   out_402650776263772915[85] = 0;
   out_402650776263772915[86] = 0;
   out_402650776263772915[87] = 0;
}
void h_13(double *state, double *unused, double *out_675236736902629060) {
   out_675236736902629060[0] = (-2*state[3]*state[5] + 2*state[4]*state[6])*state[9] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[8] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[7];
   out_675236736902629060[1] = (2*state[3]*state[4] + 2*state[5]*state[6])*state[9] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[7] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[8];
   out_675236736902629060[2] = (-2*state[3]*state[4] + 2*state[5]*state[6])*state[8] + (2*state[3]*state[5] + 2*state[4]*state[6])*state[7] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[9];
}
void H_13(double *state, double *unused, double *out_5606562609910570113) {
   out_5606562609910570113[0] = 0;
   out_5606562609910570113[1] = 0;
   out_5606562609910570113[2] = 0;
   out_5606562609910570113[3] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_5606562609910570113[4] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_5606562609910570113[5] = -2*state[3]*state[9] + 2*state[4]*state[8] - 2*state[5]*state[7];
   out_5606562609910570113[6] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_5606562609910570113[7] = pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2);
   out_5606562609910570113[8] = 2*state[3]*state[6] + 2*state[4]*state[5];
   out_5606562609910570113[9] = -2*state[3]*state[5] + 2*state[4]*state[6];
   out_5606562609910570113[10] = 0;
   out_5606562609910570113[11] = 0;
   out_5606562609910570113[12] = 0;
   out_5606562609910570113[13] = 0;
   out_5606562609910570113[14] = 0;
   out_5606562609910570113[15] = 0;
   out_5606562609910570113[16] = 0;
   out_5606562609910570113[17] = 0;
   out_5606562609910570113[18] = 0;
   out_5606562609910570113[19] = 0;
   out_5606562609910570113[20] = 0;
   out_5606562609910570113[21] = 0;
   out_5606562609910570113[22] = 0;
   out_5606562609910570113[23] = 0;
   out_5606562609910570113[24] = 0;
   out_5606562609910570113[25] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_5606562609910570113[26] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_5606562609910570113[27] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_5606562609910570113[28] = -2*state[3]*state[7] + 2*state[5]*state[9] - 2*state[6]*state[8];
   out_5606562609910570113[29] = -2*state[3]*state[6] + 2*state[4]*state[5];
   out_5606562609910570113[30] = pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2);
   out_5606562609910570113[31] = 2*state[3]*state[4] + 2*state[5]*state[6];
   out_5606562609910570113[32] = 0;
   out_5606562609910570113[33] = 0;
   out_5606562609910570113[34] = 0;
   out_5606562609910570113[35] = 0;
   out_5606562609910570113[36] = 0;
   out_5606562609910570113[37] = 0;
   out_5606562609910570113[38] = 0;
   out_5606562609910570113[39] = 0;
   out_5606562609910570113[40] = 0;
   out_5606562609910570113[41] = 0;
   out_5606562609910570113[42] = 0;
   out_5606562609910570113[43] = 0;
   out_5606562609910570113[44] = 0;
   out_5606562609910570113[45] = 0;
   out_5606562609910570113[46] = 0;
   out_5606562609910570113[47] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_5606562609910570113[48] = -2*state[3]*state[8] - 2*state[4]*state[9] + 2*state[6]*state[7];
   out_5606562609910570113[49] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_5606562609910570113[50] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_5606562609910570113[51] = 2*state[3]*state[5] + 2*state[4]*state[6];
   out_5606562609910570113[52] = -2*state[3]*state[4] + 2*state[5]*state[6];
   out_5606562609910570113[53] = pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2);
   out_5606562609910570113[54] = 0;
   out_5606562609910570113[55] = 0;
   out_5606562609910570113[56] = 0;
   out_5606562609910570113[57] = 0;
   out_5606562609910570113[58] = 0;
   out_5606562609910570113[59] = 0;
   out_5606562609910570113[60] = 0;
   out_5606562609910570113[61] = 0;
   out_5606562609910570113[62] = 0;
   out_5606562609910570113[63] = 0;
   out_5606562609910570113[64] = 0;
   out_5606562609910570113[65] = 0;
}
void h_14(double *state, double *unused, double *out_7170740815486647369) {
   out_7170740815486647369[0] = state[10];
   out_7170740815486647369[1] = state[11];
   out_7170740815486647369[2] = state[12];
}
void H_14(double *state, double *unused, double *out_6808557322576166916) {
   out_6808557322576166916[0] = 0;
   out_6808557322576166916[1] = 0;
   out_6808557322576166916[2] = 0;
   out_6808557322576166916[3] = 0;
   out_6808557322576166916[4] = 0;
   out_6808557322576166916[5] = 0;
   out_6808557322576166916[6] = 0;
   out_6808557322576166916[7] = 0;
   out_6808557322576166916[8] = 0;
   out_6808557322576166916[9] = 0;
   out_6808557322576166916[10] = 1;
   out_6808557322576166916[11] = 0;
   out_6808557322576166916[12] = 0;
   out_6808557322576166916[13] = 0;
   out_6808557322576166916[14] = 0;
   out_6808557322576166916[15] = 0;
   out_6808557322576166916[16] = 0;
   out_6808557322576166916[17] = 0;
   out_6808557322576166916[18] = 0;
   out_6808557322576166916[19] = 0;
   out_6808557322576166916[20] = 0;
   out_6808557322576166916[21] = 0;
   out_6808557322576166916[22] = 0;
   out_6808557322576166916[23] = 0;
   out_6808557322576166916[24] = 0;
   out_6808557322576166916[25] = 0;
   out_6808557322576166916[26] = 0;
   out_6808557322576166916[27] = 0;
   out_6808557322576166916[28] = 0;
   out_6808557322576166916[29] = 0;
   out_6808557322576166916[30] = 0;
   out_6808557322576166916[31] = 0;
   out_6808557322576166916[32] = 0;
   out_6808557322576166916[33] = 1;
   out_6808557322576166916[34] = 0;
   out_6808557322576166916[35] = 0;
   out_6808557322576166916[36] = 0;
   out_6808557322576166916[37] = 0;
   out_6808557322576166916[38] = 0;
   out_6808557322576166916[39] = 0;
   out_6808557322576166916[40] = 0;
   out_6808557322576166916[41] = 0;
   out_6808557322576166916[42] = 0;
   out_6808557322576166916[43] = 0;
   out_6808557322576166916[44] = 0;
   out_6808557322576166916[45] = 0;
   out_6808557322576166916[46] = 0;
   out_6808557322576166916[47] = 0;
   out_6808557322576166916[48] = 0;
   out_6808557322576166916[49] = 0;
   out_6808557322576166916[50] = 0;
   out_6808557322576166916[51] = 0;
   out_6808557322576166916[52] = 0;
   out_6808557322576166916[53] = 0;
   out_6808557322576166916[54] = 0;
   out_6808557322576166916[55] = 0;
   out_6808557322576166916[56] = 1;
   out_6808557322576166916[57] = 0;
   out_6808557322576166916[58] = 0;
   out_6808557322576166916[59] = 0;
   out_6808557322576166916[60] = 0;
   out_6808557322576166916[61] = 0;
   out_6808557322576166916[62] = 0;
   out_6808557322576166916[63] = 0;
   out_6808557322576166916[64] = 0;
   out_6808557322576166916[65] = 0;
}
void h_33(double *state, double *unused, double *out_2153717646024020497) {
   out_2153717646024020497[0] = state[16];
   out_2153717646024020497[1] = state[17];
   out_2153717646024020497[2] = state[18];
}
void H_33(double *state, double *unused, double *out_532527907194292581) {
   out_532527907194292581[0] = 0;
   out_532527907194292581[1] = 0;
   out_532527907194292581[2] = 0;
   out_532527907194292581[3] = 0;
   out_532527907194292581[4] = 0;
   out_532527907194292581[5] = 0;
   out_532527907194292581[6] = 0;
   out_532527907194292581[7] = 0;
   out_532527907194292581[8] = 0;
   out_532527907194292581[9] = 0;
   out_532527907194292581[10] = 0;
   out_532527907194292581[11] = 0;
   out_532527907194292581[12] = 0;
   out_532527907194292581[13] = 0;
   out_532527907194292581[14] = 0;
   out_532527907194292581[15] = 0;
   out_532527907194292581[16] = 1;
   out_532527907194292581[17] = 0;
   out_532527907194292581[18] = 0;
   out_532527907194292581[19] = 0;
   out_532527907194292581[20] = 0;
   out_532527907194292581[21] = 0;
   out_532527907194292581[22] = 0;
   out_532527907194292581[23] = 0;
   out_532527907194292581[24] = 0;
   out_532527907194292581[25] = 0;
   out_532527907194292581[26] = 0;
   out_532527907194292581[27] = 0;
   out_532527907194292581[28] = 0;
   out_532527907194292581[29] = 0;
   out_532527907194292581[30] = 0;
   out_532527907194292581[31] = 0;
   out_532527907194292581[32] = 0;
   out_532527907194292581[33] = 0;
   out_532527907194292581[34] = 0;
   out_532527907194292581[35] = 0;
   out_532527907194292581[36] = 0;
   out_532527907194292581[37] = 0;
   out_532527907194292581[38] = 0;
   out_532527907194292581[39] = 1;
   out_532527907194292581[40] = 0;
   out_532527907194292581[41] = 0;
   out_532527907194292581[42] = 0;
   out_532527907194292581[43] = 0;
   out_532527907194292581[44] = 0;
   out_532527907194292581[45] = 0;
   out_532527907194292581[46] = 0;
   out_532527907194292581[47] = 0;
   out_532527907194292581[48] = 0;
   out_532527907194292581[49] = 0;
   out_532527907194292581[50] = 0;
   out_532527907194292581[51] = 0;
   out_532527907194292581[52] = 0;
   out_532527907194292581[53] = 0;
   out_532527907194292581[54] = 0;
   out_532527907194292581[55] = 0;
   out_532527907194292581[56] = 0;
   out_532527907194292581[57] = 0;
   out_532527907194292581[58] = 0;
   out_532527907194292581[59] = 0;
   out_532527907194292581[60] = 0;
   out_532527907194292581[61] = 0;
   out_532527907194292581[62] = 1;
   out_532527907194292581[63] = 0;
   out_532527907194292581[64] = 0;
   out_532527907194292581[65] = 0;
}
#include <eigen3/Eigen/Dense>
#include <iostream>

typedef Eigen::Matrix<double, DIM, DIM, Eigen::RowMajor> DDM;
typedef Eigen::Matrix<double, EDIM, EDIM, Eigen::RowMajor> EEM;
typedef Eigen::Matrix<double, DIM, EDIM, Eigen::RowMajor> DEM;

void predict(double *in_x, double *in_P, double *in_Q, double dt) {
  typedef Eigen::Matrix<double, MEDIM, MEDIM, Eigen::RowMajor> RRM;

  double nx[DIM] = {0};
  double in_F[EDIM*EDIM] = {0};

  // functions from sympy
  f_fun(in_x, dt, nx);
  F_fun(in_x, dt, in_F);


  EEM F(in_F);
  EEM P(in_P);
  EEM Q(in_Q);

  RRM F_main = F.topLeftCorner(MEDIM, MEDIM);
  P.topLeftCorner(MEDIM, MEDIM) = (F_main * P.topLeftCorner(MEDIM, MEDIM)) * F_main.transpose();
  P.topRightCorner(MEDIM, EDIM - MEDIM) = F_main * P.topRightCorner(MEDIM, EDIM - MEDIM);
  P.bottomLeftCorner(EDIM - MEDIM, MEDIM) = P.bottomLeftCorner(EDIM - MEDIM, MEDIM) * F_main.transpose();

  P = P + dt*Q;

  // copy out state
  memcpy(in_x, nx, DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
}

// note: extra_args dim only correct when null space projecting
// otherwise 1
template <int ZDIM, int EADIM, bool MAHA_TEST>
void update(double *in_x, double *in_P, Hfun h_fun, Hfun H_fun, Hfun Hea_fun, double *in_z, double *in_R, double *in_ea, double MAHA_THRESHOLD) {
  typedef Eigen::Matrix<double, ZDIM, ZDIM, Eigen::RowMajor> ZZM;
  typedef Eigen::Matrix<double, ZDIM, DIM, Eigen::RowMajor> ZDM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, EDIM, Eigen::RowMajor> XEM;
  //typedef Eigen::Matrix<double, EDIM, ZDIM, Eigen::RowMajor> EZM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, 1> X1M;
  typedef Eigen::Matrix<double, Eigen::Dynamic, Eigen::Dynamic, Eigen::RowMajor> XXM;

  double in_hx[ZDIM] = {0};
  double in_H[ZDIM * DIM] = {0};
  double in_H_mod[EDIM * DIM] = {0};
  double delta_x[EDIM] = {0};
  double x_new[DIM] = {0};


  // state x, P
  Eigen::Matrix<double, ZDIM, 1> z(in_z);
  EEM P(in_P);
  ZZM pre_R(in_R);

  // functions from sympy
  h_fun(in_x, in_ea, in_hx);
  H_fun(in_x, in_ea, in_H);
  ZDM pre_H(in_H);

  // get y (y = z - hx)
  Eigen::Matrix<double, ZDIM, 1> pre_y(in_hx); pre_y = z - pre_y;
  X1M y; XXM H; XXM R;
  if (Hea_fun){
    typedef Eigen::Matrix<double, ZDIM, EADIM, Eigen::RowMajor> ZAM;
    double in_Hea[ZDIM * EADIM] = {0};
    Hea_fun(in_x, in_ea, in_Hea);
    ZAM Hea(in_Hea);
    XXM A = Hea.transpose().fullPivLu().kernel();


    y = A.transpose() * pre_y;
    H = A.transpose() * pre_H;
    R = A.transpose() * pre_R * A;
  } else {
    y = pre_y;
    H = pre_H;
    R = pre_R;
  }
  // get modified H
  H_mod_fun(in_x, in_H_mod);
  DEM H_mod(in_H_mod);
  XEM H_err = H * H_mod;

  // Do mahalobis distance test
  if (MAHA_TEST){
    XXM a = (H_err * P * H_err.transpose() + R).inverse();
    double maha_dist = y.transpose() * a * y;
    if (maha_dist > MAHA_THRESHOLD){
      R = 1.0e16 * R;
    }
  }

  // Outlier resilient weighting
  double weight = 1;//(1.5)/(1 + y.squaredNorm()/R.sum());

  // kalman gains and I_KH
  XXM S = ((H_err * P) * H_err.transpose()) + R/weight;
  XEM KT = S.fullPivLu().solve(H_err * P.transpose());
  //EZM K = KT.transpose(); TODO: WHY DOES THIS NOT COMPILE?
  //EZM K = S.fullPivLu().solve(H_err * P.transpose()).transpose();
  //std::cout << "Here is the matrix rot:\n" << K << std::endl;
  EEM I_KH = Eigen::Matrix<double, EDIM, EDIM>::Identity() - (KT.transpose() * H_err);

  // update state by injecting dx
  Eigen::Matrix<double, EDIM, 1> dx(delta_x);
  dx  = (KT.transpose() * y);
  memcpy(delta_x, dx.data(), EDIM * sizeof(double));
  err_fun(in_x, delta_x, x_new);
  Eigen::Matrix<double, DIM, 1> x(x_new);

  // update cov
  P = ((I_KH * P) * I_KH.transpose()) + ((KT.transpose() * R) * KT);

  // copy out state
  memcpy(in_x, x.data(), DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
  memcpy(in_z, y.data(), y.rows() * sizeof(double));
}




}
extern "C" {

void live_update_4(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_4, H_4, NULL, in_z, in_R, in_ea, MAHA_THRESH_4);
}
void live_update_9(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_9, H_9, NULL, in_z, in_R, in_ea, MAHA_THRESH_9);
}
void live_update_10(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_10, H_10, NULL, in_z, in_R, in_ea, MAHA_THRESH_10);
}
void live_update_12(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_12, H_12, NULL, in_z, in_R, in_ea, MAHA_THRESH_12);
}
void live_update_35(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_35, H_35, NULL, in_z, in_R, in_ea, MAHA_THRESH_35);
}
void live_update_32(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<4, 3, 0>(in_x, in_P, h_32, H_32, NULL, in_z, in_R, in_ea, MAHA_THRESH_32);
}
void live_update_13(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_13, H_13, NULL, in_z, in_R, in_ea, MAHA_THRESH_13);
}
void live_update_14(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_14, H_14, NULL, in_z, in_R, in_ea, MAHA_THRESH_14);
}
void live_update_33(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_33, H_33, NULL, in_z, in_R, in_ea, MAHA_THRESH_33);
}
void live_H(double *in_vec, double *out_7787276368106327593) {
  H(in_vec, out_7787276368106327593);
}
void live_err_fun(double *nom_x, double *delta_x, double *out_3994570353758879094) {
  err_fun(nom_x, delta_x, out_3994570353758879094);
}
void live_inv_err_fun(double *nom_x, double *true_x, double *out_3013500251537954332) {
  inv_err_fun(nom_x, true_x, out_3013500251537954332);
}
void live_H_mod_fun(double *state, double *out_93920884344451630) {
  H_mod_fun(state, out_93920884344451630);
}
void live_f_fun(double *state, double dt, double *out_8487489803491521865) {
  f_fun(state,  dt, out_8487489803491521865);
}
void live_F_fun(double *state, double dt, double *out_774633978175335393) {
  F_fun(state,  dt, out_774633978175335393);
}
void live_h_4(double *state, double *unused, double *out_2528256780518921720) {
  h_4(state, unused, out_2528256780518921720);
}
void live_H_4(double *state, double *unused, double *out_7049746969205757561) {
  H_4(state, unused, out_7049746969205757561);
}
void live_h_9(double *state, double *unused, double *out_7170740815486647369) {
  h_9(state, unused, out_7170740815486647369);
}
void live_H_9(double *state, double *unused, double *out_6808557322576166916) {
  H_9(state, unused, out_6808557322576166916);
}
void live_h_10(double *state, double *unused, double *out_3884670649463800725) {
  h_10(state, unused, out_3884670649463800725);
}
void live_H_10(double *state, double *unused, double *out_4358002926250039592) {
  H_10(state, unused, out_4358002926250039592);
}
void live_h_12(double *state, double *unused, double *out_6588492251690931110) {
  h_12(state, unused, out_6588492251690931110);
}
void live_H_12(double *state, double *unused, double *out_2030290561173795766) {
  H_12(state, unused, out_2030290561173795766);
}
void live_h_35(double *state, double *unused, double *out_7285704233339267220) {
  h_35(state, unused, out_7285704233339267220);
}
void live_H_35(double *state, double *unused, double *out_3683084911833150185) {
  H_35(state, unused, out_3683084911833150185);
}
void live_h_32(double *state, double *unused, double *out_8259652859746551262) {
  h_32(state, unused, out_8259652859746551262);
}
void live_H_32(double *state, double *unused, double *out_402650776263772915) {
  H_32(state, unused, out_402650776263772915);
}
void live_h_13(double *state, double *unused, double *out_675236736902629060) {
  h_13(state, unused, out_675236736902629060);
}
void live_H_13(double *state, double *unused, double *out_5606562609910570113) {
  H_13(state, unused, out_5606562609910570113);
}
void live_h_14(double *state, double *unused, double *out_7170740815486647369) {
  h_14(state, unused, out_7170740815486647369);
}
void live_H_14(double *state, double *unused, double *out_6808557322576166916) {
  H_14(state, unused, out_6808557322576166916);
}
void live_h_33(double *state, double *unused, double *out_2153717646024020497) {
  h_33(state, unused, out_2153717646024020497);
}
void live_H_33(double *state, double *unused, double *out_532527907194292581) {
  H_33(state, unused, out_532527907194292581);
}
void live_predict(double *in_x, double *in_P, double *in_Q, double dt) {
  predict(in_x, in_P, in_Q, dt);
}
}

const EKF live = {
  .name = "live",
  .kinds = { 4, 9, 10, 12, 35, 32, 13, 14, 33 },
  .feature_kinds = {  },
  .f_fun = live_f_fun,
  .F_fun = live_F_fun,
  .err_fun = live_err_fun,
  .inv_err_fun = live_inv_err_fun,
  .H_mod_fun = live_H_mod_fun,
  .predict = live_predict,
  .hs = {
    { 4, live_h_4 },
    { 9, live_h_9 },
    { 10, live_h_10 },
    { 12, live_h_12 },
    { 35, live_h_35 },
    { 32, live_h_32 },
    { 13, live_h_13 },
    { 14, live_h_14 },
    { 33, live_h_33 },
  },
  .Hs = {
    { 4, live_H_4 },
    { 9, live_H_9 },
    { 10, live_H_10 },
    { 12, live_H_12 },
    { 35, live_H_35 },
    { 32, live_H_32 },
    { 13, live_H_13 },
    { 14, live_H_14 },
    { 33, live_H_33 },
  },
  .updates = {
    { 4, live_update_4 },
    { 9, live_update_9 },
    { 10, live_update_10 },
    { 12, live_update_12 },
    { 35, live_update_35 },
    { 32, live_update_32 },
    { 13, live_update_13 },
    { 14, live_update_14 },
    { 33, live_update_33 },
  },
  .Hes = {
  },
  .sets = {
  },
  .extra_routines = {
    { "H", live_H },
  },
};

ekf_lib_init(live)
