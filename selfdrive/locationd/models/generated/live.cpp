#include "live.h"

namespace {
#define DIM 22
#define EDIM 21
#define MEDIM 21
typedef void (*Hfun)(double *, double *, double *);
const static double MAHA_THRESH_4 = 7.814727903251177;
const static double MAHA_THRESH_9 = 7.814727903251177;
const static double MAHA_THRESH_10 = 7.814727903251177;
const static double MAHA_THRESH_12 = 7.814727903251177;
const static double MAHA_THRESH_35 = 7.814727903251177;
const static double MAHA_THRESH_32 = 9.487729036781154;
const static double MAHA_THRESH_13 = 7.814727903251177;
const static double MAHA_THRESH_14 = 7.814727903251177;
const static double MAHA_THRESH_33 = 7.814727903251177;

/******************************************************************************
 *                       Code generated with SymPy 1.12                       *
 *                                                                            *
 *              See http://www.sympy.org/ for more information.               *
 *                                                                            *
 *                         This file is part of 'ekf'                         *
 ******************************************************************************/
void H(double *in_vec, double *out_8340534243464139896) {
   out_8340534243464139896[0] = 0;
   out_8340534243464139896[1] = -sin(in_vec[1])*sin(in_vec[2])*in_vec[4] - sin(in_vec[1])*cos(in_vec[2])*in_vec[3] - cos(in_vec[1])*in_vec[5];
   out_8340534243464139896[2] = -sin(in_vec[2])*cos(in_vec[1])*in_vec[3] + cos(in_vec[1])*cos(in_vec[2])*in_vec[4];
   out_8340534243464139896[3] = cos(in_vec[1])*cos(in_vec[2]);
   out_8340534243464139896[4] = sin(in_vec[2])*cos(in_vec[1]);
   out_8340534243464139896[5] = -sin(in_vec[1]);
   out_8340534243464139896[6] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (-sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_8340534243464139896[7] = -sin(in_vec[0])*sin(in_vec[1])*in_vec[5] + sin(in_vec[0])*sin(in_vec[2])*cos(in_vec[1])*in_vec[4] + sin(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_8340534243464139896[8] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]))*in_vec[4];
   out_8340534243464139896[9] = sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]);
   out_8340534243464139896[10] = sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) + cos(in_vec[0])*cos(in_vec[2]);
   out_8340534243464139896[11] = sin(in_vec[0])*cos(in_vec[1]);
   out_8340534243464139896[12] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (-sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) + sin(in_vec[2])*cos(in_vec[0]))*in_vec[3] - sin(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_8340534243464139896[13] = -sin(in_vec[1])*cos(in_vec[0])*in_vec[5] + sin(in_vec[2])*cos(in_vec[0])*cos(in_vec[1])*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_8340534243464139896[14] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (sin(in_vec[0])*cos(in_vec[2]) - sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[3];
   out_8340534243464139896[15] = sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]);
   out_8340534243464139896[16] = -sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]);
   out_8340534243464139896[17] = cos(in_vec[0])*cos(in_vec[1]);
}
void err_fun(double *nom_x, double *delta_x, double *out_8008953026005314721) {
   out_8008953026005314721[0] = delta_x[0] + nom_x[0];
   out_8008953026005314721[1] = delta_x[1] + nom_x[1];
   out_8008953026005314721[2] = delta_x[2] + nom_x[2];
   out_8008953026005314721[3] = -0.5*delta_x[3]*nom_x[4] - 0.5*delta_x[4]*nom_x[5] - 0.5*delta_x[5]*nom_x[6] + 1.0*nom_x[3];
   out_8008953026005314721[4] = 0.5*delta_x[3]*nom_x[3] + 0.5*delta_x[4]*nom_x[6] - 0.5*delta_x[5]*nom_x[5] + 1.0*nom_x[4];
   out_8008953026005314721[5] = -0.5*delta_x[3]*nom_x[6] + 0.5*delta_x[4]*nom_x[3] + 0.5*delta_x[5]*nom_x[4] + 1.0*nom_x[5];
   out_8008953026005314721[6] = 0.5*delta_x[3]*nom_x[5] - 0.5*delta_x[4]*nom_x[4] + 0.5*delta_x[5]*nom_x[3] + 1.0*nom_x[6];
   out_8008953026005314721[7] = delta_x[6] + nom_x[7];
   out_8008953026005314721[8] = delta_x[7] + nom_x[8];
   out_8008953026005314721[9] = delta_x[8] + nom_x[9];
   out_8008953026005314721[10] = delta_x[9] + nom_x[10];
   out_8008953026005314721[11] = delta_x[10] + nom_x[11];
   out_8008953026005314721[12] = delta_x[11] + nom_x[12];
   out_8008953026005314721[13] = delta_x[12] + nom_x[13];
   out_8008953026005314721[14] = delta_x[13] + nom_x[14];
   out_8008953026005314721[15] = delta_x[14] + nom_x[15];
   out_8008953026005314721[16] = delta_x[15] + nom_x[16];
   out_8008953026005314721[17] = delta_x[16] + nom_x[17];
   out_8008953026005314721[18] = delta_x[17] + nom_x[18];
   out_8008953026005314721[19] = delta_x[18] + nom_x[19];
   out_8008953026005314721[20] = delta_x[19] + nom_x[20];
   out_8008953026005314721[21] = delta_x[20] + nom_x[21];
}
void inv_err_fun(double *nom_x, double *true_x, double *out_2383024867135933197) {
   out_2383024867135933197[0] = -nom_x[0] + true_x[0];
   out_2383024867135933197[1] = -nom_x[1] + true_x[1];
   out_2383024867135933197[2] = -nom_x[2] + true_x[2];
   out_2383024867135933197[3] = 2*nom_x[3]*true_x[4] - 2*nom_x[4]*true_x[3] + 2*nom_x[5]*true_x[6] - 2*nom_x[6]*true_x[5];
   out_2383024867135933197[4] = 2*nom_x[3]*true_x[5] - 2*nom_x[4]*true_x[6] - 2*nom_x[5]*true_x[3] + 2*nom_x[6]*true_x[4];
   out_2383024867135933197[5] = 2*nom_x[3]*true_x[6] + 2*nom_x[4]*true_x[5] - 2*nom_x[5]*true_x[4] - 2*nom_x[6]*true_x[3];
   out_2383024867135933197[6] = -nom_x[7] + true_x[7];
   out_2383024867135933197[7] = -nom_x[8] + true_x[8];
   out_2383024867135933197[8] = -nom_x[9] + true_x[9];
   out_2383024867135933197[9] = -nom_x[10] + true_x[10];
   out_2383024867135933197[10] = -nom_x[11] + true_x[11];
   out_2383024867135933197[11] = -nom_x[12] + true_x[12];
   out_2383024867135933197[12] = -nom_x[13] + true_x[13];
   out_2383024867135933197[13] = -nom_x[14] + true_x[14];
   out_2383024867135933197[14] = -nom_x[15] + true_x[15];
   out_2383024867135933197[15] = -nom_x[16] + true_x[16];
   out_2383024867135933197[16] = -nom_x[17] + true_x[17];
   out_2383024867135933197[17] = -nom_x[18] + true_x[18];
   out_2383024867135933197[18] = -nom_x[19] + true_x[19];
   out_2383024867135933197[19] = -nom_x[20] + true_x[20];
   out_2383024867135933197[20] = -nom_x[21] + true_x[21];
}
void H_mod_fun(double *state, double *out_2850129904381056170) {
   out_2850129904381056170[0] = 1.0;
   out_2850129904381056170[1] = 0;
   out_2850129904381056170[2] = 0;
   out_2850129904381056170[3] = 0;
   out_2850129904381056170[4] = 0;
   out_2850129904381056170[5] = 0;
   out_2850129904381056170[6] = 0;
   out_2850129904381056170[7] = 0;
   out_2850129904381056170[8] = 0;
   out_2850129904381056170[9] = 0;
   out_2850129904381056170[10] = 0;
   out_2850129904381056170[11] = 0;
   out_2850129904381056170[12] = 0;
   out_2850129904381056170[13] = 0;
   out_2850129904381056170[14] = 0;
   out_2850129904381056170[15] = 0;
   out_2850129904381056170[16] = 0;
   out_2850129904381056170[17] = 0;
   out_2850129904381056170[18] = 0;
   out_2850129904381056170[19] = 0;
   out_2850129904381056170[20] = 0;
   out_2850129904381056170[21] = 0;
   out_2850129904381056170[22] = 1.0;
   out_2850129904381056170[23] = 0;
   out_2850129904381056170[24] = 0;
   out_2850129904381056170[25] = 0;
   out_2850129904381056170[26] = 0;
   out_2850129904381056170[27] = 0;
   out_2850129904381056170[28] = 0;
   out_2850129904381056170[29] = 0;
   out_2850129904381056170[30] = 0;
   out_2850129904381056170[31] = 0;
   out_2850129904381056170[32] = 0;
   out_2850129904381056170[33] = 0;
   out_2850129904381056170[34] = 0;
   out_2850129904381056170[35] = 0;
   out_2850129904381056170[36] = 0;
   out_2850129904381056170[37] = 0;
   out_2850129904381056170[38] = 0;
   out_2850129904381056170[39] = 0;
   out_2850129904381056170[40] = 0;
   out_2850129904381056170[41] = 0;
   out_2850129904381056170[42] = 0;
   out_2850129904381056170[43] = 0;
   out_2850129904381056170[44] = 1.0;
   out_2850129904381056170[45] = 0;
   out_2850129904381056170[46] = 0;
   out_2850129904381056170[47] = 0;
   out_2850129904381056170[48] = 0;
   out_2850129904381056170[49] = 0;
   out_2850129904381056170[50] = 0;
   out_2850129904381056170[51] = 0;
   out_2850129904381056170[52] = 0;
   out_2850129904381056170[53] = 0;
   out_2850129904381056170[54] = 0;
   out_2850129904381056170[55] = 0;
   out_2850129904381056170[56] = 0;
   out_2850129904381056170[57] = 0;
   out_2850129904381056170[58] = 0;
   out_2850129904381056170[59] = 0;
   out_2850129904381056170[60] = 0;
   out_2850129904381056170[61] = 0;
   out_2850129904381056170[62] = 0;
   out_2850129904381056170[63] = 0;
   out_2850129904381056170[64] = 0;
   out_2850129904381056170[65] = 0;
   out_2850129904381056170[66] = -0.5*state[4];
   out_2850129904381056170[67] = -0.5*state[5];
   out_2850129904381056170[68] = -0.5*state[6];
   out_2850129904381056170[69] = 0;
   out_2850129904381056170[70] = 0;
   out_2850129904381056170[71] = 0;
   out_2850129904381056170[72] = 0;
   out_2850129904381056170[73] = 0;
   out_2850129904381056170[74] = 0;
   out_2850129904381056170[75] = 0;
   out_2850129904381056170[76] = 0;
   out_2850129904381056170[77] = 0;
   out_2850129904381056170[78] = 0;
   out_2850129904381056170[79] = 0;
   out_2850129904381056170[80] = 0;
   out_2850129904381056170[81] = 0;
   out_2850129904381056170[82] = 0;
   out_2850129904381056170[83] = 0;
   out_2850129904381056170[84] = 0;
   out_2850129904381056170[85] = 0;
   out_2850129904381056170[86] = 0;
   out_2850129904381056170[87] = 0.5*state[3];
   out_2850129904381056170[88] = 0.5*state[6];
   out_2850129904381056170[89] = -0.5*state[5];
   out_2850129904381056170[90] = 0;
   out_2850129904381056170[91] = 0;
   out_2850129904381056170[92] = 0;
   out_2850129904381056170[93] = 0;
   out_2850129904381056170[94] = 0;
   out_2850129904381056170[95] = 0;
   out_2850129904381056170[96] = 0;
   out_2850129904381056170[97] = 0;
   out_2850129904381056170[98] = 0;
   out_2850129904381056170[99] = 0;
   out_2850129904381056170[100] = 0;
   out_2850129904381056170[101] = 0;
   out_2850129904381056170[102] = 0;
   out_2850129904381056170[103] = 0;
   out_2850129904381056170[104] = 0;
   out_2850129904381056170[105] = 0;
   out_2850129904381056170[106] = 0;
   out_2850129904381056170[107] = 0;
   out_2850129904381056170[108] = -0.5*state[6];
   out_2850129904381056170[109] = 0.5*state[3];
   out_2850129904381056170[110] = 0.5*state[4];
   out_2850129904381056170[111] = 0;
   out_2850129904381056170[112] = 0;
   out_2850129904381056170[113] = 0;
   out_2850129904381056170[114] = 0;
   out_2850129904381056170[115] = 0;
   out_2850129904381056170[116] = 0;
   out_2850129904381056170[117] = 0;
   out_2850129904381056170[118] = 0;
   out_2850129904381056170[119] = 0;
   out_2850129904381056170[120] = 0;
   out_2850129904381056170[121] = 0;
   out_2850129904381056170[122] = 0;
   out_2850129904381056170[123] = 0;
   out_2850129904381056170[124] = 0;
   out_2850129904381056170[125] = 0;
   out_2850129904381056170[126] = 0;
   out_2850129904381056170[127] = 0;
   out_2850129904381056170[128] = 0;
   out_2850129904381056170[129] = 0.5*state[5];
   out_2850129904381056170[130] = -0.5*state[4];
   out_2850129904381056170[131] = 0.5*state[3];
   out_2850129904381056170[132] = 0;
   out_2850129904381056170[133] = 0;
   out_2850129904381056170[134] = 0;
   out_2850129904381056170[135] = 0;
   out_2850129904381056170[136] = 0;
   out_2850129904381056170[137] = 0;
   out_2850129904381056170[138] = 0;
   out_2850129904381056170[139] = 0;
   out_2850129904381056170[140] = 0;
   out_2850129904381056170[141] = 0;
   out_2850129904381056170[142] = 0;
   out_2850129904381056170[143] = 0;
   out_2850129904381056170[144] = 0;
   out_2850129904381056170[145] = 0;
   out_2850129904381056170[146] = 0;
   out_2850129904381056170[147] = 0;
   out_2850129904381056170[148] = 0;
   out_2850129904381056170[149] = 0;
   out_2850129904381056170[150] = 0;
   out_2850129904381056170[151] = 0;
   out_2850129904381056170[152] = 0;
   out_2850129904381056170[153] = 1.0;
   out_2850129904381056170[154] = 0;
   out_2850129904381056170[155] = 0;
   out_2850129904381056170[156] = 0;
   out_2850129904381056170[157] = 0;
   out_2850129904381056170[158] = 0;
   out_2850129904381056170[159] = 0;
   out_2850129904381056170[160] = 0;
   out_2850129904381056170[161] = 0;
   out_2850129904381056170[162] = 0;
   out_2850129904381056170[163] = 0;
   out_2850129904381056170[164] = 0;
   out_2850129904381056170[165] = 0;
   out_2850129904381056170[166] = 0;
   out_2850129904381056170[167] = 0;
   out_2850129904381056170[168] = 0;
   out_2850129904381056170[169] = 0;
   out_2850129904381056170[170] = 0;
   out_2850129904381056170[171] = 0;
   out_2850129904381056170[172] = 0;
   out_2850129904381056170[173] = 0;
   out_2850129904381056170[174] = 0;
   out_2850129904381056170[175] = 1.0;
   out_2850129904381056170[176] = 0;
   out_2850129904381056170[177] = 0;
   out_2850129904381056170[178] = 0;
   out_2850129904381056170[179] = 0;
   out_2850129904381056170[180] = 0;
   out_2850129904381056170[181] = 0;
   out_2850129904381056170[182] = 0;
   out_2850129904381056170[183] = 0;
   out_2850129904381056170[184] = 0;
   out_2850129904381056170[185] = 0;
   out_2850129904381056170[186] = 0;
   out_2850129904381056170[187] = 0;
   out_2850129904381056170[188] = 0;
   out_2850129904381056170[189] = 0;
   out_2850129904381056170[190] = 0;
   out_2850129904381056170[191] = 0;
   out_2850129904381056170[192] = 0;
   out_2850129904381056170[193] = 0;
   out_2850129904381056170[194] = 0;
   out_2850129904381056170[195] = 0;
   out_2850129904381056170[196] = 0;
   out_2850129904381056170[197] = 1.0;
   out_2850129904381056170[198] = 0;
   out_2850129904381056170[199] = 0;
   out_2850129904381056170[200] = 0;
   out_2850129904381056170[201] = 0;
   out_2850129904381056170[202] = 0;
   out_2850129904381056170[203] = 0;
   out_2850129904381056170[204] = 0;
   out_2850129904381056170[205] = 0;
   out_2850129904381056170[206] = 0;
   out_2850129904381056170[207] = 0;
   out_2850129904381056170[208] = 0;
   out_2850129904381056170[209] = 0;
   out_2850129904381056170[210] = 0;
   out_2850129904381056170[211] = 0;
   out_2850129904381056170[212] = 0;
   out_2850129904381056170[213] = 0;
   out_2850129904381056170[214] = 0;
   out_2850129904381056170[215] = 0;
   out_2850129904381056170[216] = 0;
   out_2850129904381056170[217] = 0;
   out_2850129904381056170[218] = 0;
   out_2850129904381056170[219] = 1.0;
   out_2850129904381056170[220] = 0;
   out_2850129904381056170[221] = 0;
   out_2850129904381056170[222] = 0;
   out_2850129904381056170[223] = 0;
   out_2850129904381056170[224] = 0;
   out_2850129904381056170[225] = 0;
   out_2850129904381056170[226] = 0;
   out_2850129904381056170[227] = 0;
   out_2850129904381056170[228] = 0;
   out_2850129904381056170[229] = 0;
   out_2850129904381056170[230] = 0;
   out_2850129904381056170[231] = 0;
   out_2850129904381056170[232] = 0;
   out_2850129904381056170[233] = 0;
   out_2850129904381056170[234] = 0;
   out_2850129904381056170[235] = 0;
   out_2850129904381056170[236] = 0;
   out_2850129904381056170[237] = 0;
   out_2850129904381056170[238] = 0;
   out_2850129904381056170[239] = 0;
   out_2850129904381056170[240] = 0;
   out_2850129904381056170[241] = 1.0;
   out_2850129904381056170[242] = 0;
   out_2850129904381056170[243] = 0;
   out_2850129904381056170[244] = 0;
   out_2850129904381056170[245] = 0;
   out_2850129904381056170[246] = 0;
   out_2850129904381056170[247] = 0;
   out_2850129904381056170[248] = 0;
   out_2850129904381056170[249] = 0;
   out_2850129904381056170[250] = 0;
   out_2850129904381056170[251] = 0;
   out_2850129904381056170[252] = 0;
   out_2850129904381056170[253] = 0;
   out_2850129904381056170[254] = 0;
   out_2850129904381056170[255] = 0;
   out_2850129904381056170[256] = 0;
   out_2850129904381056170[257] = 0;
   out_2850129904381056170[258] = 0;
   out_2850129904381056170[259] = 0;
   out_2850129904381056170[260] = 0;
   out_2850129904381056170[261] = 0;
   out_2850129904381056170[262] = 0;
   out_2850129904381056170[263] = 1.0;
   out_2850129904381056170[264] = 0;
   out_2850129904381056170[265] = 0;
   out_2850129904381056170[266] = 0;
   out_2850129904381056170[267] = 0;
   out_2850129904381056170[268] = 0;
   out_2850129904381056170[269] = 0;
   out_2850129904381056170[270] = 0;
   out_2850129904381056170[271] = 0;
   out_2850129904381056170[272] = 0;
   out_2850129904381056170[273] = 0;
   out_2850129904381056170[274] = 0;
   out_2850129904381056170[275] = 0;
   out_2850129904381056170[276] = 0;
   out_2850129904381056170[277] = 0;
   out_2850129904381056170[278] = 0;
   out_2850129904381056170[279] = 0;
   out_2850129904381056170[280] = 0;
   out_2850129904381056170[281] = 0;
   out_2850129904381056170[282] = 0;
   out_2850129904381056170[283] = 0;
   out_2850129904381056170[284] = 0;
   out_2850129904381056170[285] = 1.0;
   out_2850129904381056170[286] = 0;
   out_2850129904381056170[287] = 0;
   out_2850129904381056170[288] = 0;
   out_2850129904381056170[289] = 0;
   out_2850129904381056170[290] = 0;
   out_2850129904381056170[291] = 0;
   out_2850129904381056170[292] = 0;
   out_2850129904381056170[293] = 0;
   out_2850129904381056170[294] = 0;
   out_2850129904381056170[295] = 0;
   out_2850129904381056170[296] = 0;
   out_2850129904381056170[297] = 0;
   out_2850129904381056170[298] = 0;
   out_2850129904381056170[299] = 0;
   out_2850129904381056170[300] = 0;
   out_2850129904381056170[301] = 0;
   out_2850129904381056170[302] = 0;
   out_2850129904381056170[303] = 0;
   out_2850129904381056170[304] = 0;
   out_2850129904381056170[305] = 0;
   out_2850129904381056170[306] = 0;
   out_2850129904381056170[307] = 1.0;
   out_2850129904381056170[308] = 0;
   out_2850129904381056170[309] = 0;
   out_2850129904381056170[310] = 0;
   out_2850129904381056170[311] = 0;
   out_2850129904381056170[312] = 0;
   out_2850129904381056170[313] = 0;
   out_2850129904381056170[314] = 0;
   out_2850129904381056170[315] = 0;
   out_2850129904381056170[316] = 0;
   out_2850129904381056170[317] = 0;
   out_2850129904381056170[318] = 0;
   out_2850129904381056170[319] = 0;
   out_2850129904381056170[320] = 0;
   out_2850129904381056170[321] = 0;
   out_2850129904381056170[322] = 0;
   out_2850129904381056170[323] = 0;
   out_2850129904381056170[324] = 0;
   out_2850129904381056170[325] = 0;
   out_2850129904381056170[326] = 0;
   out_2850129904381056170[327] = 0;
   out_2850129904381056170[328] = 0;
   out_2850129904381056170[329] = 1.0;
   out_2850129904381056170[330] = 0;
   out_2850129904381056170[331] = 0;
   out_2850129904381056170[332] = 0;
   out_2850129904381056170[333] = 0;
   out_2850129904381056170[334] = 0;
   out_2850129904381056170[335] = 0;
   out_2850129904381056170[336] = 0;
   out_2850129904381056170[337] = 0;
   out_2850129904381056170[338] = 0;
   out_2850129904381056170[339] = 0;
   out_2850129904381056170[340] = 0;
   out_2850129904381056170[341] = 0;
   out_2850129904381056170[342] = 0;
   out_2850129904381056170[343] = 0;
   out_2850129904381056170[344] = 0;
   out_2850129904381056170[345] = 0;
   out_2850129904381056170[346] = 0;
   out_2850129904381056170[347] = 0;
   out_2850129904381056170[348] = 0;
   out_2850129904381056170[349] = 0;
   out_2850129904381056170[350] = 0;
   out_2850129904381056170[351] = 1.0;
   out_2850129904381056170[352] = 0;
   out_2850129904381056170[353] = 0;
   out_2850129904381056170[354] = 0;
   out_2850129904381056170[355] = 0;
   out_2850129904381056170[356] = 0;
   out_2850129904381056170[357] = 0;
   out_2850129904381056170[358] = 0;
   out_2850129904381056170[359] = 0;
   out_2850129904381056170[360] = 0;
   out_2850129904381056170[361] = 0;
   out_2850129904381056170[362] = 0;
   out_2850129904381056170[363] = 0;
   out_2850129904381056170[364] = 0;
   out_2850129904381056170[365] = 0;
   out_2850129904381056170[366] = 0;
   out_2850129904381056170[367] = 0;
   out_2850129904381056170[368] = 0;
   out_2850129904381056170[369] = 0;
   out_2850129904381056170[370] = 0;
   out_2850129904381056170[371] = 0;
   out_2850129904381056170[372] = 0;
   out_2850129904381056170[373] = 1.0;
   out_2850129904381056170[374] = 0;
   out_2850129904381056170[375] = 0;
   out_2850129904381056170[376] = 0;
   out_2850129904381056170[377] = 0;
   out_2850129904381056170[378] = 0;
   out_2850129904381056170[379] = 0;
   out_2850129904381056170[380] = 0;
   out_2850129904381056170[381] = 0;
   out_2850129904381056170[382] = 0;
   out_2850129904381056170[383] = 0;
   out_2850129904381056170[384] = 0;
   out_2850129904381056170[385] = 0;
   out_2850129904381056170[386] = 0;
   out_2850129904381056170[387] = 0;
   out_2850129904381056170[388] = 0;
   out_2850129904381056170[389] = 0;
   out_2850129904381056170[390] = 0;
   out_2850129904381056170[391] = 0;
   out_2850129904381056170[392] = 0;
   out_2850129904381056170[393] = 0;
   out_2850129904381056170[394] = 0;
   out_2850129904381056170[395] = 1.0;
   out_2850129904381056170[396] = 0;
   out_2850129904381056170[397] = 0;
   out_2850129904381056170[398] = 0;
   out_2850129904381056170[399] = 0;
   out_2850129904381056170[400] = 0;
   out_2850129904381056170[401] = 0;
   out_2850129904381056170[402] = 0;
   out_2850129904381056170[403] = 0;
   out_2850129904381056170[404] = 0;
   out_2850129904381056170[405] = 0;
   out_2850129904381056170[406] = 0;
   out_2850129904381056170[407] = 0;
   out_2850129904381056170[408] = 0;
   out_2850129904381056170[409] = 0;
   out_2850129904381056170[410] = 0;
   out_2850129904381056170[411] = 0;
   out_2850129904381056170[412] = 0;
   out_2850129904381056170[413] = 0;
   out_2850129904381056170[414] = 0;
   out_2850129904381056170[415] = 0;
   out_2850129904381056170[416] = 0;
   out_2850129904381056170[417] = 1.0;
   out_2850129904381056170[418] = 0;
   out_2850129904381056170[419] = 0;
   out_2850129904381056170[420] = 0;
   out_2850129904381056170[421] = 0;
   out_2850129904381056170[422] = 0;
   out_2850129904381056170[423] = 0;
   out_2850129904381056170[424] = 0;
   out_2850129904381056170[425] = 0;
   out_2850129904381056170[426] = 0;
   out_2850129904381056170[427] = 0;
   out_2850129904381056170[428] = 0;
   out_2850129904381056170[429] = 0;
   out_2850129904381056170[430] = 0;
   out_2850129904381056170[431] = 0;
   out_2850129904381056170[432] = 0;
   out_2850129904381056170[433] = 0;
   out_2850129904381056170[434] = 0;
   out_2850129904381056170[435] = 0;
   out_2850129904381056170[436] = 0;
   out_2850129904381056170[437] = 0;
   out_2850129904381056170[438] = 0;
   out_2850129904381056170[439] = 1.0;
   out_2850129904381056170[440] = 0;
   out_2850129904381056170[441] = 0;
   out_2850129904381056170[442] = 0;
   out_2850129904381056170[443] = 0;
   out_2850129904381056170[444] = 0;
   out_2850129904381056170[445] = 0;
   out_2850129904381056170[446] = 0;
   out_2850129904381056170[447] = 0;
   out_2850129904381056170[448] = 0;
   out_2850129904381056170[449] = 0;
   out_2850129904381056170[450] = 0;
   out_2850129904381056170[451] = 0;
   out_2850129904381056170[452] = 0;
   out_2850129904381056170[453] = 0;
   out_2850129904381056170[454] = 0;
   out_2850129904381056170[455] = 0;
   out_2850129904381056170[456] = 0;
   out_2850129904381056170[457] = 0;
   out_2850129904381056170[458] = 0;
   out_2850129904381056170[459] = 0;
   out_2850129904381056170[460] = 0;
   out_2850129904381056170[461] = 1.0;
}
void f_fun(double *state, double dt, double *out_2294296331146297512) {
   out_2294296331146297512[0] = dt*state[7] + state[0];
   out_2294296331146297512[1] = dt*state[8] + state[1];
   out_2294296331146297512[2] = dt*state[9] + state[2];
   out_2294296331146297512[3] = dt*(-0.5*state[4]*state[10] - 0.5*state[5]*state[11] - 0.5*state[6]*state[12]) + state[3];
   out_2294296331146297512[4] = dt*(0.5*state[3]*state[10] + 0.5*state[5]*state[12] - 0.5*state[6]*state[11]) + state[4];
   out_2294296331146297512[5] = dt*(0.5*state[3]*state[11] - 0.5*state[4]*state[12] + 0.5*state[6]*state[10]) + state[5];
   out_2294296331146297512[6] = dt*(0.5*state[3]*state[12] + 0.5*state[4]*state[11] - 0.5*state[5]*state[10]) + state[6];
   out_2294296331146297512[7] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]) + state[7];
   out_2294296331146297512[8] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]) + state[8];
   out_2294296331146297512[9] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]) + state[9];
   out_2294296331146297512[10] = state[10];
   out_2294296331146297512[11] = state[11];
   out_2294296331146297512[12] = state[12];
   out_2294296331146297512[13] = state[13];
   out_2294296331146297512[14] = state[14];
   out_2294296331146297512[15] = state[15];
   out_2294296331146297512[16] = state[16];
   out_2294296331146297512[17] = state[17];
   out_2294296331146297512[18] = state[18];
   out_2294296331146297512[19] = state[19];
   out_2294296331146297512[20] = state[20];
   out_2294296331146297512[21] = state[21];
}
void F_fun(double *state, double dt, double *out_8290378044132849115) {
   out_8290378044132849115[0] = 1;
   out_8290378044132849115[1] = 0;
   out_8290378044132849115[2] = 0;
   out_8290378044132849115[3] = 0;
   out_8290378044132849115[4] = 0;
   out_8290378044132849115[5] = 0;
   out_8290378044132849115[6] = dt;
   out_8290378044132849115[7] = 0;
   out_8290378044132849115[8] = 0;
   out_8290378044132849115[9] = 0;
   out_8290378044132849115[10] = 0;
   out_8290378044132849115[11] = 0;
   out_8290378044132849115[12] = 0;
   out_8290378044132849115[13] = 0;
   out_8290378044132849115[14] = 0;
   out_8290378044132849115[15] = 0;
   out_8290378044132849115[16] = 0;
   out_8290378044132849115[17] = 0;
   out_8290378044132849115[18] = 0;
   out_8290378044132849115[19] = 0;
   out_8290378044132849115[20] = 0;
   out_8290378044132849115[21] = 0;
   out_8290378044132849115[22] = 1;
   out_8290378044132849115[23] = 0;
   out_8290378044132849115[24] = 0;
   out_8290378044132849115[25] = 0;
   out_8290378044132849115[26] = 0;
   out_8290378044132849115[27] = 0;
   out_8290378044132849115[28] = dt;
   out_8290378044132849115[29] = 0;
   out_8290378044132849115[30] = 0;
   out_8290378044132849115[31] = 0;
   out_8290378044132849115[32] = 0;
   out_8290378044132849115[33] = 0;
   out_8290378044132849115[34] = 0;
   out_8290378044132849115[35] = 0;
   out_8290378044132849115[36] = 0;
   out_8290378044132849115[37] = 0;
   out_8290378044132849115[38] = 0;
   out_8290378044132849115[39] = 0;
   out_8290378044132849115[40] = 0;
   out_8290378044132849115[41] = 0;
   out_8290378044132849115[42] = 0;
   out_8290378044132849115[43] = 0;
   out_8290378044132849115[44] = 1;
   out_8290378044132849115[45] = 0;
   out_8290378044132849115[46] = 0;
   out_8290378044132849115[47] = 0;
   out_8290378044132849115[48] = 0;
   out_8290378044132849115[49] = 0;
   out_8290378044132849115[50] = dt;
   out_8290378044132849115[51] = 0;
   out_8290378044132849115[52] = 0;
   out_8290378044132849115[53] = 0;
   out_8290378044132849115[54] = 0;
   out_8290378044132849115[55] = 0;
   out_8290378044132849115[56] = 0;
   out_8290378044132849115[57] = 0;
   out_8290378044132849115[58] = 0;
   out_8290378044132849115[59] = 0;
   out_8290378044132849115[60] = 0;
   out_8290378044132849115[61] = 0;
   out_8290378044132849115[62] = 0;
   out_8290378044132849115[63] = 0;
   out_8290378044132849115[64] = 0;
   out_8290378044132849115[65] = 0;
   out_8290378044132849115[66] = 1;
   out_8290378044132849115[67] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[11] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_8290378044132849115[68] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[12] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[10] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[11]);
   out_8290378044132849115[69] = 0;
   out_8290378044132849115[70] = 0;
   out_8290378044132849115[71] = 0;
   out_8290378044132849115[72] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_8290378044132849115[73] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_8290378044132849115[74] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_8290378044132849115[75] = 0;
   out_8290378044132849115[76] = 0;
   out_8290378044132849115[77] = 0;
   out_8290378044132849115[78] = 0;
   out_8290378044132849115[79] = 0;
   out_8290378044132849115[80] = 0;
   out_8290378044132849115[81] = 0;
   out_8290378044132849115[82] = 0;
   out_8290378044132849115[83] = 0;
   out_8290378044132849115[84] = 0;
   out_8290378044132849115[85] = 0;
   out_8290378044132849115[86] = 0;
   out_8290378044132849115[87] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[11] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_8290378044132849115[88] = 1;
   out_8290378044132849115[89] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[12] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[11] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[10]);
   out_8290378044132849115[90] = 0;
   out_8290378044132849115[91] = 0;
   out_8290378044132849115[92] = 0;
   out_8290378044132849115[93] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_8290378044132849115[94] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_8290378044132849115[95] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_8290378044132849115[96] = 0;
   out_8290378044132849115[97] = 0;
   out_8290378044132849115[98] = 0;
   out_8290378044132849115[99] = 0;
   out_8290378044132849115[100] = 0;
   out_8290378044132849115[101] = 0;
   out_8290378044132849115[102] = 0;
   out_8290378044132849115[103] = 0;
   out_8290378044132849115[104] = 0;
   out_8290378044132849115[105] = 0;
   out_8290378044132849115[106] = 0;
   out_8290378044132849115[107] = 0;
   out_8290378044132849115[108] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[12] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[10] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[11]);
   out_8290378044132849115[109] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[12] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[11] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[10]);
   out_8290378044132849115[110] = 1;
   out_8290378044132849115[111] = 0;
   out_8290378044132849115[112] = 0;
   out_8290378044132849115[113] = 0;
   out_8290378044132849115[114] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_8290378044132849115[115] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_8290378044132849115[116] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_8290378044132849115[117] = 0;
   out_8290378044132849115[118] = 0;
   out_8290378044132849115[119] = 0;
   out_8290378044132849115[120] = 0;
   out_8290378044132849115[121] = 0;
   out_8290378044132849115[122] = 0;
   out_8290378044132849115[123] = 0;
   out_8290378044132849115[124] = 0;
   out_8290378044132849115[125] = 0;
   out_8290378044132849115[126] = 0;
   out_8290378044132849115[127] = 0;
   out_8290378044132849115[128] = 0;
   out_8290378044132849115[129] = 0;
   out_8290378044132849115[130] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_8290378044132849115[131] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[18] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[16] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[17]);
   out_8290378044132849115[132] = 1;
   out_8290378044132849115[133] = 0;
   out_8290378044132849115[134] = 0;
   out_8290378044132849115[135] = 0;
   out_8290378044132849115[136] = 0;
   out_8290378044132849115[137] = 0;
   out_8290378044132849115[138] = 0;
   out_8290378044132849115[139] = 0;
   out_8290378044132849115[140] = 0;
   out_8290378044132849115[141] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_8290378044132849115[142] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_8290378044132849115[143] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_8290378044132849115[144] = 0;
   out_8290378044132849115[145] = 0;
   out_8290378044132849115[146] = 0;
   out_8290378044132849115[147] = 0;
   out_8290378044132849115[148] = 0;
   out_8290378044132849115[149] = 0;
   out_8290378044132849115[150] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[17] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_8290378044132849115[151] = 0;
   out_8290378044132849115[152] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]);
   out_8290378044132849115[153] = 0;
   out_8290378044132849115[154] = 1;
   out_8290378044132849115[155] = 0;
   out_8290378044132849115[156] = 0;
   out_8290378044132849115[157] = 0;
   out_8290378044132849115[158] = 0;
   out_8290378044132849115[159] = 0;
   out_8290378044132849115[160] = 0;
   out_8290378044132849115[161] = 0;
   out_8290378044132849115[162] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_8290378044132849115[163] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_8290378044132849115[164] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_8290378044132849115[165] = 0;
   out_8290378044132849115[166] = 0;
   out_8290378044132849115[167] = 0;
   out_8290378044132849115[168] = 0;
   out_8290378044132849115[169] = 0;
   out_8290378044132849115[170] = 0;
   out_8290378044132849115[171] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]);
   out_8290378044132849115[172] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[18] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[17] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[16]);
   out_8290378044132849115[173] = 0;
   out_8290378044132849115[174] = 0;
   out_8290378044132849115[175] = 0;
   out_8290378044132849115[176] = 1;
   out_8290378044132849115[177] = 0;
   out_8290378044132849115[178] = 0;
   out_8290378044132849115[179] = 0;
   out_8290378044132849115[180] = 0;
   out_8290378044132849115[181] = 0;
   out_8290378044132849115[182] = 0;
   out_8290378044132849115[183] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_8290378044132849115[184] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_8290378044132849115[185] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_8290378044132849115[186] = 0;
   out_8290378044132849115[187] = 0;
   out_8290378044132849115[188] = 0;
   out_8290378044132849115[189] = 0;
   out_8290378044132849115[190] = 0;
   out_8290378044132849115[191] = 0;
   out_8290378044132849115[192] = 0;
   out_8290378044132849115[193] = 0;
   out_8290378044132849115[194] = 0;
   out_8290378044132849115[195] = 0;
   out_8290378044132849115[196] = 0;
   out_8290378044132849115[197] = 0;
   out_8290378044132849115[198] = 1;
   out_8290378044132849115[199] = 0;
   out_8290378044132849115[200] = 0;
   out_8290378044132849115[201] = 0;
   out_8290378044132849115[202] = 0;
   out_8290378044132849115[203] = 0;
   out_8290378044132849115[204] = 0;
   out_8290378044132849115[205] = 0;
   out_8290378044132849115[206] = 0;
   out_8290378044132849115[207] = 0;
   out_8290378044132849115[208] = 0;
   out_8290378044132849115[209] = 0;
   out_8290378044132849115[210] = 0;
   out_8290378044132849115[211] = 0;
   out_8290378044132849115[212] = 0;
   out_8290378044132849115[213] = 0;
   out_8290378044132849115[214] = 0;
   out_8290378044132849115[215] = 0;
   out_8290378044132849115[216] = 0;
   out_8290378044132849115[217] = 0;
   out_8290378044132849115[218] = 0;
   out_8290378044132849115[219] = 0;
   out_8290378044132849115[220] = 1;
   out_8290378044132849115[221] = 0;
   out_8290378044132849115[222] = 0;
   out_8290378044132849115[223] = 0;
   out_8290378044132849115[224] = 0;
   out_8290378044132849115[225] = 0;
   out_8290378044132849115[226] = 0;
   out_8290378044132849115[227] = 0;
   out_8290378044132849115[228] = 0;
   out_8290378044132849115[229] = 0;
   out_8290378044132849115[230] = 0;
   out_8290378044132849115[231] = 0;
   out_8290378044132849115[232] = 0;
   out_8290378044132849115[233] = 0;
   out_8290378044132849115[234] = 0;
   out_8290378044132849115[235] = 0;
   out_8290378044132849115[236] = 0;
   out_8290378044132849115[237] = 0;
   out_8290378044132849115[238] = 0;
   out_8290378044132849115[239] = 0;
   out_8290378044132849115[240] = 0;
   out_8290378044132849115[241] = 0;
   out_8290378044132849115[242] = 1;
   out_8290378044132849115[243] = 0;
   out_8290378044132849115[244] = 0;
   out_8290378044132849115[245] = 0;
   out_8290378044132849115[246] = 0;
   out_8290378044132849115[247] = 0;
   out_8290378044132849115[248] = 0;
   out_8290378044132849115[249] = 0;
   out_8290378044132849115[250] = 0;
   out_8290378044132849115[251] = 0;
   out_8290378044132849115[252] = 0;
   out_8290378044132849115[253] = 0;
   out_8290378044132849115[254] = 0;
   out_8290378044132849115[255] = 0;
   out_8290378044132849115[256] = 0;
   out_8290378044132849115[257] = 0;
   out_8290378044132849115[258] = 0;
   out_8290378044132849115[259] = 0;
   out_8290378044132849115[260] = 0;
   out_8290378044132849115[261] = 0;
   out_8290378044132849115[262] = 0;
   out_8290378044132849115[263] = 0;
   out_8290378044132849115[264] = 1;
   out_8290378044132849115[265] = 0;
   out_8290378044132849115[266] = 0;
   out_8290378044132849115[267] = 0;
   out_8290378044132849115[268] = 0;
   out_8290378044132849115[269] = 0;
   out_8290378044132849115[270] = 0;
   out_8290378044132849115[271] = 0;
   out_8290378044132849115[272] = 0;
   out_8290378044132849115[273] = 0;
   out_8290378044132849115[274] = 0;
   out_8290378044132849115[275] = 0;
   out_8290378044132849115[276] = 0;
   out_8290378044132849115[277] = 0;
   out_8290378044132849115[278] = 0;
   out_8290378044132849115[279] = 0;
   out_8290378044132849115[280] = 0;
   out_8290378044132849115[281] = 0;
   out_8290378044132849115[282] = 0;
   out_8290378044132849115[283] = 0;
   out_8290378044132849115[284] = 0;
   out_8290378044132849115[285] = 0;
   out_8290378044132849115[286] = 1;
   out_8290378044132849115[287] = 0;
   out_8290378044132849115[288] = 0;
   out_8290378044132849115[289] = 0;
   out_8290378044132849115[290] = 0;
   out_8290378044132849115[291] = 0;
   out_8290378044132849115[292] = 0;
   out_8290378044132849115[293] = 0;
   out_8290378044132849115[294] = 0;
   out_8290378044132849115[295] = 0;
   out_8290378044132849115[296] = 0;
   out_8290378044132849115[297] = 0;
   out_8290378044132849115[298] = 0;
   out_8290378044132849115[299] = 0;
   out_8290378044132849115[300] = 0;
   out_8290378044132849115[301] = 0;
   out_8290378044132849115[302] = 0;
   out_8290378044132849115[303] = 0;
   out_8290378044132849115[304] = 0;
   out_8290378044132849115[305] = 0;
   out_8290378044132849115[306] = 0;
   out_8290378044132849115[307] = 0;
   out_8290378044132849115[308] = 1;
   out_8290378044132849115[309] = 0;
   out_8290378044132849115[310] = 0;
   out_8290378044132849115[311] = 0;
   out_8290378044132849115[312] = 0;
   out_8290378044132849115[313] = 0;
   out_8290378044132849115[314] = 0;
   out_8290378044132849115[315] = 0;
   out_8290378044132849115[316] = 0;
   out_8290378044132849115[317] = 0;
   out_8290378044132849115[318] = 0;
   out_8290378044132849115[319] = 0;
   out_8290378044132849115[320] = 0;
   out_8290378044132849115[321] = 0;
   out_8290378044132849115[322] = 0;
   out_8290378044132849115[323] = 0;
   out_8290378044132849115[324] = 0;
   out_8290378044132849115[325] = 0;
   out_8290378044132849115[326] = 0;
   out_8290378044132849115[327] = 0;
   out_8290378044132849115[328] = 0;
   out_8290378044132849115[329] = 0;
   out_8290378044132849115[330] = 1;
   out_8290378044132849115[331] = 0;
   out_8290378044132849115[332] = 0;
   out_8290378044132849115[333] = 0;
   out_8290378044132849115[334] = 0;
   out_8290378044132849115[335] = 0;
   out_8290378044132849115[336] = 0;
   out_8290378044132849115[337] = 0;
   out_8290378044132849115[338] = 0;
   out_8290378044132849115[339] = 0;
   out_8290378044132849115[340] = 0;
   out_8290378044132849115[341] = 0;
   out_8290378044132849115[342] = 0;
   out_8290378044132849115[343] = 0;
   out_8290378044132849115[344] = 0;
   out_8290378044132849115[345] = 0;
   out_8290378044132849115[346] = 0;
   out_8290378044132849115[347] = 0;
   out_8290378044132849115[348] = 0;
   out_8290378044132849115[349] = 0;
   out_8290378044132849115[350] = 0;
   out_8290378044132849115[351] = 0;
   out_8290378044132849115[352] = 1;
   out_8290378044132849115[353] = 0;
   out_8290378044132849115[354] = 0;
   out_8290378044132849115[355] = 0;
   out_8290378044132849115[356] = 0;
   out_8290378044132849115[357] = 0;
   out_8290378044132849115[358] = 0;
   out_8290378044132849115[359] = 0;
   out_8290378044132849115[360] = 0;
   out_8290378044132849115[361] = 0;
   out_8290378044132849115[362] = 0;
   out_8290378044132849115[363] = 0;
   out_8290378044132849115[364] = 0;
   out_8290378044132849115[365] = 0;
   out_8290378044132849115[366] = 0;
   out_8290378044132849115[367] = 0;
   out_8290378044132849115[368] = 0;
   out_8290378044132849115[369] = 0;
   out_8290378044132849115[370] = 0;
   out_8290378044132849115[371] = 0;
   out_8290378044132849115[372] = 0;
   out_8290378044132849115[373] = 0;
   out_8290378044132849115[374] = 1;
   out_8290378044132849115[375] = 0;
   out_8290378044132849115[376] = 0;
   out_8290378044132849115[377] = 0;
   out_8290378044132849115[378] = 0;
   out_8290378044132849115[379] = 0;
   out_8290378044132849115[380] = 0;
   out_8290378044132849115[381] = 0;
   out_8290378044132849115[382] = 0;
   out_8290378044132849115[383] = 0;
   out_8290378044132849115[384] = 0;
   out_8290378044132849115[385] = 0;
   out_8290378044132849115[386] = 0;
   out_8290378044132849115[387] = 0;
   out_8290378044132849115[388] = 0;
   out_8290378044132849115[389] = 0;
   out_8290378044132849115[390] = 0;
   out_8290378044132849115[391] = 0;
   out_8290378044132849115[392] = 0;
   out_8290378044132849115[393] = 0;
   out_8290378044132849115[394] = 0;
   out_8290378044132849115[395] = 0;
   out_8290378044132849115[396] = 1;
   out_8290378044132849115[397] = 0;
   out_8290378044132849115[398] = 0;
   out_8290378044132849115[399] = 0;
   out_8290378044132849115[400] = 0;
   out_8290378044132849115[401] = 0;
   out_8290378044132849115[402] = 0;
   out_8290378044132849115[403] = 0;
   out_8290378044132849115[404] = 0;
   out_8290378044132849115[405] = 0;
   out_8290378044132849115[406] = 0;
   out_8290378044132849115[407] = 0;
   out_8290378044132849115[408] = 0;
   out_8290378044132849115[409] = 0;
   out_8290378044132849115[410] = 0;
   out_8290378044132849115[411] = 0;
   out_8290378044132849115[412] = 0;
   out_8290378044132849115[413] = 0;
   out_8290378044132849115[414] = 0;
   out_8290378044132849115[415] = 0;
   out_8290378044132849115[416] = 0;
   out_8290378044132849115[417] = 0;
   out_8290378044132849115[418] = 1;
   out_8290378044132849115[419] = 0;
   out_8290378044132849115[420] = 0;
   out_8290378044132849115[421] = 0;
   out_8290378044132849115[422] = 0;
   out_8290378044132849115[423] = 0;
   out_8290378044132849115[424] = 0;
   out_8290378044132849115[425] = 0;
   out_8290378044132849115[426] = 0;
   out_8290378044132849115[427] = 0;
   out_8290378044132849115[428] = 0;
   out_8290378044132849115[429] = 0;
   out_8290378044132849115[430] = 0;
   out_8290378044132849115[431] = 0;
   out_8290378044132849115[432] = 0;
   out_8290378044132849115[433] = 0;
   out_8290378044132849115[434] = 0;
   out_8290378044132849115[435] = 0;
   out_8290378044132849115[436] = 0;
   out_8290378044132849115[437] = 0;
   out_8290378044132849115[438] = 0;
   out_8290378044132849115[439] = 0;
   out_8290378044132849115[440] = 1;
}
void h_4(double *state, double *unused, double *out_4812944236424705177) {
   out_4812944236424705177[0] = state[10] + state[13];
   out_4812944236424705177[1] = state[11] + state[14];
   out_4812944236424705177[2] = state[12] + state[15];
}
void H_4(double *state, double *unused, double *out_5057437881567758000) {
   out_5057437881567758000[0] = 0;
   out_5057437881567758000[1] = 0;
   out_5057437881567758000[2] = 0;
   out_5057437881567758000[3] = 0;
   out_5057437881567758000[4] = 0;
   out_5057437881567758000[5] = 0;
   out_5057437881567758000[6] = 0;
   out_5057437881567758000[7] = 0;
   out_5057437881567758000[8] = 0;
   out_5057437881567758000[9] = 0;
   out_5057437881567758000[10] = 1;
   out_5057437881567758000[11] = 0;
   out_5057437881567758000[12] = 0;
   out_5057437881567758000[13] = 1;
   out_5057437881567758000[14] = 0;
   out_5057437881567758000[15] = 0;
   out_5057437881567758000[16] = 0;
   out_5057437881567758000[17] = 0;
   out_5057437881567758000[18] = 0;
   out_5057437881567758000[19] = 0;
   out_5057437881567758000[20] = 0;
   out_5057437881567758000[21] = 0;
   out_5057437881567758000[22] = 0;
   out_5057437881567758000[23] = 0;
   out_5057437881567758000[24] = 0;
   out_5057437881567758000[25] = 0;
   out_5057437881567758000[26] = 0;
   out_5057437881567758000[27] = 0;
   out_5057437881567758000[28] = 0;
   out_5057437881567758000[29] = 0;
   out_5057437881567758000[30] = 0;
   out_5057437881567758000[31] = 0;
   out_5057437881567758000[32] = 0;
   out_5057437881567758000[33] = 1;
   out_5057437881567758000[34] = 0;
   out_5057437881567758000[35] = 0;
   out_5057437881567758000[36] = 1;
   out_5057437881567758000[37] = 0;
   out_5057437881567758000[38] = 0;
   out_5057437881567758000[39] = 0;
   out_5057437881567758000[40] = 0;
   out_5057437881567758000[41] = 0;
   out_5057437881567758000[42] = 0;
   out_5057437881567758000[43] = 0;
   out_5057437881567758000[44] = 0;
   out_5057437881567758000[45] = 0;
   out_5057437881567758000[46] = 0;
   out_5057437881567758000[47] = 0;
   out_5057437881567758000[48] = 0;
   out_5057437881567758000[49] = 0;
   out_5057437881567758000[50] = 0;
   out_5057437881567758000[51] = 0;
   out_5057437881567758000[52] = 0;
   out_5057437881567758000[53] = 0;
   out_5057437881567758000[54] = 0;
   out_5057437881567758000[55] = 0;
   out_5057437881567758000[56] = 1;
   out_5057437881567758000[57] = 0;
   out_5057437881567758000[58] = 0;
   out_5057437881567758000[59] = 1;
   out_5057437881567758000[60] = 0;
   out_5057437881567758000[61] = 0;
   out_5057437881567758000[62] = 0;
   out_5057437881567758000[63] = 0;
   out_5057437881567758000[64] = 0;
   out_5057437881567758000[65] = 0;
}
void h_9(double *state, double *unused, double *out_8950155143033091025) {
   out_8950155143033091025[0] = state[10];
   out_8950155143033091025[1] = state[11];
   out_8950155143033091025[2] = state[12];
}
void H_9(double *state, double *unused, double *out_2229781053696689470) {
   out_2229781053696689470[0] = 0;
   out_2229781053696689470[1] = 0;
   out_2229781053696689470[2] = 0;
   out_2229781053696689470[3] = 0;
   out_2229781053696689470[4] = 0;
   out_2229781053696689470[5] = 0;
   out_2229781053696689470[6] = 0;
   out_2229781053696689470[7] = 0;
   out_2229781053696689470[8] = 0;
   out_2229781053696689470[9] = 0;
   out_2229781053696689470[10] = 1;
   out_2229781053696689470[11] = 0;
   out_2229781053696689470[12] = 0;
   out_2229781053696689470[13] = 0;
   out_2229781053696689470[14] = 0;
   out_2229781053696689470[15] = 0;
   out_2229781053696689470[16] = 0;
   out_2229781053696689470[17] = 0;
   out_2229781053696689470[18] = 0;
   out_2229781053696689470[19] = 0;
   out_2229781053696689470[20] = 0;
   out_2229781053696689470[21] = 0;
   out_2229781053696689470[22] = 0;
   out_2229781053696689470[23] = 0;
   out_2229781053696689470[24] = 0;
   out_2229781053696689470[25] = 0;
   out_2229781053696689470[26] = 0;
   out_2229781053696689470[27] = 0;
   out_2229781053696689470[28] = 0;
   out_2229781053696689470[29] = 0;
   out_2229781053696689470[30] = 0;
   out_2229781053696689470[31] = 0;
   out_2229781053696689470[32] = 0;
   out_2229781053696689470[33] = 1;
   out_2229781053696689470[34] = 0;
   out_2229781053696689470[35] = 0;
   out_2229781053696689470[36] = 0;
   out_2229781053696689470[37] = 0;
   out_2229781053696689470[38] = 0;
   out_2229781053696689470[39] = 0;
   out_2229781053696689470[40] = 0;
   out_2229781053696689470[41] = 0;
   out_2229781053696689470[42] = 0;
   out_2229781053696689470[43] = 0;
   out_2229781053696689470[44] = 0;
   out_2229781053696689470[45] = 0;
   out_2229781053696689470[46] = 0;
   out_2229781053696689470[47] = 0;
   out_2229781053696689470[48] = 0;
   out_2229781053696689470[49] = 0;
   out_2229781053696689470[50] = 0;
   out_2229781053696689470[51] = 0;
   out_2229781053696689470[52] = 0;
   out_2229781053696689470[53] = 0;
   out_2229781053696689470[54] = 0;
   out_2229781053696689470[55] = 0;
   out_2229781053696689470[56] = 1;
   out_2229781053696689470[57] = 0;
   out_2229781053696689470[58] = 0;
   out_2229781053696689470[59] = 0;
   out_2229781053696689470[60] = 0;
   out_2229781053696689470[61] = 0;
   out_2229781053696689470[62] = 0;
   out_2229781053696689470[63] = 0;
   out_2229781053696689470[64] = 0;
   out_2229781053696689470[65] = 0;
}
void h_10(double *state, double *unused, double *out_2460042095247618240) {
   out_2460042095247618240[0] = 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0] + state[16] + state[19];
   out_2460042095247618240[1] = 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1] + state[17] + state[20];
   out_2460042095247618240[2] = 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[2] + state[18] + state[21];
}
void H_10(double *state, double *unused, double *out_6080707102592681255) {
   out_6080707102592681255[0] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*pow(state[0], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_6080707102592681255[1] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_6080707102592681255[2] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[2];
   out_6080707102592681255[3] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_6080707102592681255[4] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_6080707102592681255[5] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_6080707102592681255[6] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_6080707102592681255[7] = 0;
   out_6080707102592681255[8] = 0;
   out_6080707102592681255[9] = 0;
   out_6080707102592681255[10] = 0;
   out_6080707102592681255[11] = 0;
   out_6080707102592681255[12] = 0;
   out_6080707102592681255[13] = 0;
   out_6080707102592681255[14] = 0;
   out_6080707102592681255[15] = 0;
   out_6080707102592681255[16] = 1;
   out_6080707102592681255[17] = 0;
   out_6080707102592681255[18] = 0;
   out_6080707102592681255[19] = 1;
   out_6080707102592681255[20] = 0;
   out_6080707102592681255[21] = 0;
   out_6080707102592681255[22] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_6080707102592681255[23] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*pow(state[1], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_6080707102592681255[24] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1]*state[2];
   out_6080707102592681255[25] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_6080707102592681255[26] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_6080707102592681255[27] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_6080707102592681255[28] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_6080707102592681255[29] = 0;
   out_6080707102592681255[30] = 0;
   out_6080707102592681255[31] = 0;
   out_6080707102592681255[32] = 0;
   out_6080707102592681255[33] = 0;
   out_6080707102592681255[34] = 0;
   out_6080707102592681255[35] = 0;
   out_6080707102592681255[36] = 0;
   out_6080707102592681255[37] = 0;
   out_6080707102592681255[38] = 0;
   out_6080707102592681255[39] = 1;
   out_6080707102592681255[40] = 0;
   out_6080707102592681255[41] = 0;
   out_6080707102592681255[42] = 1;
   out_6080707102592681255[43] = 0;
   out_6080707102592681255[44] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[0]*state[2];
   out_6080707102592681255[45] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[1]*state[2];
   out_6080707102592681255[46] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*pow(state[2], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_6080707102592681255[47] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_6080707102592681255[48] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_6080707102592681255[49] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_6080707102592681255[50] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_6080707102592681255[51] = 0;
   out_6080707102592681255[52] = 0;
   out_6080707102592681255[53] = 0;
   out_6080707102592681255[54] = 0;
   out_6080707102592681255[55] = 0;
   out_6080707102592681255[56] = 0;
   out_6080707102592681255[57] = 0;
   out_6080707102592681255[58] = 0;
   out_6080707102592681255[59] = 0;
   out_6080707102592681255[60] = 0;
   out_6080707102592681255[61] = 0;
   out_6080707102592681255[62] = 1;
   out_6080707102592681255[63] = 0;
   out_6080707102592681255[64] = 0;
   out_6080707102592681255[65] = 1;
}
void h_12(double *state, double *unused, double *out_5663410019399840154) {
   out_5663410019399840154[0] = state[0];
   out_5663410019399840154[1] = state[1];
   out_5663410019399840154[2] = state[2];
}
void H_12(double *state, double *unused, double *out_37981473535796205) {
   out_37981473535796205[0] = 1;
   out_37981473535796205[1] = 0;
   out_37981473535796205[2] = 0;
   out_37981473535796205[3] = 0;
   out_37981473535796205[4] = 0;
   out_37981473535796205[5] = 0;
   out_37981473535796205[6] = 0;
   out_37981473535796205[7] = 0;
   out_37981473535796205[8] = 0;
   out_37981473535796205[9] = 0;
   out_37981473535796205[10] = 0;
   out_37981473535796205[11] = 0;
   out_37981473535796205[12] = 0;
   out_37981473535796205[13] = 0;
   out_37981473535796205[14] = 0;
   out_37981473535796205[15] = 0;
   out_37981473535796205[16] = 0;
   out_37981473535796205[17] = 0;
   out_37981473535796205[18] = 0;
   out_37981473535796205[19] = 0;
   out_37981473535796205[20] = 0;
   out_37981473535796205[21] = 0;
   out_37981473535796205[22] = 0;
   out_37981473535796205[23] = 1;
   out_37981473535796205[24] = 0;
   out_37981473535796205[25] = 0;
   out_37981473535796205[26] = 0;
   out_37981473535796205[27] = 0;
   out_37981473535796205[28] = 0;
   out_37981473535796205[29] = 0;
   out_37981473535796205[30] = 0;
   out_37981473535796205[31] = 0;
   out_37981473535796205[32] = 0;
   out_37981473535796205[33] = 0;
   out_37981473535796205[34] = 0;
   out_37981473535796205[35] = 0;
   out_37981473535796205[36] = 0;
   out_37981473535796205[37] = 0;
   out_37981473535796205[38] = 0;
   out_37981473535796205[39] = 0;
   out_37981473535796205[40] = 0;
   out_37981473535796205[41] = 0;
   out_37981473535796205[42] = 0;
   out_37981473535796205[43] = 0;
   out_37981473535796205[44] = 0;
   out_37981473535796205[45] = 0;
   out_37981473535796205[46] = 1;
   out_37981473535796205[47] = 0;
   out_37981473535796205[48] = 0;
   out_37981473535796205[49] = 0;
   out_37981473535796205[50] = 0;
   out_37981473535796205[51] = 0;
   out_37981473535796205[52] = 0;
   out_37981473535796205[53] = 0;
   out_37981473535796205[54] = 0;
   out_37981473535796205[55] = 0;
   out_37981473535796205[56] = 0;
   out_37981473535796205[57] = 0;
   out_37981473535796205[58] = 0;
   out_37981473535796205[59] = 0;
   out_37981473535796205[60] = 0;
   out_37981473535796205[61] = 0;
   out_37981473535796205[62] = 0;
   out_37981473535796205[63] = 0;
   out_37981473535796205[64] = 0;
   out_37981473535796205[65] = 0;
}
void h_35(double *state, double *unused, double *out_1220516817591347346) {
   out_1220516817591347346[0] = state[7];
   out_1220516817591347346[1] = state[8];
   out_1220516817591347346[2] = state[9];
}
void H_35(double *state, double *unused, double *out_1690775824195150624) {
   out_1690775824195150624[0] = 0;
   out_1690775824195150624[1] = 0;
   out_1690775824195150624[2] = 0;
   out_1690775824195150624[3] = 0;
   out_1690775824195150624[4] = 0;
   out_1690775824195150624[5] = 0;
   out_1690775824195150624[6] = 0;
   out_1690775824195150624[7] = 1;
   out_1690775824195150624[8] = 0;
   out_1690775824195150624[9] = 0;
   out_1690775824195150624[10] = 0;
   out_1690775824195150624[11] = 0;
   out_1690775824195150624[12] = 0;
   out_1690775824195150624[13] = 0;
   out_1690775824195150624[14] = 0;
   out_1690775824195150624[15] = 0;
   out_1690775824195150624[16] = 0;
   out_1690775824195150624[17] = 0;
   out_1690775824195150624[18] = 0;
   out_1690775824195150624[19] = 0;
   out_1690775824195150624[20] = 0;
   out_1690775824195150624[21] = 0;
   out_1690775824195150624[22] = 0;
   out_1690775824195150624[23] = 0;
   out_1690775824195150624[24] = 0;
   out_1690775824195150624[25] = 0;
   out_1690775824195150624[26] = 0;
   out_1690775824195150624[27] = 0;
   out_1690775824195150624[28] = 0;
   out_1690775824195150624[29] = 0;
   out_1690775824195150624[30] = 1;
   out_1690775824195150624[31] = 0;
   out_1690775824195150624[32] = 0;
   out_1690775824195150624[33] = 0;
   out_1690775824195150624[34] = 0;
   out_1690775824195150624[35] = 0;
   out_1690775824195150624[36] = 0;
   out_1690775824195150624[37] = 0;
   out_1690775824195150624[38] = 0;
   out_1690775824195150624[39] = 0;
   out_1690775824195150624[40] = 0;
   out_1690775824195150624[41] = 0;
   out_1690775824195150624[42] = 0;
   out_1690775824195150624[43] = 0;
   out_1690775824195150624[44] = 0;
   out_1690775824195150624[45] = 0;
   out_1690775824195150624[46] = 0;
   out_1690775824195150624[47] = 0;
   out_1690775824195150624[48] = 0;
   out_1690775824195150624[49] = 0;
   out_1690775824195150624[50] = 0;
   out_1690775824195150624[51] = 0;
   out_1690775824195150624[52] = 0;
   out_1690775824195150624[53] = 1;
   out_1690775824195150624[54] = 0;
   out_1690775824195150624[55] = 0;
   out_1690775824195150624[56] = 0;
   out_1690775824195150624[57] = 0;
   out_1690775824195150624[58] = 0;
   out_1690775824195150624[59] = 0;
   out_1690775824195150624[60] = 0;
   out_1690775824195150624[61] = 0;
   out_1690775824195150624[62] = 0;
   out_1690775824195150624[63] = 0;
   out_1690775824195150624[64] = 0;
   out_1690775824195150624[65] = 0;
}
void h_32(double *state, double *unused, double *out_3620815180093305856) {
   out_3620815180093305856[0] = state[3];
   out_3620815180093305856[1] = state[4];
   out_3620815180093305856[2] = state[5];
   out_3620815180093305856[3] = state[6];
}
void H_32(double *state, double *unused, double *out_4110528548012461934) {
   out_4110528548012461934[0] = 0;
   out_4110528548012461934[1] = 0;
   out_4110528548012461934[2] = 0;
   out_4110528548012461934[3] = 1;
   out_4110528548012461934[4] = 0;
   out_4110528548012461934[5] = 0;
   out_4110528548012461934[6] = 0;
   out_4110528548012461934[7] = 0;
   out_4110528548012461934[8] = 0;
   out_4110528548012461934[9] = 0;
   out_4110528548012461934[10] = 0;
   out_4110528548012461934[11] = 0;
   out_4110528548012461934[12] = 0;
   out_4110528548012461934[13] = 0;
   out_4110528548012461934[14] = 0;
   out_4110528548012461934[15] = 0;
   out_4110528548012461934[16] = 0;
   out_4110528548012461934[17] = 0;
   out_4110528548012461934[18] = 0;
   out_4110528548012461934[19] = 0;
   out_4110528548012461934[20] = 0;
   out_4110528548012461934[21] = 0;
   out_4110528548012461934[22] = 0;
   out_4110528548012461934[23] = 0;
   out_4110528548012461934[24] = 0;
   out_4110528548012461934[25] = 0;
   out_4110528548012461934[26] = 1;
   out_4110528548012461934[27] = 0;
   out_4110528548012461934[28] = 0;
   out_4110528548012461934[29] = 0;
   out_4110528548012461934[30] = 0;
   out_4110528548012461934[31] = 0;
   out_4110528548012461934[32] = 0;
   out_4110528548012461934[33] = 0;
   out_4110528548012461934[34] = 0;
   out_4110528548012461934[35] = 0;
   out_4110528548012461934[36] = 0;
   out_4110528548012461934[37] = 0;
   out_4110528548012461934[38] = 0;
   out_4110528548012461934[39] = 0;
   out_4110528548012461934[40] = 0;
   out_4110528548012461934[41] = 0;
   out_4110528548012461934[42] = 0;
   out_4110528548012461934[43] = 0;
   out_4110528548012461934[44] = 0;
   out_4110528548012461934[45] = 0;
   out_4110528548012461934[46] = 0;
   out_4110528548012461934[47] = 0;
   out_4110528548012461934[48] = 0;
   out_4110528548012461934[49] = 1;
   out_4110528548012461934[50] = 0;
   out_4110528548012461934[51] = 0;
   out_4110528548012461934[52] = 0;
   out_4110528548012461934[53] = 0;
   out_4110528548012461934[54] = 0;
   out_4110528548012461934[55] = 0;
   out_4110528548012461934[56] = 0;
   out_4110528548012461934[57] = 0;
   out_4110528548012461934[58] = 0;
   out_4110528548012461934[59] = 0;
   out_4110528548012461934[60] = 0;
   out_4110528548012461934[61] = 0;
   out_4110528548012461934[62] = 0;
   out_4110528548012461934[63] = 0;
   out_4110528548012461934[64] = 0;
   out_4110528548012461934[65] = 0;
   out_4110528548012461934[66] = 0;
   out_4110528548012461934[67] = 0;
   out_4110528548012461934[68] = 0;
   out_4110528548012461934[69] = 0;
   out_4110528548012461934[70] = 0;
   out_4110528548012461934[71] = 0;
   out_4110528548012461934[72] = 1;
   out_4110528548012461934[73] = 0;
   out_4110528548012461934[74] = 0;
   out_4110528548012461934[75] = 0;
   out_4110528548012461934[76] = 0;
   out_4110528548012461934[77] = 0;
   out_4110528548012461934[78] = 0;
   out_4110528548012461934[79] = 0;
   out_4110528548012461934[80] = 0;
   out_4110528548012461934[81] = 0;
   out_4110528548012461934[82] = 0;
   out_4110528548012461934[83] = 0;
   out_4110528548012461934[84] = 0;
   out_4110528548012461934[85] = 0;
   out_4110528548012461934[86] = 0;
   out_4110528548012461934[87] = 0;
}
void h_13(double *state, double *unused, double *out_7720506932312268250) {
   out_7720506932312268250[0] = (-2*state[3]*state[5] + 2*state[4]*state[6])*state[9] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[8] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[7];
   out_7720506932312268250[1] = (2*state[3]*state[4] + 2*state[5]*state[6])*state[9] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[7] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[8];
   out_7720506932312268250[2] = (-2*state[3]*state[4] + 2*state[5]*state[6])*state[8] + (2*state[3]*state[5] + 2*state[4]*state[6])*state[7] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[9];
}
void H_13(double *state, double *unused, double *out_4318759351138565016) {
   out_4318759351138565016[0] = 0;
   out_4318759351138565016[1] = 0;
   out_4318759351138565016[2] = 0;
   out_4318759351138565016[3] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_4318759351138565016[4] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_4318759351138565016[5] = -2*state[3]*state[9] + 2*state[4]*state[8] - 2*state[5]*state[7];
   out_4318759351138565016[6] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_4318759351138565016[7] = pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2);
   out_4318759351138565016[8] = 2*state[3]*state[6] + 2*state[4]*state[5];
   out_4318759351138565016[9] = -2*state[3]*state[5] + 2*state[4]*state[6];
   out_4318759351138565016[10] = 0;
   out_4318759351138565016[11] = 0;
   out_4318759351138565016[12] = 0;
   out_4318759351138565016[13] = 0;
   out_4318759351138565016[14] = 0;
   out_4318759351138565016[15] = 0;
   out_4318759351138565016[16] = 0;
   out_4318759351138565016[17] = 0;
   out_4318759351138565016[18] = 0;
   out_4318759351138565016[19] = 0;
   out_4318759351138565016[20] = 0;
   out_4318759351138565016[21] = 0;
   out_4318759351138565016[22] = 0;
   out_4318759351138565016[23] = 0;
   out_4318759351138565016[24] = 0;
   out_4318759351138565016[25] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_4318759351138565016[26] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_4318759351138565016[27] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_4318759351138565016[28] = -2*state[3]*state[7] + 2*state[5]*state[9] - 2*state[6]*state[8];
   out_4318759351138565016[29] = -2*state[3]*state[6] + 2*state[4]*state[5];
   out_4318759351138565016[30] = pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2);
   out_4318759351138565016[31] = 2*state[3]*state[4] + 2*state[5]*state[6];
   out_4318759351138565016[32] = 0;
   out_4318759351138565016[33] = 0;
   out_4318759351138565016[34] = 0;
   out_4318759351138565016[35] = 0;
   out_4318759351138565016[36] = 0;
   out_4318759351138565016[37] = 0;
   out_4318759351138565016[38] = 0;
   out_4318759351138565016[39] = 0;
   out_4318759351138565016[40] = 0;
   out_4318759351138565016[41] = 0;
   out_4318759351138565016[42] = 0;
   out_4318759351138565016[43] = 0;
   out_4318759351138565016[44] = 0;
   out_4318759351138565016[45] = 0;
   out_4318759351138565016[46] = 0;
   out_4318759351138565016[47] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_4318759351138565016[48] = -2*state[3]*state[8] - 2*state[4]*state[9] + 2*state[6]*state[7];
   out_4318759351138565016[49] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_4318759351138565016[50] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_4318759351138565016[51] = 2*state[3]*state[5] + 2*state[4]*state[6];
   out_4318759351138565016[52] = -2*state[3]*state[4] + 2*state[5]*state[6];
   out_4318759351138565016[53] = pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2);
   out_4318759351138565016[54] = 0;
   out_4318759351138565016[55] = 0;
   out_4318759351138565016[56] = 0;
   out_4318759351138565016[57] = 0;
   out_4318759351138565016[58] = 0;
   out_4318759351138565016[59] = 0;
   out_4318759351138565016[60] = 0;
   out_4318759351138565016[61] = 0;
   out_4318759351138565016[62] = 0;
   out_4318759351138565016[63] = 0;
   out_4318759351138565016[64] = 0;
   out_4318759351138565016[65] = 0;
}
void h_14(double *state, double *unused, double *out_8950155143033091025) {
   out_8950155143033091025[0] = state[10];
   out_8950155143033091025[1] = state[11];
   out_8950155143033091025[2] = state[12];
}
void H_14(double *state, double *unused, double *out_2229781053696689470) {
   out_2229781053696689470[0] = 0;
   out_2229781053696689470[1] = 0;
   out_2229781053696689470[2] = 0;
   out_2229781053696689470[3] = 0;
   out_2229781053696689470[4] = 0;
   out_2229781053696689470[5] = 0;
   out_2229781053696689470[6] = 0;
   out_2229781053696689470[7] = 0;
   out_2229781053696689470[8] = 0;
   out_2229781053696689470[9] = 0;
   out_2229781053696689470[10] = 1;
   out_2229781053696689470[11] = 0;
   out_2229781053696689470[12] = 0;
   out_2229781053696689470[13] = 0;
   out_2229781053696689470[14] = 0;
   out_2229781053696689470[15] = 0;
   out_2229781053696689470[16] = 0;
   out_2229781053696689470[17] = 0;
   out_2229781053696689470[18] = 0;
   out_2229781053696689470[19] = 0;
   out_2229781053696689470[20] = 0;
   out_2229781053696689470[21] = 0;
   out_2229781053696689470[22] = 0;
   out_2229781053696689470[23] = 0;
   out_2229781053696689470[24] = 0;
   out_2229781053696689470[25] = 0;
   out_2229781053696689470[26] = 0;
   out_2229781053696689470[27] = 0;
   out_2229781053696689470[28] = 0;
   out_2229781053696689470[29] = 0;
   out_2229781053696689470[30] = 0;
   out_2229781053696689470[31] = 0;
   out_2229781053696689470[32] = 0;
   out_2229781053696689470[33] = 1;
   out_2229781053696689470[34] = 0;
   out_2229781053696689470[35] = 0;
   out_2229781053696689470[36] = 0;
   out_2229781053696689470[37] = 0;
   out_2229781053696689470[38] = 0;
   out_2229781053696689470[39] = 0;
   out_2229781053696689470[40] = 0;
   out_2229781053696689470[41] = 0;
   out_2229781053696689470[42] = 0;
   out_2229781053696689470[43] = 0;
   out_2229781053696689470[44] = 0;
   out_2229781053696689470[45] = 0;
   out_2229781053696689470[46] = 0;
   out_2229781053696689470[47] = 0;
   out_2229781053696689470[48] = 0;
   out_2229781053696689470[49] = 0;
   out_2229781053696689470[50] = 0;
   out_2229781053696689470[51] = 0;
   out_2229781053696689470[52] = 0;
   out_2229781053696689470[53] = 0;
   out_2229781053696689470[54] = 0;
   out_2229781053696689470[55] = 0;
   out_2229781053696689470[56] = 1;
   out_2229781053696689470[57] = 0;
   out_2229781053696689470[58] = 0;
   out_2229781053696689470[59] = 0;
   out_2229781053696689470[60] = 0;
   out_2229781053696689470[61] = 0;
   out_2229781053696689470[62] = 0;
   out_2229781053696689470[63] = 0;
   out_2229781053696689470[64] = 0;
   out_2229781053696689470[65] = 0;
}
void h_33(double *state, double *unused, double *out_6375727210651586338) {
   out_6375727210651586338[0] = state[16];
   out_6375727210651586338[1] = state[17];
   out_6375727210651586338[2] = state[18];
}
void H_33(double *state, double *unused, double *out_1459781180443706980) {
   out_1459781180443706980[0] = 0;
   out_1459781180443706980[1] = 0;
   out_1459781180443706980[2] = 0;
   out_1459781180443706980[3] = 0;
   out_1459781180443706980[4] = 0;
   out_1459781180443706980[5] = 0;
   out_1459781180443706980[6] = 0;
   out_1459781180443706980[7] = 0;
   out_1459781180443706980[8] = 0;
   out_1459781180443706980[9] = 0;
   out_1459781180443706980[10] = 0;
   out_1459781180443706980[11] = 0;
   out_1459781180443706980[12] = 0;
   out_1459781180443706980[13] = 0;
   out_1459781180443706980[14] = 0;
   out_1459781180443706980[15] = 0;
   out_1459781180443706980[16] = 1;
   out_1459781180443706980[17] = 0;
   out_1459781180443706980[18] = 0;
   out_1459781180443706980[19] = 0;
   out_1459781180443706980[20] = 0;
   out_1459781180443706980[21] = 0;
   out_1459781180443706980[22] = 0;
   out_1459781180443706980[23] = 0;
   out_1459781180443706980[24] = 0;
   out_1459781180443706980[25] = 0;
   out_1459781180443706980[26] = 0;
   out_1459781180443706980[27] = 0;
   out_1459781180443706980[28] = 0;
   out_1459781180443706980[29] = 0;
   out_1459781180443706980[30] = 0;
   out_1459781180443706980[31] = 0;
   out_1459781180443706980[32] = 0;
   out_1459781180443706980[33] = 0;
   out_1459781180443706980[34] = 0;
   out_1459781180443706980[35] = 0;
   out_1459781180443706980[36] = 0;
   out_1459781180443706980[37] = 0;
   out_1459781180443706980[38] = 0;
   out_1459781180443706980[39] = 1;
   out_1459781180443706980[40] = 0;
   out_1459781180443706980[41] = 0;
   out_1459781180443706980[42] = 0;
   out_1459781180443706980[43] = 0;
   out_1459781180443706980[44] = 0;
   out_1459781180443706980[45] = 0;
   out_1459781180443706980[46] = 0;
   out_1459781180443706980[47] = 0;
   out_1459781180443706980[48] = 0;
   out_1459781180443706980[49] = 0;
   out_1459781180443706980[50] = 0;
   out_1459781180443706980[51] = 0;
   out_1459781180443706980[52] = 0;
   out_1459781180443706980[53] = 0;
   out_1459781180443706980[54] = 0;
   out_1459781180443706980[55] = 0;
   out_1459781180443706980[56] = 0;
   out_1459781180443706980[57] = 0;
   out_1459781180443706980[58] = 0;
   out_1459781180443706980[59] = 0;
   out_1459781180443706980[60] = 0;
   out_1459781180443706980[61] = 0;
   out_1459781180443706980[62] = 1;
   out_1459781180443706980[63] = 0;
   out_1459781180443706980[64] = 0;
   out_1459781180443706980[65] = 0;
}
#include <eigen3/Eigen/Dense>
#include <iostream>

typedef Eigen::Matrix<double, DIM, DIM, Eigen::RowMajor> DDM;
typedef Eigen::Matrix<double, EDIM, EDIM, Eigen::RowMajor> EEM;
typedef Eigen::Matrix<double, DIM, EDIM, Eigen::RowMajor> DEM;

void predict(double *in_x, double *in_P, double *in_Q, double dt) {
  typedef Eigen::Matrix<double, MEDIM, MEDIM, Eigen::RowMajor> RRM;

  double nx[DIM] = {0};
  double in_F[EDIM*EDIM] = {0};

  // functions from sympy
  f_fun(in_x, dt, nx);
  F_fun(in_x, dt, in_F);


  EEM F(in_F);
  EEM P(in_P);
  EEM Q(in_Q);

  RRM F_main = F.topLeftCorner(MEDIM, MEDIM);
  P.topLeftCorner(MEDIM, MEDIM) = (F_main * P.topLeftCorner(MEDIM, MEDIM)) * F_main.transpose();
  P.topRightCorner(MEDIM, EDIM - MEDIM) = F_main * P.topRightCorner(MEDIM, EDIM - MEDIM);
  P.bottomLeftCorner(EDIM - MEDIM, MEDIM) = P.bottomLeftCorner(EDIM - MEDIM, MEDIM) * F_main.transpose();

  P = P + dt*Q;

  // copy out state
  memcpy(in_x, nx, DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
}

// note: extra_args dim only correct when null space projecting
// otherwise 1
template <int ZDIM, int EADIM, bool MAHA_TEST>
void update(double *in_x, double *in_P, Hfun h_fun, Hfun H_fun, Hfun Hea_fun, double *in_z, double *in_R, double *in_ea, double MAHA_THRESHOLD) {
  typedef Eigen::Matrix<double, ZDIM, ZDIM, Eigen::RowMajor> ZZM;
  typedef Eigen::Matrix<double, ZDIM, DIM, Eigen::RowMajor> ZDM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, EDIM, Eigen::RowMajor> XEM;
  //typedef Eigen::Matrix<double, EDIM, ZDIM, Eigen::RowMajor> EZM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, 1> X1M;
  typedef Eigen::Matrix<double, Eigen::Dynamic, Eigen::Dynamic, Eigen::RowMajor> XXM;

  double in_hx[ZDIM] = {0};
  double in_H[ZDIM * DIM] = {0};
  double in_H_mod[EDIM * DIM] = {0};
  double delta_x[EDIM] = {0};
  double x_new[DIM] = {0};


  // state x, P
  Eigen::Matrix<double, ZDIM, 1> z(in_z);
  EEM P(in_P);
  ZZM pre_R(in_R);

  // functions from sympy
  h_fun(in_x, in_ea, in_hx);
  H_fun(in_x, in_ea, in_H);
  ZDM pre_H(in_H);

  // get y (y = z - hx)
  Eigen::Matrix<double, ZDIM, 1> pre_y(in_hx); pre_y = z - pre_y;
  X1M y; XXM H; XXM R;
  if (Hea_fun){
    typedef Eigen::Matrix<double, ZDIM, EADIM, Eigen::RowMajor> ZAM;
    double in_Hea[ZDIM * EADIM] = {0};
    Hea_fun(in_x, in_ea, in_Hea);
    ZAM Hea(in_Hea);
    XXM A = Hea.transpose().fullPivLu().kernel();


    y = A.transpose() * pre_y;
    H = A.transpose() * pre_H;
    R = A.transpose() * pre_R * A;
  } else {
    y = pre_y;
    H = pre_H;
    R = pre_R;
  }
  // get modified H
  H_mod_fun(in_x, in_H_mod);
  DEM H_mod(in_H_mod);
  XEM H_err = H * H_mod;

  // Do mahalobis distance test
  if (MAHA_TEST){
    XXM a = (H_err * P * H_err.transpose() + R).inverse();
    double maha_dist = y.transpose() * a * y;
    if (maha_dist > MAHA_THRESHOLD){
      R = 1.0e16 * R;
    }
  }

  // Outlier resilient weighting
  double weight = 1;//(1.5)/(1 + y.squaredNorm()/R.sum());

  // kalman gains and I_KH
  XXM S = ((H_err * P) * H_err.transpose()) + R/weight;
  XEM KT = S.fullPivLu().solve(H_err * P.transpose());
  //EZM K = KT.transpose(); TODO: WHY DOES THIS NOT COMPILE?
  //EZM K = S.fullPivLu().solve(H_err * P.transpose()).transpose();
  //std::cout << "Here is the matrix rot:\n" << K << std::endl;
  EEM I_KH = Eigen::Matrix<double, EDIM, EDIM>::Identity() - (KT.transpose() * H_err);

  // update state by injecting dx
  Eigen::Matrix<double, EDIM, 1> dx(delta_x);
  dx  = (KT.transpose() * y);
  memcpy(delta_x, dx.data(), EDIM * sizeof(double));
  err_fun(in_x, delta_x, x_new);
  Eigen::Matrix<double, DIM, 1> x(x_new);

  // update cov
  P = ((I_KH * P) * I_KH.transpose()) + ((KT.transpose() * R) * KT);

  // copy out state
  memcpy(in_x, x.data(), DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
  memcpy(in_z, y.data(), y.rows() * sizeof(double));
}




}
extern "C" {

void live_update_4(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_4, H_4, NULL, in_z, in_R, in_ea, MAHA_THRESH_4);
}
void live_update_9(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_9, H_9, NULL, in_z, in_R, in_ea, MAHA_THRESH_9);
}
void live_update_10(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_10, H_10, NULL, in_z, in_R, in_ea, MAHA_THRESH_10);
}
void live_update_12(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_12, H_12, NULL, in_z, in_R, in_ea, MAHA_THRESH_12);
}
void live_update_35(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_35, H_35, NULL, in_z, in_R, in_ea, MAHA_THRESH_35);
}
void live_update_32(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<4, 3, 0>(in_x, in_P, h_32, H_32, NULL, in_z, in_R, in_ea, MAHA_THRESH_32);
}
void live_update_13(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_13, H_13, NULL, in_z, in_R, in_ea, MAHA_THRESH_13);
}
void live_update_14(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_14, H_14, NULL, in_z, in_R, in_ea, MAHA_THRESH_14);
}
void live_update_33(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_33, H_33, NULL, in_z, in_R, in_ea, MAHA_THRESH_33);
}
void live_H(double *in_vec, double *out_8340534243464139896) {
  H(in_vec, out_8340534243464139896);
}
void live_err_fun(double *nom_x, double *delta_x, double *out_8008953026005314721) {
  err_fun(nom_x, delta_x, out_8008953026005314721);
}
void live_inv_err_fun(double *nom_x, double *true_x, double *out_2383024867135933197) {
  inv_err_fun(nom_x, true_x, out_2383024867135933197);
}
void live_H_mod_fun(double *state, double *out_2850129904381056170) {
  H_mod_fun(state, out_2850129904381056170);
}
void live_f_fun(double *state, double dt, double *out_2294296331146297512) {
  f_fun(state,  dt, out_2294296331146297512);
}
void live_F_fun(double *state, double dt, double *out_8290378044132849115) {
  F_fun(state,  dt, out_8290378044132849115);
}
void live_h_4(double *state, double *unused, double *out_4812944236424705177) {
  h_4(state, unused, out_4812944236424705177);
}
void live_H_4(double *state, double *unused, double *out_5057437881567758000) {
  H_4(state, unused, out_5057437881567758000);
}
void live_h_9(double *state, double *unused, double *out_8950155143033091025) {
  h_9(state, unused, out_8950155143033091025);
}
void live_H_9(double *state, double *unused, double *out_2229781053696689470) {
  H_9(state, unused, out_2229781053696689470);
}
void live_h_10(double *state, double *unused, double *out_2460042095247618240) {
  h_10(state, unused, out_2460042095247618240);
}
void live_H_10(double *state, double *unused, double *out_6080707102592681255) {
  H_10(state, unused, out_6080707102592681255);
}
void live_h_12(double *state, double *unused, double *out_5663410019399840154) {
  h_12(state, unused, out_5663410019399840154);
}
void live_H_12(double *state, double *unused, double *out_37981473535796205) {
  H_12(state, unused, out_37981473535796205);
}
void live_h_35(double *state, double *unused, double *out_1220516817591347346) {
  h_35(state, unused, out_1220516817591347346);
}
void live_H_35(double *state, double *unused, double *out_1690775824195150624) {
  H_35(state, unused, out_1690775824195150624);
}
void live_h_32(double *state, double *unused, double *out_3620815180093305856) {
  h_32(state, unused, out_3620815180093305856);
}
void live_H_32(double *state, double *unused, double *out_4110528548012461934) {
  H_32(state, unused, out_4110528548012461934);
}
void live_h_13(double *state, double *unused, double *out_7720506932312268250) {
  h_13(state, unused, out_7720506932312268250);
}
void live_H_13(double *state, double *unused, double *out_4318759351138565016) {
  H_13(state, unused, out_4318759351138565016);
}
void live_h_14(double *state, double *unused, double *out_8950155143033091025) {
  h_14(state, unused, out_8950155143033091025);
}
void live_H_14(double *state, double *unused, double *out_2229781053696689470) {
  H_14(state, unused, out_2229781053696689470);
}
void live_h_33(double *state, double *unused, double *out_6375727210651586338) {
  h_33(state, unused, out_6375727210651586338);
}
void live_H_33(double *state, double *unused, double *out_1459781180443706980) {
  H_33(state, unused, out_1459781180443706980);
}
void live_predict(double *in_x, double *in_P, double *in_Q, double dt) {
  predict(in_x, in_P, in_Q, dt);
}
}

const EKF live = {
  .name = "live",
  .kinds = { 4, 9, 10, 12, 35, 32, 13, 14, 33 },
  .feature_kinds = {  },
  .f_fun = live_f_fun,
  .F_fun = live_F_fun,
  .err_fun = live_err_fun,
  .inv_err_fun = live_inv_err_fun,
  .H_mod_fun = live_H_mod_fun,
  .predict = live_predict,
  .hs = {
    { 4, live_h_4 },
    { 9, live_h_9 },
    { 10, live_h_10 },
    { 12, live_h_12 },
    { 35, live_h_35 },
    { 32, live_h_32 },
    { 13, live_h_13 },
    { 14, live_h_14 },
    { 33, live_h_33 },
  },
  .Hs = {
    { 4, live_H_4 },
    { 9, live_H_9 },
    { 10, live_H_10 },
    { 12, live_H_12 },
    { 35, live_H_35 },
    { 32, live_H_32 },
    { 13, live_H_13 },
    { 14, live_H_14 },
    { 33, live_H_33 },
  },
  .updates = {
    { 4, live_update_4 },
    { 9, live_update_9 },
    { 10, live_update_10 },
    { 12, live_update_12 },
    { 35, live_update_35 },
    { 32, live_update_32 },
    { 13, live_update_13 },
    { 14, live_update_14 },
    { 33, live_update_33 },
  },
  .Hes = {
  },
  .sets = {
  },
  .extra_routines = {
    { "H", live_H },
  },
};

ekf_lib_init(live)
