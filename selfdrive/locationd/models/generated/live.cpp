#include "live.h"

namespace {
#define DIM 22
#define EDIM 21
#define MEDIM 21
typedef void (*Hfun)(double *, double *, double *);
const static double MAHA_THRESH_4 = 7.814727903251177;
const static double MAHA_THRESH_9 = 7.814727903251177;
const static double MAHA_THRESH_10 = 7.814727903251177;
const static double MAHA_THRESH_12 = 7.814727903251177;
const static double MAHA_THRESH_35 = 7.814727903251177;
const static double MAHA_THRESH_32 = 9.487729036781154;
const static double MAHA_THRESH_13 = 7.814727903251177;
const static double MAHA_THRESH_14 = 7.814727903251177;
const static double MAHA_THRESH_33 = 7.814727903251177;

/******************************************************************************
 *                       Code generated with SymPy 1.12                       *
 *                                                                            *
 *              See http://www.sympy.org/ for more information.               *
 *                                                                            *
 *                         This file is part of 'ekf'                         *
 ******************************************************************************/
void H(double *in_vec, double *out_3682820859985804297) {
   out_3682820859985804297[0] = 0;
   out_3682820859985804297[1] = -sin(in_vec[1])*sin(in_vec[2])*in_vec[4] - sin(in_vec[1])*cos(in_vec[2])*in_vec[3] - cos(in_vec[1])*in_vec[5];
   out_3682820859985804297[2] = -sin(in_vec[2])*cos(in_vec[1])*in_vec[3] + cos(in_vec[1])*cos(in_vec[2])*in_vec[4];
   out_3682820859985804297[3] = cos(in_vec[1])*cos(in_vec[2]);
   out_3682820859985804297[4] = sin(in_vec[2])*cos(in_vec[1]);
   out_3682820859985804297[5] = -sin(in_vec[1]);
   out_3682820859985804297[6] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (-sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_3682820859985804297[7] = -sin(in_vec[0])*sin(in_vec[1])*in_vec[5] + sin(in_vec[0])*sin(in_vec[2])*cos(in_vec[1])*in_vec[4] + sin(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_3682820859985804297[8] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]))*in_vec[4];
   out_3682820859985804297[9] = sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]);
   out_3682820859985804297[10] = sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) + cos(in_vec[0])*cos(in_vec[2]);
   out_3682820859985804297[11] = sin(in_vec[0])*cos(in_vec[1]);
   out_3682820859985804297[12] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (-sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) + sin(in_vec[2])*cos(in_vec[0]))*in_vec[3] - sin(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_3682820859985804297[13] = -sin(in_vec[1])*cos(in_vec[0])*in_vec[5] + sin(in_vec[2])*cos(in_vec[0])*cos(in_vec[1])*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_3682820859985804297[14] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (sin(in_vec[0])*cos(in_vec[2]) - sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[3];
   out_3682820859985804297[15] = sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]);
   out_3682820859985804297[16] = -sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]);
   out_3682820859985804297[17] = cos(in_vec[0])*cos(in_vec[1]);
}
void err_fun(double *nom_x, double *delta_x, double *out_4963697455822286570) {
   out_4963697455822286570[0] = delta_x[0] + nom_x[0];
   out_4963697455822286570[1] = delta_x[1] + nom_x[1];
   out_4963697455822286570[2] = delta_x[2] + nom_x[2];
   out_4963697455822286570[3] = -0.5*delta_x[3]*nom_x[4] - 0.5*delta_x[4]*nom_x[5] - 0.5*delta_x[5]*nom_x[6] + 1.0*nom_x[3];
   out_4963697455822286570[4] = 0.5*delta_x[3]*nom_x[3] + 0.5*delta_x[4]*nom_x[6] - 0.5*delta_x[5]*nom_x[5] + 1.0*nom_x[4];
   out_4963697455822286570[5] = -0.5*delta_x[3]*nom_x[6] + 0.5*delta_x[4]*nom_x[3] + 0.5*delta_x[5]*nom_x[4] + 1.0*nom_x[5];
   out_4963697455822286570[6] = 0.5*delta_x[3]*nom_x[5] - 0.5*delta_x[4]*nom_x[4] + 0.5*delta_x[5]*nom_x[3] + 1.0*nom_x[6];
   out_4963697455822286570[7] = delta_x[6] + nom_x[7];
   out_4963697455822286570[8] = delta_x[7] + nom_x[8];
   out_4963697455822286570[9] = delta_x[8] + nom_x[9];
   out_4963697455822286570[10] = delta_x[9] + nom_x[10];
   out_4963697455822286570[11] = delta_x[10] + nom_x[11];
   out_4963697455822286570[12] = delta_x[11] + nom_x[12];
   out_4963697455822286570[13] = delta_x[12] + nom_x[13];
   out_4963697455822286570[14] = delta_x[13] + nom_x[14];
   out_4963697455822286570[15] = delta_x[14] + nom_x[15];
   out_4963697455822286570[16] = delta_x[15] + nom_x[16];
   out_4963697455822286570[17] = delta_x[16] + nom_x[17];
   out_4963697455822286570[18] = delta_x[17] + nom_x[18];
   out_4963697455822286570[19] = delta_x[18] + nom_x[19];
   out_4963697455822286570[20] = delta_x[19] + nom_x[20];
   out_4963697455822286570[21] = delta_x[20] + nom_x[21];
}
void inv_err_fun(double *nom_x, double *true_x, double *out_2531566804332850063) {
   out_2531566804332850063[0] = -nom_x[0] + true_x[0];
   out_2531566804332850063[1] = -nom_x[1] + true_x[1];
   out_2531566804332850063[2] = -nom_x[2] + true_x[2];
   out_2531566804332850063[3] = 2*nom_x[3]*true_x[4] - 2*nom_x[4]*true_x[3] + 2*nom_x[5]*true_x[6] - 2*nom_x[6]*true_x[5];
   out_2531566804332850063[4] = 2*nom_x[3]*true_x[5] - 2*nom_x[4]*true_x[6] - 2*nom_x[5]*true_x[3] + 2*nom_x[6]*true_x[4];
   out_2531566804332850063[5] = 2*nom_x[3]*true_x[6] + 2*nom_x[4]*true_x[5] - 2*nom_x[5]*true_x[4] - 2*nom_x[6]*true_x[3];
   out_2531566804332850063[6] = -nom_x[7] + true_x[7];
   out_2531566804332850063[7] = -nom_x[8] + true_x[8];
   out_2531566804332850063[8] = -nom_x[9] + true_x[9];
   out_2531566804332850063[9] = -nom_x[10] + true_x[10];
   out_2531566804332850063[10] = -nom_x[11] + true_x[11];
   out_2531566804332850063[11] = -nom_x[12] + true_x[12];
   out_2531566804332850063[12] = -nom_x[13] + true_x[13];
   out_2531566804332850063[13] = -nom_x[14] + true_x[14];
   out_2531566804332850063[14] = -nom_x[15] + true_x[15];
   out_2531566804332850063[15] = -nom_x[16] + true_x[16];
   out_2531566804332850063[16] = -nom_x[17] + true_x[17];
   out_2531566804332850063[17] = -nom_x[18] + true_x[18];
   out_2531566804332850063[18] = -nom_x[19] + true_x[19];
   out_2531566804332850063[19] = -nom_x[20] + true_x[20];
   out_2531566804332850063[20] = -nom_x[21] + true_x[21];
}
void H_mod_fun(double *state, double *out_1050538994252760791) {
   out_1050538994252760791[0] = 1.0;
   out_1050538994252760791[1] = 0;
   out_1050538994252760791[2] = 0;
   out_1050538994252760791[3] = 0;
   out_1050538994252760791[4] = 0;
   out_1050538994252760791[5] = 0;
   out_1050538994252760791[6] = 0;
   out_1050538994252760791[7] = 0;
   out_1050538994252760791[8] = 0;
   out_1050538994252760791[9] = 0;
   out_1050538994252760791[10] = 0;
   out_1050538994252760791[11] = 0;
   out_1050538994252760791[12] = 0;
   out_1050538994252760791[13] = 0;
   out_1050538994252760791[14] = 0;
   out_1050538994252760791[15] = 0;
   out_1050538994252760791[16] = 0;
   out_1050538994252760791[17] = 0;
   out_1050538994252760791[18] = 0;
   out_1050538994252760791[19] = 0;
   out_1050538994252760791[20] = 0;
   out_1050538994252760791[21] = 0;
   out_1050538994252760791[22] = 1.0;
   out_1050538994252760791[23] = 0;
   out_1050538994252760791[24] = 0;
   out_1050538994252760791[25] = 0;
   out_1050538994252760791[26] = 0;
   out_1050538994252760791[27] = 0;
   out_1050538994252760791[28] = 0;
   out_1050538994252760791[29] = 0;
   out_1050538994252760791[30] = 0;
   out_1050538994252760791[31] = 0;
   out_1050538994252760791[32] = 0;
   out_1050538994252760791[33] = 0;
   out_1050538994252760791[34] = 0;
   out_1050538994252760791[35] = 0;
   out_1050538994252760791[36] = 0;
   out_1050538994252760791[37] = 0;
   out_1050538994252760791[38] = 0;
   out_1050538994252760791[39] = 0;
   out_1050538994252760791[40] = 0;
   out_1050538994252760791[41] = 0;
   out_1050538994252760791[42] = 0;
   out_1050538994252760791[43] = 0;
   out_1050538994252760791[44] = 1.0;
   out_1050538994252760791[45] = 0;
   out_1050538994252760791[46] = 0;
   out_1050538994252760791[47] = 0;
   out_1050538994252760791[48] = 0;
   out_1050538994252760791[49] = 0;
   out_1050538994252760791[50] = 0;
   out_1050538994252760791[51] = 0;
   out_1050538994252760791[52] = 0;
   out_1050538994252760791[53] = 0;
   out_1050538994252760791[54] = 0;
   out_1050538994252760791[55] = 0;
   out_1050538994252760791[56] = 0;
   out_1050538994252760791[57] = 0;
   out_1050538994252760791[58] = 0;
   out_1050538994252760791[59] = 0;
   out_1050538994252760791[60] = 0;
   out_1050538994252760791[61] = 0;
   out_1050538994252760791[62] = 0;
   out_1050538994252760791[63] = 0;
   out_1050538994252760791[64] = 0;
   out_1050538994252760791[65] = 0;
   out_1050538994252760791[66] = -0.5*state[4];
   out_1050538994252760791[67] = -0.5*state[5];
   out_1050538994252760791[68] = -0.5*state[6];
   out_1050538994252760791[69] = 0;
   out_1050538994252760791[70] = 0;
   out_1050538994252760791[71] = 0;
   out_1050538994252760791[72] = 0;
   out_1050538994252760791[73] = 0;
   out_1050538994252760791[74] = 0;
   out_1050538994252760791[75] = 0;
   out_1050538994252760791[76] = 0;
   out_1050538994252760791[77] = 0;
   out_1050538994252760791[78] = 0;
   out_1050538994252760791[79] = 0;
   out_1050538994252760791[80] = 0;
   out_1050538994252760791[81] = 0;
   out_1050538994252760791[82] = 0;
   out_1050538994252760791[83] = 0;
   out_1050538994252760791[84] = 0;
   out_1050538994252760791[85] = 0;
   out_1050538994252760791[86] = 0;
   out_1050538994252760791[87] = 0.5*state[3];
   out_1050538994252760791[88] = 0.5*state[6];
   out_1050538994252760791[89] = -0.5*state[5];
   out_1050538994252760791[90] = 0;
   out_1050538994252760791[91] = 0;
   out_1050538994252760791[92] = 0;
   out_1050538994252760791[93] = 0;
   out_1050538994252760791[94] = 0;
   out_1050538994252760791[95] = 0;
   out_1050538994252760791[96] = 0;
   out_1050538994252760791[97] = 0;
   out_1050538994252760791[98] = 0;
   out_1050538994252760791[99] = 0;
   out_1050538994252760791[100] = 0;
   out_1050538994252760791[101] = 0;
   out_1050538994252760791[102] = 0;
   out_1050538994252760791[103] = 0;
   out_1050538994252760791[104] = 0;
   out_1050538994252760791[105] = 0;
   out_1050538994252760791[106] = 0;
   out_1050538994252760791[107] = 0;
   out_1050538994252760791[108] = -0.5*state[6];
   out_1050538994252760791[109] = 0.5*state[3];
   out_1050538994252760791[110] = 0.5*state[4];
   out_1050538994252760791[111] = 0;
   out_1050538994252760791[112] = 0;
   out_1050538994252760791[113] = 0;
   out_1050538994252760791[114] = 0;
   out_1050538994252760791[115] = 0;
   out_1050538994252760791[116] = 0;
   out_1050538994252760791[117] = 0;
   out_1050538994252760791[118] = 0;
   out_1050538994252760791[119] = 0;
   out_1050538994252760791[120] = 0;
   out_1050538994252760791[121] = 0;
   out_1050538994252760791[122] = 0;
   out_1050538994252760791[123] = 0;
   out_1050538994252760791[124] = 0;
   out_1050538994252760791[125] = 0;
   out_1050538994252760791[126] = 0;
   out_1050538994252760791[127] = 0;
   out_1050538994252760791[128] = 0;
   out_1050538994252760791[129] = 0.5*state[5];
   out_1050538994252760791[130] = -0.5*state[4];
   out_1050538994252760791[131] = 0.5*state[3];
   out_1050538994252760791[132] = 0;
   out_1050538994252760791[133] = 0;
   out_1050538994252760791[134] = 0;
   out_1050538994252760791[135] = 0;
   out_1050538994252760791[136] = 0;
   out_1050538994252760791[137] = 0;
   out_1050538994252760791[138] = 0;
   out_1050538994252760791[139] = 0;
   out_1050538994252760791[140] = 0;
   out_1050538994252760791[141] = 0;
   out_1050538994252760791[142] = 0;
   out_1050538994252760791[143] = 0;
   out_1050538994252760791[144] = 0;
   out_1050538994252760791[145] = 0;
   out_1050538994252760791[146] = 0;
   out_1050538994252760791[147] = 0;
   out_1050538994252760791[148] = 0;
   out_1050538994252760791[149] = 0;
   out_1050538994252760791[150] = 0;
   out_1050538994252760791[151] = 0;
   out_1050538994252760791[152] = 0;
   out_1050538994252760791[153] = 1.0;
   out_1050538994252760791[154] = 0;
   out_1050538994252760791[155] = 0;
   out_1050538994252760791[156] = 0;
   out_1050538994252760791[157] = 0;
   out_1050538994252760791[158] = 0;
   out_1050538994252760791[159] = 0;
   out_1050538994252760791[160] = 0;
   out_1050538994252760791[161] = 0;
   out_1050538994252760791[162] = 0;
   out_1050538994252760791[163] = 0;
   out_1050538994252760791[164] = 0;
   out_1050538994252760791[165] = 0;
   out_1050538994252760791[166] = 0;
   out_1050538994252760791[167] = 0;
   out_1050538994252760791[168] = 0;
   out_1050538994252760791[169] = 0;
   out_1050538994252760791[170] = 0;
   out_1050538994252760791[171] = 0;
   out_1050538994252760791[172] = 0;
   out_1050538994252760791[173] = 0;
   out_1050538994252760791[174] = 0;
   out_1050538994252760791[175] = 1.0;
   out_1050538994252760791[176] = 0;
   out_1050538994252760791[177] = 0;
   out_1050538994252760791[178] = 0;
   out_1050538994252760791[179] = 0;
   out_1050538994252760791[180] = 0;
   out_1050538994252760791[181] = 0;
   out_1050538994252760791[182] = 0;
   out_1050538994252760791[183] = 0;
   out_1050538994252760791[184] = 0;
   out_1050538994252760791[185] = 0;
   out_1050538994252760791[186] = 0;
   out_1050538994252760791[187] = 0;
   out_1050538994252760791[188] = 0;
   out_1050538994252760791[189] = 0;
   out_1050538994252760791[190] = 0;
   out_1050538994252760791[191] = 0;
   out_1050538994252760791[192] = 0;
   out_1050538994252760791[193] = 0;
   out_1050538994252760791[194] = 0;
   out_1050538994252760791[195] = 0;
   out_1050538994252760791[196] = 0;
   out_1050538994252760791[197] = 1.0;
   out_1050538994252760791[198] = 0;
   out_1050538994252760791[199] = 0;
   out_1050538994252760791[200] = 0;
   out_1050538994252760791[201] = 0;
   out_1050538994252760791[202] = 0;
   out_1050538994252760791[203] = 0;
   out_1050538994252760791[204] = 0;
   out_1050538994252760791[205] = 0;
   out_1050538994252760791[206] = 0;
   out_1050538994252760791[207] = 0;
   out_1050538994252760791[208] = 0;
   out_1050538994252760791[209] = 0;
   out_1050538994252760791[210] = 0;
   out_1050538994252760791[211] = 0;
   out_1050538994252760791[212] = 0;
   out_1050538994252760791[213] = 0;
   out_1050538994252760791[214] = 0;
   out_1050538994252760791[215] = 0;
   out_1050538994252760791[216] = 0;
   out_1050538994252760791[217] = 0;
   out_1050538994252760791[218] = 0;
   out_1050538994252760791[219] = 1.0;
   out_1050538994252760791[220] = 0;
   out_1050538994252760791[221] = 0;
   out_1050538994252760791[222] = 0;
   out_1050538994252760791[223] = 0;
   out_1050538994252760791[224] = 0;
   out_1050538994252760791[225] = 0;
   out_1050538994252760791[226] = 0;
   out_1050538994252760791[227] = 0;
   out_1050538994252760791[228] = 0;
   out_1050538994252760791[229] = 0;
   out_1050538994252760791[230] = 0;
   out_1050538994252760791[231] = 0;
   out_1050538994252760791[232] = 0;
   out_1050538994252760791[233] = 0;
   out_1050538994252760791[234] = 0;
   out_1050538994252760791[235] = 0;
   out_1050538994252760791[236] = 0;
   out_1050538994252760791[237] = 0;
   out_1050538994252760791[238] = 0;
   out_1050538994252760791[239] = 0;
   out_1050538994252760791[240] = 0;
   out_1050538994252760791[241] = 1.0;
   out_1050538994252760791[242] = 0;
   out_1050538994252760791[243] = 0;
   out_1050538994252760791[244] = 0;
   out_1050538994252760791[245] = 0;
   out_1050538994252760791[246] = 0;
   out_1050538994252760791[247] = 0;
   out_1050538994252760791[248] = 0;
   out_1050538994252760791[249] = 0;
   out_1050538994252760791[250] = 0;
   out_1050538994252760791[251] = 0;
   out_1050538994252760791[252] = 0;
   out_1050538994252760791[253] = 0;
   out_1050538994252760791[254] = 0;
   out_1050538994252760791[255] = 0;
   out_1050538994252760791[256] = 0;
   out_1050538994252760791[257] = 0;
   out_1050538994252760791[258] = 0;
   out_1050538994252760791[259] = 0;
   out_1050538994252760791[260] = 0;
   out_1050538994252760791[261] = 0;
   out_1050538994252760791[262] = 0;
   out_1050538994252760791[263] = 1.0;
   out_1050538994252760791[264] = 0;
   out_1050538994252760791[265] = 0;
   out_1050538994252760791[266] = 0;
   out_1050538994252760791[267] = 0;
   out_1050538994252760791[268] = 0;
   out_1050538994252760791[269] = 0;
   out_1050538994252760791[270] = 0;
   out_1050538994252760791[271] = 0;
   out_1050538994252760791[272] = 0;
   out_1050538994252760791[273] = 0;
   out_1050538994252760791[274] = 0;
   out_1050538994252760791[275] = 0;
   out_1050538994252760791[276] = 0;
   out_1050538994252760791[277] = 0;
   out_1050538994252760791[278] = 0;
   out_1050538994252760791[279] = 0;
   out_1050538994252760791[280] = 0;
   out_1050538994252760791[281] = 0;
   out_1050538994252760791[282] = 0;
   out_1050538994252760791[283] = 0;
   out_1050538994252760791[284] = 0;
   out_1050538994252760791[285] = 1.0;
   out_1050538994252760791[286] = 0;
   out_1050538994252760791[287] = 0;
   out_1050538994252760791[288] = 0;
   out_1050538994252760791[289] = 0;
   out_1050538994252760791[290] = 0;
   out_1050538994252760791[291] = 0;
   out_1050538994252760791[292] = 0;
   out_1050538994252760791[293] = 0;
   out_1050538994252760791[294] = 0;
   out_1050538994252760791[295] = 0;
   out_1050538994252760791[296] = 0;
   out_1050538994252760791[297] = 0;
   out_1050538994252760791[298] = 0;
   out_1050538994252760791[299] = 0;
   out_1050538994252760791[300] = 0;
   out_1050538994252760791[301] = 0;
   out_1050538994252760791[302] = 0;
   out_1050538994252760791[303] = 0;
   out_1050538994252760791[304] = 0;
   out_1050538994252760791[305] = 0;
   out_1050538994252760791[306] = 0;
   out_1050538994252760791[307] = 1.0;
   out_1050538994252760791[308] = 0;
   out_1050538994252760791[309] = 0;
   out_1050538994252760791[310] = 0;
   out_1050538994252760791[311] = 0;
   out_1050538994252760791[312] = 0;
   out_1050538994252760791[313] = 0;
   out_1050538994252760791[314] = 0;
   out_1050538994252760791[315] = 0;
   out_1050538994252760791[316] = 0;
   out_1050538994252760791[317] = 0;
   out_1050538994252760791[318] = 0;
   out_1050538994252760791[319] = 0;
   out_1050538994252760791[320] = 0;
   out_1050538994252760791[321] = 0;
   out_1050538994252760791[322] = 0;
   out_1050538994252760791[323] = 0;
   out_1050538994252760791[324] = 0;
   out_1050538994252760791[325] = 0;
   out_1050538994252760791[326] = 0;
   out_1050538994252760791[327] = 0;
   out_1050538994252760791[328] = 0;
   out_1050538994252760791[329] = 1.0;
   out_1050538994252760791[330] = 0;
   out_1050538994252760791[331] = 0;
   out_1050538994252760791[332] = 0;
   out_1050538994252760791[333] = 0;
   out_1050538994252760791[334] = 0;
   out_1050538994252760791[335] = 0;
   out_1050538994252760791[336] = 0;
   out_1050538994252760791[337] = 0;
   out_1050538994252760791[338] = 0;
   out_1050538994252760791[339] = 0;
   out_1050538994252760791[340] = 0;
   out_1050538994252760791[341] = 0;
   out_1050538994252760791[342] = 0;
   out_1050538994252760791[343] = 0;
   out_1050538994252760791[344] = 0;
   out_1050538994252760791[345] = 0;
   out_1050538994252760791[346] = 0;
   out_1050538994252760791[347] = 0;
   out_1050538994252760791[348] = 0;
   out_1050538994252760791[349] = 0;
   out_1050538994252760791[350] = 0;
   out_1050538994252760791[351] = 1.0;
   out_1050538994252760791[352] = 0;
   out_1050538994252760791[353] = 0;
   out_1050538994252760791[354] = 0;
   out_1050538994252760791[355] = 0;
   out_1050538994252760791[356] = 0;
   out_1050538994252760791[357] = 0;
   out_1050538994252760791[358] = 0;
   out_1050538994252760791[359] = 0;
   out_1050538994252760791[360] = 0;
   out_1050538994252760791[361] = 0;
   out_1050538994252760791[362] = 0;
   out_1050538994252760791[363] = 0;
   out_1050538994252760791[364] = 0;
   out_1050538994252760791[365] = 0;
   out_1050538994252760791[366] = 0;
   out_1050538994252760791[367] = 0;
   out_1050538994252760791[368] = 0;
   out_1050538994252760791[369] = 0;
   out_1050538994252760791[370] = 0;
   out_1050538994252760791[371] = 0;
   out_1050538994252760791[372] = 0;
   out_1050538994252760791[373] = 1.0;
   out_1050538994252760791[374] = 0;
   out_1050538994252760791[375] = 0;
   out_1050538994252760791[376] = 0;
   out_1050538994252760791[377] = 0;
   out_1050538994252760791[378] = 0;
   out_1050538994252760791[379] = 0;
   out_1050538994252760791[380] = 0;
   out_1050538994252760791[381] = 0;
   out_1050538994252760791[382] = 0;
   out_1050538994252760791[383] = 0;
   out_1050538994252760791[384] = 0;
   out_1050538994252760791[385] = 0;
   out_1050538994252760791[386] = 0;
   out_1050538994252760791[387] = 0;
   out_1050538994252760791[388] = 0;
   out_1050538994252760791[389] = 0;
   out_1050538994252760791[390] = 0;
   out_1050538994252760791[391] = 0;
   out_1050538994252760791[392] = 0;
   out_1050538994252760791[393] = 0;
   out_1050538994252760791[394] = 0;
   out_1050538994252760791[395] = 1.0;
   out_1050538994252760791[396] = 0;
   out_1050538994252760791[397] = 0;
   out_1050538994252760791[398] = 0;
   out_1050538994252760791[399] = 0;
   out_1050538994252760791[400] = 0;
   out_1050538994252760791[401] = 0;
   out_1050538994252760791[402] = 0;
   out_1050538994252760791[403] = 0;
   out_1050538994252760791[404] = 0;
   out_1050538994252760791[405] = 0;
   out_1050538994252760791[406] = 0;
   out_1050538994252760791[407] = 0;
   out_1050538994252760791[408] = 0;
   out_1050538994252760791[409] = 0;
   out_1050538994252760791[410] = 0;
   out_1050538994252760791[411] = 0;
   out_1050538994252760791[412] = 0;
   out_1050538994252760791[413] = 0;
   out_1050538994252760791[414] = 0;
   out_1050538994252760791[415] = 0;
   out_1050538994252760791[416] = 0;
   out_1050538994252760791[417] = 1.0;
   out_1050538994252760791[418] = 0;
   out_1050538994252760791[419] = 0;
   out_1050538994252760791[420] = 0;
   out_1050538994252760791[421] = 0;
   out_1050538994252760791[422] = 0;
   out_1050538994252760791[423] = 0;
   out_1050538994252760791[424] = 0;
   out_1050538994252760791[425] = 0;
   out_1050538994252760791[426] = 0;
   out_1050538994252760791[427] = 0;
   out_1050538994252760791[428] = 0;
   out_1050538994252760791[429] = 0;
   out_1050538994252760791[430] = 0;
   out_1050538994252760791[431] = 0;
   out_1050538994252760791[432] = 0;
   out_1050538994252760791[433] = 0;
   out_1050538994252760791[434] = 0;
   out_1050538994252760791[435] = 0;
   out_1050538994252760791[436] = 0;
   out_1050538994252760791[437] = 0;
   out_1050538994252760791[438] = 0;
   out_1050538994252760791[439] = 1.0;
   out_1050538994252760791[440] = 0;
   out_1050538994252760791[441] = 0;
   out_1050538994252760791[442] = 0;
   out_1050538994252760791[443] = 0;
   out_1050538994252760791[444] = 0;
   out_1050538994252760791[445] = 0;
   out_1050538994252760791[446] = 0;
   out_1050538994252760791[447] = 0;
   out_1050538994252760791[448] = 0;
   out_1050538994252760791[449] = 0;
   out_1050538994252760791[450] = 0;
   out_1050538994252760791[451] = 0;
   out_1050538994252760791[452] = 0;
   out_1050538994252760791[453] = 0;
   out_1050538994252760791[454] = 0;
   out_1050538994252760791[455] = 0;
   out_1050538994252760791[456] = 0;
   out_1050538994252760791[457] = 0;
   out_1050538994252760791[458] = 0;
   out_1050538994252760791[459] = 0;
   out_1050538994252760791[460] = 0;
   out_1050538994252760791[461] = 1.0;
}
void f_fun(double *state, double dt, double *out_5651433866535677540) {
   out_5651433866535677540[0] = dt*state[7] + state[0];
   out_5651433866535677540[1] = dt*state[8] + state[1];
   out_5651433866535677540[2] = dt*state[9] + state[2];
   out_5651433866535677540[3] = dt*(-0.5*state[4]*state[10] - 0.5*state[5]*state[11] - 0.5*state[6]*state[12]) + state[3];
   out_5651433866535677540[4] = dt*(0.5*state[3]*state[10] + 0.5*state[5]*state[12] - 0.5*state[6]*state[11]) + state[4];
   out_5651433866535677540[5] = dt*(0.5*state[3]*state[11] - 0.5*state[4]*state[12] + 0.5*state[6]*state[10]) + state[5];
   out_5651433866535677540[6] = dt*(0.5*state[3]*state[12] + 0.5*state[4]*state[11] - 0.5*state[5]*state[10]) + state[6];
   out_5651433866535677540[7] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]) + state[7];
   out_5651433866535677540[8] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]) + state[8];
   out_5651433866535677540[9] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]) + state[9];
   out_5651433866535677540[10] = state[10];
   out_5651433866535677540[11] = state[11];
   out_5651433866535677540[12] = state[12];
   out_5651433866535677540[13] = state[13];
   out_5651433866535677540[14] = state[14];
   out_5651433866535677540[15] = state[15];
   out_5651433866535677540[16] = state[16];
   out_5651433866535677540[17] = state[17];
   out_5651433866535677540[18] = state[18];
   out_5651433866535677540[19] = state[19];
   out_5651433866535677540[20] = state[20];
   out_5651433866535677540[21] = state[21];
}
void F_fun(double *state, double dt, double *out_8376804710265734583) {
   out_8376804710265734583[0] = 1;
   out_8376804710265734583[1] = 0;
   out_8376804710265734583[2] = 0;
   out_8376804710265734583[3] = 0;
   out_8376804710265734583[4] = 0;
   out_8376804710265734583[5] = 0;
   out_8376804710265734583[6] = dt;
   out_8376804710265734583[7] = 0;
   out_8376804710265734583[8] = 0;
   out_8376804710265734583[9] = 0;
   out_8376804710265734583[10] = 0;
   out_8376804710265734583[11] = 0;
   out_8376804710265734583[12] = 0;
   out_8376804710265734583[13] = 0;
   out_8376804710265734583[14] = 0;
   out_8376804710265734583[15] = 0;
   out_8376804710265734583[16] = 0;
   out_8376804710265734583[17] = 0;
   out_8376804710265734583[18] = 0;
   out_8376804710265734583[19] = 0;
   out_8376804710265734583[20] = 0;
   out_8376804710265734583[21] = 0;
   out_8376804710265734583[22] = 1;
   out_8376804710265734583[23] = 0;
   out_8376804710265734583[24] = 0;
   out_8376804710265734583[25] = 0;
   out_8376804710265734583[26] = 0;
   out_8376804710265734583[27] = 0;
   out_8376804710265734583[28] = dt;
   out_8376804710265734583[29] = 0;
   out_8376804710265734583[30] = 0;
   out_8376804710265734583[31] = 0;
   out_8376804710265734583[32] = 0;
   out_8376804710265734583[33] = 0;
   out_8376804710265734583[34] = 0;
   out_8376804710265734583[35] = 0;
   out_8376804710265734583[36] = 0;
   out_8376804710265734583[37] = 0;
   out_8376804710265734583[38] = 0;
   out_8376804710265734583[39] = 0;
   out_8376804710265734583[40] = 0;
   out_8376804710265734583[41] = 0;
   out_8376804710265734583[42] = 0;
   out_8376804710265734583[43] = 0;
   out_8376804710265734583[44] = 1;
   out_8376804710265734583[45] = 0;
   out_8376804710265734583[46] = 0;
   out_8376804710265734583[47] = 0;
   out_8376804710265734583[48] = 0;
   out_8376804710265734583[49] = 0;
   out_8376804710265734583[50] = dt;
   out_8376804710265734583[51] = 0;
   out_8376804710265734583[52] = 0;
   out_8376804710265734583[53] = 0;
   out_8376804710265734583[54] = 0;
   out_8376804710265734583[55] = 0;
   out_8376804710265734583[56] = 0;
   out_8376804710265734583[57] = 0;
   out_8376804710265734583[58] = 0;
   out_8376804710265734583[59] = 0;
   out_8376804710265734583[60] = 0;
   out_8376804710265734583[61] = 0;
   out_8376804710265734583[62] = 0;
   out_8376804710265734583[63] = 0;
   out_8376804710265734583[64] = 0;
   out_8376804710265734583[65] = 0;
   out_8376804710265734583[66] = 1;
   out_8376804710265734583[67] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[11] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_8376804710265734583[68] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[12] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[10] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[11]);
   out_8376804710265734583[69] = 0;
   out_8376804710265734583[70] = 0;
   out_8376804710265734583[71] = 0;
   out_8376804710265734583[72] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_8376804710265734583[73] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_8376804710265734583[74] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_8376804710265734583[75] = 0;
   out_8376804710265734583[76] = 0;
   out_8376804710265734583[77] = 0;
   out_8376804710265734583[78] = 0;
   out_8376804710265734583[79] = 0;
   out_8376804710265734583[80] = 0;
   out_8376804710265734583[81] = 0;
   out_8376804710265734583[82] = 0;
   out_8376804710265734583[83] = 0;
   out_8376804710265734583[84] = 0;
   out_8376804710265734583[85] = 0;
   out_8376804710265734583[86] = 0;
   out_8376804710265734583[87] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[11] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_8376804710265734583[88] = 1;
   out_8376804710265734583[89] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[12] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[11] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[10]);
   out_8376804710265734583[90] = 0;
   out_8376804710265734583[91] = 0;
   out_8376804710265734583[92] = 0;
   out_8376804710265734583[93] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_8376804710265734583[94] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_8376804710265734583[95] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_8376804710265734583[96] = 0;
   out_8376804710265734583[97] = 0;
   out_8376804710265734583[98] = 0;
   out_8376804710265734583[99] = 0;
   out_8376804710265734583[100] = 0;
   out_8376804710265734583[101] = 0;
   out_8376804710265734583[102] = 0;
   out_8376804710265734583[103] = 0;
   out_8376804710265734583[104] = 0;
   out_8376804710265734583[105] = 0;
   out_8376804710265734583[106] = 0;
   out_8376804710265734583[107] = 0;
   out_8376804710265734583[108] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[12] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[10] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[11]);
   out_8376804710265734583[109] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[12] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[11] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[10]);
   out_8376804710265734583[110] = 1;
   out_8376804710265734583[111] = 0;
   out_8376804710265734583[112] = 0;
   out_8376804710265734583[113] = 0;
   out_8376804710265734583[114] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_8376804710265734583[115] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_8376804710265734583[116] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_8376804710265734583[117] = 0;
   out_8376804710265734583[118] = 0;
   out_8376804710265734583[119] = 0;
   out_8376804710265734583[120] = 0;
   out_8376804710265734583[121] = 0;
   out_8376804710265734583[122] = 0;
   out_8376804710265734583[123] = 0;
   out_8376804710265734583[124] = 0;
   out_8376804710265734583[125] = 0;
   out_8376804710265734583[126] = 0;
   out_8376804710265734583[127] = 0;
   out_8376804710265734583[128] = 0;
   out_8376804710265734583[129] = 0;
   out_8376804710265734583[130] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_8376804710265734583[131] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[18] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[16] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[17]);
   out_8376804710265734583[132] = 1;
   out_8376804710265734583[133] = 0;
   out_8376804710265734583[134] = 0;
   out_8376804710265734583[135] = 0;
   out_8376804710265734583[136] = 0;
   out_8376804710265734583[137] = 0;
   out_8376804710265734583[138] = 0;
   out_8376804710265734583[139] = 0;
   out_8376804710265734583[140] = 0;
   out_8376804710265734583[141] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_8376804710265734583[142] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_8376804710265734583[143] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_8376804710265734583[144] = 0;
   out_8376804710265734583[145] = 0;
   out_8376804710265734583[146] = 0;
   out_8376804710265734583[147] = 0;
   out_8376804710265734583[148] = 0;
   out_8376804710265734583[149] = 0;
   out_8376804710265734583[150] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[17] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_8376804710265734583[151] = 0;
   out_8376804710265734583[152] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]);
   out_8376804710265734583[153] = 0;
   out_8376804710265734583[154] = 1;
   out_8376804710265734583[155] = 0;
   out_8376804710265734583[156] = 0;
   out_8376804710265734583[157] = 0;
   out_8376804710265734583[158] = 0;
   out_8376804710265734583[159] = 0;
   out_8376804710265734583[160] = 0;
   out_8376804710265734583[161] = 0;
   out_8376804710265734583[162] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_8376804710265734583[163] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_8376804710265734583[164] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_8376804710265734583[165] = 0;
   out_8376804710265734583[166] = 0;
   out_8376804710265734583[167] = 0;
   out_8376804710265734583[168] = 0;
   out_8376804710265734583[169] = 0;
   out_8376804710265734583[170] = 0;
   out_8376804710265734583[171] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]);
   out_8376804710265734583[172] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[18] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[17] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[16]);
   out_8376804710265734583[173] = 0;
   out_8376804710265734583[174] = 0;
   out_8376804710265734583[175] = 0;
   out_8376804710265734583[176] = 1;
   out_8376804710265734583[177] = 0;
   out_8376804710265734583[178] = 0;
   out_8376804710265734583[179] = 0;
   out_8376804710265734583[180] = 0;
   out_8376804710265734583[181] = 0;
   out_8376804710265734583[182] = 0;
   out_8376804710265734583[183] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_8376804710265734583[184] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_8376804710265734583[185] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_8376804710265734583[186] = 0;
   out_8376804710265734583[187] = 0;
   out_8376804710265734583[188] = 0;
   out_8376804710265734583[189] = 0;
   out_8376804710265734583[190] = 0;
   out_8376804710265734583[191] = 0;
   out_8376804710265734583[192] = 0;
   out_8376804710265734583[193] = 0;
   out_8376804710265734583[194] = 0;
   out_8376804710265734583[195] = 0;
   out_8376804710265734583[196] = 0;
   out_8376804710265734583[197] = 0;
   out_8376804710265734583[198] = 1;
   out_8376804710265734583[199] = 0;
   out_8376804710265734583[200] = 0;
   out_8376804710265734583[201] = 0;
   out_8376804710265734583[202] = 0;
   out_8376804710265734583[203] = 0;
   out_8376804710265734583[204] = 0;
   out_8376804710265734583[205] = 0;
   out_8376804710265734583[206] = 0;
   out_8376804710265734583[207] = 0;
   out_8376804710265734583[208] = 0;
   out_8376804710265734583[209] = 0;
   out_8376804710265734583[210] = 0;
   out_8376804710265734583[211] = 0;
   out_8376804710265734583[212] = 0;
   out_8376804710265734583[213] = 0;
   out_8376804710265734583[214] = 0;
   out_8376804710265734583[215] = 0;
   out_8376804710265734583[216] = 0;
   out_8376804710265734583[217] = 0;
   out_8376804710265734583[218] = 0;
   out_8376804710265734583[219] = 0;
   out_8376804710265734583[220] = 1;
   out_8376804710265734583[221] = 0;
   out_8376804710265734583[222] = 0;
   out_8376804710265734583[223] = 0;
   out_8376804710265734583[224] = 0;
   out_8376804710265734583[225] = 0;
   out_8376804710265734583[226] = 0;
   out_8376804710265734583[227] = 0;
   out_8376804710265734583[228] = 0;
   out_8376804710265734583[229] = 0;
   out_8376804710265734583[230] = 0;
   out_8376804710265734583[231] = 0;
   out_8376804710265734583[232] = 0;
   out_8376804710265734583[233] = 0;
   out_8376804710265734583[234] = 0;
   out_8376804710265734583[235] = 0;
   out_8376804710265734583[236] = 0;
   out_8376804710265734583[237] = 0;
   out_8376804710265734583[238] = 0;
   out_8376804710265734583[239] = 0;
   out_8376804710265734583[240] = 0;
   out_8376804710265734583[241] = 0;
   out_8376804710265734583[242] = 1;
   out_8376804710265734583[243] = 0;
   out_8376804710265734583[244] = 0;
   out_8376804710265734583[245] = 0;
   out_8376804710265734583[246] = 0;
   out_8376804710265734583[247] = 0;
   out_8376804710265734583[248] = 0;
   out_8376804710265734583[249] = 0;
   out_8376804710265734583[250] = 0;
   out_8376804710265734583[251] = 0;
   out_8376804710265734583[252] = 0;
   out_8376804710265734583[253] = 0;
   out_8376804710265734583[254] = 0;
   out_8376804710265734583[255] = 0;
   out_8376804710265734583[256] = 0;
   out_8376804710265734583[257] = 0;
   out_8376804710265734583[258] = 0;
   out_8376804710265734583[259] = 0;
   out_8376804710265734583[260] = 0;
   out_8376804710265734583[261] = 0;
   out_8376804710265734583[262] = 0;
   out_8376804710265734583[263] = 0;
   out_8376804710265734583[264] = 1;
   out_8376804710265734583[265] = 0;
   out_8376804710265734583[266] = 0;
   out_8376804710265734583[267] = 0;
   out_8376804710265734583[268] = 0;
   out_8376804710265734583[269] = 0;
   out_8376804710265734583[270] = 0;
   out_8376804710265734583[271] = 0;
   out_8376804710265734583[272] = 0;
   out_8376804710265734583[273] = 0;
   out_8376804710265734583[274] = 0;
   out_8376804710265734583[275] = 0;
   out_8376804710265734583[276] = 0;
   out_8376804710265734583[277] = 0;
   out_8376804710265734583[278] = 0;
   out_8376804710265734583[279] = 0;
   out_8376804710265734583[280] = 0;
   out_8376804710265734583[281] = 0;
   out_8376804710265734583[282] = 0;
   out_8376804710265734583[283] = 0;
   out_8376804710265734583[284] = 0;
   out_8376804710265734583[285] = 0;
   out_8376804710265734583[286] = 1;
   out_8376804710265734583[287] = 0;
   out_8376804710265734583[288] = 0;
   out_8376804710265734583[289] = 0;
   out_8376804710265734583[290] = 0;
   out_8376804710265734583[291] = 0;
   out_8376804710265734583[292] = 0;
   out_8376804710265734583[293] = 0;
   out_8376804710265734583[294] = 0;
   out_8376804710265734583[295] = 0;
   out_8376804710265734583[296] = 0;
   out_8376804710265734583[297] = 0;
   out_8376804710265734583[298] = 0;
   out_8376804710265734583[299] = 0;
   out_8376804710265734583[300] = 0;
   out_8376804710265734583[301] = 0;
   out_8376804710265734583[302] = 0;
   out_8376804710265734583[303] = 0;
   out_8376804710265734583[304] = 0;
   out_8376804710265734583[305] = 0;
   out_8376804710265734583[306] = 0;
   out_8376804710265734583[307] = 0;
   out_8376804710265734583[308] = 1;
   out_8376804710265734583[309] = 0;
   out_8376804710265734583[310] = 0;
   out_8376804710265734583[311] = 0;
   out_8376804710265734583[312] = 0;
   out_8376804710265734583[313] = 0;
   out_8376804710265734583[314] = 0;
   out_8376804710265734583[315] = 0;
   out_8376804710265734583[316] = 0;
   out_8376804710265734583[317] = 0;
   out_8376804710265734583[318] = 0;
   out_8376804710265734583[319] = 0;
   out_8376804710265734583[320] = 0;
   out_8376804710265734583[321] = 0;
   out_8376804710265734583[322] = 0;
   out_8376804710265734583[323] = 0;
   out_8376804710265734583[324] = 0;
   out_8376804710265734583[325] = 0;
   out_8376804710265734583[326] = 0;
   out_8376804710265734583[327] = 0;
   out_8376804710265734583[328] = 0;
   out_8376804710265734583[329] = 0;
   out_8376804710265734583[330] = 1;
   out_8376804710265734583[331] = 0;
   out_8376804710265734583[332] = 0;
   out_8376804710265734583[333] = 0;
   out_8376804710265734583[334] = 0;
   out_8376804710265734583[335] = 0;
   out_8376804710265734583[336] = 0;
   out_8376804710265734583[337] = 0;
   out_8376804710265734583[338] = 0;
   out_8376804710265734583[339] = 0;
   out_8376804710265734583[340] = 0;
   out_8376804710265734583[341] = 0;
   out_8376804710265734583[342] = 0;
   out_8376804710265734583[343] = 0;
   out_8376804710265734583[344] = 0;
   out_8376804710265734583[345] = 0;
   out_8376804710265734583[346] = 0;
   out_8376804710265734583[347] = 0;
   out_8376804710265734583[348] = 0;
   out_8376804710265734583[349] = 0;
   out_8376804710265734583[350] = 0;
   out_8376804710265734583[351] = 0;
   out_8376804710265734583[352] = 1;
   out_8376804710265734583[353] = 0;
   out_8376804710265734583[354] = 0;
   out_8376804710265734583[355] = 0;
   out_8376804710265734583[356] = 0;
   out_8376804710265734583[357] = 0;
   out_8376804710265734583[358] = 0;
   out_8376804710265734583[359] = 0;
   out_8376804710265734583[360] = 0;
   out_8376804710265734583[361] = 0;
   out_8376804710265734583[362] = 0;
   out_8376804710265734583[363] = 0;
   out_8376804710265734583[364] = 0;
   out_8376804710265734583[365] = 0;
   out_8376804710265734583[366] = 0;
   out_8376804710265734583[367] = 0;
   out_8376804710265734583[368] = 0;
   out_8376804710265734583[369] = 0;
   out_8376804710265734583[370] = 0;
   out_8376804710265734583[371] = 0;
   out_8376804710265734583[372] = 0;
   out_8376804710265734583[373] = 0;
   out_8376804710265734583[374] = 1;
   out_8376804710265734583[375] = 0;
   out_8376804710265734583[376] = 0;
   out_8376804710265734583[377] = 0;
   out_8376804710265734583[378] = 0;
   out_8376804710265734583[379] = 0;
   out_8376804710265734583[380] = 0;
   out_8376804710265734583[381] = 0;
   out_8376804710265734583[382] = 0;
   out_8376804710265734583[383] = 0;
   out_8376804710265734583[384] = 0;
   out_8376804710265734583[385] = 0;
   out_8376804710265734583[386] = 0;
   out_8376804710265734583[387] = 0;
   out_8376804710265734583[388] = 0;
   out_8376804710265734583[389] = 0;
   out_8376804710265734583[390] = 0;
   out_8376804710265734583[391] = 0;
   out_8376804710265734583[392] = 0;
   out_8376804710265734583[393] = 0;
   out_8376804710265734583[394] = 0;
   out_8376804710265734583[395] = 0;
   out_8376804710265734583[396] = 1;
   out_8376804710265734583[397] = 0;
   out_8376804710265734583[398] = 0;
   out_8376804710265734583[399] = 0;
   out_8376804710265734583[400] = 0;
   out_8376804710265734583[401] = 0;
   out_8376804710265734583[402] = 0;
   out_8376804710265734583[403] = 0;
   out_8376804710265734583[404] = 0;
   out_8376804710265734583[405] = 0;
   out_8376804710265734583[406] = 0;
   out_8376804710265734583[407] = 0;
   out_8376804710265734583[408] = 0;
   out_8376804710265734583[409] = 0;
   out_8376804710265734583[410] = 0;
   out_8376804710265734583[411] = 0;
   out_8376804710265734583[412] = 0;
   out_8376804710265734583[413] = 0;
   out_8376804710265734583[414] = 0;
   out_8376804710265734583[415] = 0;
   out_8376804710265734583[416] = 0;
   out_8376804710265734583[417] = 0;
   out_8376804710265734583[418] = 1;
   out_8376804710265734583[419] = 0;
   out_8376804710265734583[420] = 0;
   out_8376804710265734583[421] = 0;
   out_8376804710265734583[422] = 0;
   out_8376804710265734583[423] = 0;
   out_8376804710265734583[424] = 0;
   out_8376804710265734583[425] = 0;
   out_8376804710265734583[426] = 0;
   out_8376804710265734583[427] = 0;
   out_8376804710265734583[428] = 0;
   out_8376804710265734583[429] = 0;
   out_8376804710265734583[430] = 0;
   out_8376804710265734583[431] = 0;
   out_8376804710265734583[432] = 0;
   out_8376804710265734583[433] = 0;
   out_8376804710265734583[434] = 0;
   out_8376804710265734583[435] = 0;
   out_8376804710265734583[436] = 0;
   out_8376804710265734583[437] = 0;
   out_8376804710265734583[438] = 0;
   out_8376804710265734583[439] = 0;
   out_8376804710265734583[440] = 1;
}
void h_4(double *state, double *unused, double *out_1812958937488681327) {
   out_1812958937488681327[0] = state[10] + state[13];
   out_1812958937488681327[1] = state[11] + state[14];
   out_1812958937488681327[2] = state[12] + state[15];
}
void H_4(double *state, double *unused, double *out_7664359386923725696) {
   out_7664359386923725696[0] = 0;
   out_7664359386923725696[1] = 0;
   out_7664359386923725696[2] = 0;
   out_7664359386923725696[3] = 0;
   out_7664359386923725696[4] = 0;
   out_7664359386923725696[5] = 0;
   out_7664359386923725696[6] = 0;
   out_7664359386923725696[7] = 0;
   out_7664359386923725696[8] = 0;
   out_7664359386923725696[9] = 0;
   out_7664359386923725696[10] = 1;
   out_7664359386923725696[11] = 0;
   out_7664359386923725696[12] = 0;
   out_7664359386923725696[13] = 1;
   out_7664359386923725696[14] = 0;
   out_7664359386923725696[15] = 0;
   out_7664359386923725696[16] = 0;
   out_7664359386923725696[17] = 0;
   out_7664359386923725696[18] = 0;
   out_7664359386923725696[19] = 0;
   out_7664359386923725696[20] = 0;
   out_7664359386923725696[21] = 0;
   out_7664359386923725696[22] = 0;
   out_7664359386923725696[23] = 0;
   out_7664359386923725696[24] = 0;
   out_7664359386923725696[25] = 0;
   out_7664359386923725696[26] = 0;
   out_7664359386923725696[27] = 0;
   out_7664359386923725696[28] = 0;
   out_7664359386923725696[29] = 0;
   out_7664359386923725696[30] = 0;
   out_7664359386923725696[31] = 0;
   out_7664359386923725696[32] = 0;
   out_7664359386923725696[33] = 1;
   out_7664359386923725696[34] = 0;
   out_7664359386923725696[35] = 0;
   out_7664359386923725696[36] = 1;
   out_7664359386923725696[37] = 0;
   out_7664359386923725696[38] = 0;
   out_7664359386923725696[39] = 0;
   out_7664359386923725696[40] = 0;
   out_7664359386923725696[41] = 0;
   out_7664359386923725696[42] = 0;
   out_7664359386923725696[43] = 0;
   out_7664359386923725696[44] = 0;
   out_7664359386923725696[45] = 0;
   out_7664359386923725696[46] = 0;
   out_7664359386923725696[47] = 0;
   out_7664359386923725696[48] = 0;
   out_7664359386923725696[49] = 0;
   out_7664359386923725696[50] = 0;
   out_7664359386923725696[51] = 0;
   out_7664359386923725696[52] = 0;
   out_7664359386923725696[53] = 0;
   out_7664359386923725696[54] = 0;
   out_7664359386923725696[55] = 0;
   out_7664359386923725696[56] = 1;
   out_7664359386923725696[57] = 0;
   out_7664359386923725696[58] = 0;
   out_7664359386923725696[59] = 1;
   out_7664359386923725696[60] = 0;
   out_7664359386923725696[61] = 0;
   out_7664359386923725696[62] = 0;
   out_7664359386923725696[63] = 0;
   out_7664359386923725696[64] = 0;
   out_7664359386923725696[65] = 0;
}
void h_9(double *state, double *unused, double *out_5777872936315788940) {
   out_5777872936315788940[0] = state[10];
   out_5777872936315788940[1] = state[11];
   out_5777872936315788940[2] = state[12];
}
void H_9(double *state, double *unused, double *out_3495165751521378450) {
   out_3495165751521378450[0] = 0;
   out_3495165751521378450[1] = 0;
   out_3495165751521378450[2] = 0;
   out_3495165751521378450[3] = 0;
   out_3495165751521378450[4] = 0;
   out_3495165751521378450[5] = 0;
   out_3495165751521378450[6] = 0;
   out_3495165751521378450[7] = 0;
   out_3495165751521378450[8] = 0;
   out_3495165751521378450[9] = 0;
   out_3495165751521378450[10] = 1;
   out_3495165751521378450[11] = 0;
   out_3495165751521378450[12] = 0;
   out_3495165751521378450[13] = 0;
   out_3495165751521378450[14] = 0;
   out_3495165751521378450[15] = 0;
   out_3495165751521378450[16] = 0;
   out_3495165751521378450[17] = 0;
   out_3495165751521378450[18] = 0;
   out_3495165751521378450[19] = 0;
   out_3495165751521378450[20] = 0;
   out_3495165751521378450[21] = 0;
   out_3495165751521378450[22] = 0;
   out_3495165751521378450[23] = 0;
   out_3495165751521378450[24] = 0;
   out_3495165751521378450[25] = 0;
   out_3495165751521378450[26] = 0;
   out_3495165751521378450[27] = 0;
   out_3495165751521378450[28] = 0;
   out_3495165751521378450[29] = 0;
   out_3495165751521378450[30] = 0;
   out_3495165751521378450[31] = 0;
   out_3495165751521378450[32] = 0;
   out_3495165751521378450[33] = 1;
   out_3495165751521378450[34] = 0;
   out_3495165751521378450[35] = 0;
   out_3495165751521378450[36] = 0;
   out_3495165751521378450[37] = 0;
   out_3495165751521378450[38] = 0;
   out_3495165751521378450[39] = 0;
   out_3495165751521378450[40] = 0;
   out_3495165751521378450[41] = 0;
   out_3495165751521378450[42] = 0;
   out_3495165751521378450[43] = 0;
   out_3495165751521378450[44] = 0;
   out_3495165751521378450[45] = 0;
   out_3495165751521378450[46] = 0;
   out_3495165751521378450[47] = 0;
   out_3495165751521378450[48] = 0;
   out_3495165751521378450[49] = 0;
   out_3495165751521378450[50] = 0;
   out_3495165751521378450[51] = 0;
   out_3495165751521378450[52] = 0;
   out_3495165751521378450[53] = 0;
   out_3495165751521378450[54] = 0;
   out_3495165751521378450[55] = 0;
   out_3495165751521378450[56] = 1;
   out_3495165751521378450[57] = 0;
   out_3495165751521378450[58] = 0;
   out_3495165751521378450[59] = 0;
   out_3495165751521378450[60] = 0;
   out_3495165751521378450[61] = 0;
   out_3495165751521378450[62] = 0;
   out_3495165751521378450[63] = 0;
   out_3495165751521378450[64] = 0;
   out_3495165751521378450[65] = 0;
}
void h_10(double *state, double *unused, double *out_7533933349168139027) {
   out_7533933349168139027[0] = 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0] + state[16] + state[19];
   out_7533933349168139027[1] = 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1] + state[17] + state[20];
   out_7533933349168139027[2] = 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[2] + state[18] + state[21];
}
void H_10(double *state, double *unused, double *out_3100178947822005071) {
   out_3100178947822005071[0] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*pow(state[0], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_3100178947822005071[1] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_3100178947822005071[2] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[2];
   out_3100178947822005071[3] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_3100178947822005071[4] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_3100178947822005071[5] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_3100178947822005071[6] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_3100178947822005071[7] = 0;
   out_3100178947822005071[8] = 0;
   out_3100178947822005071[9] = 0;
   out_3100178947822005071[10] = 0;
   out_3100178947822005071[11] = 0;
   out_3100178947822005071[12] = 0;
   out_3100178947822005071[13] = 0;
   out_3100178947822005071[14] = 0;
   out_3100178947822005071[15] = 0;
   out_3100178947822005071[16] = 1;
   out_3100178947822005071[17] = 0;
   out_3100178947822005071[18] = 0;
   out_3100178947822005071[19] = 1;
   out_3100178947822005071[20] = 0;
   out_3100178947822005071[21] = 0;
   out_3100178947822005071[22] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_3100178947822005071[23] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*pow(state[1], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_3100178947822005071[24] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1]*state[2];
   out_3100178947822005071[25] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_3100178947822005071[26] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_3100178947822005071[27] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_3100178947822005071[28] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_3100178947822005071[29] = 0;
   out_3100178947822005071[30] = 0;
   out_3100178947822005071[31] = 0;
   out_3100178947822005071[32] = 0;
   out_3100178947822005071[33] = 0;
   out_3100178947822005071[34] = 0;
   out_3100178947822005071[35] = 0;
   out_3100178947822005071[36] = 0;
   out_3100178947822005071[37] = 0;
   out_3100178947822005071[38] = 0;
   out_3100178947822005071[39] = 1;
   out_3100178947822005071[40] = 0;
   out_3100178947822005071[41] = 0;
   out_3100178947822005071[42] = 1;
   out_3100178947822005071[43] = 0;
   out_3100178947822005071[44] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[0]*state[2];
   out_3100178947822005071[45] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[1]*state[2];
   out_3100178947822005071[46] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*pow(state[2], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_3100178947822005071[47] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_3100178947822005071[48] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_3100178947822005071[49] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_3100178947822005071[50] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_3100178947822005071[51] = 0;
   out_3100178947822005071[52] = 0;
   out_3100178947822005071[53] = 0;
   out_3100178947822005071[54] = 0;
   out_3100178947822005071[55] = 0;
   out_3100178947822005071[56] = 0;
   out_3100178947822005071[57] = 0;
   out_3100178947822005071[58] = 0;
   out_3100178947822005071[59] = 0;
   out_3100178947822005071[60] = 0;
   out_3100178947822005071[61] = 0;
   out_3100178947822005071[62] = 1;
   out_3100178947822005071[63] = 0;
   out_3100178947822005071[64] = 0;
   out_3100178947822005071[65] = 1;
}
void h_12(double *state, double *unused, double *out_93886750174259709) {
   out_93886750174259709[0] = state[0];
   out_93886750174259709[1] = state[1];
   out_93886750174259709[2] = state[2];
}
void H_12(double *state, double *unused, double *out_1283101009880992700) {
   out_1283101009880992700[0] = 1;
   out_1283101009880992700[1] = 0;
   out_1283101009880992700[2] = 0;
   out_1283101009880992700[3] = 0;
   out_1283101009880992700[4] = 0;
   out_1283101009880992700[5] = 0;
   out_1283101009880992700[6] = 0;
   out_1283101009880992700[7] = 0;
   out_1283101009880992700[8] = 0;
   out_1283101009880992700[9] = 0;
   out_1283101009880992700[10] = 0;
   out_1283101009880992700[11] = 0;
   out_1283101009880992700[12] = 0;
   out_1283101009880992700[13] = 0;
   out_1283101009880992700[14] = 0;
   out_1283101009880992700[15] = 0;
   out_1283101009880992700[16] = 0;
   out_1283101009880992700[17] = 0;
   out_1283101009880992700[18] = 0;
   out_1283101009880992700[19] = 0;
   out_1283101009880992700[20] = 0;
   out_1283101009880992700[21] = 0;
   out_1283101009880992700[22] = 0;
   out_1283101009880992700[23] = 1;
   out_1283101009880992700[24] = 0;
   out_1283101009880992700[25] = 0;
   out_1283101009880992700[26] = 0;
   out_1283101009880992700[27] = 0;
   out_1283101009880992700[28] = 0;
   out_1283101009880992700[29] = 0;
   out_1283101009880992700[30] = 0;
   out_1283101009880992700[31] = 0;
   out_1283101009880992700[32] = 0;
   out_1283101009880992700[33] = 0;
   out_1283101009880992700[34] = 0;
   out_1283101009880992700[35] = 0;
   out_1283101009880992700[36] = 0;
   out_1283101009880992700[37] = 0;
   out_1283101009880992700[38] = 0;
   out_1283101009880992700[39] = 0;
   out_1283101009880992700[40] = 0;
   out_1283101009880992700[41] = 0;
   out_1283101009880992700[42] = 0;
   out_1283101009880992700[43] = 0;
   out_1283101009880992700[44] = 0;
   out_1283101009880992700[45] = 0;
   out_1283101009880992700[46] = 1;
   out_1283101009880992700[47] = 0;
   out_1283101009880992700[48] = 0;
   out_1283101009880992700[49] = 0;
   out_1283101009880992700[50] = 0;
   out_1283101009880992700[51] = 0;
   out_1283101009880992700[52] = 0;
   out_1283101009880992700[53] = 0;
   out_1283101009880992700[54] = 0;
   out_1283101009880992700[55] = 0;
   out_1283101009880992700[56] = 0;
   out_1283101009880992700[57] = 0;
   out_1283101009880992700[58] = 0;
   out_1283101009880992700[59] = 0;
   out_1283101009880992700[60] = 0;
   out_1283101009880992700[61] = 0;
   out_1283101009880992700[62] = 0;
   out_1283101009880992700[63] = 0;
   out_1283101009880992700[64] = 0;
   out_1283101009880992700[65] = 0;
}
void h_35(double *state, double *unused, double *out_175886436238455048) {
   out_175886436238455048[0] = state[7];
   out_175886436238455048[1] = state[8];
   out_175886436238455048[2] = state[9];
}
void H_35(double *state, double *unused, double *out_3017365246428850416) {
   out_3017365246428850416[0] = 0;
   out_3017365246428850416[1] = 0;
   out_3017365246428850416[2] = 0;
   out_3017365246428850416[3] = 0;
   out_3017365246428850416[4] = 0;
   out_3017365246428850416[5] = 0;
   out_3017365246428850416[6] = 0;
   out_3017365246428850416[7] = 1;
   out_3017365246428850416[8] = 0;
   out_3017365246428850416[9] = 0;
   out_3017365246428850416[10] = 0;
   out_3017365246428850416[11] = 0;
   out_3017365246428850416[12] = 0;
   out_3017365246428850416[13] = 0;
   out_3017365246428850416[14] = 0;
   out_3017365246428850416[15] = 0;
   out_3017365246428850416[16] = 0;
   out_3017365246428850416[17] = 0;
   out_3017365246428850416[18] = 0;
   out_3017365246428850416[19] = 0;
   out_3017365246428850416[20] = 0;
   out_3017365246428850416[21] = 0;
   out_3017365246428850416[22] = 0;
   out_3017365246428850416[23] = 0;
   out_3017365246428850416[24] = 0;
   out_3017365246428850416[25] = 0;
   out_3017365246428850416[26] = 0;
   out_3017365246428850416[27] = 0;
   out_3017365246428850416[28] = 0;
   out_3017365246428850416[29] = 0;
   out_3017365246428850416[30] = 1;
   out_3017365246428850416[31] = 0;
   out_3017365246428850416[32] = 0;
   out_3017365246428850416[33] = 0;
   out_3017365246428850416[34] = 0;
   out_3017365246428850416[35] = 0;
   out_3017365246428850416[36] = 0;
   out_3017365246428850416[37] = 0;
   out_3017365246428850416[38] = 0;
   out_3017365246428850416[39] = 0;
   out_3017365246428850416[40] = 0;
   out_3017365246428850416[41] = 0;
   out_3017365246428850416[42] = 0;
   out_3017365246428850416[43] = 0;
   out_3017365246428850416[44] = 0;
   out_3017365246428850416[45] = 0;
   out_3017365246428850416[46] = 0;
   out_3017365246428850416[47] = 0;
   out_3017365246428850416[48] = 0;
   out_3017365246428850416[49] = 0;
   out_3017365246428850416[50] = 0;
   out_3017365246428850416[51] = 0;
   out_3017365246428850416[52] = 0;
   out_3017365246428850416[53] = 1;
   out_3017365246428850416[54] = 0;
   out_3017365246428850416[55] = 0;
   out_3017365246428850416[56] = 0;
   out_3017365246428850416[57] = 0;
   out_3017365246428850416[58] = 0;
   out_3017365246428850416[59] = 0;
   out_3017365246428850416[60] = 0;
   out_3017365246428850416[61] = 0;
   out_3017365246428850416[62] = 0;
   out_3017365246428850416[63] = 0;
   out_3017365246428850416[64] = 0;
   out_3017365246428850416[65] = 0;
}
void h_32(double *state, double *unused, double *out_7798354416850777082) {
   out_7798354416850777082[0] = state[3];
   out_7798354416850777082[1] = state[4];
   out_7798354416850777082[2] = state[5];
   out_7798354416850777082[3] = state[6];
}
void H_32(double *state, double *unused, double *out_8616775659295932649) {
   out_8616775659295932649[0] = 0;
   out_8616775659295932649[1] = 0;
   out_8616775659295932649[2] = 0;
   out_8616775659295932649[3] = 1;
   out_8616775659295932649[4] = 0;
   out_8616775659295932649[5] = 0;
   out_8616775659295932649[6] = 0;
   out_8616775659295932649[7] = 0;
   out_8616775659295932649[8] = 0;
   out_8616775659295932649[9] = 0;
   out_8616775659295932649[10] = 0;
   out_8616775659295932649[11] = 0;
   out_8616775659295932649[12] = 0;
   out_8616775659295932649[13] = 0;
   out_8616775659295932649[14] = 0;
   out_8616775659295932649[15] = 0;
   out_8616775659295932649[16] = 0;
   out_8616775659295932649[17] = 0;
   out_8616775659295932649[18] = 0;
   out_8616775659295932649[19] = 0;
   out_8616775659295932649[20] = 0;
   out_8616775659295932649[21] = 0;
   out_8616775659295932649[22] = 0;
   out_8616775659295932649[23] = 0;
   out_8616775659295932649[24] = 0;
   out_8616775659295932649[25] = 0;
   out_8616775659295932649[26] = 1;
   out_8616775659295932649[27] = 0;
   out_8616775659295932649[28] = 0;
   out_8616775659295932649[29] = 0;
   out_8616775659295932649[30] = 0;
   out_8616775659295932649[31] = 0;
   out_8616775659295932649[32] = 0;
   out_8616775659295932649[33] = 0;
   out_8616775659295932649[34] = 0;
   out_8616775659295932649[35] = 0;
   out_8616775659295932649[36] = 0;
   out_8616775659295932649[37] = 0;
   out_8616775659295932649[38] = 0;
   out_8616775659295932649[39] = 0;
   out_8616775659295932649[40] = 0;
   out_8616775659295932649[41] = 0;
   out_8616775659295932649[42] = 0;
   out_8616775659295932649[43] = 0;
   out_8616775659295932649[44] = 0;
   out_8616775659295932649[45] = 0;
   out_8616775659295932649[46] = 0;
   out_8616775659295932649[47] = 0;
   out_8616775659295932649[48] = 0;
   out_8616775659295932649[49] = 1;
   out_8616775659295932649[50] = 0;
   out_8616775659295932649[51] = 0;
   out_8616775659295932649[52] = 0;
   out_8616775659295932649[53] = 0;
   out_8616775659295932649[54] = 0;
   out_8616775659295932649[55] = 0;
   out_8616775659295932649[56] = 0;
   out_8616775659295932649[57] = 0;
   out_8616775659295932649[58] = 0;
   out_8616775659295932649[59] = 0;
   out_8616775659295932649[60] = 0;
   out_8616775659295932649[61] = 0;
   out_8616775659295932649[62] = 0;
   out_8616775659295932649[63] = 0;
   out_8616775659295932649[64] = 0;
   out_8616775659295932649[65] = 0;
   out_8616775659295932649[66] = 0;
   out_8616775659295932649[67] = 0;
   out_8616775659295932649[68] = 0;
   out_8616775659295932649[69] = 0;
   out_8616775659295932649[70] = 0;
   out_8616775659295932649[71] = 0;
   out_8616775659295932649[72] = 1;
   out_8616775659295932649[73] = 0;
   out_8616775659295932649[74] = 0;
   out_8616775659295932649[75] = 0;
   out_8616775659295932649[76] = 0;
   out_8616775659295932649[77] = 0;
   out_8616775659295932649[78] = 0;
   out_8616775659295932649[79] = 0;
   out_8616775659295932649[80] = 0;
   out_8616775659295932649[81] = 0;
   out_8616775659295932649[82] = 0;
   out_8616775659295932649[83] = 0;
   out_8616775659295932649[84] = 0;
   out_8616775659295932649[85] = 0;
   out_8616775659295932649[86] = 0;
   out_8616775659295932649[87] = 0;
}
void h_13(double *state, double *unused, double *out_3260268762145755371) {
   out_3260268762145755371[0] = (-2*state[3]*state[5] + 2*state[4]*state[6])*state[9] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[8] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[7];
   out_3260268762145755371[1] = (2*state[3]*state[4] + 2*state[5]*state[6])*state[9] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[7] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[8];
   out_3260268762145755371[2] = (-2*state[3]*state[4] + 2*state[5]*state[6])*state[8] + (2*state[3]*state[5] + 2*state[4]*state[6])*state[7] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[9];
}
void H_13(double *state, double *unused, double *out_1553330683894121112) {
   out_1553330683894121112[0] = 0;
   out_1553330683894121112[1] = 0;
   out_1553330683894121112[2] = 0;
   out_1553330683894121112[3] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_1553330683894121112[4] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_1553330683894121112[5] = -2*state[3]*state[9] + 2*state[4]*state[8] - 2*state[5]*state[7];
   out_1553330683894121112[6] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_1553330683894121112[7] = pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2);
   out_1553330683894121112[8] = 2*state[3]*state[6] + 2*state[4]*state[5];
   out_1553330683894121112[9] = -2*state[3]*state[5] + 2*state[4]*state[6];
   out_1553330683894121112[10] = 0;
   out_1553330683894121112[11] = 0;
   out_1553330683894121112[12] = 0;
   out_1553330683894121112[13] = 0;
   out_1553330683894121112[14] = 0;
   out_1553330683894121112[15] = 0;
   out_1553330683894121112[16] = 0;
   out_1553330683894121112[17] = 0;
   out_1553330683894121112[18] = 0;
   out_1553330683894121112[19] = 0;
   out_1553330683894121112[20] = 0;
   out_1553330683894121112[21] = 0;
   out_1553330683894121112[22] = 0;
   out_1553330683894121112[23] = 0;
   out_1553330683894121112[24] = 0;
   out_1553330683894121112[25] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_1553330683894121112[26] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_1553330683894121112[27] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_1553330683894121112[28] = -2*state[3]*state[7] + 2*state[5]*state[9] - 2*state[6]*state[8];
   out_1553330683894121112[29] = -2*state[3]*state[6] + 2*state[4]*state[5];
   out_1553330683894121112[30] = pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2);
   out_1553330683894121112[31] = 2*state[3]*state[4] + 2*state[5]*state[6];
   out_1553330683894121112[32] = 0;
   out_1553330683894121112[33] = 0;
   out_1553330683894121112[34] = 0;
   out_1553330683894121112[35] = 0;
   out_1553330683894121112[36] = 0;
   out_1553330683894121112[37] = 0;
   out_1553330683894121112[38] = 0;
   out_1553330683894121112[39] = 0;
   out_1553330683894121112[40] = 0;
   out_1553330683894121112[41] = 0;
   out_1553330683894121112[42] = 0;
   out_1553330683894121112[43] = 0;
   out_1553330683894121112[44] = 0;
   out_1553330683894121112[45] = 0;
   out_1553330683894121112[46] = 0;
   out_1553330683894121112[47] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_1553330683894121112[48] = -2*state[3]*state[8] - 2*state[4]*state[9] + 2*state[6]*state[7];
   out_1553330683894121112[49] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_1553330683894121112[50] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_1553330683894121112[51] = 2*state[3]*state[5] + 2*state[4]*state[6];
   out_1553330683894121112[52] = -2*state[3]*state[4] + 2*state[5]*state[6];
   out_1553330683894121112[53] = pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2);
   out_1553330683894121112[54] = 0;
   out_1553330683894121112[55] = 0;
   out_1553330683894121112[56] = 0;
   out_1553330683894121112[57] = 0;
   out_1553330683894121112[58] = 0;
   out_1553330683894121112[59] = 0;
   out_1553330683894121112[60] = 0;
   out_1553330683894121112[61] = 0;
   out_1553330683894121112[62] = 0;
   out_1553330683894121112[63] = 0;
   out_1553330683894121112[64] = 0;
   out_1553330683894121112[65] = 0;
}
void h_14(double *state, double *unused, double *out_5777872936315788940) {
   out_5777872936315788940[0] = state[10];
   out_5777872936315788940[1] = state[11];
   out_5777872936315788940[2] = state[12];
}
void H_14(double *state, double *unused, double *out_3495165751521378450) {
   out_3495165751521378450[0] = 0;
   out_3495165751521378450[1] = 0;
   out_3495165751521378450[2] = 0;
   out_3495165751521378450[3] = 0;
   out_3495165751521378450[4] = 0;
   out_3495165751521378450[5] = 0;
   out_3495165751521378450[6] = 0;
   out_3495165751521378450[7] = 0;
   out_3495165751521378450[8] = 0;
   out_3495165751521378450[9] = 0;
   out_3495165751521378450[10] = 1;
   out_3495165751521378450[11] = 0;
   out_3495165751521378450[12] = 0;
   out_3495165751521378450[13] = 0;
   out_3495165751521378450[14] = 0;
   out_3495165751521378450[15] = 0;
   out_3495165751521378450[16] = 0;
   out_3495165751521378450[17] = 0;
   out_3495165751521378450[18] = 0;
   out_3495165751521378450[19] = 0;
   out_3495165751521378450[20] = 0;
   out_3495165751521378450[21] = 0;
   out_3495165751521378450[22] = 0;
   out_3495165751521378450[23] = 0;
   out_3495165751521378450[24] = 0;
   out_3495165751521378450[25] = 0;
   out_3495165751521378450[26] = 0;
   out_3495165751521378450[27] = 0;
   out_3495165751521378450[28] = 0;
   out_3495165751521378450[29] = 0;
   out_3495165751521378450[30] = 0;
   out_3495165751521378450[31] = 0;
   out_3495165751521378450[32] = 0;
   out_3495165751521378450[33] = 1;
   out_3495165751521378450[34] = 0;
   out_3495165751521378450[35] = 0;
   out_3495165751521378450[36] = 0;
   out_3495165751521378450[37] = 0;
   out_3495165751521378450[38] = 0;
   out_3495165751521378450[39] = 0;
   out_3495165751521378450[40] = 0;
   out_3495165751521378450[41] = 0;
   out_3495165751521378450[42] = 0;
   out_3495165751521378450[43] = 0;
   out_3495165751521378450[44] = 0;
   out_3495165751521378450[45] = 0;
   out_3495165751521378450[46] = 0;
   out_3495165751521378450[47] = 0;
   out_3495165751521378450[48] = 0;
   out_3495165751521378450[49] = 0;
   out_3495165751521378450[50] = 0;
   out_3495165751521378450[51] = 0;
   out_3495165751521378450[52] = 0;
   out_3495165751521378450[53] = 0;
   out_3495165751521378450[54] = 0;
   out_3495165751521378450[55] = 0;
   out_3495165751521378450[56] = 1;
   out_3495165751521378450[57] = 0;
   out_3495165751521378450[58] = 0;
   out_3495165751521378450[59] = 0;
   out_3495165751521378450[60] = 0;
   out_3495165751521378450[61] = 0;
   out_3495165751521378450[62] = 0;
   out_3495165751521378450[63] = 0;
   out_3495165751521378450[64] = 0;
   out_3495165751521378450[65] = 0;
}
void h_33(double *state, double *unused, double *out_7581599712004531544) {
   out_7581599712004531544[0] = state[16];
   out_7581599712004531544[1] = state[17];
   out_7581599712004531544[2] = state[18];
}
void H_33(double *state, double *unused, double *out_4265165624774360940) {
   out_4265165624774360940[0] = 0;
   out_4265165624774360940[1] = 0;
   out_4265165624774360940[2] = 0;
   out_4265165624774360940[3] = 0;
   out_4265165624774360940[4] = 0;
   out_4265165624774360940[5] = 0;
   out_4265165624774360940[6] = 0;
   out_4265165624774360940[7] = 0;
   out_4265165624774360940[8] = 0;
   out_4265165624774360940[9] = 0;
   out_4265165624774360940[10] = 0;
   out_4265165624774360940[11] = 0;
   out_4265165624774360940[12] = 0;
   out_4265165624774360940[13] = 0;
   out_4265165624774360940[14] = 0;
   out_4265165624774360940[15] = 0;
   out_4265165624774360940[16] = 1;
   out_4265165624774360940[17] = 0;
   out_4265165624774360940[18] = 0;
   out_4265165624774360940[19] = 0;
   out_4265165624774360940[20] = 0;
   out_4265165624774360940[21] = 0;
   out_4265165624774360940[22] = 0;
   out_4265165624774360940[23] = 0;
   out_4265165624774360940[24] = 0;
   out_4265165624774360940[25] = 0;
   out_4265165624774360940[26] = 0;
   out_4265165624774360940[27] = 0;
   out_4265165624774360940[28] = 0;
   out_4265165624774360940[29] = 0;
   out_4265165624774360940[30] = 0;
   out_4265165624774360940[31] = 0;
   out_4265165624774360940[32] = 0;
   out_4265165624774360940[33] = 0;
   out_4265165624774360940[34] = 0;
   out_4265165624774360940[35] = 0;
   out_4265165624774360940[36] = 0;
   out_4265165624774360940[37] = 0;
   out_4265165624774360940[38] = 0;
   out_4265165624774360940[39] = 1;
   out_4265165624774360940[40] = 0;
   out_4265165624774360940[41] = 0;
   out_4265165624774360940[42] = 0;
   out_4265165624774360940[43] = 0;
   out_4265165624774360940[44] = 0;
   out_4265165624774360940[45] = 0;
   out_4265165624774360940[46] = 0;
   out_4265165624774360940[47] = 0;
   out_4265165624774360940[48] = 0;
   out_4265165624774360940[49] = 0;
   out_4265165624774360940[50] = 0;
   out_4265165624774360940[51] = 0;
   out_4265165624774360940[52] = 0;
   out_4265165624774360940[53] = 0;
   out_4265165624774360940[54] = 0;
   out_4265165624774360940[55] = 0;
   out_4265165624774360940[56] = 0;
   out_4265165624774360940[57] = 0;
   out_4265165624774360940[58] = 0;
   out_4265165624774360940[59] = 0;
   out_4265165624774360940[60] = 0;
   out_4265165624774360940[61] = 0;
   out_4265165624774360940[62] = 1;
   out_4265165624774360940[63] = 0;
   out_4265165624774360940[64] = 0;
   out_4265165624774360940[65] = 0;
}
#include <eigen3/Eigen/Dense>
#include <iostream>

typedef Eigen::Matrix<double, DIM, DIM, Eigen::RowMajor> DDM;
typedef Eigen::Matrix<double, EDIM, EDIM, Eigen::RowMajor> EEM;
typedef Eigen::Matrix<double, DIM, EDIM, Eigen::RowMajor> DEM;

void predict(double *in_x, double *in_P, double *in_Q, double dt) {
  typedef Eigen::Matrix<double, MEDIM, MEDIM, Eigen::RowMajor> RRM;

  double nx[DIM] = {0};
  double in_F[EDIM*EDIM] = {0};

  // functions from sympy
  f_fun(in_x, dt, nx);
  F_fun(in_x, dt, in_F);


  EEM F(in_F);
  EEM P(in_P);
  EEM Q(in_Q);

  RRM F_main = F.topLeftCorner(MEDIM, MEDIM);
  P.topLeftCorner(MEDIM, MEDIM) = (F_main * P.topLeftCorner(MEDIM, MEDIM)) * F_main.transpose();
  P.topRightCorner(MEDIM, EDIM - MEDIM) = F_main * P.topRightCorner(MEDIM, EDIM - MEDIM);
  P.bottomLeftCorner(EDIM - MEDIM, MEDIM) = P.bottomLeftCorner(EDIM - MEDIM, MEDIM) * F_main.transpose();

  P = P + dt*Q;

  // copy out state
  memcpy(in_x, nx, DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
}

// note: extra_args dim only correct when null space projecting
// otherwise 1
template <int ZDIM, int EADIM, bool MAHA_TEST>
void update(double *in_x, double *in_P, Hfun h_fun, Hfun H_fun, Hfun Hea_fun, double *in_z, double *in_R, double *in_ea, double MAHA_THRESHOLD) {
  typedef Eigen::Matrix<double, ZDIM, ZDIM, Eigen::RowMajor> ZZM;
  typedef Eigen::Matrix<double, ZDIM, DIM, Eigen::RowMajor> ZDM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, EDIM, Eigen::RowMajor> XEM;
  //typedef Eigen::Matrix<double, EDIM, ZDIM, Eigen::RowMajor> EZM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, 1> X1M;
  typedef Eigen::Matrix<double, Eigen::Dynamic, Eigen::Dynamic, Eigen::RowMajor> XXM;

  double in_hx[ZDIM] = {0};
  double in_H[ZDIM * DIM] = {0};
  double in_H_mod[EDIM * DIM] = {0};
  double delta_x[EDIM] = {0};
  double x_new[DIM] = {0};


  // state x, P
  Eigen::Matrix<double, ZDIM, 1> z(in_z);
  EEM P(in_P);
  ZZM pre_R(in_R);

  // functions from sympy
  h_fun(in_x, in_ea, in_hx);
  H_fun(in_x, in_ea, in_H);
  ZDM pre_H(in_H);

  // get y (y = z - hx)
  Eigen::Matrix<double, ZDIM, 1> pre_y(in_hx); pre_y = z - pre_y;
  X1M y; XXM H; XXM R;
  if (Hea_fun){
    typedef Eigen::Matrix<double, ZDIM, EADIM, Eigen::RowMajor> ZAM;
    double in_Hea[ZDIM * EADIM] = {0};
    Hea_fun(in_x, in_ea, in_Hea);
    ZAM Hea(in_Hea);
    XXM A = Hea.transpose().fullPivLu().kernel();


    y = A.transpose() * pre_y;
    H = A.transpose() * pre_H;
    R = A.transpose() * pre_R * A;
  } else {
    y = pre_y;
    H = pre_H;
    R = pre_R;
  }
  // get modified H
  H_mod_fun(in_x, in_H_mod);
  DEM H_mod(in_H_mod);
  XEM H_err = H * H_mod;

  // Do mahalobis distance test
  if (MAHA_TEST){
    XXM a = (H_err * P * H_err.transpose() + R).inverse();
    double maha_dist = y.transpose() * a * y;
    if (maha_dist > MAHA_THRESHOLD){
      R = 1.0e16 * R;
    }
  }

  // Outlier resilient weighting
  double weight = 1;//(1.5)/(1 + y.squaredNorm()/R.sum());

  // kalman gains and I_KH
  XXM S = ((H_err * P) * H_err.transpose()) + R/weight;
  XEM KT = S.fullPivLu().solve(H_err * P.transpose());
  //EZM K = KT.transpose(); TODO: WHY DOES THIS NOT COMPILE?
  //EZM K = S.fullPivLu().solve(H_err * P.transpose()).transpose();
  //std::cout << "Here is the matrix rot:\n" << K << std::endl;
  EEM I_KH = Eigen::Matrix<double, EDIM, EDIM>::Identity() - (KT.transpose() * H_err);

  // update state by injecting dx
  Eigen::Matrix<double, EDIM, 1> dx(delta_x);
  dx  = (KT.transpose() * y);
  memcpy(delta_x, dx.data(), EDIM * sizeof(double));
  err_fun(in_x, delta_x, x_new);
  Eigen::Matrix<double, DIM, 1> x(x_new);

  // update cov
  P = ((I_KH * P) * I_KH.transpose()) + ((KT.transpose() * R) * KT);

  // copy out state
  memcpy(in_x, x.data(), DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
  memcpy(in_z, y.data(), y.rows() * sizeof(double));
}




}
extern "C" {

void live_update_4(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_4, H_4, NULL, in_z, in_R, in_ea, MAHA_THRESH_4);
}
void live_update_9(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_9, H_9, NULL, in_z, in_R, in_ea, MAHA_THRESH_9);
}
void live_update_10(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_10, H_10, NULL, in_z, in_R, in_ea, MAHA_THRESH_10);
}
void live_update_12(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_12, H_12, NULL, in_z, in_R, in_ea, MAHA_THRESH_12);
}
void live_update_35(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_35, H_35, NULL, in_z, in_R, in_ea, MAHA_THRESH_35);
}
void live_update_32(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<4, 3, 0>(in_x, in_P, h_32, H_32, NULL, in_z, in_R, in_ea, MAHA_THRESH_32);
}
void live_update_13(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_13, H_13, NULL, in_z, in_R, in_ea, MAHA_THRESH_13);
}
void live_update_14(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_14, H_14, NULL, in_z, in_R, in_ea, MAHA_THRESH_14);
}
void live_update_33(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_33, H_33, NULL, in_z, in_R, in_ea, MAHA_THRESH_33);
}
void live_H(double *in_vec, double *out_3682820859985804297) {
  H(in_vec, out_3682820859985804297);
}
void live_err_fun(double *nom_x, double *delta_x, double *out_4963697455822286570) {
  err_fun(nom_x, delta_x, out_4963697455822286570);
}
void live_inv_err_fun(double *nom_x, double *true_x, double *out_2531566804332850063) {
  inv_err_fun(nom_x, true_x, out_2531566804332850063);
}
void live_H_mod_fun(double *state, double *out_1050538994252760791) {
  H_mod_fun(state, out_1050538994252760791);
}
void live_f_fun(double *state, double dt, double *out_5651433866535677540) {
  f_fun(state,  dt, out_5651433866535677540);
}
void live_F_fun(double *state, double dt, double *out_8376804710265734583) {
  F_fun(state,  dt, out_8376804710265734583);
}
void live_h_4(double *state, double *unused, double *out_1812958937488681327) {
  h_4(state, unused, out_1812958937488681327);
}
void live_H_4(double *state, double *unused, double *out_7664359386923725696) {
  H_4(state, unused, out_7664359386923725696);
}
void live_h_9(double *state, double *unused, double *out_5777872936315788940) {
  h_9(state, unused, out_5777872936315788940);
}
void live_H_9(double *state, double *unused, double *out_3495165751521378450) {
  H_9(state, unused, out_3495165751521378450);
}
void live_h_10(double *state, double *unused, double *out_7533933349168139027) {
  h_10(state, unused, out_7533933349168139027);
}
void live_H_10(double *state, double *unused, double *out_3100178947822005071) {
  H_10(state, unused, out_3100178947822005071);
}
void live_h_12(double *state, double *unused, double *out_93886750174259709) {
  h_12(state, unused, out_93886750174259709);
}
void live_H_12(double *state, double *unused, double *out_1283101009880992700) {
  H_12(state, unused, out_1283101009880992700);
}
void live_h_35(double *state, double *unused, double *out_175886436238455048) {
  h_35(state, unused, out_175886436238455048);
}
void live_H_35(double *state, double *unused, double *out_3017365246428850416) {
  H_35(state, unused, out_3017365246428850416);
}
void live_h_32(double *state, double *unused, double *out_7798354416850777082) {
  h_32(state, unused, out_7798354416850777082);
}
void live_H_32(double *state, double *unused, double *out_8616775659295932649) {
  H_32(state, unused, out_8616775659295932649);
}
void live_h_13(double *state, double *unused, double *out_3260268762145755371) {
  h_13(state, unused, out_3260268762145755371);
}
void live_H_13(double *state, double *unused, double *out_1553330683894121112) {
  H_13(state, unused, out_1553330683894121112);
}
void live_h_14(double *state, double *unused, double *out_5777872936315788940) {
  h_14(state, unused, out_5777872936315788940);
}
void live_H_14(double *state, double *unused, double *out_3495165751521378450) {
  H_14(state, unused, out_3495165751521378450);
}
void live_h_33(double *state, double *unused, double *out_7581599712004531544) {
  h_33(state, unused, out_7581599712004531544);
}
void live_H_33(double *state, double *unused, double *out_4265165624774360940) {
  H_33(state, unused, out_4265165624774360940);
}
void live_predict(double *in_x, double *in_P, double *in_Q, double dt) {
  predict(in_x, in_P, in_Q, dt);
}
}

const EKF live = {
  .name = "live",
  .kinds = { 4, 9, 10, 12, 35, 32, 13, 14, 33 },
  .feature_kinds = {  },
  .f_fun = live_f_fun,
  .F_fun = live_F_fun,
  .err_fun = live_err_fun,
  .inv_err_fun = live_inv_err_fun,
  .H_mod_fun = live_H_mod_fun,
  .predict = live_predict,
  .hs = {
    { 4, live_h_4 },
    { 9, live_h_9 },
    { 10, live_h_10 },
    { 12, live_h_12 },
    { 35, live_h_35 },
    { 32, live_h_32 },
    { 13, live_h_13 },
    { 14, live_h_14 },
    { 33, live_h_33 },
  },
  .Hs = {
    { 4, live_H_4 },
    { 9, live_H_9 },
    { 10, live_H_10 },
    { 12, live_H_12 },
    { 35, live_H_35 },
    { 32, live_H_32 },
    { 13, live_H_13 },
    { 14, live_H_14 },
    { 33, live_H_33 },
  },
  .updates = {
    { 4, live_update_4 },
    { 9, live_update_9 },
    { 10, live_update_10 },
    { 12, live_update_12 },
    { 35, live_update_35 },
    { 32, live_update_32 },
    { 13, live_update_13 },
    { 14, live_update_14 },
    { 33, live_update_33 },
  },
  .Hes = {
  },
  .sets = {
  },
  .extra_routines = {
    { "H", live_H },
  },
};

ekf_lib_init(live)
