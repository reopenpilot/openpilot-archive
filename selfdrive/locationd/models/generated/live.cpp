#include "live.h"

namespace {
#define DIM 22
#define EDIM 21
#define MEDIM 21
typedef void (*Hfun)(double *, double *, double *);
const static double MAHA_THRESH_4 = 7.814727903251177;
const static double MAHA_THRESH_9 = 7.814727903251177;
const static double MAHA_THRESH_10 = 7.814727903251177;
const static double MAHA_THRESH_12 = 7.814727903251177;
const static double MAHA_THRESH_35 = 7.814727903251177;
const static double MAHA_THRESH_32 = 9.487729036781154;
const static double MAHA_THRESH_13 = 7.814727903251177;
const static double MAHA_THRESH_14 = 7.814727903251177;
const static double MAHA_THRESH_33 = 7.814727903251177;

/******************************************************************************
 *                       Code generated with SymPy 1.12                       *
 *                                                                            *
 *              See http://www.sympy.org/ for more information.               *
 *                                                                            *
 *                         This file is part of 'ekf'                         *
 ******************************************************************************/
void H(double *in_vec, double *out_892038790922331242) {
   out_892038790922331242[0] = 0;
   out_892038790922331242[1] = -sin(in_vec[1])*sin(in_vec[2])*in_vec[4] - sin(in_vec[1])*cos(in_vec[2])*in_vec[3] - cos(in_vec[1])*in_vec[5];
   out_892038790922331242[2] = -sin(in_vec[2])*cos(in_vec[1])*in_vec[3] + cos(in_vec[1])*cos(in_vec[2])*in_vec[4];
   out_892038790922331242[3] = cos(in_vec[1])*cos(in_vec[2]);
   out_892038790922331242[4] = sin(in_vec[2])*cos(in_vec[1]);
   out_892038790922331242[5] = -sin(in_vec[1]);
   out_892038790922331242[6] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (-sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_892038790922331242[7] = -sin(in_vec[0])*sin(in_vec[1])*in_vec[5] + sin(in_vec[0])*sin(in_vec[2])*cos(in_vec[1])*in_vec[4] + sin(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_892038790922331242[8] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]))*in_vec[4];
   out_892038790922331242[9] = sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]);
   out_892038790922331242[10] = sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) + cos(in_vec[0])*cos(in_vec[2]);
   out_892038790922331242[11] = sin(in_vec[0])*cos(in_vec[1]);
   out_892038790922331242[12] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (-sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) + sin(in_vec[2])*cos(in_vec[0]))*in_vec[3] - sin(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_892038790922331242[13] = -sin(in_vec[1])*cos(in_vec[0])*in_vec[5] + sin(in_vec[2])*cos(in_vec[0])*cos(in_vec[1])*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_892038790922331242[14] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (sin(in_vec[0])*cos(in_vec[2]) - sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[3];
   out_892038790922331242[15] = sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]);
   out_892038790922331242[16] = -sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]);
   out_892038790922331242[17] = cos(in_vec[0])*cos(in_vec[1]);
}
void err_fun(double *nom_x, double *delta_x, double *out_8323515011948575310) {
   out_8323515011948575310[0] = delta_x[0] + nom_x[0];
   out_8323515011948575310[1] = delta_x[1] + nom_x[1];
   out_8323515011948575310[2] = delta_x[2] + nom_x[2];
   out_8323515011948575310[3] = -0.5*delta_x[3]*nom_x[4] - 0.5*delta_x[4]*nom_x[5] - 0.5*delta_x[5]*nom_x[6] + 1.0*nom_x[3];
   out_8323515011948575310[4] = 0.5*delta_x[3]*nom_x[3] + 0.5*delta_x[4]*nom_x[6] - 0.5*delta_x[5]*nom_x[5] + 1.0*nom_x[4];
   out_8323515011948575310[5] = -0.5*delta_x[3]*nom_x[6] + 0.5*delta_x[4]*nom_x[3] + 0.5*delta_x[5]*nom_x[4] + 1.0*nom_x[5];
   out_8323515011948575310[6] = 0.5*delta_x[3]*nom_x[5] - 0.5*delta_x[4]*nom_x[4] + 0.5*delta_x[5]*nom_x[3] + 1.0*nom_x[6];
   out_8323515011948575310[7] = delta_x[6] + nom_x[7];
   out_8323515011948575310[8] = delta_x[7] + nom_x[8];
   out_8323515011948575310[9] = delta_x[8] + nom_x[9];
   out_8323515011948575310[10] = delta_x[9] + nom_x[10];
   out_8323515011948575310[11] = delta_x[10] + nom_x[11];
   out_8323515011948575310[12] = delta_x[11] + nom_x[12];
   out_8323515011948575310[13] = delta_x[12] + nom_x[13];
   out_8323515011948575310[14] = delta_x[13] + nom_x[14];
   out_8323515011948575310[15] = delta_x[14] + nom_x[15];
   out_8323515011948575310[16] = delta_x[15] + nom_x[16];
   out_8323515011948575310[17] = delta_x[16] + nom_x[17];
   out_8323515011948575310[18] = delta_x[17] + nom_x[18];
   out_8323515011948575310[19] = delta_x[18] + nom_x[19];
   out_8323515011948575310[20] = delta_x[19] + nom_x[20];
   out_8323515011948575310[21] = delta_x[20] + nom_x[21];
}
void inv_err_fun(double *nom_x, double *true_x, double *out_963834875752753094) {
   out_963834875752753094[0] = -nom_x[0] + true_x[0];
   out_963834875752753094[1] = -nom_x[1] + true_x[1];
   out_963834875752753094[2] = -nom_x[2] + true_x[2];
   out_963834875752753094[3] = 2*nom_x[3]*true_x[4] - 2*nom_x[4]*true_x[3] + 2*nom_x[5]*true_x[6] - 2*nom_x[6]*true_x[5];
   out_963834875752753094[4] = 2*nom_x[3]*true_x[5] - 2*nom_x[4]*true_x[6] - 2*nom_x[5]*true_x[3] + 2*nom_x[6]*true_x[4];
   out_963834875752753094[5] = 2*nom_x[3]*true_x[6] + 2*nom_x[4]*true_x[5] - 2*nom_x[5]*true_x[4] - 2*nom_x[6]*true_x[3];
   out_963834875752753094[6] = -nom_x[7] + true_x[7];
   out_963834875752753094[7] = -nom_x[8] + true_x[8];
   out_963834875752753094[8] = -nom_x[9] + true_x[9];
   out_963834875752753094[9] = -nom_x[10] + true_x[10];
   out_963834875752753094[10] = -nom_x[11] + true_x[11];
   out_963834875752753094[11] = -nom_x[12] + true_x[12];
   out_963834875752753094[12] = -nom_x[13] + true_x[13];
   out_963834875752753094[13] = -nom_x[14] + true_x[14];
   out_963834875752753094[14] = -nom_x[15] + true_x[15];
   out_963834875752753094[15] = -nom_x[16] + true_x[16];
   out_963834875752753094[16] = -nom_x[17] + true_x[17];
   out_963834875752753094[17] = -nom_x[18] + true_x[18];
   out_963834875752753094[18] = -nom_x[19] + true_x[19];
   out_963834875752753094[19] = -nom_x[20] + true_x[20];
   out_963834875752753094[20] = -nom_x[21] + true_x[21];
}
void H_mod_fun(double *state, double *out_6618057656078271387) {
   out_6618057656078271387[0] = 1.0;
   out_6618057656078271387[1] = 0;
   out_6618057656078271387[2] = 0;
   out_6618057656078271387[3] = 0;
   out_6618057656078271387[4] = 0;
   out_6618057656078271387[5] = 0;
   out_6618057656078271387[6] = 0;
   out_6618057656078271387[7] = 0;
   out_6618057656078271387[8] = 0;
   out_6618057656078271387[9] = 0;
   out_6618057656078271387[10] = 0;
   out_6618057656078271387[11] = 0;
   out_6618057656078271387[12] = 0;
   out_6618057656078271387[13] = 0;
   out_6618057656078271387[14] = 0;
   out_6618057656078271387[15] = 0;
   out_6618057656078271387[16] = 0;
   out_6618057656078271387[17] = 0;
   out_6618057656078271387[18] = 0;
   out_6618057656078271387[19] = 0;
   out_6618057656078271387[20] = 0;
   out_6618057656078271387[21] = 0;
   out_6618057656078271387[22] = 1.0;
   out_6618057656078271387[23] = 0;
   out_6618057656078271387[24] = 0;
   out_6618057656078271387[25] = 0;
   out_6618057656078271387[26] = 0;
   out_6618057656078271387[27] = 0;
   out_6618057656078271387[28] = 0;
   out_6618057656078271387[29] = 0;
   out_6618057656078271387[30] = 0;
   out_6618057656078271387[31] = 0;
   out_6618057656078271387[32] = 0;
   out_6618057656078271387[33] = 0;
   out_6618057656078271387[34] = 0;
   out_6618057656078271387[35] = 0;
   out_6618057656078271387[36] = 0;
   out_6618057656078271387[37] = 0;
   out_6618057656078271387[38] = 0;
   out_6618057656078271387[39] = 0;
   out_6618057656078271387[40] = 0;
   out_6618057656078271387[41] = 0;
   out_6618057656078271387[42] = 0;
   out_6618057656078271387[43] = 0;
   out_6618057656078271387[44] = 1.0;
   out_6618057656078271387[45] = 0;
   out_6618057656078271387[46] = 0;
   out_6618057656078271387[47] = 0;
   out_6618057656078271387[48] = 0;
   out_6618057656078271387[49] = 0;
   out_6618057656078271387[50] = 0;
   out_6618057656078271387[51] = 0;
   out_6618057656078271387[52] = 0;
   out_6618057656078271387[53] = 0;
   out_6618057656078271387[54] = 0;
   out_6618057656078271387[55] = 0;
   out_6618057656078271387[56] = 0;
   out_6618057656078271387[57] = 0;
   out_6618057656078271387[58] = 0;
   out_6618057656078271387[59] = 0;
   out_6618057656078271387[60] = 0;
   out_6618057656078271387[61] = 0;
   out_6618057656078271387[62] = 0;
   out_6618057656078271387[63] = 0;
   out_6618057656078271387[64] = 0;
   out_6618057656078271387[65] = 0;
   out_6618057656078271387[66] = -0.5*state[4];
   out_6618057656078271387[67] = -0.5*state[5];
   out_6618057656078271387[68] = -0.5*state[6];
   out_6618057656078271387[69] = 0;
   out_6618057656078271387[70] = 0;
   out_6618057656078271387[71] = 0;
   out_6618057656078271387[72] = 0;
   out_6618057656078271387[73] = 0;
   out_6618057656078271387[74] = 0;
   out_6618057656078271387[75] = 0;
   out_6618057656078271387[76] = 0;
   out_6618057656078271387[77] = 0;
   out_6618057656078271387[78] = 0;
   out_6618057656078271387[79] = 0;
   out_6618057656078271387[80] = 0;
   out_6618057656078271387[81] = 0;
   out_6618057656078271387[82] = 0;
   out_6618057656078271387[83] = 0;
   out_6618057656078271387[84] = 0;
   out_6618057656078271387[85] = 0;
   out_6618057656078271387[86] = 0;
   out_6618057656078271387[87] = 0.5*state[3];
   out_6618057656078271387[88] = 0.5*state[6];
   out_6618057656078271387[89] = -0.5*state[5];
   out_6618057656078271387[90] = 0;
   out_6618057656078271387[91] = 0;
   out_6618057656078271387[92] = 0;
   out_6618057656078271387[93] = 0;
   out_6618057656078271387[94] = 0;
   out_6618057656078271387[95] = 0;
   out_6618057656078271387[96] = 0;
   out_6618057656078271387[97] = 0;
   out_6618057656078271387[98] = 0;
   out_6618057656078271387[99] = 0;
   out_6618057656078271387[100] = 0;
   out_6618057656078271387[101] = 0;
   out_6618057656078271387[102] = 0;
   out_6618057656078271387[103] = 0;
   out_6618057656078271387[104] = 0;
   out_6618057656078271387[105] = 0;
   out_6618057656078271387[106] = 0;
   out_6618057656078271387[107] = 0;
   out_6618057656078271387[108] = -0.5*state[6];
   out_6618057656078271387[109] = 0.5*state[3];
   out_6618057656078271387[110] = 0.5*state[4];
   out_6618057656078271387[111] = 0;
   out_6618057656078271387[112] = 0;
   out_6618057656078271387[113] = 0;
   out_6618057656078271387[114] = 0;
   out_6618057656078271387[115] = 0;
   out_6618057656078271387[116] = 0;
   out_6618057656078271387[117] = 0;
   out_6618057656078271387[118] = 0;
   out_6618057656078271387[119] = 0;
   out_6618057656078271387[120] = 0;
   out_6618057656078271387[121] = 0;
   out_6618057656078271387[122] = 0;
   out_6618057656078271387[123] = 0;
   out_6618057656078271387[124] = 0;
   out_6618057656078271387[125] = 0;
   out_6618057656078271387[126] = 0;
   out_6618057656078271387[127] = 0;
   out_6618057656078271387[128] = 0;
   out_6618057656078271387[129] = 0.5*state[5];
   out_6618057656078271387[130] = -0.5*state[4];
   out_6618057656078271387[131] = 0.5*state[3];
   out_6618057656078271387[132] = 0;
   out_6618057656078271387[133] = 0;
   out_6618057656078271387[134] = 0;
   out_6618057656078271387[135] = 0;
   out_6618057656078271387[136] = 0;
   out_6618057656078271387[137] = 0;
   out_6618057656078271387[138] = 0;
   out_6618057656078271387[139] = 0;
   out_6618057656078271387[140] = 0;
   out_6618057656078271387[141] = 0;
   out_6618057656078271387[142] = 0;
   out_6618057656078271387[143] = 0;
   out_6618057656078271387[144] = 0;
   out_6618057656078271387[145] = 0;
   out_6618057656078271387[146] = 0;
   out_6618057656078271387[147] = 0;
   out_6618057656078271387[148] = 0;
   out_6618057656078271387[149] = 0;
   out_6618057656078271387[150] = 0;
   out_6618057656078271387[151] = 0;
   out_6618057656078271387[152] = 0;
   out_6618057656078271387[153] = 1.0;
   out_6618057656078271387[154] = 0;
   out_6618057656078271387[155] = 0;
   out_6618057656078271387[156] = 0;
   out_6618057656078271387[157] = 0;
   out_6618057656078271387[158] = 0;
   out_6618057656078271387[159] = 0;
   out_6618057656078271387[160] = 0;
   out_6618057656078271387[161] = 0;
   out_6618057656078271387[162] = 0;
   out_6618057656078271387[163] = 0;
   out_6618057656078271387[164] = 0;
   out_6618057656078271387[165] = 0;
   out_6618057656078271387[166] = 0;
   out_6618057656078271387[167] = 0;
   out_6618057656078271387[168] = 0;
   out_6618057656078271387[169] = 0;
   out_6618057656078271387[170] = 0;
   out_6618057656078271387[171] = 0;
   out_6618057656078271387[172] = 0;
   out_6618057656078271387[173] = 0;
   out_6618057656078271387[174] = 0;
   out_6618057656078271387[175] = 1.0;
   out_6618057656078271387[176] = 0;
   out_6618057656078271387[177] = 0;
   out_6618057656078271387[178] = 0;
   out_6618057656078271387[179] = 0;
   out_6618057656078271387[180] = 0;
   out_6618057656078271387[181] = 0;
   out_6618057656078271387[182] = 0;
   out_6618057656078271387[183] = 0;
   out_6618057656078271387[184] = 0;
   out_6618057656078271387[185] = 0;
   out_6618057656078271387[186] = 0;
   out_6618057656078271387[187] = 0;
   out_6618057656078271387[188] = 0;
   out_6618057656078271387[189] = 0;
   out_6618057656078271387[190] = 0;
   out_6618057656078271387[191] = 0;
   out_6618057656078271387[192] = 0;
   out_6618057656078271387[193] = 0;
   out_6618057656078271387[194] = 0;
   out_6618057656078271387[195] = 0;
   out_6618057656078271387[196] = 0;
   out_6618057656078271387[197] = 1.0;
   out_6618057656078271387[198] = 0;
   out_6618057656078271387[199] = 0;
   out_6618057656078271387[200] = 0;
   out_6618057656078271387[201] = 0;
   out_6618057656078271387[202] = 0;
   out_6618057656078271387[203] = 0;
   out_6618057656078271387[204] = 0;
   out_6618057656078271387[205] = 0;
   out_6618057656078271387[206] = 0;
   out_6618057656078271387[207] = 0;
   out_6618057656078271387[208] = 0;
   out_6618057656078271387[209] = 0;
   out_6618057656078271387[210] = 0;
   out_6618057656078271387[211] = 0;
   out_6618057656078271387[212] = 0;
   out_6618057656078271387[213] = 0;
   out_6618057656078271387[214] = 0;
   out_6618057656078271387[215] = 0;
   out_6618057656078271387[216] = 0;
   out_6618057656078271387[217] = 0;
   out_6618057656078271387[218] = 0;
   out_6618057656078271387[219] = 1.0;
   out_6618057656078271387[220] = 0;
   out_6618057656078271387[221] = 0;
   out_6618057656078271387[222] = 0;
   out_6618057656078271387[223] = 0;
   out_6618057656078271387[224] = 0;
   out_6618057656078271387[225] = 0;
   out_6618057656078271387[226] = 0;
   out_6618057656078271387[227] = 0;
   out_6618057656078271387[228] = 0;
   out_6618057656078271387[229] = 0;
   out_6618057656078271387[230] = 0;
   out_6618057656078271387[231] = 0;
   out_6618057656078271387[232] = 0;
   out_6618057656078271387[233] = 0;
   out_6618057656078271387[234] = 0;
   out_6618057656078271387[235] = 0;
   out_6618057656078271387[236] = 0;
   out_6618057656078271387[237] = 0;
   out_6618057656078271387[238] = 0;
   out_6618057656078271387[239] = 0;
   out_6618057656078271387[240] = 0;
   out_6618057656078271387[241] = 1.0;
   out_6618057656078271387[242] = 0;
   out_6618057656078271387[243] = 0;
   out_6618057656078271387[244] = 0;
   out_6618057656078271387[245] = 0;
   out_6618057656078271387[246] = 0;
   out_6618057656078271387[247] = 0;
   out_6618057656078271387[248] = 0;
   out_6618057656078271387[249] = 0;
   out_6618057656078271387[250] = 0;
   out_6618057656078271387[251] = 0;
   out_6618057656078271387[252] = 0;
   out_6618057656078271387[253] = 0;
   out_6618057656078271387[254] = 0;
   out_6618057656078271387[255] = 0;
   out_6618057656078271387[256] = 0;
   out_6618057656078271387[257] = 0;
   out_6618057656078271387[258] = 0;
   out_6618057656078271387[259] = 0;
   out_6618057656078271387[260] = 0;
   out_6618057656078271387[261] = 0;
   out_6618057656078271387[262] = 0;
   out_6618057656078271387[263] = 1.0;
   out_6618057656078271387[264] = 0;
   out_6618057656078271387[265] = 0;
   out_6618057656078271387[266] = 0;
   out_6618057656078271387[267] = 0;
   out_6618057656078271387[268] = 0;
   out_6618057656078271387[269] = 0;
   out_6618057656078271387[270] = 0;
   out_6618057656078271387[271] = 0;
   out_6618057656078271387[272] = 0;
   out_6618057656078271387[273] = 0;
   out_6618057656078271387[274] = 0;
   out_6618057656078271387[275] = 0;
   out_6618057656078271387[276] = 0;
   out_6618057656078271387[277] = 0;
   out_6618057656078271387[278] = 0;
   out_6618057656078271387[279] = 0;
   out_6618057656078271387[280] = 0;
   out_6618057656078271387[281] = 0;
   out_6618057656078271387[282] = 0;
   out_6618057656078271387[283] = 0;
   out_6618057656078271387[284] = 0;
   out_6618057656078271387[285] = 1.0;
   out_6618057656078271387[286] = 0;
   out_6618057656078271387[287] = 0;
   out_6618057656078271387[288] = 0;
   out_6618057656078271387[289] = 0;
   out_6618057656078271387[290] = 0;
   out_6618057656078271387[291] = 0;
   out_6618057656078271387[292] = 0;
   out_6618057656078271387[293] = 0;
   out_6618057656078271387[294] = 0;
   out_6618057656078271387[295] = 0;
   out_6618057656078271387[296] = 0;
   out_6618057656078271387[297] = 0;
   out_6618057656078271387[298] = 0;
   out_6618057656078271387[299] = 0;
   out_6618057656078271387[300] = 0;
   out_6618057656078271387[301] = 0;
   out_6618057656078271387[302] = 0;
   out_6618057656078271387[303] = 0;
   out_6618057656078271387[304] = 0;
   out_6618057656078271387[305] = 0;
   out_6618057656078271387[306] = 0;
   out_6618057656078271387[307] = 1.0;
   out_6618057656078271387[308] = 0;
   out_6618057656078271387[309] = 0;
   out_6618057656078271387[310] = 0;
   out_6618057656078271387[311] = 0;
   out_6618057656078271387[312] = 0;
   out_6618057656078271387[313] = 0;
   out_6618057656078271387[314] = 0;
   out_6618057656078271387[315] = 0;
   out_6618057656078271387[316] = 0;
   out_6618057656078271387[317] = 0;
   out_6618057656078271387[318] = 0;
   out_6618057656078271387[319] = 0;
   out_6618057656078271387[320] = 0;
   out_6618057656078271387[321] = 0;
   out_6618057656078271387[322] = 0;
   out_6618057656078271387[323] = 0;
   out_6618057656078271387[324] = 0;
   out_6618057656078271387[325] = 0;
   out_6618057656078271387[326] = 0;
   out_6618057656078271387[327] = 0;
   out_6618057656078271387[328] = 0;
   out_6618057656078271387[329] = 1.0;
   out_6618057656078271387[330] = 0;
   out_6618057656078271387[331] = 0;
   out_6618057656078271387[332] = 0;
   out_6618057656078271387[333] = 0;
   out_6618057656078271387[334] = 0;
   out_6618057656078271387[335] = 0;
   out_6618057656078271387[336] = 0;
   out_6618057656078271387[337] = 0;
   out_6618057656078271387[338] = 0;
   out_6618057656078271387[339] = 0;
   out_6618057656078271387[340] = 0;
   out_6618057656078271387[341] = 0;
   out_6618057656078271387[342] = 0;
   out_6618057656078271387[343] = 0;
   out_6618057656078271387[344] = 0;
   out_6618057656078271387[345] = 0;
   out_6618057656078271387[346] = 0;
   out_6618057656078271387[347] = 0;
   out_6618057656078271387[348] = 0;
   out_6618057656078271387[349] = 0;
   out_6618057656078271387[350] = 0;
   out_6618057656078271387[351] = 1.0;
   out_6618057656078271387[352] = 0;
   out_6618057656078271387[353] = 0;
   out_6618057656078271387[354] = 0;
   out_6618057656078271387[355] = 0;
   out_6618057656078271387[356] = 0;
   out_6618057656078271387[357] = 0;
   out_6618057656078271387[358] = 0;
   out_6618057656078271387[359] = 0;
   out_6618057656078271387[360] = 0;
   out_6618057656078271387[361] = 0;
   out_6618057656078271387[362] = 0;
   out_6618057656078271387[363] = 0;
   out_6618057656078271387[364] = 0;
   out_6618057656078271387[365] = 0;
   out_6618057656078271387[366] = 0;
   out_6618057656078271387[367] = 0;
   out_6618057656078271387[368] = 0;
   out_6618057656078271387[369] = 0;
   out_6618057656078271387[370] = 0;
   out_6618057656078271387[371] = 0;
   out_6618057656078271387[372] = 0;
   out_6618057656078271387[373] = 1.0;
   out_6618057656078271387[374] = 0;
   out_6618057656078271387[375] = 0;
   out_6618057656078271387[376] = 0;
   out_6618057656078271387[377] = 0;
   out_6618057656078271387[378] = 0;
   out_6618057656078271387[379] = 0;
   out_6618057656078271387[380] = 0;
   out_6618057656078271387[381] = 0;
   out_6618057656078271387[382] = 0;
   out_6618057656078271387[383] = 0;
   out_6618057656078271387[384] = 0;
   out_6618057656078271387[385] = 0;
   out_6618057656078271387[386] = 0;
   out_6618057656078271387[387] = 0;
   out_6618057656078271387[388] = 0;
   out_6618057656078271387[389] = 0;
   out_6618057656078271387[390] = 0;
   out_6618057656078271387[391] = 0;
   out_6618057656078271387[392] = 0;
   out_6618057656078271387[393] = 0;
   out_6618057656078271387[394] = 0;
   out_6618057656078271387[395] = 1.0;
   out_6618057656078271387[396] = 0;
   out_6618057656078271387[397] = 0;
   out_6618057656078271387[398] = 0;
   out_6618057656078271387[399] = 0;
   out_6618057656078271387[400] = 0;
   out_6618057656078271387[401] = 0;
   out_6618057656078271387[402] = 0;
   out_6618057656078271387[403] = 0;
   out_6618057656078271387[404] = 0;
   out_6618057656078271387[405] = 0;
   out_6618057656078271387[406] = 0;
   out_6618057656078271387[407] = 0;
   out_6618057656078271387[408] = 0;
   out_6618057656078271387[409] = 0;
   out_6618057656078271387[410] = 0;
   out_6618057656078271387[411] = 0;
   out_6618057656078271387[412] = 0;
   out_6618057656078271387[413] = 0;
   out_6618057656078271387[414] = 0;
   out_6618057656078271387[415] = 0;
   out_6618057656078271387[416] = 0;
   out_6618057656078271387[417] = 1.0;
   out_6618057656078271387[418] = 0;
   out_6618057656078271387[419] = 0;
   out_6618057656078271387[420] = 0;
   out_6618057656078271387[421] = 0;
   out_6618057656078271387[422] = 0;
   out_6618057656078271387[423] = 0;
   out_6618057656078271387[424] = 0;
   out_6618057656078271387[425] = 0;
   out_6618057656078271387[426] = 0;
   out_6618057656078271387[427] = 0;
   out_6618057656078271387[428] = 0;
   out_6618057656078271387[429] = 0;
   out_6618057656078271387[430] = 0;
   out_6618057656078271387[431] = 0;
   out_6618057656078271387[432] = 0;
   out_6618057656078271387[433] = 0;
   out_6618057656078271387[434] = 0;
   out_6618057656078271387[435] = 0;
   out_6618057656078271387[436] = 0;
   out_6618057656078271387[437] = 0;
   out_6618057656078271387[438] = 0;
   out_6618057656078271387[439] = 1.0;
   out_6618057656078271387[440] = 0;
   out_6618057656078271387[441] = 0;
   out_6618057656078271387[442] = 0;
   out_6618057656078271387[443] = 0;
   out_6618057656078271387[444] = 0;
   out_6618057656078271387[445] = 0;
   out_6618057656078271387[446] = 0;
   out_6618057656078271387[447] = 0;
   out_6618057656078271387[448] = 0;
   out_6618057656078271387[449] = 0;
   out_6618057656078271387[450] = 0;
   out_6618057656078271387[451] = 0;
   out_6618057656078271387[452] = 0;
   out_6618057656078271387[453] = 0;
   out_6618057656078271387[454] = 0;
   out_6618057656078271387[455] = 0;
   out_6618057656078271387[456] = 0;
   out_6618057656078271387[457] = 0;
   out_6618057656078271387[458] = 0;
   out_6618057656078271387[459] = 0;
   out_6618057656078271387[460] = 0;
   out_6618057656078271387[461] = 1.0;
}
void f_fun(double *state, double dt, double *out_8465880934435782614) {
   out_8465880934435782614[0] = dt*state[7] + state[0];
   out_8465880934435782614[1] = dt*state[8] + state[1];
   out_8465880934435782614[2] = dt*state[9] + state[2];
   out_8465880934435782614[3] = dt*(-0.5*state[4]*state[10] - 0.5*state[5]*state[11] - 0.5*state[6]*state[12]) + state[3];
   out_8465880934435782614[4] = dt*(0.5*state[3]*state[10] + 0.5*state[5]*state[12] - 0.5*state[6]*state[11]) + state[4];
   out_8465880934435782614[5] = dt*(0.5*state[3]*state[11] - 0.5*state[4]*state[12] + 0.5*state[6]*state[10]) + state[5];
   out_8465880934435782614[6] = dt*(0.5*state[3]*state[12] + 0.5*state[4]*state[11] - 0.5*state[5]*state[10]) + state[6];
   out_8465880934435782614[7] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]) + state[7];
   out_8465880934435782614[8] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]) + state[8];
   out_8465880934435782614[9] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]) + state[9];
   out_8465880934435782614[10] = state[10];
   out_8465880934435782614[11] = state[11];
   out_8465880934435782614[12] = state[12];
   out_8465880934435782614[13] = state[13];
   out_8465880934435782614[14] = state[14];
   out_8465880934435782614[15] = state[15];
   out_8465880934435782614[16] = state[16];
   out_8465880934435782614[17] = state[17];
   out_8465880934435782614[18] = state[18];
   out_8465880934435782614[19] = state[19];
   out_8465880934435782614[20] = state[20];
   out_8465880934435782614[21] = state[21];
}
void F_fun(double *state, double dt, double *out_9173013192648734803) {
   out_9173013192648734803[0] = 1;
   out_9173013192648734803[1] = 0;
   out_9173013192648734803[2] = 0;
   out_9173013192648734803[3] = 0;
   out_9173013192648734803[4] = 0;
   out_9173013192648734803[5] = 0;
   out_9173013192648734803[6] = dt;
   out_9173013192648734803[7] = 0;
   out_9173013192648734803[8] = 0;
   out_9173013192648734803[9] = 0;
   out_9173013192648734803[10] = 0;
   out_9173013192648734803[11] = 0;
   out_9173013192648734803[12] = 0;
   out_9173013192648734803[13] = 0;
   out_9173013192648734803[14] = 0;
   out_9173013192648734803[15] = 0;
   out_9173013192648734803[16] = 0;
   out_9173013192648734803[17] = 0;
   out_9173013192648734803[18] = 0;
   out_9173013192648734803[19] = 0;
   out_9173013192648734803[20] = 0;
   out_9173013192648734803[21] = 0;
   out_9173013192648734803[22] = 1;
   out_9173013192648734803[23] = 0;
   out_9173013192648734803[24] = 0;
   out_9173013192648734803[25] = 0;
   out_9173013192648734803[26] = 0;
   out_9173013192648734803[27] = 0;
   out_9173013192648734803[28] = dt;
   out_9173013192648734803[29] = 0;
   out_9173013192648734803[30] = 0;
   out_9173013192648734803[31] = 0;
   out_9173013192648734803[32] = 0;
   out_9173013192648734803[33] = 0;
   out_9173013192648734803[34] = 0;
   out_9173013192648734803[35] = 0;
   out_9173013192648734803[36] = 0;
   out_9173013192648734803[37] = 0;
   out_9173013192648734803[38] = 0;
   out_9173013192648734803[39] = 0;
   out_9173013192648734803[40] = 0;
   out_9173013192648734803[41] = 0;
   out_9173013192648734803[42] = 0;
   out_9173013192648734803[43] = 0;
   out_9173013192648734803[44] = 1;
   out_9173013192648734803[45] = 0;
   out_9173013192648734803[46] = 0;
   out_9173013192648734803[47] = 0;
   out_9173013192648734803[48] = 0;
   out_9173013192648734803[49] = 0;
   out_9173013192648734803[50] = dt;
   out_9173013192648734803[51] = 0;
   out_9173013192648734803[52] = 0;
   out_9173013192648734803[53] = 0;
   out_9173013192648734803[54] = 0;
   out_9173013192648734803[55] = 0;
   out_9173013192648734803[56] = 0;
   out_9173013192648734803[57] = 0;
   out_9173013192648734803[58] = 0;
   out_9173013192648734803[59] = 0;
   out_9173013192648734803[60] = 0;
   out_9173013192648734803[61] = 0;
   out_9173013192648734803[62] = 0;
   out_9173013192648734803[63] = 0;
   out_9173013192648734803[64] = 0;
   out_9173013192648734803[65] = 0;
   out_9173013192648734803[66] = 1;
   out_9173013192648734803[67] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[11] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_9173013192648734803[68] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[12] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[10] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[11]);
   out_9173013192648734803[69] = 0;
   out_9173013192648734803[70] = 0;
   out_9173013192648734803[71] = 0;
   out_9173013192648734803[72] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_9173013192648734803[73] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_9173013192648734803[74] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_9173013192648734803[75] = 0;
   out_9173013192648734803[76] = 0;
   out_9173013192648734803[77] = 0;
   out_9173013192648734803[78] = 0;
   out_9173013192648734803[79] = 0;
   out_9173013192648734803[80] = 0;
   out_9173013192648734803[81] = 0;
   out_9173013192648734803[82] = 0;
   out_9173013192648734803[83] = 0;
   out_9173013192648734803[84] = 0;
   out_9173013192648734803[85] = 0;
   out_9173013192648734803[86] = 0;
   out_9173013192648734803[87] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[11] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_9173013192648734803[88] = 1;
   out_9173013192648734803[89] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[12] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[11] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[10]);
   out_9173013192648734803[90] = 0;
   out_9173013192648734803[91] = 0;
   out_9173013192648734803[92] = 0;
   out_9173013192648734803[93] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_9173013192648734803[94] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_9173013192648734803[95] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_9173013192648734803[96] = 0;
   out_9173013192648734803[97] = 0;
   out_9173013192648734803[98] = 0;
   out_9173013192648734803[99] = 0;
   out_9173013192648734803[100] = 0;
   out_9173013192648734803[101] = 0;
   out_9173013192648734803[102] = 0;
   out_9173013192648734803[103] = 0;
   out_9173013192648734803[104] = 0;
   out_9173013192648734803[105] = 0;
   out_9173013192648734803[106] = 0;
   out_9173013192648734803[107] = 0;
   out_9173013192648734803[108] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[12] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[10] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[11]);
   out_9173013192648734803[109] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[12] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[11] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[10]);
   out_9173013192648734803[110] = 1;
   out_9173013192648734803[111] = 0;
   out_9173013192648734803[112] = 0;
   out_9173013192648734803[113] = 0;
   out_9173013192648734803[114] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_9173013192648734803[115] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_9173013192648734803[116] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_9173013192648734803[117] = 0;
   out_9173013192648734803[118] = 0;
   out_9173013192648734803[119] = 0;
   out_9173013192648734803[120] = 0;
   out_9173013192648734803[121] = 0;
   out_9173013192648734803[122] = 0;
   out_9173013192648734803[123] = 0;
   out_9173013192648734803[124] = 0;
   out_9173013192648734803[125] = 0;
   out_9173013192648734803[126] = 0;
   out_9173013192648734803[127] = 0;
   out_9173013192648734803[128] = 0;
   out_9173013192648734803[129] = 0;
   out_9173013192648734803[130] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_9173013192648734803[131] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[18] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[16] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[17]);
   out_9173013192648734803[132] = 1;
   out_9173013192648734803[133] = 0;
   out_9173013192648734803[134] = 0;
   out_9173013192648734803[135] = 0;
   out_9173013192648734803[136] = 0;
   out_9173013192648734803[137] = 0;
   out_9173013192648734803[138] = 0;
   out_9173013192648734803[139] = 0;
   out_9173013192648734803[140] = 0;
   out_9173013192648734803[141] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_9173013192648734803[142] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_9173013192648734803[143] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_9173013192648734803[144] = 0;
   out_9173013192648734803[145] = 0;
   out_9173013192648734803[146] = 0;
   out_9173013192648734803[147] = 0;
   out_9173013192648734803[148] = 0;
   out_9173013192648734803[149] = 0;
   out_9173013192648734803[150] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[17] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_9173013192648734803[151] = 0;
   out_9173013192648734803[152] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]);
   out_9173013192648734803[153] = 0;
   out_9173013192648734803[154] = 1;
   out_9173013192648734803[155] = 0;
   out_9173013192648734803[156] = 0;
   out_9173013192648734803[157] = 0;
   out_9173013192648734803[158] = 0;
   out_9173013192648734803[159] = 0;
   out_9173013192648734803[160] = 0;
   out_9173013192648734803[161] = 0;
   out_9173013192648734803[162] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_9173013192648734803[163] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_9173013192648734803[164] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_9173013192648734803[165] = 0;
   out_9173013192648734803[166] = 0;
   out_9173013192648734803[167] = 0;
   out_9173013192648734803[168] = 0;
   out_9173013192648734803[169] = 0;
   out_9173013192648734803[170] = 0;
   out_9173013192648734803[171] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]);
   out_9173013192648734803[172] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[18] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[17] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[16]);
   out_9173013192648734803[173] = 0;
   out_9173013192648734803[174] = 0;
   out_9173013192648734803[175] = 0;
   out_9173013192648734803[176] = 1;
   out_9173013192648734803[177] = 0;
   out_9173013192648734803[178] = 0;
   out_9173013192648734803[179] = 0;
   out_9173013192648734803[180] = 0;
   out_9173013192648734803[181] = 0;
   out_9173013192648734803[182] = 0;
   out_9173013192648734803[183] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_9173013192648734803[184] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_9173013192648734803[185] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_9173013192648734803[186] = 0;
   out_9173013192648734803[187] = 0;
   out_9173013192648734803[188] = 0;
   out_9173013192648734803[189] = 0;
   out_9173013192648734803[190] = 0;
   out_9173013192648734803[191] = 0;
   out_9173013192648734803[192] = 0;
   out_9173013192648734803[193] = 0;
   out_9173013192648734803[194] = 0;
   out_9173013192648734803[195] = 0;
   out_9173013192648734803[196] = 0;
   out_9173013192648734803[197] = 0;
   out_9173013192648734803[198] = 1;
   out_9173013192648734803[199] = 0;
   out_9173013192648734803[200] = 0;
   out_9173013192648734803[201] = 0;
   out_9173013192648734803[202] = 0;
   out_9173013192648734803[203] = 0;
   out_9173013192648734803[204] = 0;
   out_9173013192648734803[205] = 0;
   out_9173013192648734803[206] = 0;
   out_9173013192648734803[207] = 0;
   out_9173013192648734803[208] = 0;
   out_9173013192648734803[209] = 0;
   out_9173013192648734803[210] = 0;
   out_9173013192648734803[211] = 0;
   out_9173013192648734803[212] = 0;
   out_9173013192648734803[213] = 0;
   out_9173013192648734803[214] = 0;
   out_9173013192648734803[215] = 0;
   out_9173013192648734803[216] = 0;
   out_9173013192648734803[217] = 0;
   out_9173013192648734803[218] = 0;
   out_9173013192648734803[219] = 0;
   out_9173013192648734803[220] = 1;
   out_9173013192648734803[221] = 0;
   out_9173013192648734803[222] = 0;
   out_9173013192648734803[223] = 0;
   out_9173013192648734803[224] = 0;
   out_9173013192648734803[225] = 0;
   out_9173013192648734803[226] = 0;
   out_9173013192648734803[227] = 0;
   out_9173013192648734803[228] = 0;
   out_9173013192648734803[229] = 0;
   out_9173013192648734803[230] = 0;
   out_9173013192648734803[231] = 0;
   out_9173013192648734803[232] = 0;
   out_9173013192648734803[233] = 0;
   out_9173013192648734803[234] = 0;
   out_9173013192648734803[235] = 0;
   out_9173013192648734803[236] = 0;
   out_9173013192648734803[237] = 0;
   out_9173013192648734803[238] = 0;
   out_9173013192648734803[239] = 0;
   out_9173013192648734803[240] = 0;
   out_9173013192648734803[241] = 0;
   out_9173013192648734803[242] = 1;
   out_9173013192648734803[243] = 0;
   out_9173013192648734803[244] = 0;
   out_9173013192648734803[245] = 0;
   out_9173013192648734803[246] = 0;
   out_9173013192648734803[247] = 0;
   out_9173013192648734803[248] = 0;
   out_9173013192648734803[249] = 0;
   out_9173013192648734803[250] = 0;
   out_9173013192648734803[251] = 0;
   out_9173013192648734803[252] = 0;
   out_9173013192648734803[253] = 0;
   out_9173013192648734803[254] = 0;
   out_9173013192648734803[255] = 0;
   out_9173013192648734803[256] = 0;
   out_9173013192648734803[257] = 0;
   out_9173013192648734803[258] = 0;
   out_9173013192648734803[259] = 0;
   out_9173013192648734803[260] = 0;
   out_9173013192648734803[261] = 0;
   out_9173013192648734803[262] = 0;
   out_9173013192648734803[263] = 0;
   out_9173013192648734803[264] = 1;
   out_9173013192648734803[265] = 0;
   out_9173013192648734803[266] = 0;
   out_9173013192648734803[267] = 0;
   out_9173013192648734803[268] = 0;
   out_9173013192648734803[269] = 0;
   out_9173013192648734803[270] = 0;
   out_9173013192648734803[271] = 0;
   out_9173013192648734803[272] = 0;
   out_9173013192648734803[273] = 0;
   out_9173013192648734803[274] = 0;
   out_9173013192648734803[275] = 0;
   out_9173013192648734803[276] = 0;
   out_9173013192648734803[277] = 0;
   out_9173013192648734803[278] = 0;
   out_9173013192648734803[279] = 0;
   out_9173013192648734803[280] = 0;
   out_9173013192648734803[281] = 0;
   out_9173013192648734803[282] = 0;
   out_9173013192648734803[283] = 0;
   out_9173013192648734803[284] = 0;
   out_9173013192648734803[285] = 0;
   out_9173013192648734803[286] = 1;
   out_9173013192648734803[287] = 0;
   out_9173013192648734803[288] = 0;
   out_9173013192648734803[289] = 0;
   out_9173013192648734803[290] = 0;
   out_9173013192648734803[291] = 0;
   out_9173013192648734803[292] = 0;
   out_9173013192648734803[293] = 0;
   out_9173013192648734803[294] = 0;
   out_9173013192648734803[295] = 0;
   out_9173013192648734803[296] = 0;
   out_9173013192648734803[297] = 0;
   out_9173013192648734803[298] = 0;
   out_9173013192648734803[299] = 0;
   out_9173013192648734803[300] = 0;
   out_9173013192648734803[301] = 0;
   out_9173013192648734803[302] = 0;
   out_9173013192648734803[303] = 0;
   out_9173013192648734803[304] = 0;
   out_9173013192648734803[305] = 0;
   out_9173013192648734803[306] = 0;
   out_9173013192648734803[307] = 0;
   out_9173013192648734803[308] = 1;
   out_9173013192648734803[309] = 0;
   out_9173013192648734803[310] = 0;
   out_9173013192648734803[311] = 0;
   out_9173013192648734803[312] = 0;
   out_9173013192648734803[313] = 0;
   out_9173013192648734803[314] = 0;
   out_9173013192648734803[315] = 0;
   out_9173013192648734803[316] = 0;
   out_9173013192648734803[317] = 0;
   out_9173013192648734803[318] = 0;
   out_9173013192648734803[319] = 0;
   out_9173013192648734803[320] = 0;
   out_9173013192648734803[321] = 0;
   out_9173013192648734803[322] = 0;
   out_9173013192648734803[323] = 0;
   out_9173013192648734803[324] = 0;
   out_9173013192648734803[325] = 0;
   out_9173013192648734803[326] = 0;
   out_9173013192648734803[327] = 0;
   out_9173013192648734803[328] = 0;
   out_9173013192648734803[329] = 0;
   out_9173013192648734803[330] = 1;
   out_9173013192648734803[331] = 0;
   out_9173013192648734803[332] = 0;
   out_9173013192648734803[333] = 0;
   out_9173013192648734803[334] = 0;
   out_9173013192648734803[335] = 0;
   out_9173013192648734803[336] = 0;
   out_9173013192648734803[337] = 0;
   out_9173013192648734803[338] = 0;
   out_9173013192648734803[339] = 0;
   out_9173013192648734803[340] = 0;
   out_9173013192648734803[341] = 0;
   out_9173013192648734803[342] = 0;
   out_9173013192648734803[343] = 0;
   out_9173013192648734803[344] = 0;
   out_9173013192648734803[345] = 0;
   out_9173013192648734803[346] = 0;
   out_9173013192648734803[347] = 0;
   out_9173013192648734803[348] = 0;
   out_9173013192648734803[349] = 0;
   out_9173013192648734803[350] = 0;
   out_9173013192648734803[351] = 0;
   out_9173013192648734803[352] = 1;
   out_9173013192648734803[353] = 0;
   out_9173013192648734803[354] = 0;
   out_9173013192648734803[355] = 0;
   out_9173013192648734803[356] = 0;
   out_9173013192648734803[357] = 0;
   out_9173013192648734803[358] = 0;
   out_9173013192648734803[359] = 0;
   out_9173013192648734803[360] = 0;
   out_9173013192648734803[361] = 0;
   out_9173013192648734803[362] = 0;
   out_9173013192648734803[363] = 0;
   out_9173013192648734803[364] = 0;
   out_9173013192648734803[365] = 0;
   out_9173013192648734803[366] = 0;
   out_9173013192648734803[367] = 0;
   out_9173013192648734803[368] = 0;
   out_9173013192648734803[369] = 0;
   out_9173013192648734803[370] = 0;
   out_9173013192648734803[371] = 0;
   out_9173013192648734803[372] = 0;
   out_9173013192648734803[373] = 0;
   out_9173013192648734803[374] = 1;
   out_9173013192648734803[375] = 0;
   out_9173013192648734803[376] = 0;
   out_9173013192648734803[377] = 0;
   out_9173013192648734803[378] = 0;
   out_9173013192648734803[379] = 0;
   out_9173013192648734803[380] = 0;
   out_9173013192648734803[381] = 0;
   out_9173013192648734803[382] = 0;
   out_9173013192648734803[383] = 0;
   out_9173013192648734803[384] = 0;
   out_9173013192648734803[385] = 0;
   out_9173013192648734803[386] = 0;
   out_9173013192648734803[387] = 0;
   out_9173013192648734803[388] = 0;
   out_9173013192648734803[389] = 0;
   out_9173013192648734803[390] = 0;
   out_9173013192648734803[391] = 0;
   out_9173013192648734803[392] = 0;
   out_9173013192648734803[393] = 0;
   out_9173013192648734803[394] = 0;
   out_9173013192648734803[395] = 0;
   out_9173013192648734803[396] = 1;
   out_9173013192648734803[397] = 0;
   out_9173013192648734803[398] = 0;
   out_9173013192648734803[399] = 0;
   out_9173013192648734803[400] = 0;
   out_9173013192648734803[401] = 0;
   out_9173013192648734803[402] = 0;
   out_9173013192648734803[403] = 0;
   out_9173013192648734803[404] = 0;
   out_9173013192648734803[405] = 0;
   out_9173013192648734803[406] = 0;
   out_9173013192648734803[407] = 0;
   out_9173013192648734803[408] = 0;
   out_9173013192648734803[409] = 0;
   out_9173013192648734803[410] = 0;
   out_9173013192648734803[411] = 0;
   out_9173013192648734803[412] = 0;
   out_9173013192648734803[413] = 0;
   out_9173013192648734803[414] = 0;
   out_9173013192648734803[415] = 0;
   out_9173013192648734803[416] = 0;
   out_9173013192648734803[417] = 0;
   out_9173013192648734803[418] = 1;
   out_9173013192648734803[419] = 0;
   out_9173013192648734803[420] = 0;
   out_9173013192648734803[421] = 0;
   out_9173013192648734803[422] = 0;
   out_9173013192648734803[423] = 0;
   out_9173013192648734803[424] = 0;
   out_9173013192648734803[425] = 0;
   out_9173013192648734803[426] = 0;
   out_9173013192648734803[427] = 0;
   out_9173013192648734803[428] = 0;
   out_9173013192648734803[429] = 0;
   out_9173013192648734803[430] = 0;
   out_9173013192648734803[431] = 0;
   out_9173013192648734803[432] = 0;
   out_9173013192648734803[433] = 0;
   out_9173013192648734803[434] = 0;
   out_9173013192648734803[435] = 0;
   out_9173013192648734803[436] = 0;
   out_9173013192648734803[437] = 0;
   out_9173013192648734803[438] = 0;
   out_9173013192648734803[439] = 0;
   out_9173013192648734803[440] = 1;
}
void h_4(double *state, double *unused, double *out_6415996615380800277) {
   out_6415996615380800277[0] = state[10] + state[13];
   out_6415996615380800277[1] = state[11] + state[14];
   out_6415996615380800277[2] = state[12] + state[15];
}
void H_4(double *state, double *unused, double *out_4269303702930946503) {
   out_4269303702930946503[0] = 0;
   out_4269303702930946503[1] = 0;
   out_4269303702930946503[2] = 0;
   out_4269303702930946503[3] = 0;
   out_4269303702930946503[4] = 0;
   out_4269303702930946503[5] = 0;
   out_4269303702930946503[6] = 0;
   out_4269303702930946503[7] = 0;
   out_4269303702930946503[8] = 0;
   out_4269303702930946503[9] = 0;
   out_4269303702930946503[10] = 1;
   out_4269303702930946503[11] = 0;
   out_4269303702930946503[12] = 0;
   out_4269303702930946503[13] = 1;
   out_4269303702930946503[14] = 0;
   out_4269303702930946503[15] = 0;
   out_4269303702930946503[16] = 0;
   out_4269303702930946503[17] = 0;
   out_4269303702930946503[18] = 0;
   out_4269303702930946503[19] = 0;
   out_4269303702930946503[20] = 0;
   out_4269303702930946503[21] = 0;
   out_4269303702930946503[22] = 0;
   out_4269303702930946503[23] = 0;
   out_4269303702930946503[24] = 0;
   out_4269303702930946503[25] = 0;
   out_4269303702930946503[26] = 0;
   out_4269303702930946503[27] = 0;
   out_4269303702930946503[28] = 0;
   out_4269303702930946503[29] = 0;
   out_4269303702930946503[30] = 0;
   out_4269303702930946503[31] = 0;
   out_4269303702930946503[32] = 0;
   out_4269303702930946503[33] = 1;
   out_4269303702930946503[34] = 0;
   out_4269303702930946503[35] = 0;
   out_4269303702930946503[36] = 1;
   out_4269303702930946503[37] = 0;
   out_4269303702930946503[38] = 0;
   out_4269303702930946503[39] = 0;
   out_4269303702930946503[40] = 0;
   out_4269303702930946503[41] = 0;
   out_4269303702930946503[42] = 0;
   out_4269303702930946503[43] = 0;
   out_4269303702930946503[44] = 0;
   out_4269303702930946503[45] = 0;
   out_4269303702930946503[46] = 0;
   out_4269303702930946503[47] = 0;
   out_4269303702930946503[48] = 0;
   out_4269303702930946503[49] = 0;
   out_4269303702930946503[50] = 0;
   out_4269303702930946503[51] = 0;
   out_4269303702930946503[52] = 0;
   out_4269303702930946503[53] = 0;
   out_4269303702930946503[54] = 0;
   out_4269303702930946503[55] = 0;
   out_4269303702930946503[56] = 1;
   out_4269303702930946503[57] = 0;
   out_4269303702930946503[58] = 0;
   out_4269303702930946503[59] = 1;
   out_4269303702930946503[60] = 0;
   out_4269303702930946503[61] = 0;
   out_4269303702930946503[62] = 0;
   out_4269303702930946503[63] = 0;
   out_4269303702930946503[64] = 0;
   out_4269303702930946503[65] = 0;
}
void h_9(double *state, double *unused, double *out_8842512426566483338) {
   out_8842512426566483338[0] = state[10];
   out_8842512426566483338[1] = state[11];
   out_8842512426566483338[2] = state[12];
}
void H_9(double *state, double *unused, double *out_4028114056301355858) {
   out_4028114056301355858[0] = 0;
   out_4028114056301355858[1] = 0;
   out_4028114056301355858[2] = 0;
   out_4028114056301355858[3] = 0;
   out_4028114056301355858[4] = 0;
   out_4028114056301355858[5] = 0;
   out_4028114056301355858[6] = 0;
   out_4028114056301355858[7] = 0;
   out_4028114056301355858[8] = 0;
   out_4028114056301355858[9] = 0;
   out_4028114056301355858[10] = 1;
   out_4028114056301355858[11] = 0;
   out_4028114056301355858[12] = 0;
   out_4028114056301355858[13] = 0;
   out_4028114056301355858[14] = 0;
   out_4028114056301355858[15] = 0;
   out_4028114056301355858[16] = 0;
   out_4028114056301355858[17] = 0;
   out_4028114056301355858[18] = 0;
   out_4028114056301355858[19] = 0;
   out_4028114056301355858[20] = 0;
   out_4028114056301355858[21] = 0;
   out_4028114056301355858[22] = 0;
   out_4028114056301355858[23] = 0;
   out_4028114056301355858[24] = 0;
   out_4028114056301355858[25] = 0;
   out_4028114056301355858[26] = 0;
   out_4028114056301355858[27] = 0;
   out_4028114056301355858[28] = 0;
   out_4028114056301355858[29] = 0;
   out_4028114056301355858[30] = 0;
   out_4028114056301355858[31] = 0;
   out_4028114056301355858[32] = 0;
   out_4028114056301355858[33] = 1;
   out_4028114056301355858[34] = 0;
   out_4028114056301355858[35] = 0;
   out_4028114056301355858[36] = 0;
   out_4028114056301355858[37] = 0;
   out_4028114056301355858[38] = 0;
   out_4028114056301355858[39] = 0;
   out_4028114056301355858[40] = 0;
   out_4028114056301355858[41] = 0;
   out_4028114056301355858[42] = 0;
   out_4028114056301355858[43] = 0;
   out_4028114056301355858[44] = 0;
   out_4028114056301355858[45] = 0;
   out_4028114056301355858[46] = 0;
   out_4028114056301355858[47] = 0;
   out_4028114056301355858[48] = 0;
   out_4028114056301355858[49] = 0;
   out_4028114056301355858[50] = 0;
   out_4028114056301355858[51] = 0;
   out_4028114056301355858[52] = 0;
   out_4028114056301355858[53] = 0;
   out_4028114056301355858[54] = 0;
   out_4028114056301355858[55] = 0;
   out_4028114056301355858[56] = 1;
   out_4028114056301355858[57] = 0;
   out_4028114056301355858[58] = 0;
   out_4028114056301355858[59] = 0;
   out_4028114056301355858[60] = 0;
   out_4028114056301355858[61] = 0;
   out_4028114056301355858[62] = 0;
   out_4028114056301355858[63] = 0;
   out_4028114056301355858[64] = 0;
   out_4028114056301355858[65] = 0;
}
void h_10(double *state, double *unused, double *out_5850829510082950466) {
   out_5850829510082950466[0] = 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0] + state[16] + state[19];
   out_5850829510082950466[1] = 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1] + state[17] + state[20];
   out_5850829510082950466[2] = 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[2] + state[18] + state[21];
}
void H_10(double *state, double *unused, double *out_7434195717629840144) {
   out_7434195717629840144[0] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*pow(state[0], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_7434195717629840144[1] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_7434195717629840144[2] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[2];
   out_7434195717629840144[3] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_7434195717629840144[4] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_7434195717629840144[5] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_7434195717629840144[6] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_7434195717629840144[7] = 0;
   out_7434195717629840144[8] = 0;
   out_7434195717629840144[9] = 0;
   out_7434195717629840144[10] = 0;
   out_7434195717629840144[11] = 0;
   out_7434195717629840144[12] = 0;
   out_7434195717629840144[13] = 0;
   out_7434195717629840144[14] = 0;
   out_7434195717629840144[15] = 0;
   out_7434195717629840144[16] = 1;
   out_7434195717629840144[17] = 0;
   out_7434195717629840144[18] = 0;
   out_7434195717629840144[19] = 1;
   out_7434195717629840144[20] = 0;
   out_7434195717629840144[21] = 0;
   out_7434195717629840144[22] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_7434195717629840144[23] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*pow(state[1], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_7434195717629840144[24] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1]*state[2];
   out_7434195717629840144[25] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_7434195717629840144[26] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_7434195717629840144[27] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_7434195717629840144[28] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_7434195717629840144[29] = 0;
   out_7434195717629840144[30] = 0;
   out_7434195717629840144[31] = 0;
   out_7434195717629840144[32] = 0;
   out_7434195717629840144[33] = 0;
   out_7434195717629840144[34] = 0;
   out_7434195717629840144[35] = 0;
   out_7434195717629840144[36] = 0;
   out_7434195717629840144[37] = 0;
   out_7434195717629840144[38] = 0;
   out_7434195717629840144[39] = 1;
   out_7434195717629840144[40] = 0;
   out_7434195717629840144[41] = 0;
   out_7434195717629840144[42] = 1;
   out_7434195717629840144[43] = 0;
   out_7434195717629840144[44] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[0]*state[2];
   out_7434195717629840144[45] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[1]*state[2];
   out_7434195717629840144[46] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*pow(state[2], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_7434195717629840144[47] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_7434195717629840144[48] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_7434195717629840144[49] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_7434195717629840144[50] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_7434195717629840144[51] = 0;
   out_7434195717629840144[52] = 0;
   out_7434195717629840144[53] = 0;
   out_7434195717629840144[54] = 0;
   out_7434195717629840144[55] = 0;
   out_7434195717629840144[56] = 0;
   out_7434195717629840144[57] = 0;
   out_7434195717629840144[58] = 0;
   out_7434195717629840144[59] = 0;
   out_7434195717629840144[60] = 0;
   out_7434195717629840144[61] = 0;
   out_7434195717629840144[62] = 1;
   out_7434195717629840144[63] = 0;
   out_7434195717629840144[64] = 0;
   out_7434195717629840144[65] = 1;
}
void h_12(double *state, double *unused, double *out_8784104537664057632) {
   out_8784104537664057632[0] = state[0];
   out_8784104537664057632[1] = state[1];
   out_8784104537664057632[2] = state[2];
}
void H_12(double *state, double *unused, double *out_3648204677883352836) {
   out_3648204677883352836[0] = 1;
   out_3648204677883352836[1] = 0;
   out_3648204677883352836[2] = 0;
   out_3648204677883352836[3] = 0;
   out_3648204677883352836[4] = 0;
   out_3648204677883352836[5] = 0;
   out_3648204677883352836[6] = 0;
   out_3648204677883352836[7] = 0;
   out_3648204677883352836[8] = 0;
   out_3648204677883352836[9] = 0;
   out_3648204677883352836[10] = 0;
   out_3648204677883352836[11] = 0;
   out_3648204677883352836[12] = 0;
   out_3648204677883352836[13] = 0;
   out_3648204677883352836[14] = 0;
   out_3648204677883352836[15] = 0;
   out_3648204677883352836[16] = 0;
   out_3648204677883352836[17] = 0;
   out_3648204677883352836[18] = 0;
   out_3648204677883352836[19] = 0;
   out_3648204677883352836[20] = 0;
   out_3648204677883352836[21] = 0;
   out_3648204677883352836[22] = 0;
   out_3648204677883352836[23] = 1;
   out_3648204677883352836[24] = 0;
   out_3648204677883352836[25] = 0;
   out_3648204677883352836[26] = 0;
   out_3648204677883352836[27] = 0;
   out_3648204677883352836[28] = 0;
   out_3648204677883352836[29] = 0;
   out_3648204677883352836[30] = 0;
   out_3648204677883352836[31] = 0;
   out_3648204677883352836[32] = 0;
   out_3648204677883352836[33] = 0;
   out_3648204677883352836[34] = 0;
   out_3648204677883352836[35] = 0;
   out_3648204677883352836[36] = 0;
   out_3648204677883352836[37] = 0;
   out_3648204677883352836[38] = 0;
   out_3648204677883352836[39] = 0;
   out_3648204677883352836[40] = 0;
   out_3648204677883352836[41] = 0;
   out_3648204677883352836[42] = 0;
   out_3648204677883352836[43] = 0;
   out_3648204677883352836[44] = 0;
   out_3648204677883352836[45] = 0;
   out_3648204677883352836[46] = 1;
   out_3648204677883352836[47] = 0;
   out_3648204677883352836[48] = 0;
   out_3648204677883352836[49] = 0;
   out_3648204677883352836[50] = 0;
   out_3648204677883352836[51] = 0;
   out_3648204677883352836[52] = 0;
   out_3648204677883352836[53] = 0;
   out_3648204677883352836[54] = 0;
   out_3648204677883352836[55] = 0;
   out_3648204677883352836[56] = 0;
   out_3648204677883352836[57] = 0;
   out_3648204677883352836[58] = 0;
   out_3648204677883352836[59] = 0;
   out_3648204677883352836[60] = 0;
   out_3648204677883352836[61] = 0;
   out_3648204677883352836[62] = 0;
   out_3648204677883352836[63] = 0;
   out_3648204677883352836[64] = 0;
   out_3648204677883352836[65] = 0;
}
void h_35(double *state, double *unused, double *out_8692564655194293264) {
   out_8692564655194293264[0] = state[7];
   out_8692564655194293264[1] = state[8];
   out_8692564655194293264[2] = state[9];
}
void H_35(double *state, double *unused, double *out_902641645558339127) {
   out_902641645558339127[0] = 0;
   out_902641645558339127[1] = 0;
   out_902641645558339127[2] = 0;
   out_902641645558339127[3] = 0;
   out_902641645558339127[4] = 0;
   out_902641645558339127[5] = 0;
   out_902641645558339127[6] = 0;
   out_902641645558339127[7] = 1;
   out_902641645558339127[8] = 0;
   out_902641645558339127[9] = 0;
   out_902641645558339127[10] = 0;
   out_902641645558339127[11] = 0;
   out_902641645558339127[12] = 0;
   out_902641645558339127[13] = 0;
   out_902641645558339127[14] = 0;
   out_902641645558339127[15] = 0;
   out_902641645558339127[16] = 0;
   out_902641645558339127[17] = 0;
   out_902641645558339127[18] = 0;
   out_902641645558339127[19] = 0;
   out_902641645558339127[20] = 0;
   out_902641645558339127[21] = 0;
   out_902641645558339127[22] = 0;
   out_902641645558339127[23] = 0;
   out_902641645558339127[24] = 0;
   out_902641645558339127[25] = 0;
   out_902641645558339127[26] = 0;
   out_902641645558339127[27] = 0;
   out_902641645558339127[28] = 0;
   out_902641645558339127[29] = 0;
   out_902641645558339127[30] = 1;
   out_902641645558339127[31] = 0;
   out_902641645558339127[32] = 0;
   out_902641645558339127[33] = 0;
   out_902641645558339127[34] = 0;
   out_902641645558339127[35] = 0;
   out_902641645558339127[36] = 0;
   out_902641645558339127[37] = 0;
   out_902641645558339127[38] = 0;
   out_902641645558339127[39] = 0;
   out_902641645558339127[40] = 0;
   out_902641645558339127[41] = 0;
   out_902641645558339127[42] = 0;
   out_902641645558339127[43] = 0;
   out_902641645558339127[44] = 0;
   out_902641645558339127[45] = 0;
   out_902641645558339127[46] = 0;
   out_902641645558339127[47] = 0;
   out_902641645558339127[48] = 0;
   out_902641645558339127[49] = 0;
   out_902641645558339127[50] = 0;
   out_902641645558339127[51] = 0;
   out_902641645558339127[52] = 0;
   out_902641645558339127[53] = 1;
   out_902641645558339127[54] = 0;
   out_902641645558339127[55] = 0;
   out_902641645558339127[56] = 0;
   out_902641645558339127[57] = 0;
   out_902641645558339127[58] = 0;
   out_902641645558339127[59] = 0;
   out_902641645558339127[60] = 0;
   out_902641645558339127[61] = 0;
   out_902641645558339127[62] = 0;
   out_902641645558339127[63] = 0;
   out_902641645558339127[64] = 0;
   out_902641645558339127[65] = 0;
}
void h_32(double *state, double *unused, double *out_6944096540189434663) {
   out_6944096540189434663[0] = state[3];
   out_6944096540189434663[1] = state[4];
   out_6944096540189434663[2] = state[5];
   out_6944096540189434663[3] = state[6];
}
void H_32(double *state, double *unused, double *out_7472522454610282899) {
   out_7472522454610282899[0] = 0;
   out_7472522454610282899[1] = 0;
   out_7472522454610282899[2] = 0;
   out_7472522454610282899[3] = 1;
   out_7472522454610282899[4] = 0;
   out_7472522454610282899[5] = 0;
   out_7472522454610282899[6] = 0;
   out_7472522454610282899[7] = 0;
   out_7472522454610282899[8] = 0;
   out_7472522454610282899[9] = 0;
   out_7472522454610282899[10] = 0;
   out_7472522454610282899[11] = 0;
   out_7472522454610282899[12] = 0;
   out_7472522454610282899[13] = 0;
   out_7472522454610282899[14] = 0;
   out_7472522454610282899[15] = 0;
   out_7472522454610282899[16] = 0;
   out_7472522454610282899[17] = 0;
   out_7472522454610282899[18] = 0;
   out_7472522454610282899[19] = 0;
   out_7472522454610282899[20] = 0;
   out_7472522454610282899[21] = 0;
   out_7472522454610282899[22] = 0;
   out_7472522454610282899[23] = 0;
   out_7472522454610282899[24] = 0;
   out_7472522454610282899[25] = 0;
   out_7472522454610282899[26] = 1;
   out_7472522454610282899[27] = 0;
   out_7472522454610282899[28] = 0;
   out_7472522454610282899[29] = 0;
   out_7472522454610282899[30] = 0;
   out_7472522454610282899[31] = 0;
   out_7472522454610282899[32] = 0;
   out_7472522454610282899[33] = 0;
   out_7472522454610282899[34] = 0;
   out_7472522454610282899[35] = 0;
   out_7472522454610282899[36] = 0;
   out_7472522454610282899[37] = 0;
   out_7472522454610282899[38] = 0;
   out_7472522454610282899[39] = 0;
   out_7472522454610282899[40] = 0;
   out_7472522454610282899[41] = 0;
   out_7472522454610282899[42] = 0;
   out_7472522454610282899[43] = 0;
   out_7472522454610282899[44] = 0;
   out_7472522454610282899[45] = 0;
   out_7472522454610282899[46] = 0;
   out_7472522454610282899[47] = 0;
   out_7472522454610282899[48] = 0;
   out_7472522454610282899[49] = 1;
   out_7472522454610282899[50] = 0;
   out_7472522454610282899[51] = 0;
   out_7472522454610282899[52] = 0;
   out_7472522454610282899[53] = 0;
   out_7472522454610282899[54] = 0;
   out_7472522454610282899[55] = 0;
   out_7472522454610282899[56] = 0;
   out_7472522454610282899[57] = 0;
   out_7472522454610282899[58] = 0;
   out_7472522454610282899[59] = 0;
   out_7472522454610282899[60] = 0;
   out_7472522454610282899[61] = 0;
   out_7472522454610282899[62] = 0;
   out_7472522454610282899[63] = 0;
   out_7472522454610282899[64] = 0;
   out_7472522454610282899[65] = 0;
   out_7472522454610282899[66] = 0;
   out_7472522454610282899[67] = 0;
   out_7472522454610282899[68] = 0;
   out_7472522454610282899[69] = 0;
   out_7472522454610282899[70] = 0;
   out_7472522454610282899[71] = 0;
   out_7472522454610282899[72] = 1;
   out_7472522454610282899[73] = 0;
   out_7472522454610282899[74] = 0;
   out_7472522454610282899[75] = 0;
   out_7472522454610282899[76] = 0;
   out_7472522454610282899[77] = 0;
   out_7472522454610282899[78] = 0;
   out_7472522454610282899[79] = 0;
   out_7472522454610282899[80] = 0;
   out_7472522454610282899[81] = 0;
   out_7472522454610282899[82] = 0;
   out_7472522454610282899[83] = 0;
   out_7472522454610282899[84] = 0;
   out_7472522454610282899[85] = 0;
   out_7472522454610282899[86] = 0;
   out_7472522454610282899[87] = 0;
}
void h_13(double *state, double *unused, double *out_3327766219332293559) {
   out_3327766219332293559[0] = (-2*state[3]*state[5] + 2*state[4]*state[6])*state[9] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[8] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[7];
   out_3327766219332293559[1] = (2*state[3]*state[4] + 2*state[5]*state[6])*state[9] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[7] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[8];
   out_3327766219332293559[2] = (-2*state[3]*state[4] + 2*state[5]*state[6])*state[8] + (2*state[3]*state[5] + 2*state[4]*state[6])*state[7] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[9];
}
void H_13(double *state, double *unused, double *out_4676268393365832237) {
   out_4676268393365832237[0] = 0;
   out_4676268393365832237[1] = 0;
   out_4676268393365832237[2] = 0;
   out_4676268393365832237[3] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_4676268393365832237[4] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_4676268393365832237[5] = -2*state[3]*state[9] + 2*state[4]*state[8] - 2*state[5]*state[7];
   out_4676268393365832237[6] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_4676268393365832237[7] = pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2);
   out_4676268393365832237[8] = 2*state[3]*state[6] + 2*state[4]*state[5];
   out_4676268393365832237[9] = -2*state[3]*state[5] + 2*state[4]*state[6];
   out_4676268393365832237[10] = 0;
   out_4676268393365832237[11] = 0;
   out_4676268393365832237[12] = 0;
   out_4676268393365832237[13] = 0;
   out_4676268393365832237[14] = 0;
   out_4676268393365832237[15] = 0;
   out_4676268393365832237[16] = 0;
   out_4676268393365832237[17] = 0;
   out_4676268393365832237[18] = 0;
   out_4676268393365832237[19] = 0;
   out_4676268393365832237[20] = 0;
   out_4676268393365832237[21] = 0;
   out_4676268393365832237[22] = 0;
   out_4676268393365832237[23] = 0;
   out_4676268393365832237[24] = 0;
   out_4676268393365832237[25] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_4676268393365832237[26] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_4676268393365832237[27] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_4676268393365832237[28] = -2*state[3]*state[7] + 2*state[5]*state[9] - 2*state[6]*state[8];
   out_4676268393365832237[29] = -2*state[3]*state[6] + 2*state[4]*state[5];
   out_4676268393365832237[30] = pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2);
   out_4676268393365832237[31] = 2*state[3]*state[4] + 2*state[5]*state[6];
   out_4676268393365832237[32] = 0;
   out_4676268393365832237[33] = 0;
   out_4676268393365832237[34] = 0;
   out_4676268393365832237[35] = 0;
   out_4676268393365832237[36] = 0;
   out_4676268393365832237[37] = 0;
   out_4676268393365832237[38] = 0;
   out_4676268393365832237[39] = 0;
   out_4676268393365832237[40] = 0;
   out_4676268393365832237[41] = 0;
   out_4676268393365832237[42] = 0;
   out_4676268393365832237[43] = 0;
   out_4676268393365832237[44] = 0;
   out_4676268393365832237[45] = 0;
   out_4676268393365832237[46] = 0;
   out_4676268393365832237[47] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_4676268393365832237[48] = -2*state[3]*state[8] - 2*state[4]*state[9] + 2*state[6]*state[7];
   out_4676268393365832237[49] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_4676268393365832237[50] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_4676268393365832237[51] = 2*state[3]*state[5] + 2*state[4]*state[6];
   out_4676268393365832237[52] = -2*state[3]*state[4] + 2*state[5]*state[6];
   out_4676268393365832237[53] = pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2);
   out_4676268393365832237[54] = 0;
   out_4676268393365832237[55] = 0;
   out_4676268393365832237[56] = 0;
   out_4676268393365832237[57] = 0;
   out_4676268393365832237[58] = 0;
   out_4676268393365832237[59] = 0;
   out_4676268393365832237[60] = 0;
   out_4676268393365832237[61] = 0;
   out_4676268393365832237[62] = 0;
   out_4676268393365832237[63] = 0;
   out_4676268393365832237[64] = 0;
   out_4676268393365832237[65] = 0;
}
void h_14(double *state, double *unused, double *out_8842512426566483338) {
   out_8842512426566483338[0] = state[10];
   out_8842512426566483338[1] = state[11];
   out_8842512426566483338[2] = state[12];
}
void H_14(double *state, double *unused, double *out_4028114056301355858) {
   out_4028114056301355858[0] = 0;
   out_4028114056301355858[1] = 0;
   out_4028114056301355858[2] = 0;
   out_4028114056301355858[3] = 0;
   out_4028114056301355858[4] = 0;
   out_4028114056301355858[5] = 0;
   out_4028114056301355858[6] = 0;
   out_4028114056301355858[7] = 0;
   out_4028114056301355858[8] = 0;
   out_4028114056301355858[9] = 0;
   out_4028114056301355858[10] = 1;
   out_4028114056301355858[11] = 0;
   out_4028114056301355858[12] = 0;
   out_4028114056301355858[13] = 0;
   out_4028114056301355858[14] = 0;
   out_4028114056301355858[15] = 0;
   out_4028114056301355858[16] = 0;
   out_4028114056301355858[17] = 0;
   out_4028114056301355858[18] = 0;
   out_4028114056301355858[19] = 0;
   out_4028114056301355858[20] = 0;
   out_4028114056301355858[21] = 0;
   out_4028114056301355858[22] = 0;
   out_4028114056301355858[23] = 0;
   out_4028114056301355858[24] = 0;
   out_4028114056301355858[25] = 0;
   out_4028114056301355858[26] = 0;
   out_4028114056301355858[27] = 0;
   out_4028114056301355858[28] = 0;
   out_4028114056301355858[29] = 0;
   out_4028114056301355858[30] = 0;
   out_4028114056301355858[31] = 0;
   out_4028114056301355858[32] = 0;
   out_4028114056301355858[33] = 1;
   out_4028114056301355858[34] = 0;
   out_4028114056301355858[35] = 0;
   out_4028114056301355858[36] = 0;
   out_4028114056301355858[37] = 0;
   out_4028114056301355858[38] = 0;
   out_4028114056301355858[39] = 0;
   out_4028114056301355858[40] = 0;
   out_4028114056301355858[41] = 0;
   out_4028114056301355858[42] = 0;
   out_4028114056301355858[43] = 0;
   out_4028114056301355858[44] = 0;
   out_4028114056301355858[45] = 0;
   out_4028114056301355858[46] = 0;
   out_4028114056301355858[47] = 0;
   out_4028114056301355858[48] = 0;
   out_4028114056301355858[49] = 0;
   out_4028114056301355858[50] = 0;
   out_4028114056301355858[51] = 0;
   out_4028114056301355858[52] = 0;
   out_4028114056301355858[53] = 0;
   out_4028114056301355858[54] = 0;
   out_4028114056301355858[55] = 0;
   out_4028114056301355858[56] = 1;
   out_4028114056301355858[57] = 0;
   out_4028114056301355858[58] = 0;
   out_4028114056301355858[59] = 0;
   out_4028114056301355858[60] = 0;
   out_4028114056301355858[61] = 0;
   out_4028114056301355858[62] = 0;
   out_4028114056301355858[63] = 0;
   out_4028114056301355858[64] = 0;
   out_4028114056301355858[65] = 0;
}
void h_33(double *state, double *unused, double *out_1985963892733013685) {
   out_1985963892733013685[0] = state[16];
   out_1985963892733013685[1] = state[17];
   out_1985963892733013685[2] = state[18];
}
void H_33(double *state, double *unused, double *out_2247915359080518477) {
   out_2247915359080518477[0] = 0;
   out_2247915359080518477[1] = 0;
   out_2247915359080518477[2] = 0;
   out_2247915359080518477[3] = 0;
   out_2247915359080518477[4] = 0;
   out_2247915359080518477[5] = 0;
   out_2247915359080518477[6] = 0;
   out_2247915359080518477[7] = 0;
   out_2247915359080518477[8] = 0;
   out_2247915359080518477[9] = 0;
   out_2247915359080518477[10] = 0;
   out_2247915359080518477[11] = 0;
   out_2247915359080518477[12] = 0;
   out_2247915359080518477[13] = 0;
   out_2247915359080518477[14] = 0;
   out_2247915359080518477[15] = 0;
   out_2247915359080518477[16] = 1;
   out_2247915359080518477[17] = 0;
   out_2247915359080518477[18] = 0;
   out_2247915359080518477[19] = 0;
   out_2247915359080518477[20] = 0;
   out_2247915359080518477[21] = 0;
   out_2247915359080518477[22] = 0;
   out_2247915359080518477[23] = 0;
   out_2247915359080518477[24] = 0;
   out_2247915359080518477[25] = 0;
   out_2247915359080518477[26] = 0;
   out_2247915359080518477[27] = 0;
   out_2247915359080518477[28] = 0;
   out_2247915359080518477[29] = 0;
   out_2247915359080518477[30] = 0;
   out_2247915359080518477[31] = 0;
   out_2247915359080518477[32] = 0;
   out_2247915359080518477[33] = 0;
   out_2247915359080518477[34] = 0;
   out_2247915359080518477[35] = 0;
   out_2247915359080518477[36] = 0;
   out_2247915359080518477[37] = 0;
   out_2247915359080518477[38] = 0;
   out_2247915359080518477[39] = 1;
   out_2247915359080518477[40] = 0;
   out_2247915359080518477[41] = 0;
   out_2247915359080518477[42] = 0;
   out_2247915359080518477[43] = 0;
   out_2247915359080518477[44] = 0;
   out_2247915359080518477[45] = 0;
   out_2247915359080518477[46] = 0;
   out_2247915359080518477[47] = 0;
   out_2247915359080518477[48] = 0;
   out_2247915359080518477[49] = 0;
   out_2247915359080518477[50] = 0;
   out_2247915359080518477[51] = 0;
   out_2247915359080518477[52] = 0;
   out_2247915359080518477[53] = 0;
   out_2247915359080518477[54] = 0;
   out_2247915359080518477[55] = 0;
   out_2247915359080518477[56] = 0;
   out_2247915359080518477[57] = 0;
   out_2247915359080518477[58] = 0;
   out_2247915359080518477[59] = 0;
   out_2247915359080518477[60] = 0;
   out_2247915359080518477[61] = 0;
   out_2247915359080518477[62] = 1;
   out_2247915359080518477[63] = 0;
   out_2247915359080518477[64] = 0;
   out_2247915359080518477[65] = 0;
}
#include <eigen3/Eigen/Dense>
#include <iostream>

typedef Eigen::Matrix<double, DIM, DIM, Eigen::RowMajor> DDM;
typedef Eigen::Matrix<double, EDIM, EDIM, Eigen::RowMajor> EEM;
typedef Eigen::Matrix<double, DIM, EDIM, Eigen::RowMajor> DEM;

void predict(double *in_x, double *in_P, double *in_Q, double dt) {
  typedef Eigen::Matrix<double, MEDIM, MEDIM, Eigen::RowMajor> RRM;

  double nx[DIM] = {0};
  double in_F[EDIM*EDIM] = {0};

  // functions from sympy
  f_fun(in_x, dt, nx);
  F_fun(in_x, dt, in_F);


  EEM F(in_F);
  EEM P(in_P);
  EEM Q(in_Q);

  RRM F_main = F.topLeftCorner(MEDIM, MEDIM);
  P.topLeftCorner(MEDIM, MEDIM) = (F_main * P.topLeftCorner(MEDIM, MEDIM)) * F_main.transpose();
  P.topRightCorner(MEDIM, EDIM - MEDIM) = F_main * P.topRightCorner(MEDIM, EDIM - MEDIM);
  P.bottomLeftCorner(EDIM - MEDIM, MEDIM) = P.bottomLeftCorner(EDIM - MEDIM, MEDIM) * F_main.transpose();

  P = P + dt*Q;

  // copy out state
  memcpy(in_x, nx, DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
}

// note: extra_args dim only correct when null space projecting
// otherwise 1
template <int ZDIM, int EADIM, bool MAHA_TEST>
void update(double *in_x, double *in_P, Hfun h_fun, Hfun H_fun, Hfun Hea_fun, double *in_z, double *in_R, double *in_ea, double MAHA_THRESHOLD) {
  typedef Eigen::Matrix<double, ZDIM, ZDIM, Eigen::RowMajor> ZZM;
  typedef Eigen::Matrix<double, ZDIM, DIM, Eigen::RowMajor> ZDM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, EDIM, Eigen::RowMajor> XEM;
  //typedef Eigen::Matrix<double, EDIM, ZDIM, Eigen::RowMajor> EZM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, 1> X1M;
  typedef Eigen::Matrix<double, Eigen::Dynamic, Eigen::Dynamic, Eigen::RowMajor> XXM;

  double in_hx[ZDIM] = {0};
  double in_H[ZDIM * DIM] = {0};
  double in_H_mod[EDIM * DIM] = {0};
  double delta_x[EDIM] = {0};
  double x_new[DIM] = {0};


  // state x, P
  Eigen::Matrix<double, ZDIM, 1> z(in_z);
  EEM P(in_P);
  ZZM pre_R(in_R);

  // functions from sympy
  h_fun(in_x, in_ea, in_hx);
  H_fun(in_x, in_ea, in_H);
  ZDM pre_H(in_H);

  // get y (y = z - hx)
  Eigen::Matrix<double, ZDIM, 1> pre_y(in_hx); pre_y = z - pre_y;
  X1M y; XXM H; XXM R;
  if (Hea_fun){
    typedef Eigen::Matrix<double, ZDIM, EADIM, Eigen::RowMajor> ZAM;
    double in_Hea[ZDIM * EADIM] = {0};
    Hea_fun(in_x, in_ea, in_Hea);
    ZAM Hea(in_Hea);
    XXM A = Hea.transpose().fullPivLu().kernel();


    y = A.transpose() * pre_y;
    H = A.transpose() * pre_H;
    R = A.transpose() * pre_R * A;
  } else {
    y = pre_y;
    H = pre_H;
    R = pre_R;
  }
  // get modified H
  H_mod_fun(in_x, in_H_mod);
  DEM H_mod(in_H_mod);
  XEM H_err = H * H_mod;

  // Do mahalobis distance test
  if (MAHA_TEST){
    XXM a = (H_err * P * H_err.transpose() + R).inverse();
    double maha_dist = y.transpose() * a * y;
    if (maha_dist > MAHA_THRESHOLD){
      R = 1.0e16 * R;
    }
  }

  // Outlier resilient weighting
  double weight = 1;//(1.5)/(1 + y.squaredNorm()/R.sum());

  // kalman gains and I_KH
  XXM S = ((H_err * P) * H_err.transpose()) + R/weight;
  XEM KT = S.fullPivLu().solve(H_err * P.transpose());
  //EZM K = KT.transpose(); TODO: WHY DOES THIS NOT COMPILE?
  //EZM K = S.fullPivLu().solve(H_err * P.transpose()).transpose();
  //std::cout << "Here is the matrix rot:\n" << K << std::endl;
  EEM I_KH = Eigen::Matrix<double, EDIM, EDIM>::Identity() - (KT.transpose() * H_err);

  // update state by injecting dx
  Eigen::Matrix<double, EDIM, 1> dx(delta_x);
  dx  = (KT.transpose() * y);
  memcpy(delta_x, dx.data(), EDIM * sizeof(double));
  err_fun(in_x, delta_x, x_new);
  Eigen::Matrix<double, DIM, 1> x(x_new);

  // update cov
  P = ((I_KH * P) * I_KH.transpose()) + ((KT.transpose() * R) * KT);

  // copy out state
  memcpy(in_x, x.data(), DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
  memcpy(in_z, y.data(), y.rows() * sizeof(double));
}




}
extern "C" {

void live_update_4(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_4, H_4, NULL, in_z, in_R, in_ea, MAHA_THRESH_4);
}
void live_update_9(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_9, H_9, NULL, in_z, in_R, in_ea, MAHA_THRESH_9);
}
void live_update_10(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_10, H_10, NULL, in_z, in_R, in_ea, MAHA_THRESH_10);
}
void live_update_12(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_12, H_12, NULL, in_z, in_R, in_ea, MAHA_THRESH_12);
}
void live_update_35(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_35, H_35, NULL, in_z, in_R, in_ea, MAHA_THRESH_35);
}
void live_update_32(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<4, 3, 0>(in_x, in_P, h_32, H_32, NULL, in_z, in_R, in_ea, MAHA_THRESH_32);
}
void live_update_13(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_13, H_13, NULL, in_z, in_R, in_ea, MAHA_THRESH_13);
}
void live_update_14(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_14, H_14, NULL, in_z, in_R, in_ea, MAHA_THRESH_14);
}
void live_update_33(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_33, H_33, NULL, in_z, in_R, in_ea, MAHA_THRESH_33);
}
void live_H(double *in_vec, double *out_892038790922331242) {
  H(in_vec, out_892038790922331242);
}
void live_err_fun(double *nom_x, double *delta_x, double *out_8323515011948575310) {
  err_fun(nom_x, delta_x, out_8323515011948575310);
}
void live_inv_err_fun(double *nom_x, double *true_x, double *out_963834875752753094) {
  inv_err_fun(nom_x, true_x, out_963834875752753094);
}
void live_H_mod_fun(double *state, double *out_6618057656078271387) {
  H_mod_fun(state, out_6618057656078271387);
}
void live_f_fun(double *state, double dt, double *out_8465880934435782614) {
  f_fun(state,  dt, out_8465880934435782614);
}
void live_F_fun(double *state, double dt, double *out_9173013192648734803) {
  F_fun(state,  dt, out_9173013192648734803);
}
void live_h_4(double *state, double *unused, double *out_6415996615380800277) {
  h_4(state, unused, out_6415996615380800277);
}
void live_H_4(double *state, double *unused, double *out_4269303702930946503) {
  H_4(state, unused, out_4269303702930946503);
}
void live_h_9(double *state, double *unused, double *out_8842512426566483338) {
  h_9(state, unused, out_8842512426566483338);
}
void live_H_9(double *state, double *unused, double *out_4028114056301355858) {
  H_9(state, unused, out_4028114056301355858);
}
void live_h_10(double *state, double *unused, double *out_5850829510082950466) {
  h_10(state, unused, out_5850829510082950466);
}
void live_H_10(double *state, double *unused, double *out_7434195717629840144) {
  H_10(state, unused, out_7434195717629840144);
}
void live_h_12(double *state, double *unused, double *out_8784104537664057632) {
  h_12(state, unused, out_8784104537664057632);
}
void live_H_12(double *state, double *unused, double *out_3648204677883352836) {
  H_12(state, unused, out_3648204677883352836);
}
void live_h_35(double *state, double *unused, double *out_8692564655194293264) {
  h_35(state, unused, out_8692564655194293264);
}
void live_H_35(double *state, double *unused, double *out_902641645558339127) {
  H_35(state, unused, out_902641645558339127);
}
void live_h_32(double *state, double *unused, double *out_6944096540189434663) {
  h_32(state, unused, out_6944096540189434663);
}
void live_H_32(double *state, double *unused, double *out_7472522454610282899) {
  H_32(state, unused, out_7472522454610282899);
}
void live_h_13(double *state, double *unused, double *out_3327766219332293559) {
  h_13(state, unused, out_3327766219332293559);
}
void live_H_13(double *state, double *unused, double *out_4676268393365832237) {
  H_13(state, unused, out_4676268393365832237);
}
void live_h_14(double *state, double *unused, double *out_8842512426566483338) {
  h_14(state, unused, out_8842512426566483338);
}
void live_H_14(double *state, double *unused, double *out_4028114056301355858) {
  H_14(state, unused, out_4028114056301355858);
}
void live_h_33(double *state, double *unused, double *out_1985963892733013685) {
  h_33(state, unused, out_1985963892733013685);
}
void live_H_33(double *state, double *unused, double *out_2247915359080518477) {
  H_33(state, unused, out_2247915359080518477);
}
void live_predict(double *in_x, double *in_P, double *in_Q, double dt) {
  predict(in_x, in_P, in_Q, dt);
}
}

const EKF live = {
  .name = "live",
  .kinds = { 4, 9, 10, 12, 35, 32, 13, 14, 33 },
  .feature_kinds = {  },
  .f_fun = live_f_fun,
  .F_fun = live_F_fun,
  .err_fun = live_err_fun,
  .inv_err_fun = live_inv_err_fun,
  .H_mod_fun = live_H_mod_fun,
  .predict = live_predict,
  .hs = {
    { 4, live_h_4 },
    { 9, live_h_9 },
    { 10, live_h_10 },
    { 12, live_h_12 },
    { 35, live_h_35 },
    { 32, live_h_32 },
    { 13, live_h_13 },
    { 14, live_h_14 },
    { 33, live_h_33 },
  },
  .Hs = {
    { 4, live_H_4 },
    { 9, live_H_9 },
    { 10, live_H_10 },
    { 12, live_H_12 },
    { 35, live_H_35 },
    { 32, live_H_32 },
    { 13, live_H_13 },
    { 14, live_H_14 },
    { 33, live_H_33 },
  },
  .updates = {
    { 4, live_update_4 },
    { 9, live_update_9 },
    { 10, live_update_10 },
    { 12, live_update_12 },
    { 35, live_update_35 },
    { 32, live_update_32 },
    { 13, live_update_13 },
    { 14, live_update_14 },
    { 33, live_update_33 },
  },
  .Hes = {
  },
  .sets = {
  },
  .extra_routines = {
    { "H", live_H },
  },
};

ekf_lib_init(live)
