#include "live.h"

namespace {
#define DIM 22
#define EDIM 21
#define MEDIM 21
typedef void (*Hfun)(double *, double *, double *);
const static double MAHA_THRESH_4 = 7.814727903251177;
const static double MAHA_THRESH_9 = 7.814727903251177;
const static double MAHA_THRESH_10 = 7.814727903251177;
const static double MAHA_THRESH_12 = 7.814727903251177;
const static double MAHA_THRESH_35 = 7.814727903251177;
const static double MAHA_THRESH_32 = 9.487729036781154;
const static double MAHA_THRESH_13 = 7.814727903251177;
const static double MAHA_THRESH_14 = 7.814727903251177;
const static double MAHA_THRESH_33 = 7.814727903251177;

/******************************************************************************
 *                       Code generated with SymPy 1.12                       *
 *                                                                            *
 *              See http://www.sympy.org/ for more information.               *
 *                                                                            *
 *                         This file is part of 'ekf'                         *
 ******************************************************************************/
void H(double *in_vec, double *out_810863447993294239) {
   out_810863447993294239[0] = 0;
   out_810863447993294239[1] = -sin(in_vec[1])*sin(in_vec[2])*in_vec[4] - sin(in_vec[1])*cos(in_vec[2])*in_vec[3] - cos(in_vec[1])*in_vec[5];
   out_810863447993294239[2] = -sin(in_vec[2])*cos(in_vec[1])*in_vec[3] + cos(in_vec[1])*cos(in_vec[2])*in_vec[4];
   out_810863447993294239[3] = cos(in_vec[1])*cos(in_vec[2]);
   out_810863447993294239[4] = sin(in_vec[2])*cos(in_vec[1]);
   out_810863447993294239[5] = -sin(in_vec[1]);
   out_810863447993294239[6] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (-sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_810863447993294239[7] = -sin(in_vec[0])*sin(in_vec[1])*in_vec[5] + sin(in_vec[0])*sin(in_vec[2])*cos(in_vec[1])*in_vec[4] + sin(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_810863447993294239[8] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]))*in_vec[4];
   out_810863447993294239[9] = sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]);
   out_810863447993294239[10] = sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) + cos(in_vec[0])*cos(in_vec[2]);
   out_810863447993294239[11] = sin(in_vec[0])*cos(in_vec[1]);
   out_810863447993294239[12] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (-sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) + sin(in_vec[2])*cos(in_vec[0]))*in_vec[3] - sin(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_810863447993294239[13] = -sin(in_vec[1])*cos(in_vec[0])*in_vec[5] + sin(in_vec[2])*cos(in_vec[0])*cos(in_vec[1])*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_810863447993294239[14] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (sin(in_vec[0])*cos(in_vec[2]) - sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[3];
   out_810863447993294239[15] = sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]);
   out_810863447993294239[16] = -sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]);
   out_810863447993294239[17] = cos(in_vec[0])*cos(in_vec[1]);
}
void err_fun(double *nom_x, double *delta_x, double *out_3497916368343231976) {
   out_3497916368343231976[0] = delta_x[0] + nom_x[0];
   out_3497916368343231976[1] = delta_x[1] + nom_x[1];
   out_3497916368343231976[2] = delta_x[2] + nom_x[2];
   out_3497916368343231976[3] = -0.5*delta_x[3]*nom_x[4] - 0.5*delta_x[4]*nom_x[5] - 0.5*delta_x[5]*nom_x[6] + 1.0*nom_x[3];
   out_3497916368343231976[4] = 0.5*delta_x[3]*nom_x[3] + 0.5*delta_x[4]*nom_x[6] - 0.5*delta_x[5]*nom_x[5] + 1.0*nom_x[4];
   out_3497916368343231976[5] = -0.5*delta_x[3]*nom_x[6] + 0.5*delta_x[4]*nom_x[3] + 0.5*delta_x[5]*nom_x[4] + 1.0*nom_x[5];
   out_3497916368343231976[6] = 0.5*delta_x[3]*nom_x[5] - 0.5*delta_x[4]*nom_x[4] + 0.5*delta_x[5]*nom_x[3] + 1.0*nom_x[6];
   out_3497916368343231976[7] = delta_x[6] + nom_x[7];
   out_3497916368343231976[8] = delta_x[7] + nom_x[8];
   out_3497916368343231976[9] = delta_x[8] + nom_x[9];
   out_3497916368343231976[10] = delta_x[9] + nom_x[10];
   out_3497916368343231976[11] = delta_x[10] + nom_x[11];
   out_3497916368343231976[12] = delta_x[11] + nom_x[12];
   out_3497916368343231976[13] = delta_x[12] + nom_x[13];
   out_3497916368343231976[14] = delta_x[13] + nom_x[14];
   out_3497916368343231976[15] = delta_x[14] + nom_x[15];
   out_3497916368343231976[16] = delta_x[15] + nom_x[16];
   out_3497916368343231976[17] = delta_x[16] + nom_x[17];
   out_3497916368343231976[18] = delta_x[17] + nom_x[18];
   out_3497916368343231976[19] = delta_x[18] + nom_x[19];
   out_3497916368343231976[20] = delta_x[19] + nom_x[20];
   out_3497916368343231976[21] = delta_x[20] + nom_x[21];
}
void inv_err_fun(double *nom_x, double *true_x, double *out_5885895562894163360) {
   out_5885895562894163360[0] = -nom_x[0] + true_x[0];
   out_5885895562894163360[1] = -nom_x[1] + true_x[1];
   out_5885895562894163360[2] = -nom_x[2] + true_x[2];
   out_5885895562894163360[3] = 2*nom_x[3]*true_x[4] - 2*nom_x[4]*true_x[3] + 2*nom_x[5]*true_x[6] - 2*nom_x[6]*true_x[5];
   out_5885895562894163360[4] = 2*nom_x[3]*true_x[5] - 2*nom_x[4]*true_x[6] - 2*nom_x[5]*true_x[3] + 2*nom_x[6]*true_x[4];
   out_5885895562894163360[5] = 2*nom_x[3]*true_x[6] + 2*nom_x[4]*true_x[5] - 2*nom_x[5]*true_x[4] - 2*nom_x[6]*true_x[3];
   out_5885895562894163360[6] = -nom_x[7] + true_x[7];
   out_5885895562894163360[7] = -nom_x[8] + true_x[8];
   out_5885895562894163360[8] = -nom_x[9] + true_x[9];
   out_5885895562894163360[9] = -nom_x[10] + true_x[10];
   out_5885895562894163360[10] = -nom_x[11] + true_x[11];
   out_5885895562894163360[11] = -nom_x[12] + true_x[12];
   out_5885895562894163360[12] = -nom_x[13] + true_x[13];
   out_5885895562894163360[13] = -nom_x[14] + true_x[14];
   out_5885895562894163360[14] = -nom_x[15] + true_x[15];
   out_5885895562894163360[15] = -nom_x[16] + true_x[16];
   out_5885895562894163360[16] = -nom_x[17] + true_x[17];
   out_5885895562894163360[17] = -nom_x[18] + true_x[18];
   out_5885895562894163360[18] = -nom_x[19] + true_x[19];
   out_5885895562894163360[19] = -nom_x[20] + true_x[20];
   out_5885895562894163360[20] = -nom_x[21] + true_x[21];
}
void H_mod_fun(double *state, double *out_7827200557488535930) {
   out_7827200557488535930[0] = 1.0;
   out_7827200557488535930[1] = 0;
   out_7827200557488535930[2] = 0;
   out_7827200557488535930[3] = 0;
   out_7827200557488535930[4] = 0;
   out_7827200557488535930[5] = 0;
   out_7827200557488535930[6] = 0;
   out_7827200557488535930[7] = 0;
   out_7827200557488535930[8] = 0;
   out_7827200557488535930[9] = 0;
   out_7827200557488535930[10] = 0;
   out_7827200557488535930[11] = 0;
   out_7827200557488535930[12] = 0;
   out_7827200557488535930[13] = 0;
   out_7827200557488535930[14] = 0;
   out_7827200557488535930[15] = 0;
   out_7827200557488535930[16] = 0;
   out_7827200557488535930[17] = 0;
   out_7827200557488535930[18] = 0;
   out_7827200557488535930[19] = 0;
   out_7827200557488535930[20] = 0;
   out_7827200557488535930[21] = 0;
   out_7827200557488535930[22] = 1.0;
   out_7827200557488535930[23] = 0;
   out_7827200557488535930[24] = 0;
   out_7827200557488535930[25] = 0;
   out_7827200557488535930[26] = 0;
   out_7827200557488535930[27] = 0;
   out_7827200557488535930[28] = 0;
   out_7827200557488535930[29] = 0;
   out_7827200557488535930[30] = 0;
   out_7827200557488535930[31] = 0;
   out_7827200557488535930[32] = 0;
   out_7827200557488535930[33] = 0;
   out_7827200557488535930[34] = 0;
   out_7827200557488535930[35] = 0;
   out_7827200557488535930[36] = 0;
   out_7827200557488535930[37] = 0;
   out_7827200557488535930[38] = 0;
   out_7827200557488535930[39] = 0;
   out_7827200557488535930[40] = 0;
   out_7827200557488535930[41] = 0;
   out_7827200557488535930[42] = 0;
   out_7827200557488535930[43] = 0;
   out_7827200557488535930[44] = 1.0;
   out_7827200557488535930[45] = 0;
   out_7827200557488535930[46] = 0;
   out_7827200557488535930[47] = 0;
   out_7827200557488535930[48] = 0;
   out_7827200557488535930[49] = 0;
   out_7827200557488535930[50] = 0;
   out_7827200557488535930[51] = 0;
   out_7827200557488535930[52] = 0;
   out_7827200557488535930[53] = 0;
   out_7827200557488535930[54] = 0;
   out_7827200557488535930[55] = 0;
   out_7827200557488535930[56] = 0;
   out_7827200557488535930[57] = 0;
   out_7827200557488535930[58] = 0;
   out_7827200557488535930[59] = 0;
   out_7827200557488535930[60] = 0;
   out_7827200557488535930[61] = 0;
   out_7827200557488535930[62] = 0;
   out_7827200557488535930[63] = 0;
   out_7827200557488535930[64] = 0;
   out_7827200557488535930[65] = 0;
   out_7827200557488535930[66] = -0.5*state[4];
   out_7827200557488535930[67] = -0.5*state[5];
   out_7827200557488535930[68] = -0.5*state[6];
   out_7827200557488535930[69] = 0;
   out_7827200557488535930[70] = 0;
   out_7827200557488535930[71] = 0;
   out_7827200557488535930[72] = 0;
   out_7827200557488535930[73] = 0;
   out_7827200557488535930[74] = 0;
   out_7827200557488535930[75] = 0;
   out_7827200557488535930[76] = 0;
   out_7827200557488535930[77] = 0;
   out_7827200557488535930[78] = 0;
   out_7827200557488535930[79] = 0;
   out_7827200557488535930[80] = 0;
   out_7827200557488535930[81] = 0;
   out_7827200557488535930[82] = 0;
   out_7827200557488535930[83] = 0;
   out_7827200557488535930[84] = 0;
   out_7827200557488535930[85] = 0;
   out_7827200557488535930[86] = 0;
   out_7827200557488535930[87] = 0.5*state[3];
   out_7827200557488535930[88] = 0.5*state[6];
   out_7827200557488535930[89] = -0.5*state[5];
   out_7827200557488535930[90] = 0;
   out_7827200557488535930[91] = 0;
   out_7827200557488535930[92] = 0;
   out_7827200557488535930[93] = 0;
   out_7827200557488535930[94] = 0;
   out_7827200557488535930[95] = 0;
   out_7827200557488535930[96] = 0;
   out_7827200557488535930[97] = 0;
   out_7827200557488535930[98] = 0;
   out_7827200557488535930[99] = 0;
   out_7827200557488535930[100] = 0;
   out_7827200557488535930[101] = 0;
   out_7827200557488535930[102] = 0;
   out_7827200557488535930[103] = 0;
   out_7827200557488535930[104] = 0;
   out_7827200557488535930[105] = 0;
   out_7827200557488535930[106] = 0;
   out_7827200557488535930[107] = 0;
   out_7827200557488535930[108] = -0.5*state[6];
   out_7827200557488535930[109] = 0.5*state[3];
   out_7827200557488535930[110] = 0.5*state[4];
   out_7827200557488535930[111] = 0;
   out_7827200557488535930[112] = 0;
   out_7827200557488535930[113] = 0;
   out_7827200557488535930[114] = 0;
   out_7827200557488535930[115] = 0;
   out_7827200557488535930[116] = 0;
   out_7827200557488535930[117] = 0;
   out_7827200557488535930[118] = 0;
   out_7827200557488535930[119] = 0;
   out_7827200557488535930[120] = 0;
   out_7827200557488535930[121] = 0;
   out_7827200557488535930[122] = 0;
   out_7827200557488535930[123] = 0;
   out_7827200557488535930[124] = 0;
   out_7827200557488535930[125] = 0;
   out_7827200557488535930[126] = 0;
   out_7827200557488535930[127] = 0;
   out_7827200557488535930[128] = 0;
   out_7827200557488535930[129] = 0.5*state[5];
   out_7827200557488535930[130] = -0.5*state[4];
   out_7827200557488535930[131] = 0.5*state[3];
   out_7827200557488535930[132] = 0;
   out_7827200557488535930[133] = 0;
   out_7827200557488535930[134] = 0;
   out_7827200557488535930[135] = 0;
   out_7827200557488535930[136] = 0;
   out_7827200557488535930[137] = 0;
   out_7827200557488535930[138] = 0;
   out_7827200557488535930[139] = 0;
   out_7827200557488535930[140] = 0;
   out_7827200557488535930[141] = 0;
   out_7827200557488535930[142] = 0;
   out_7827200557488535930[143] = 0;
   out_7827200557488535930[144] = 0;
   out_7827200557488535930[145] = 0;
   out_7827200557488535930[146] = 0;
   out_7827200557488535930[147] = 0;
   out_7827200557488535930[148] = 0;
   out_7827200557488535930[149] = 0;
   out_7827200557488535930[150] = 0;
   out_7827200557488535930[151] = 0;
   out_7827200557488535930[152] = 0;
   out_7827200557488535930[153] = 1.0;
   out_7827200557488535930[154] = 0;
   out_7827200557488535930[155] = 0;
   out_7827200557488535930[156] = 0;
   out_7827200557488535930[157] = 0;
   out_7827200557488535930[158] = 0;
   out_7827200557488535930[159] = 0;
   out_7827200557488535930[160] = 0;
   out_7827200557488535930[161] = 0;
   out_7827200557488535930[162] = 0;
   out_7827200557488535930[163] = 0;
   out_7827200557488535930[164] = 0;
   out_7827200557488535930[165] = 0;
   out_7827200557488535930[166] = 0;
   out_7827200557488535930[167] = 0;
   out_7827200557488535930[168] = 0;
   out_7827200557488535930[169] = 0;
   out_7827200557488535930[170] = 0;
   out_7827200557488535930[171] = 0;
   out_7827200557488535930[172] = 0;
   out_7827200557488535930[173] = 0;
   out_7827200557488535930[174] = 0;
   out_7827200557488535930[175] = 1.0;
   out_7827200557488535930[176] = 0;
   out_7827200557488535930[177] = 0;
   out_7827200557488535930[178] = 0;
   out_7827200557488535930[179] = 0;
   out_7827200557488535930[180] = 0;
   out_7827200557488535930[181] = 0;
   out_7827200557488535930[182] = 0;
   out_7827200557488535930[183] = 0;
   out_7827200557488535930[184] = 0;
   out_7827200557488535930[185] = 0;
   out_7827200557488535930[186] = 0;
   out_7827200557488535930[187] = 0;
   out_7827200557488535930[188] = 0;
   out_7827200557488535930[189] = 0;
   out_7827200557488535930[190] = 0;
   out_7827200557488535930[191] = 0;
   out_7827200557488535930[192] = 0;
   out_7827200557488535930[193] = 0;
   out_7827200557488535930[194] = 0;
   out_7827200557488535930[195] = 0;
   out_7827200557488535930[196] = 0;
   out_7827200557488535930[197] = 1.0;
   out_7827200557488535930[198] = 0;
   out_7827200557488535930[199] = 0;
   out_7827200557488535930[200] = 0;
   out_7827200557488535930[201] = 0;
   out_7827200557488535930[202] = 0;
   out_7827200557488535930[203] = 0;
   out_7827200557488535930[204] = 0;
   out_7827200557488535930[205] = 0;
   out_7827200557488535930[206] = 0;
   out_7827200557488535930[207] = 0;
   out_7827200557488535930[208] = 0;
   out_7827200557488535930[209] = 0;
   out_7827200557488535930[210] = 0;
   out_7827200557488535930[211] = 0;
   out_7827200557488535930[212] = 0;
   out_7827200557488535930[213] = 0;
   out_7827200557488535930[214] = 0;
   out_7827200557488535930[215] = 0;
   out_7827200557488535930[216] = 0;
   out_7827200557488535930[217] = 0;
   out_7827200557488535930[218] = 0;
   out_7827200557488535930[219] = 1.0;
   out_7827200557488535930[220] = 0;
   out_7827200557488535930[221] = 0;
   out_7827200557488535930[222] = 0;
   out_7827200557488535930[223] = 0;
   out_7827200557488535930[224] = 0;
   out_7827200557488535930[225] = 0;
   out_7827200557488535930[226] = 0;
   out_7827200557488535930[227] = 0;
   out_7827200557488535930[228] = 0;
   out_7827200557488535930[229] = 0;
   out_7827200557488535930[230] = 0;
   out_7827200557488535930[231] = 0;
   out_7827200557488535930[232] = 0;
   out_7827200557488535930[233] = 0;
   out_7827200557488535930[234] = 0;
   out_7827200557488535930[235] = 0;
   out_7827200557488535930[236] = 0;
   out_7827200557488535930[237] = 0;
   out_7827200557488535930[238] = 0;
   out_7827200557488535930[239] = 0;
   out_7827200557488535930[240] = 0;
   out_7827200557488535930[241] = 1.0;
   out_7827200557488535930[242] = 0;
   out_7827200557488535930[243] = 0;
   out_7827200557488535930[244] = 0;
   out_7827200557488535930[245] = 0;
   out_7827200557488535930[246] = 0;
   out_7827200557488535930[247] = 0;
   out_7827200557488535930[248] = 0;
   out_7827200557488535930[249] = 0;
   out_7827200557488535930[250] = 0;
   out_7827200557488535930[251] = 0;
   out_7827200557488535930[252] = 0;
   out_7827200557488535930[253] = 0;
   out_7827200557488535930[254] = 0;
   out_7827200557488535930[255] = 0;
   out_7827200557488535930[256] = 0;
   out_7827200557488535930[257] = 0;
   out_7827200557488535930[258] = 0;
   out_7827200557488535930[259] = 0;
   out_7827200557488535930[260] = 0;
   out_7827200557488535930[261] = 0;
   out_7827200557488535930[262] = 0;
   out_7827200557488535930[263] = 1.0;
   out_7827200557488535930[264] = 0;
   out_7827200557488535930[265] = 0;
   out_7827200557488535930[266] = 0;
   out_7827200557488535930[267] = 0;
   out_7827200557488535930[268] = 0;
   out_7827200557488535930[269] = 0;
   out_7827200557488535930[270] = 0;
   out_7827200557488535930[271] = 0;
   out_7827200557488535930[272] = 0;
   out_7827200557488535930[273] = 0;
   out_7827200557488535930[274] = 0;
   out_7827200557488535930[275] = 0;
   out_7827200557488535930[276] = 0;
   out_7827200557488535930[277] = 0;
   out_7827200557488535930[278] = 0;
   out_7827200557488535930[279] = 0;
   out_7827200557488535930[280] = 0;
   out_7827200557488535930[281] = 0;
   out_7827200557488535930[282] = 0;
   out_7827200557488535930[283] = 0;
   out_7827200557488535930[284] = 0;
   out_7827200557488535930[285] = 1.0;
   out_7827200557488535930[286] = 0;
   out_7827200557488535930[287] = 0;
   out_7827200557488535930[288] = 0;
   out_7827200557488535930[289] = 0;
   out_7827200557488535930[290] = 0;
   out_7827200557488535930[291] = 0;
   out_7827200557488535930[292] = 0;
   out_7827200557488535930[293] = 0;
   out_7827200557488535930[294] = 0;
   out_7827200557488535930[295] = 0;
   out_7827200557488535930[296] = 0;
   out_7827200557488535930[297] = 0;
   out_7827200557488535930[298] = 0;
   out_7827200557488535930[299] = 0;
   out_7827200557488535930[300] = 0;
   out_7827200557488535930[301] = 0;
   out_7827200557488535930[302] = 0;
   out_7827200557488535930[303] = 0;
   out_7827200557488535930[304] = 0;
   out_7827200557488535930[305] = 0;
   out_7827200557488535930[306] = 0;
   out_7827200557488535930[307] = 1.0;
   out_7827200557488535930[308] = 0;
   out_7827200557488535930[309] = 0;
   out_7827200557488535930[310] = 0;
   out_7827200557488535930[311] = 0;
   out_7827200557488535930[312] = 0;
   out_7827200557488535930[313] = 0;
   out_7827200557488535930[314] = 0;
   out_7827200557488535930[315] = 0;
   out_7827200557488535930[316] = 0;
   out_7827200557488535930[317] = 0;
   out_7827200557488535930[318] = 0;
   out_7827200557488535930[319] = 0;
   out_7827200557488535930[320] = 0;
   out_7827200557488535930[321] = 0;
   out_7827200557488535930[322] = 0;
   out_7827200557488535930[323] = 0;
   out_7827200557488535930[324] = 0;
   out_7827200557488535930[325] = 0;
   out_7827200557488535930[326] = 0;
   out_7827200557488535930[327] = 0;
   out_7827200557488535930[328] = 0;
   out_7827200557488535930[329] = 1.0;
   out_7827200557488535930[330] = 0;
   out_7827200557488535930[331] = 0;
   out_7827200557488535930[332] = 0;
   out_7827200557488535930[333] = 0;
   out_7827200557488535930[334] = 0;
   out_7827200557488535930[335] = 0;
   out_7827200557488535930[336] = 0;
   out_7827200557488535930[337] = 0;
   out_7827200557488535930[338] = 0;
   out_7827200557488535930[339] = 0;
   out_7827200557488535930[340] = 0;
   out_7827200557488535930[341] = 0;
   out_7827200557488535930[342] = 0;
   out_7827200557488535930[343] = 0;
   out_7827200557488535930[344] = 0;
   out_7827200557488535930[345] = 0;
   out_7827200557488535930[346] = 0;
   out_7827200557488535930[347] = 0;
   out_7827200557488535930[348] = 0;
   out_7827200557488535930[349] = 0;
   out_7827200557488535930[350] = 0;
   out_7827200557488535930[351] = 1.0;
   out_7827200557488535930[352] = 0;
   out_7827200557488535930[353] = 0;
   out_7827200557488535930[354] = 0;
   out_7827200557488535930[355] = 0;
   out_7827200557488535930[356] = 0;
   out_7827200557488535930[357] = 0;
   out_7827200557488535930[358] = 0;
   out_7827200557488535930[359] = 0;
   out_7827200557488535930[360] = 0;
   out_7827200557488535930[361] = 0;
   out_7827200557488535930[362] = 0;
   out_7827200557488535930[363] = 0;
   out_7827200557488535930[364] = 0;
   out_7827200557488535930[365] = 0;
   out_7827200557488535930[366] = 0;
   out_7827200557488535930[367] = 0;
   out_7827200557488535930[368] = 0;
   out_7827200557488535930[369] = 0;
   out_7827200557488535930[370] = 0;
   out_7827200557488535930[371] = 0;
   out_7827200557488535930[372] = 0;
   out_7827200557488535930[373] = 1.0;
   out_7827200557488535930[374] = 0;
   out_7827200557488535930[375] = 0;
   out_7827200557488535930[376] = 0;
   out_7827200557488535930[377] = 0;
   out_7827200557488535930[378] = 0;
   out_7827200557488535930[379] = 0;
   out_7827200557488535930[380] = 0;
   out_7827200557488535930[381] = 0;
   out_7827200557488535930[382] = 0;
   out_7827200557488535930[383] = 0;
   out_7827200557488535930[384] = 0;
   out_7827200557488535930[385] = 0;
   out_7827200557488535930[386] = 0;
   out_7827200557488535930[387] = 0;
   out_7827200557488535930[388] = 0;
   out_7827200557488535930[389] = 0;
   out_7827200557488535930[390] = 0;
   out_7827200557488535930[391] = 0;
   out_7827200557488535930[392] = 0;
   out_7827200557488535930[393] = 0;
   out_7827200557488535930[394] = 0;
   out_7827200557488535930[395] = 1.0;
   out_7827200557488535930[396] = 0;
   out_7827200557488535930[397] = 0;
   out_7827200557488535930[398] = 0;
   out_7827200557488535930[399] = 0;
   out_7827200557488535930[400] = 0;
   out_7827200557488535930[401] = 0;
   out_7827200557488535930[402] = 0;
   out_7827200557488535930[403] = 0;
   out_7827200557488535930[404] = 0;
   out_7827200557488535930[405] = 0;
   out_7827200557488535930[406] = 0;
   out_7827200557488535930[407] = 0;
   out_7827200557488535930[408] = 0;
   out_7827200557488535930[409] = 0;
   out_7827200557488535930[410] = 0;
   out_7827200557488535930[411] = 0;
   out_7827200557488535930[412] = 0;
   out_7827200557488535930[413] = 0;
   out_7827200557488535930[414] = 0;
   out_7827200557488535930[415] = 0;
   out_7827200557488535930[416] = 0;
   out_7827200557488535930[417] = 1.0;
   out_7827200557488535930[418] = 0;
   out_7827200557488535930[419] = 0;
   out_7827200557488535930[420] = 0;
   out_7827200557488535930[421] = 0;
   out_7827200557488535930[422] = 0;
   out_7827200557488535930[423] = 0;
   out_7827200557488535930[424] = 0;
   out_7827200557488535930[425] = 0;
   out_7827200557488535930[426] = 0;
   out_7827200557488535930[427] = 0;
   out_7827200557488535930[428] = 0;
   out_7827200557488535930[429] = 0;
   out_7827200557488535930[430] = 0;
   out_7827200557488535930[431] = 0;
   out_7827200557488535930[432] = 0;
   out_7827200557488535930[433] = 0;
   out_7827200557488535930[434] = 0;
   out_7827200557488535930[435] = 0;
   out_7827200557488535930[436] = 0;
   out_7827200557488535930[437] = 0;
   out_7827200557488535930[438] = 0;
   out_7827200557488535930[439] = 1.0;
   out_7827200557488535930[440] = 0;
   out_7827200557488535930[441] = 0;
   out_7827200557488535930[442] = 0;
   out_7827200557488535930[443] = 0;
   out_7827200557488535930[444] = 0;
   out_7827200557488535930[445] = 0;
   out_7827200557488535930[446] = 0;
   out_7827200557488535930[447] = 0;
   out_7827200557488535930[448] = 0;
   out_7827200557488535930[449] = 0;
   out_7827200557488535930[450] = 0;
   out_7827200557488535930[451] = 0;
   out_7827200557488535930[452] = 0;
   out_7827200557488535930[453] = 0;
   out_7827200557488535930[454] = 0;
   out_7827200557488535930[455] = 0;
   out_7827200557488535930[456] = 0;
   out_7827200557488535930[457] = 0;
   out_7827200557488535930[458] = 0;
   out_7827200557488535930[459] = 0;
   out_7827200557488535930[460] = 0;
   out_7827200557488535930[461] = 1.0;
}
void f_fun(double *state, double dt, double *out_4200778327129732755) {
   out_4200778327129732755[0] = dt*state[7] + state[0];
   out_4200778327129732755[1] = dt*state[8] + state[1];
   out_4200778327129732755[2] = dt*state[9] + state[2];
   out_4200778327129732755[3] = dt*(-0.5*state[4]*state[10] - 0.5*state[5]*state[11] - 0.5*state[6]*state[12]) + state[3];
   out_4200778327129732755[4] = dt*(0.5*state[3]*state[10] + 0.5*state[5]*state[12] - 0.5*state[6]*state[11]) + state[4];
   out_4200778327129732755[5] = dt*(0.5*state[3]*state[11] - 0.5*state[4]*state[12] + 0.5*state[6]*state[10]) + state[5];
   out_4200778327129732755[6] = dt*(0.5*state[3]*state[12] + 0.5*state[4]*state[11] - 0.5*state[5]*state[10]) + state[6];
   out_4200778327129732755[7] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]) + state[7];
   out_4200778327129732755[8] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]) + state[8];
   out_4200778327129732755[9] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]) + state[9];
   out_4200778327129732755[10] = state[10];
   out_4200778327129732755[11] = state[11];
   out_4200778327129732755[12] = state[12];
   out_4200778327129732755[13] = state[13];
   out_4200778327129732755[14] = state[14];
   out_4200778327129732755[15] = state[15];
   out_4200778327129732755[16] = state[16];
   out_4200778327129732755[17] = state[17];
   out_4200778327129732755[18] = state[18];
   out_4200778327129732755[19] = state[19];
   out_4200778327129732755[20] = state[20];
   out_4200778327129732755[21] = state[21];
}
void F_fun(double *state, double dt, double *out_5041384979026150723) {
   out_5041384979026150723[0] = 1;
   out_5041384979026150723[1] = 0;
   out_5041384979026150723[2] = 0;
   out_5041384979026150723[3] = 0;
   out_5041384979026150723[4] = 0;
   out_5041384979026150723[5] = 0;
   out_5041384979026150723[6] = dt;
   out_5041384979026150723[7] = 0;
   out_5041384979026150723[8] = 0;
   out_5041384979026150723[9] = 0;
   out_5041384979026150723[10] = 0;
   out_5041384979026150723[11] = 0;
   out_5041384979026150723[12] = 0;
   out_5041384979026150723[13] = 0;
   out_5041384979026150723[14] = 0;
   out_5041384979026150723[15] = 0;
   out_5041384979026150723[16] = 0;
   out_5041384979026150723[17] = 0;
   out_5041384979026150723[18] = 0;
   out_5041384979026150723[19] = 0;
   out_5041384979026150723[20] = 0;
   out_5041384979026150723[21] = 0;
   out_5041384979026150723[22] = 1;
   out_5041384979026150723[23] = 0;
   out_5041384979026150723[24] = 0;
   out_5041384979026150723[25] = 0;
   out_5041384979026150723[26] = 0;
   out_5041384979026150723[27] = 0;
   out_5041384979026150723[28] = dt;
   out_5041384979026150723[29] = 0;
   out_5041384979026150723[30] = 0;
   out_5041384979026150723[31] = 0;
   out_5041384979026150723[32] = 0;
   out_5041384979026150723[33] = 0;
   out_5041384979026150723[34] = 0;
   out_5041384979026150723[35] = 0;
   out_5041384979026150723[36] = 0;
   out_5041384979026150723[37] = 0;
   out_5041384979026150723[38] = 0;
   out_5041384979026150723[39] = 0;
   out_5041384979026150723[40] = 0;
   out_5041384979026150723[41] = 0;
   out_5041384979026150723[42] = 0;
   out_5041384979026150723[43] = 0;
   out_5041384979026150723[44] = 1;
   out_5041384979026150723[45] = 0;
   out_5041384979026150723[46] = 0;
   out_5041384979026150723[47] = 0;
   out_5041384979026150723[48] = 0;
   out_5041384979026150723[49] = 0;
   out_5041384979026150723[50] = dt;
   out_5041384979026150723[51] = 0;
   out_5041384979026150723[52] = 0;
   out_5041384979026150723[53] = 0;
   out_5041384979026150723[54] = 0;
   out_5041384979026150723[55] = 0;
   out_5041384979026150723[56] = 0;
   out_5041384979026150723[57] = 0;
   out_5041384979026150723[58] = 0;
   out_5041384979026150723[59] = 0;
   out_5041384979026150723[60] = 0;
   out_5041384979026150723[61] = 0;
   out_5041384979026150723[62] = 0;
   out_5041384979026150723[63] = 0;
   out_5041384979026150723[64] = 0;
   out_5041384979026150723[65] = 0;
   out_5041384979026150723[66] = 1;
   out_5041384979026150723[67] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[11] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_5041384979026150723[68] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[12] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[10] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[11]);
   out_5041384979026150723[69] = 0;
   out_5041384979026150723[70] = 0;
   out_5041384979026150723[71] = 0;
   out_5041384979026150723[72] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_5041384979026150723[73] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_5041384979026150723[74] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_5041384979026150723[75] = 0;
   out_5041384979026150723[76] = 0;
   out_5041384979026150723[77] = 0;
   out_5041384979026150723[78] = 0;
   out_5041384979026150723[79] = 0;
   out_5041384979026150723[80] = 0;
   out_5041384979026150723[81] = 0;
   out_5041384979026150723[82] = 0;
   out_5041384979026150723[83] = 0;
   out_5041384979026150723[84] = 0;
   out_5041384979026150723[85] = 0;
   out_5041384979026150723[86] = 0;
   out_5041384979026150723[87] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[11] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_5041384979026150723[88] = 1;
   out_5041384979026150723[89] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[12] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[11] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[10]);
   out_5041384979026150723[90] = 0;
   out_5041384979026150723[91] = 0;
   out_5041384979026150723[92] = 0;
   out_5041384979026150723[93] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_5041384979026150723[94] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_5041384979026150723[95] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_5041384979026150723[96] = 0;
   out_5041384979026150723[97] = 0;
   out_5041384979026150723[98] = 0;
   out_5041384979026150723[99] = 0;
   out_5041384979026150723[100] = 0;
   out_5041384979026150723[101] = 0;
   out_5041384979026150723[102] = 0;
   out_5041384979026150723[103] = 0;
   out_5041384979026150723[104] = 0;
   out_5041384979026150723[105] = 0;
   out_5041384979026150723[106] = 0;
   out_5041384979026150723[107] = 0;
   out_5041384979026150723[108] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[12] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[10] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[11]);
   out_5041384979026150723[109] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[12] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[11] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[10]);
   out_5041384979026150723[110] = 1;
   out_5041384979026150723[111] = 0;
   out_5041384979026150723[112] = 0;
   out_5041384979026150723[113] = 0;
   out_5041384979026150723[114] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_5041384979026150723[115] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_5041384979026150723[116] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_5041384979026150723[117] = 0;
   out_5041384979026150723[118] = 0;
   out_5041384979026150723[119] = 0;
   out_5041384979026150723[120] = 0;
   out_5041384979026150723[121] = 0;
   out_5041384979026150723[122] = 0;
   out_5041384979026150723[123] = 0;
   out_5041384979026150723[124] = 0;
   out_5041384979026150723[125] = 0;
   out_5041384979026150723[126] = 0;
   out_5041384979026150723[127] = 0;
   out_5041384979026150723[128] = 0;
   out_5041384979026150723[129] = 0;
   out_5041384979026150723[130] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_5041384979026150723[131] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[18] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[16] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[17]);
   out_5041384979026150723[132] = 1;
   out_5041384979026150723[133] = 0;
   out_5041384979026150723[134] = 0;
   out_5041384979026150723[135] = 0;
   out_5041384979026150723[136] = 0;
   out_5041384979026150723[137] = 0;
   out_5041384979026150723[138] = 0;
   out_5041384979026150723[139] = 0;
   out_5041384979026150723[140] = 0;
   out_5041384979026150723[141] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_5041384979026150723[142] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_5041384979026150723[143] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_5041384979026150723[144] = 0;
   out_5041384979026150723[145] = 0;
   out_5041384979026150723[146] = 0;
   out_5041384979026150723[147] = 0;
   out_5041384979026150723[148] = 0;
   out_5041384979026150723[149] = 0;
   out_5041384979026150723[150] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[17] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_5041384979026150723[151] = 0;
   out_5041384979026150723[152] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]);
   out_5041384979026150723[153] = 0;
   out_5041384979026150723[154] = 1;
   out_5041384979026150723[155] = 0;
   out_5041384979026150723[156] = 0;
   out_5041384979026150723[157] = 0;
   out_5041384979026150723[158] = 0;
   out_5041384979026150723[159] = 0;
   out_5041384979026150723[160] = 0;
   out_5041384979026150723[161] = 0;
   out_5041384979026150723[162] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_5041384979026150723[163] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_5041384979026150723[164] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_5041384979026150723[165] = 0;
   out_5041384979026150723[166] = 0;
   out_5041384979026150723[167] = 0;
   out_5041384979026150723[168] = 0;
   out_5041384979026150723[169] = 0;
   out_5041384979026150723[170] = 0;
   out_5041384979026150723[171] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]);
   out_5041384979026150723[172] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[18] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[17] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[16]);
   out_5041384979026150723[173] = 0;
   out_5041384979026150723[174] = 0;
   out_5041384979026150723[175] = 0;
   out_5041384979026150723[176] = 1;
   out_5041384979026150723[177] = 0;
   out_5041384979026150723[178] = 0;
   out_5041384979026150723[179] = 0;
   out_5041384979026150723[180] = 0;
   out_5041384979026150723[181] = 0;
   out_5041384979026150723[182] = 0;
   out_5041384979026150723[183] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_5041384979026150723[184] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_5041384979026150723[185] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_5041384979026150723[186] = 0;
   out_5041384979026150723[187] = 0;
   out_5041384979026150723[188] = 0;
   out_5041384979026150723[189] = 0;
   out_5041384979026150723[190] = 0;
   out_5041384979026150723[191] = 0;
   out_5041384979026150723[192] = 0;
   out_5041384979026150723[193] = 0;
   out_5041384979026150723[194] = 0;
   out_5041384979026150723[195] = 0;
   out_5041384979026150723[196] = 0;
   out_5041384979026150723[197] = 0;
   out_5041384979026150723[198] = 1;
   out_5041384979026150723[199] = 0;
   out_5041384979026150723[200] = 0;
   out_5041384979026150723[201] = 0;
   out_5041384979026150723[202] = 0;
   out_5041384979026150723[203] = 0;
   out_5041384979026150723[204] = 0;
   out_5041384979026150723[205] = 0;
   out_5041384979026150723[206] = 0;
   out_5041384979026150723[207] = 0;
   out_5041384979026150723[208] = 0;
   out_5041384979026150723[209] = 0;
   out_5041384979026150723[210] = 0;
   out_5041384979026150723[211] = 0;
   out_5041384979026150723[212] = 0;
   out_5041384979026150723[213] = 0;
   out_5041384979026150723[214] = 0;
   out_5041384979026150723[215] = 0;
   out_5041384979026150723[216] = 0;
   out_5041384979026150723[217] = 0;
   out_5041384979026150723[218] = 0;
   out_5041384979026150723[219] = 0;
   out_5041384979026150723[220] = 1;
   out_5041384979026150723[221] = 0;
   out_5041384979026150723[222] = 0;
   out_5041384979026150723[223] = 0;
   out_5041384979026150723[224] = 0;
   out_5041384979026150723[225] = 0;
   out_5041384979026150723[226] = 0;
   out_5041384979026150723[227] = 0;
   out_5041384979026150723[228] = 0;
   out_5041384979026150723[229] = 0;
   out_5041384979026150723[230] = 0;
   out_5041384979026150723[231] = 0;
   out_5041384979026150723[232] = 0;
   out_5041384979026150723[233] = 0;
   out_5041384979026150723[234] = 0;
   out_5041384979026150723[235] = 0;
   out_5041384979026150723[236] = 0;
   out_5041384979026150723[237] = 0;
   out_5041384979026150723[238] = 0;
   out_5041384979026150723[239] = 0;
   out_5041384979026150723[240] = 0;
   out_5041384979026150723[241] = 0;
   out_5041384979026150723[242] = 1;
   out_5041384979026150723[243] = 0;
   out_5041384979026150723[244] = 0;
   out_5041384979026150723[245] = 0;
   out_5041384979026150723[246] = 0;
   out_5041384979026150723[247] = 0;
   out_5041384979026150723[248] = 0;
   out_5041384979026150723[249] = 0;
   out_5041384979026150723[250] = 0;
   out_5041384979026150723[251] = 0;
   out_5041384979026150723[252] = 0;
   out_5041384979026150723[253] = 0;
   out_5041384979026150723[254] = 0;
   out_5041384979026150723[255] = 0;
   out_5041384979026150723[256] = 0;
   out_5041384979026150723[257] = 0;
   out_5041384979026150723[258] = 0;
   out_5041384979026150723[259] = 0;
   out_5041384979026150723[260] = 0;
   out_5041384979026150723[261] = 0;
   out_5041384979026150723[262] = 0;
   out_5041384979026150723[263] = 0;
   out_5041384979026150723[264] = 1;
   out_5041384979026150723[265] = 0;
   out_5041384979026150723[266] = 0;
   out_5041384979026150723[267] = 0;
   out_5041384979026150723[268] = 0;
   out_5041384979026150723[269] = 0;
   out_5041384979026150723[270] = 0;
   out_5041384979026150723[271] = 0;
   out_5041384979026150723[272] = 0;
   out_5041384979026150723[273] = 0;
   out_5041384979026150723[274] = 0;
   out_5041384979026150723[275] = 0;
   out_5041384979026150723[276] = 0;
   out_5041384979026150723[277] = 0;
   out_5041384979026150723[278] = 0;
   out_5041384979026150723[279] = 0;
   out_5041384979026150723[280] = 0;
   out_5041384979026150723[281] = 0;
   out_5041384979026150723[282] = 0;
   out_5041384979026150723[283] = 0;
   out_5041384979026150723[284] = 0;
   out_5041384979026150723[285] = 0;
   out_5041384979026150723[286] = 1;
   out_5041384979026150723[287] = 0;
   out_5041384979026150723[288] = 0;
   out_5041384979026150723[289] = 0;
   out_5041384979026150723[290] = 0;
   out_5041384979026150723[291] = 0;
   out_5041384979026150723[292] = 0;
   out_5041384979026150723[293] = 0;
   out_5041384979026150723[294] = 0;
   out_5041384979026150723[295] = 0;
   out_5041384979026150723[296] = 0;
   out_5041384979026150723[297] = 0;
   out_5041384979026150723[298] = 0;
   out_5041384979026150723[299] = 0;
   out_5041384979026150723[300] = 0;
   out_5041384979026150723[301] = 0;
   out_5041384979026150723[302] = 0;
   out_5041384979026150723[303] = 0;
   out_5041384979026150723[304] = 0;
   out_5041384979026150723[305] = 0;
   out_5041384979026150723[306] = 0;
   out_5041384979026150723[307] = 0;
   out_5041384979026150723[308] = 1;
   out_5041384979026150723[309] = 0;
   out_5041384979026150723[310] = 0;
   out_5041384979026150723[311] = 0;
   out_5041384979026150723[312] = 0;
   out_5041384979026150723[313] = 0;
   out_5041384979026150723[314] = 0;
   out_5041384979026150723[315] = 0;
   out_5041384979026150723[316] = 0;
   out_5041384979026150723[317] = 0;
   out_5041384979026150723[318] = 0;
   out_5041384979026150723[319] = 0;
   out_5041384979026150723[320] = 0;
   out_5041384979026150723[321] = 0;
   out_5041384979026150723[322] = 0;
   out_5041384979026150723[323] = 0;
   out_5041384979026150723[324] = 0;
   out_5041384979026150723[325] = 0;
   out_5041384979026150723[326] = 0;
   out_5041384979026150723[327] = 0;
   out_5041384979026150723[328] = 0;
   out_5041384979026150723[329] = 0;
   out_5041384979026150723[330] = 1;
   out_5041384979026150723[331] = 0;
   out_5041384979026150723[332] = 0;
   out_5041384979026150723[333] = 0;
   out_5041384979026150723[334] = 0;
   out_5041384979026150723[335] = 0;
   out_5041384979026150723[336] = 0;
   out_5041384979026150723[337] = 0;
   out_5041384979026150723[338] = 0;
   out_5041384979026150723[339] = 0;
   out_5041384979026150723[340] = 0;
   out_5041384979026150723[341] = 0;
   out_5041384979026150723[342] = 0;
   out_5041384979026150723[343] = 0;
   out_5041384979026150723[344] = 0;
   out_5041384979026150723[345] = 0;
   out_5041384979026150723[346] = 0;
   out_5041384979026150723[347] = 0;
   out_5041384979026150723[348] = 0;
   out_5041384979026150723[349] = 0;
   out_5041384979026150723[350] = 0;
   out_5041384979026150723[351] = 0;
   out_5041384979026150723[352] = 1;
   out_5041384979026150723[353] = 0;
   out_5041384979026150723[354] = 0;
   out_5041384979026150723[355] = 0;
   out_5041384979026150723[356] = 0;
   out_5041384979026150723[357] = 0;
   out_5041384979026150723[358] = 0;
   out_5041384979026150723[359] = 0;
   out_5041384979026150723[360] = 0;
   out_5041384979026150723[361] = 0;
   out_5041384979026150723[362] = 0;
   out_5041384979026150723[363] = 0;
   out_5041384979026150723[364] = 0;
   out_5041384979026150723[365] = 0;
   out_5041384979026150723[366] = 0;
   out_5041384979026150723[367] = 0;
   out_5041384979026150723[368] = 0;
   out_5041384979026150723[369] = 0;
   out_5041384979026150723[370] = 0;
   out_5041384979026150723[371] = 0;
   out_5041384979026150723[372] = 0;
   out_5041384979026150723[373] = 0;
   out_5041384979026150723[374] = 1;
   out_5041384979026150723[375] = 0;
   out_5041384979026150723[376] = 0;
   out_5041384979026150723[377] = 0;
   out_5041384979026150723[378] = 0;
   out_5041384979026150723[379] = 0;
   out_5041384979026150723[380] = 0;
   out_5041384979026150723[381] = 0;
   out_5041384979026150723[382] = 0;
   out_5041384979026150723[383] = 0;
   out_5041384979026150723[384] = 0;
   out_5041384979026150723[385] = 0;
   out_5041384979026150723[386] = 0;
   out_5041384979026150723[387] = 0;
   out_5041384979026150723[388] = 0;
   out_5041384979026150723[389] = 0;
   out_5041384979026150723[390] = 0;
   out_5041384979026150723[391] = 0;
   out_5041384979026150723[392] = 0;
   out_5041384979026150723[393] = 0;
   out_5041384979026150723[394] = 0;
   out_5041384979026150723[395] = 0;
   out_5041384979026150723[396] = 1;
   out_5041384979026150723[397] = 0;
   out_5041384979026150723[398] = 0;
   out_5041384979026150723[399] = 0;
   out_5041384979026150723[400] = 0;
   out_5041384979026150723[401] = 0;
   out_5041384979026150723[402] = 0;
   out_5041384979026150723[403] = 0;
   out_5041384979026150723[404] = 0;
   out_5041384979026150723[405] = 0;
   out_5041384979026150723[406] = 0;
   out_5041384979026150723[407] = 0;
   out_5041384979026150723[408] = 0;
   out_5041384979026150723[409] = 0;
   out_5041384979026150723[410] = 0;
   out_5041384979026150723[411] = 0;
   out_5041384979026150723[412] = 0;
   out_5041384979026150723[413] = 0;
   out_5041384979026150723[414] = 0;
   out_5041384979026150723[415] = 0;
   out_5041384979026150723[416] = 0;
   out_5041384979026150723[417] = 0;
   out_5041384979026150723[418] = 1;
   out_5041384979026150723[419] = 0;
   out_5041384979026150723[420] = 0;
   out_5041384979026150723[421] = 0;
   out_5041384979026150723[422] = 0;
   out_5041384979026150723[423] = 0;
   out_5041384979026150723[424] = 0;
   out_5041384979026150723[425] = 0;
   out_5041384979026150723[426] = 0;
   out_5041384979026150723[427] = 0;
   out_5041384979026150723[428] = 0;
   out_5041384979026150723[429] = 0;
   out_5041384979026150723[430] = 0;
   out_5041384979026150723[431] = 0;
   out_5041384979026150723[432] = 0;
   out_5041384979026150723[433] = 0;
   out_5041384979026150723[434] = 0;
   out_5041384979026150723[435] = 0;
   out_5041384979026150723[436] = 0;
   out_5041384979026150723[437] = 0;
   out_5041384979026150723[438] = 0;
   out_5041384979026150723[439] = 0;
   out_5041384979026150723[440] = 1;
}
void h_4(double *state, double *unused, double *out_5583179280850599905) {
   out_5583179280850599905[0] = state[10] + state[13];
   out_5583179280850599905[1] = state[11] + state[14];
   out_5583179280850599905[2] = state[12] + state[15];
}
void H_4(double *state, double *unused, double *out_8395573614485239853) {
   out_8395573614485239853[0] = 0;
   out_8395573614485239853[1] = 0;
   out_8395573614485239853[2] = 0;
   out_8395573614485239853[3] = 0;
   out_8395573614485239853[4] = 0;
   out_8395573614485239853[5] = 0;
   out_8395573614485239853[6] = 0;
   out_8395573614485239853[7] = 0;
   out_8395573614485239853[8] = 0;
   out_8395573614485239853[9] = 0;
   out_8395573614485239853[10] = 1;
   out_8395573614485239853[11] = 0;
   out_8395573614485239853[12] = 0;
   out_8395573614485239853[13] = 1;
   out_8395573614485239853[14] = 0;
   out_8395573614485239853[15] = 0;
   out_8395573614485239853[16] = 0;
   out_8395573614485239853[17] = 0;
   out_8395573614485239853[18] = 0;
   out_8395573614485239853[19] = 0;
   out_8395573614485239853[20] = 0;
   out_8395573614485239853[21] = 0;
   out_8395573614485239853[22] = 0;
   out_8395573614485239853[23] = 0;
   out_8395573614485239853[24] = 0;
   out_8395573614485239853[25] = 0;
   out_8395573614485239853[26] = 0;
   out_8395573614485239853[27] = 0;
   out_8395573614485239853[28] = 0;
   out_8395573614485239853[29] = 0;
   out_8395573614485239853[30] = 0;
   out_8395573614485239853[31] = 0;
   out_8395573614485239853[32] = 0;
   out_8395573614485239853[33] = 1;
   out_8395573614485239853[34] = 0;
   out_8395573614485239853[35] = 0;
   out_8395573614485239853[36] = 1;
   out_8395573614485239853[37] = 0;
   out_8395573614485239853[38] = 0;
   out_8395573614485239853[39] = 0;
   out_8395573614485239853[40] = 0;
   out_8395573614485239853[41] = 0;
   out_8395573614485239853[42] = 0;
   out_8395573614485239853[43] = 0;
   out_8395573614485239853[44] = 0;
   out_8395573614485239853[45] = 0;
   out_8395573614485239853[46] = 0;
   out_8395573614485239853[47] = 0;
   out_8395573614485239853[48] = 0;
   out_8395573614485239853[49] = 0;
   out_8395573614485239853[50] = 0;
   out_8395573614485239853[51] = 0;
   out_8395573614485239853[52] = 0;
   out_8395573614485239853[53] = 0;
   out_8395573614485239853[54] = 0;
   out_8395573614485239853[55] = 0;
   out_8395573614485239853[56] = 1;
   out_8395573614485239853[57] = 0;
   out_8395573614485239853[58] = 0;
   out_8395573614485239853[59] = 1;
   out_8395573614485239853[60] = 0;
   out_8395573614485239853[61] = 0;
   out_8395573614485239853[62] = 0;
   out_8395573614485239853[63] = 0;
   out_8395573614485239853[64] = 0;
   out_8395573614485239853[65] = 0;
}
void h_9(double *state, double *unused, double *out_131594804336773046) {
   out_131594804336773046[0] = state[10];
   out_131594804336773046[1] = state[11];
   out_131594804336773046[2] = state[12];
}
void H_9(double *state, double *unused, double *out_2763951523959864293) {
   out_2763951523959864293[0] = 0;
   out_2763951523959864293[1] = 0;
   out_2763951523959864293[2] = 0;
   out_2763951523959864293[3] = 0;
   out_2763951523959864293[4] = 0;
   out_2763951523959864293[5] = 0;
   out_2763951523959864293[6] = 0;
   out_2763951523959864293[7] = 0;
   out_2763951523959864293[8] = 0;
   out_2763951523959864293[9] = 0;
   out_2763951523959864293[10] = 1;
   out_2763951523959864293[11] = 0;
   out_2763951523959864293[12] = 0;
   out_2763951523959864293[13] = 0;
   out_2763951523959864293[14] = 0;
   out_2763951523959864293[15] = 0;
   out_2763951523959864293[16] = 0;
   out_2763951523959864293[17] = 0;
   out_2763951523959864293[18] = 0;
   out_2763951523959864293[19] = 0;
   out_2763951523959864293[20] = 0;
   out_2763951523959864293[21] = 0;
   out_2763951523959864293[22] = 0;
   out_2763951523959864293[23] = 0;
   out_2763951523959864293[24] = 0;
   out_2763951523959864293[25] = 0;
   out_2763951523959864293[26] = 0;
   out_2763951523959864293[27] = 0;
   out_2763951523959864293[28] = 0;
   out_2763951523959864293[29] = 0;
   out_2763951523959864293[30] = 0;
   out_2763951523959864293[31] = 0;
   out_2763951523959864293[32] = 0;
   out_2763951523959864293[33] = 1;
   out_2763951523959864293[34] = 0;
   out_2763951523959864293[35] = 0;
   out_2763951523959864293[36] = 0;
   out_2763951523959864293[37] = 0;
   out_2763951523959864293[38] = 0;
   out_2763951523959864293[39] = 0;
   out_2763951523959864293[40] = 0;
   out_2763951523959864293[41] = 0;
   out_2763951523959864293[42] = 0;
   out_2763951523959864293[43] = 0;
   out_2763951523959864293[44] = 0;
   out_2763951523959864293[45] = 0;
   out_2763951523959864293[46] = 0;
   out_2763951523959864293[47] = 0;
   out_2763951523959864293[48] = 0;
   out_2763951523959864293[49] = 0;
   out_2763951523959864293[50] = 0;
   out_2763951523959864293[51] = 0;
   out_2763951523959864293[52] = 0;
   out_2763951523959864293[53] = 0;
   out_2763951523959864293[54] = 0;
   out_2763951523959864293[55] = 0;
   out_2763951523959864293[56] = 1;
   out_2763951523959864293[57] = 0;
   out_2763951523959864293[58] = 0;
   out_2763951523959864293[59] = 0;
   out_2763951523959864293[60] = 0;
   out_2763951523959864293[61] = 0;
   out_2763951523959864293[62] = 0;
   out_2763951523959864293[63] = 0;
   out_2763951523959864293[64] = 0;
   out_2763951523959864293[65] = 0;
}
void h_10(double *state, double *unused, double *out_9003306024986045133) {
   out_9003306024986045133[0] = 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0] + state[16] + state[19];
   out_9003306024986045133[1] = 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1] + state[17] + state[20];
   out_9003306024986045133[2] = 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[2] + state[18] + state[21];
}
void H_10(double *state, double *unused, double *out_3153156099227407698) {
   out_3153156099227407698[0] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*pow(state[0], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_3153156099227407698[1] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_3153156099227407698[2] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[2];
   out_3153156099227407698[3] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_3153156099227407698[4] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_3153156099227407698[5] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_3153156099227407698[6] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_3153156099227407698[7] = 0;
   out_3153156099227407698[8] = 0;
   out_3153156099227407698[9] = 0;
   out_3153156099227407698[10] = 0;
   out_3153156099227407698[11] = 0;
   out_3153156099227407698[12] = 0;
   out_3153156099227407698[13] = 0;
   out_3153156099227407698[14] = 0;
   out_3153156099227407698[15] = 0;
   out_3153156099227407698[16] = 1;
   out_3153156099227407698[17] = 0;
   out_3153156099227407698[18] = 0;
   out_3153156099227407698[19] = 1;
   out_3153156099227407698[20] = 0;
   out_3153156099227407698[21] = 0;
   out_3153156099227407698[22] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_3153156099227407698[23] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*pow(state[1], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_3153156099227407698[24] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1]*state[2];
   out_3153156099227407698[25] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_3153156099227407698[26] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_3153156099227407698[27] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_3153156099227407698[28] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_3153156099227407698[29] = 0;
   out_3153156099227407698[30] = 0;
   out_3153156099227407698[31] = 0;
   out_3153156099227407698[32] = 0;
   out_3153156099227407698[33] = 0;
   out_3153156099227407698[34] = 0;
   out_3153156099227407698[35] = 0;
   out_3153156099227407698[36] = 0;
   out_3153156099227407698[37] = 0;
   out_3153156099227407698[38] = 0;
   out_3153156099227407698[39] = 1;
   out_3153156099227407698[40] = 0;
   out_3153156099227407698[41] = 0;
   out_3153156099227407698[42] = 1;
   out_3153156099227407698[43] = 0;
   out_3153156099227407698[44] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[0]*state[2];
   out_3153156099227407698[45] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[1]*state[2];
   out_3153156099227407698[46] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*pow(state[2], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_3153156099227407698[47] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_3153156099227407698[48] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_3153156099227407698[49] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_3153156099227407698[50] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_3153156099227407698[51] = 0;
   out_3153156099227407698[52] = 0;
   out_3153156099227407698[53] = 0;
   out_3153156099227407698[54] = 0;
   out_3153156099227407698[55] = 0;
   out_3153156099227407698[56] = 0;
   out_3153156099227407698[57] = 0;
   out_3153156099227407698[58] = 0;
   out_3153156099227407698[59] = 0;
   out_3153156099227407698[60] = 0;
   out_3153156099227407698[61] = 0;
   out_3153156099227407698[62] = 1;
   out_3153156099227407698[63] = 0;
   out_3153156099227407698[64] = 0;
   out_3153156099227407698[65] = 1;
}
void h_12(double *state, double *unused, double *out_5619056622607744023) {
   out_5619056622607744023[0] = state[0];
   out_5619056622607744023[1] = state[1];
   out_5619056622607744023[2] = state[2];
}
void H_12(double *state, double *unused, double *out_5031714051192349968) {
   out_5031714051192349968[0] = 1;
   out_5031714051192349968[1] = 0;
   out_5031714051192349968[2] = 0;
   out_5031714051192349968[3] = 0;
   out_5031714051192349968[4] = 0;
   out_5031714051192349968[5] = 0;
   out_5031714051192349968[6] = 0;
   out_5031714051192349968[7] = 0;
   out_5031714051192349968[8] = 0;
   out_5031714051192349968[9] = 0;
   out_5031714051192349968[10] = 0;
   out_5031714051192349968[11] = 0;
   out_5031714051192349968[12] = 0;
   out_5031714051192349968[13] = 0;
   out_5031714051192349968[14] = 0;
   out_5031714051192349968[15] = 0;
   out_5031714051192349968[16] = 0;
   out_5031714051192349968[17] = 0;
   out_5031714051192349968[18] = 0;
   out_5031714051192349968[19] = 0;
   out_5031714051192349968[20] = 0;
   out_5031714051192349968[21] = 0;
   out_5031714051192349968[22] = 0;
   out_5031714051192349968[23] = 1;
   out_5031714051192349968[24] = 0;
   out_5031714051192349968[25] = 0;
   out_5031714051192349968[26] = 0;
   out_5031714051192349968[27] = 0;
   out_5031714051192349968[28] = 0;
   out_5031714051192349968[29] = 0;
   out_5031714051192349968[30] = 0;
   out_5031714051192349968[31] = 0;
   out_5031714051192349968[32] = 0;
   out_5031714051192349968[33] = 0;
   out_5031714051192349968[34] = 0;
   out_5031714051192349968[35] = 0;
   out_5031714051192349968[36] = 0;
   out_5031714051192349968[37] = 0;
   out_5031714051192349968[38] = 0;
   out_5031714051192349968[39] = 0;
   out_5031714051192349968[40] = 0;
   out_5031714051192349968[41] = 0;
   out_5031714051192349968[42] = 0;
   out_5031714051192349968[43] = 0;
   out_5031714051192349968[44] = 0;
   out_5031714051192349968[45] = 0;
   out_5031714051192349968[46] = 1;
   out_5031714051192349968[47] = 0;
   out_5031714051192349968[48] = 0;
   out_5031714051192349968[49] = 0;
   out_5031714051192349968[50] = 0;
   out_5031714051192349968[51] = 0;
   out_5031714051192349968[52] = 0;
   out_5031714051192349968[53] = 0;
   out_5031714051192349968[54] = 0;
   out_5031714051192349968[55] = 0;
   out_5031714051192349968[56] = 0;
   out_5031714051192349968[57] = 0;
   out_5031714051192349968[58] = 0;
   out_5031714051192349968[59] = 0;
   out_5031714051192349968[60] = 0;
   out_5031714051192349968[61] = 0;
   out_5031714051192349968[62] = 0;
   out_5031714051192349968[63] = 0;
   out_5031714051192349968[64] = 0;
   out_5031714051192349968[65] = 0;
}
void h_35(double *state, double *unused, double *out_3057915715388954701) {
   out_3057915715388954701[0] = state[7];
   out_3057915715388954701[1] = state[8];
   out_3057915715388954701[2] = state[9];
}
void H_35(double *state, double *unused, double *out_2286151018867336259) {
   out_2286151018867336259[0] = 0;
   out_2286151018867336259[1] = 0;
   out_2286151018867336259[2] = 0;
   out_2286151018867336259[3] = 0;
   out_2286151018867336259[4] = 0;
   out_2286151018867336259[5] = 0;
   out_2286151018867336259[6] = 0;
   out_2286151018867336259[7] = 1;
   out_2286151018867336259[8] = 0;
   out_2286151018867336259[9] = 0;
   out_2286151018867336259[10] = 0;
   out_2286151018867336259[11] = 0;
   out_2286151018867336259[12] = 0;
   out_2286151018867336259[13] = 0;
   out_2286151018867336259[14] = 0;
   out_2286151018867336259[15] = 0;
   out_2286151018867336259[16] = 0;
   out_2286151018867336259[17] = 0;
   out_2286151018867336259[18] = 0;
   out_2286151018867336259[19] = 0;
   out_2286151018867336259[20] = 0;
   out_2286151018867336259[21] = 0;
   out_2286151018867336259[22] = 0;
   out_2286151018867336259[23] = 0;
   out_2286151018867336259[24] = 0;
   out_2286151018867336259[25] = 0;
   out_2286151018867336259[26] = 0;
   out_2286151018867336259[27] = 0;
   out_2286151018867336259[28] = 0;
   out_2286151018867336259[29] = 0;
   out_2286151018867336259[30] = 1;
   out_2286151018867336259[31] = 0;
   out_2286151018867336259[32] = 0;
   out_2286151018867336259[33] = 0;
   out_2286151018867336259[34] = 0;
   out_2286151018867336259[35] = 0;
   out_2286151018867336259[36] = 0;
   out_2286151018867336259[37] = 0;
   out_2286151018867336259[38] = 0;
   out_2286151018867336259[39] = 0;
   out_2286151018867336259[40] = 0;
   out_2286151018867336259[41] = 0;
   out_2286151018867336259[42] = 0;
   out_2286151018867336259[43] = 0;
   out_2286151018867336259[44] = 0;
   out_2286151018867336259[45] = 0;
   out_2286151018867336259[46] = 0;
   out_2286151018867336259[47] = 0;
   out_2286151018867336259[48] = 0;
   out_2286151018867336259[49] = 0;
   out_2286151018867336259[50] = 0;
   out_2286151018867336259[51] = 0;
   out_2286151018867336259[52] = 0;
   out_2286151018867336259[53] = 1;
   out_2286151018867336259[54] = 0;
   out_2286151018867336259[55] = 0;
   out_2286151018867336259[56] = 0;
   out_2286151018867336259[57] = 0;
   out_2286151018867336259[58] = 0;
   out_2286151018867336259[59] = 0;
   out_2286151018867336259[60] = 0;
   out_2286151018867336259[61] = 0;
   out_2286151018867336259[62] = 0;
   out_2286151018867336259[63] = 0;
   out_2286151018867336259[64] = 0;
   out_2286151018867336259[65] = 0;
}
void h_32(double *state, double *unused, double *out_353944952464395499) {
   out_353944952464395499[0] = state[3];
   out_353944952464395499[1] = state[4];
   out_353944952464395499[2] = state[5];
   out_353944952464395499[3] = state[6];
}
void H_32(double *state, double *unused, double *out_7543536434185938159) {
   out_7543536434185938159[0] = 0;
   out_7543536434185938159[1] = 0;
   out_7543536434185938159[2] = 0;
   out_7543536434185938159[3] = 1;
   out_7543536434185938159[4] = 0;
   out_7543536434185938159[5] = 0;
   out_7543536434185938159[6] = 0;
   out_7543536434185938159[7] = 0;
   out_7543536434185938159[8] = 0;
   out_7543536434185938159[9] = 0;
   out_7543536434185938159[10] = 0;
   out_7543536434185938159[11] = 0;
   out_7543536434185938159[12] = 0;
   out_7543536434185938159[13] = 0;
   out_7543536434185938159[14] = 0;
   out_7543536434185938159[15] = 0;
   out_7543536434185938159[16] = 0;
   out_7543536434185938159[17] = 0;
   out_7543536434185938159[18] = 0;
   out_7543536434185938159[19] = 0;
   out_7543536434185938159[20] = 0;
   out_7543536434185938159[21] = 0;
   out_7543536434185938159[22] = 0;
   out_7543536434185938159[23] = 0;
   out_7543536434185938159[24] = 0;
   out_7543536434185938159[25] = 0;
   out_7543536434185938159[26] = 1;
   out_7543536434185938159[27] = 0;
   out_7543536434185938159[28] = 0;
   out_7543536434185938159[29] = 0;
   out_7543536434185938159[30] = 0;
   out_7543536434185938159[31] = 0;
   out_7543536434185938159[32] = 0;
   out_7543536434185938159[33] = 0;
   out_7543536434185938159[34] = 0;
   out_7543536434185938159[35] = 0;
   out_7543536434185938159[36] = 0;
   out_7543536434185938159[37] = 0;
   out_7543536434185938159[38] = 0;
   out_7543536434185938159[39] = 0;
   out_7543536434185938159[40] = 0;
   out_7543536434185938159[41] = 0;
   out_7543536434185938159[42] = 0;
   out_7543536434185938159[43] = 0;
   out_7543536434185938159[44] = 0;
   out_7543536434185938159[45] = 0;
   out_7543536434185938159[46] = 0;
   out_7543536434185938159[47] = 0;
   out_7543536434185938159[48] = 0;
   out_7543536434185938159[49] = 1;
   out_7543536434185938159[50] = 0;
   out_7543536434185938159[51] = 0;
   out_7543536434185938159[52] = 0;
   out_7543536434185938159[53] = 0;
   out_7543536434185938159[54] = 0;
   out_7543536434185938159[55] = 0;
   out_7543536434185938159[56] = 0;
   out_7543536434185938159[57] = 0;
   out_7543536434185938159[58] = 0;
   out_7543536434185938159[59] = 0;
   out_7543536434185938159[60] = 0;
   out_7543536434185938159[61] = 0;
   out_7543536434185938159[62] = 0;
   out_7543536434185938159[63] = 0;
   out_7543536434185938159[64] = 0;
   out_7543536434185938159[65] = 0;
   out_7543536434185938159[66] = 0;
   out_7543536434185938159[67] = 0;
   out_7543536434185938159[68] = 0;
   out_7543536434185938159[69] = 0;
   out_7543536434185938159[70] = 0;
   out_7543536434185938159[71] = 0;
   out_7543536434185938159[72] = 1;
   out_7543536434185938159[73] = 0;
   out_7543536434185938159[74] = 0;
   out_7543536434185938159[75] = 0;
   out_7543536434185938159[76] = 0;
   out_7543536434185938159[77] = 0;
   out_7543536434185938159[78] = 0;
   out_7543536434185938159[79] = 0;
   out_7543536434185938159[80] = 0;
   out_7543536434185938159[81] = 0;
   out_7543536434185938159[82] = 0;
   out_7543536434185938159[83] = 0;
   out_7543536434185938159[84] = 0;
   out_7543536434185938159[85] = 0;
   out_7543536434185938159[86] = 0;
   out_7543536434185938159[87] = 0;
}
void h_13(double *state, double *unused, double *out_6785790827913657931) {
   out_6785790827913657931[0] = (-2*state[3]*state[5] + 2*state[4]*state[6])*state[9] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[8] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[7];
   out_6785790827913657931[1] = (2*state[3]*state[4] + 2*state[5]*state[6])*state[9] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[7] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[8];
   out_6785790827913657931[2] = (-2*state[3]*state[4] + 2*state[5]*state[6])*state[8] + (2*state[3]*state[5] + 2*state[4]*state[6])*state[7] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[9];
}
void H_13(double *state, double *unused, double *out_3365524075934615604) {
   out_3365524075934615604[0] = 0;
   out_3365524075934615604[1] = 0;
   out_3365524075934615604[2] = 0;
   out_3365524075934615604[3] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_3365524075934615604[4] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_3365524075934615604[5] = -2*state[3]*state[9] + 2*state[4]*state[8] - 2*state[5]*state[7];
   out_3365524075934615604[6] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_3365524075934615604[7] = pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2);
   out_3365524075934615604[8] = 2*state[3]*state[6] + 2*state[4]*state[5];
   out_3365524075934615604[9] = -2*state[3]*state[5] + 2*state[4]*state[6];
   out_3365524075934615604[10] = 0;
   out_3365524075934615604[11] = 0;
   out_3365524075934615604[12] = 0;
   out_3365524075934615604[13] = 0;
   out_3365524075934615604[14] = 0;
   out_3365524075934615604[15] = 0;
   out_3365524075934615604[16] = 0;
   out_3365524075934615604[17] = 0;
   out_3365524075934615604[18] = 0;
   out_3365524075934615604[19] = 0;
   out_3365524075934615604[20] = 0;
   out_3365524075934615604[21] = 0;
   out_3365524075934615604[22] = 0;
   out_3365524075934615604[23] = 0;
   out_3365524075934615604[24] = 0;
   out_3365524075934615604[25] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_3365524075934615604[26] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_3365524075934615604[27] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_3365524075934615604[28] = -2*state[3]*state[7] + 2*state[5]*state[9] - 2*state[6]*state[8];
   out_3365524075934615604[29] = -2*state[3]*state[6] + 2*state[4]*state[5];
   out_3365524075934615604[30] = pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2);
   out_3365524075934615604[31] = 2*state[3]*state[4] + 2*state[5]*state[6];
   out_3365524075934615604[32] = 0;
   out_3365524075934615604[33] = 0;
   out_3365524075934615604[34] = 0;
   out_3365524075934615604[35] = 0;
   out_3365524075934615604[36] = 0;
   out_3365524075934615604[37] = 0;
   out_3365524075934615604[38] = 0;
   out_3365524075934615604[39] = 0;
   out_3365524075934615604[40] = 0;
   out_3365524075934615604[41] = 0;
   out_3365524075934615604[42] = 0;
   out_3365524075934615604[43] = 0;
   out_3365524075934615604[44] = 0;
   out_3365524075934615604[45] = 0;
   out_3365524075934615604[46] = 0;
   out_3365524075934615604[47] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_3365524075934615604[48] = -2*state[3]*state[8] - 2*state[4]*state[9] + 2*state[6]*state[7];
   out_3365524075934615604[49] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_3365524075934615604[50] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_3365524075934615604[51] = 2*state[3]*state[5] + 2*state[4]*state[6];
   out_3365524075934615604[52] = -2*state[3]*state[4] + 2*state[5]*state[6];
   out_3365524075934615604[53] = pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2);
   out_3365524075934615604[54] = 0;
   out_3365524075934615604[55] = 0;
   out_3365524075934615604[56] = 0;
   out_3365524075934615604[57] = 0;
   out_3365524075934615604[58] = 0;
   out_3365524075934615604[59] = 0;
   out_3365524075934615604[60] = 0;
   out_3365524075934615604[61] = 0;
   out_3365524075934615604[62] = 0;
   out_3365524075934615604[63] = 0;
   out_3365524075934615604[64] = 0;
   out_3365524075934615604[65] = 0;
}
void h_14(double *state, double *unused, double *out_131594804336773046) {
   out_131594804336773046[0] = state[10];
   out_131594804336773046[1] = state[11];
   out_131594804336773046[2] = state[12];
}
void H_14(double *state, double *unused, double *out_2763951523959864293) {
   out_2763951523959864293[0] = 0;
   out_2763951523959864293[1] = 0;
   out_2763951523959864293[2] = 0;
   out_2763951523959864293[3] = 0;
   out_2763951523959864293[4] = 0;
   out_2763951523959864293[5] = 0;
   out_2763951523959864293[6] = 0;
   out_2763951523959864293[7] = 0;
   out_2763951523959864293[8] = 0;
   out_2763951523959864293[9] = 0;
   out_2763951523959864293[10] = 1;
   out_2763951523959864293[11] = 0;
   out_2763951523959864293[12] = 0;
   out_2763951523959864293[13] = 0;
   out_2763951523959864293[14] = 0;
   out_2763951523959864293[15] = 0;
   out_2763951523959864293[16] = 0;
   out_2763951523959864293[17] = 0;
   out_2763951523959864293[18] = 0;
   out_2763951523959864293[19] = 0;
   out_2763951523959864293[20] = 0;
   out_2763951523959864293[21] = 0;
   out_2763951523959864293[22] = 0;
   out_2763951523959864293[23] = 0;
   out_2763951523959864293[24] = 0;
   out_2763951523959864293[25] = 0;
   out_2763951523959864293[26] = 0;
   out_2763951523959864293[27] = 0;
   out_2763951523959864293[28] = 0;
   out_2763951523959864293[29] = 0;
   out_2763951523959864293[30] = 0;
   out_2763951523959864293[31] = 0;
   out_2763951523959864293[32] = 0;
   out_2763951523959864293[33] = 1;
   out_2763951523959864293[34] = 0;
   out_2763951523959864293[35] = 0;
   out_2763951523959864293[36] = 0;
   out_2763951523959864293[37] = 0;
   out_2763951523959864293[38] = 0;
   out_2763951523959864293[39] = 0;
   out_2763951523959864293[40] = 0;
   out_2763951523959864293[41] = 0;
   out_2763951523959864293[42] = 0;
   out_2763951523959864293[43] = 0;
   out_2763951523959864293[44] = 0;
   out_2763951523959864293[45] = 0;
   out_2763951523959864293[46] = 0;
   out_2763951523959864293[47] = 0;
   out_2763951523959864293[48] = 0;
   out_2763951523959864293[49] = 0;
   out_2763951523959864293[50] = 0;
   out_2763951523959864293[51] = 0;
   out_2763951523959864293[52] = 0;
   out_2763951523959864293[53] = 0;
   out_2763951523959864293[54] = 0;
   out_2763951523959864293[55] = 0;
   out_2763951523959864293[56] = 1;
   out_2763951523959864293[57] = 0;
   out_2763951523959864293[58] = 0;
   out_2763951523959864293[59] = 0;
   out_2763951523959864293[60] = 0;
   out_2763951523959864293[61] = 0;
   out_2763951523959864293[62] = 0;
   out_2763951523959864293[63] = 0;
   out_2763951523959864293[64] = 0;
   out_2763951523959864293[65] = 0;
}
void h_33(double *state, double *unused, double *out_7444621176614147926) {
   out_7444621176614147926[0] = state[16];
   out_7444621176614147926[1] = state[17];
   out_7444621176614147926[2] = state[18];
}
void H_33(double *state, double *unused, double *out_3533951397212846783) {
   out_3533951397212846783[0] = 0;
   out_3533951397212846783[1] = 0;
   out_3533951397212846783[2] = 0;
   out_3533951397212846783[3] = 0;
   out_3533951397212846783[4] = 0;
   out_3533951397212846783[5] = 0;
   out_3533951397212846783[6] = 0;
   out_3533951397212846783[7] = 0;
   out_3533951397212846783[8] = 0;
   out_3533951397212846783[9] = 0;
   out_3533951397212846783[10] = 0;
   out_3533951397212846783[11] = 0;
   out_3533951397212846783[12] = 0;
   out_3533951397212846783[13] = 0;
   out_3533951397212846783[14] = 0;
   out_3533951397212846783[15] = 0;
   out_3533951397212846783[16] = 1;
   out_3533951397212846783[17] = 0;
   out_3533951397212846783[18] = 0;
   out_3533951397212846783[19] = 0;
   out_3533951397212846783[20] = 0;
   out_3533951397212846783[21] = 0;
   out_3533951397212846783[22] = 0;
   out_3533951397212846783[23] = 0;
   out_3533951397212846783[24] = 0;
   out_3533951397212846783[25] = 0;
   out_3533951397212846783[26] = 0;
   out_3533951397212846783[27] = 0;
   out_3533951397212846783[28] = 0;
   out_3533951397212846783[29] = 0;
   out_3533951397212846783[30] = 0;
   out_3533951397212846783[31] = 0;
   out_3533951397212846783[32] = 0;
   out_3533951397212846783[33] = 0;
   out_3533951397212846783[34] = 0;
   out_3533951397212846783[35] = 0;
   out_3533951397212846783[36] = 0;
   out_3533951397212846783[37] = 0;
   out_3533951397212846783[38] = 0;
   out_3533951397212846783[39] = 1;
   out_3533951397212846783[40] = 0;
   out_3533951397212846783[41] = 0;
   out_3533951397212846783[42] = 0;
   out_3533951397212846783[43] = 0;
   out_3533951397212846783[44] = 0;
   out_3533951397212846783[45] = 0;
   out_3533951397212846783[46] = 0;
   out_3533951397212846783[47] = 0;
   out_3533951397212846783[48] = 0;
   out_3533951397212846783[49] = 0;
   out_3533951397212846783[50] = 0;
   out_3533951397212846783[51] = 0;
   out_3533951397212846783[52] = 0;
   out_3533951397212846783[53] = 0;
   out_3533951397212846783[54] = 0;
   out_3533951397212846783[55] = 0;
   out_3533951397212846783[56] = 0;
   out_3533951397212846783[57] = 0;
   out_3533951397212846783[58] = 0;
   out_3533951397212846783[59] = 0;
   out_3533951397212846783[60] = 0;
   out_3533951397212846783[61] = 0;
   out_3533951397212846783[62] = 1;
   out_3533951397212846783[63] = 0;
   out_3533951397212846783[64] = 0;
   out_3533951397212846783[65] = 0;
}
#include <eigen3/Eigen/Dense>
#include <iostream>

typedef Eigen::Matrix<double, DIM, DIM, Eigen::RowMajor> DDM;
typedef Eigen::Matrix<double, EDIM, EDIM, Eigen::RowMajor> EEM;
typedef Eigen::Matrix<double, DIM, EDIM, Eigen::RowMajor> DEM;

void predict(double *in_x, double *in_P, double *in_Q, double dt) {
  typedef Eigen::Matrix<double, MEDIM, MEDIM, Eigen::RowMajor> RRM;

  double nx[DIM] = {0};
  double in_F[EDIM*EDIM] = {0};

  // functions from sympy
  f_fun(in_x, dt, nx);
  F_fun(in_x, dt, in_F);


  EEM F(in_F);
  EEM P(in_P);
  EEM Q(in_Q);

  RRM F_main = F.topLeftCorner(MEDIM, MEDIM);
  P.topLeftCorner(MEDIM, MEDIM) = (F_main * P.topLeftCorner(MEDIM, MEDIM)) * F_main.transpose();
  P.topRightCorner(MEDIM, EDIM - MEDIM) = F_main * P.topRightCorner(MEDIM, EDIM - MEDIM);
  P.bottomLeftCorner(EDIM - MEDIM, MEDIM) = P.bottomLeftCorner(EDIM - MEDIM, MEDIM) * F_main.transpose();

  P = P + dt*Q;

  // copy out state
  memcpy(in_x, nx, DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
}

// note: extra_args dim only correct when null space projecting
// otherwise 1
template <int ZDIM, int EADIM, bool MAHA_TEST>
void update(double *in_x, double *in_P, Hfun h_fun, Hfun H_fun, Hfun Hea_fun, double *in_z, double *in_R, double *in_ea, double MAHA_THRESHOLD) {
  typedef Eigen::Matrix<double, ZDIM, ZDIM, Eigen::RowMajor> ZZM;
  typedef Eigen::Matrix<double, ZDIM, DIM, Eigen::RowMajor> ZDM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, EDIM, Eigen::RowMajor> XEM;
  //typedef Eigen::Matrix<double, EDIM, ZDIM, Eigen::RowMajor> EZM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, 1> X1M;
  typedef Eigen::Matrix<double, Eigen::Dynamic, Eigen::Dynamic, Eigen::RowMajor> XXM;

  double in_hx[ZDIM] = {0};
  double in_H[ZDIM * DIM] = {0};
  double in_H_mod[EDIM * DIM] = {0};
  double delta_x[EDIM] = {0};
  double x_new[DIM] = {0};


  // state x, P
  Eigen::Matrix<double, ZDIM, 1> z(in_z);
  EEM P(in_P);
  ZZM pre_R(in_R);

  // functions from sympy
  h_fun(in_x, in_ea, in_hx);
  H_fun(in_x, in_ea, in_H);
  ZDM pre_H(in_H);

  // get y (y = z - hx)
  Eigen::Matrix<double, ZDIM, 1> pre_y(in_hx); pre_y = z - pre_y;
  X1M y; XXM H; XXM R;
  if (Hea_fun){
    typedef Eigen::Matrix<double, ZDIM, EADIM, Eigen::RowMajor> ZAM;
    double in_Hea[ZDIM * EADIM] = {0};
    Hea_fun(in_x, in_ea, in_Hea);
    ZAM Hea(in_Hea);
    XXM A = Hea.transpose().fullPivLu().kernel();


    y = A.transpose() * pre_y;
    H = A.transpose() * pre_H;
    R = A.transpose() * pre_R * A;
  } else {
    y = pre_y;
    H = pre_H;
    R = pre_R;
  }
  // get modified H
  H_mod_fun(in_x, in_H_mod);
  DEM H_mod(in_H_mod);
  XEM H_err = H * H_mod;

  // Do mahalobis distance test
  if (MAHA_TEST){
    XXM a = (H_err * P * H_err.transpose() + R).inverse();
    double maha_dist = y.transpose() * a * y;
    if (maha_dist > MAHA_THRESHOLD){
      R = 1.0e16 * R;
    }
  }

  // Outlier resilient weighting
  double weight = 1;//(1.5)/(1 + y.squaredNorm()/R.sum());

  // kalman gains and I_KH
  XXM S = ((H_err * P) * H_err.transpose()) + R/weight;
  XEM KT = S.fullPivLu().solve(H_err * P.transpose());
  //EZM K = KT.transpose(); TODO: WHY DOES THIS NOT COMPILE?
  //EZM K = S.fullPivLu().solve(H_err * P.transpose()).transpose();
  //std::cout << "Here is the matrix rot:\n" << K << std::endl;
  EEM I_KH = Eigen::Matrix<double, EDIM, EDIM>::Identity() - (KT.transpose() * H_err);

  // update state by injecting dx
  Eigen::Matrix<double, EDIM, 1> dx(delta_x);
  dx  = (KT.transpose() * y);
  memcpy(delta_x, dx.data(), EDIM * sizeof(double));
  err_fun(in_x, delta_x, x_new);
  Eigen::Matrix<double, DIM, 1> x(x_new);

  // update cov
  P = ((I_KH * P) * I_KH.transpose()) + ((KT.transpose() * R) * KT);

  // copy out state
  memcpy(in_x, x.data(), DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
  memcpy(in_z, y.data(), y.rows() * sizeof(double));
}




}
extern "C" {

void live_update_4(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_4, H_4, NULL, in_z, in_R, in_ea, MAHA_THRESH_4);
}
void live_update_9(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_9, H_9, NULL, in_z, in_R, in_ea, MAHA_THRESH_9);
}
void live_update_10(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_10, H_10, NULL, in_z, in_R, in_ea, MAHA_THRESH_10);
}
void live_update_12(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_12, H_12, NULL, in_z, in_R, in_ea, MAHA_THRESH_12);
}
void live_update_35(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_35, H_35, NULL, in_z, in_R, in_ea, MAHA_THRESH_35);
}
void live_update_32(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<4, 3, 0>(in_x, in_P, h_32, H_32, NULL, in_z, in_R, in_ea, MAHA_THRESH_32);
}
void live_update_13(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_13, H_13, NULL, in_z, in_R, in_ea, MAHA_THRESH_13);
}
void live_update_14(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_14, H_14, NULL, in_z, in_R, in_ea, MAHA_THRESH_14);
}
void live_update_33(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_33, H_33, NULL, in_z, in_R, in_ea, MAHA_THRESH_33);
}
void live_H(double *in_vec, double *out_810863447993294239) {
  H(in_vec, out_810863447993294239);
}
void live_err_fun(double *nom_x, double *delta_x, double *out_3497916368343231976) {
  err_fun(nom_x, delta_x, out_3497916368343231976);
}
void live_inv_err_fun(double *nom_x, double *true_x, double *out_5885895562894163360) {
  inv_err_fun(nom_x, true_x, out_5885895562894163360);
}
void live_H_mod_fun(double *state, double *out_7827200557488535930) {
  H_mod_fun(state, out_7827200557488535930);
}
void live_f_fun(double *state, double dt, double *out_4200778327129732755) {
  f_fun(state,  dt, out_4200778327129732755);
}
void live_F_fun(double *state, double dt, double *out_5041384979026150723) {
  F_fun(state,  dt, out_5041384979026150723);
}
void live_h_4(double *state, double *unused, double *out_5583179280850599905) {
  h_4(state, unused, out_5583179280850599905);
}
void live_H_4(double *state, double *unused, double *out_8395573614485239853) {
  H_4(state, unused, out_8395573614485239853);
}
void live_h_9(double *state, double *unused, double *out_131594804336773046) {
  h_9(state, unused, out_131594804336773046);
}
void live_H_9(double *state, double *unused, double *out_2763951523959864293) {
  H_9(state, unused, out_2763951523959864293);
}
void live_h_10(double *state, double *unused, double *out_9003306024986045133) {
  h_10(state, unused, out_9003306024986045133);
}
void live_H_10(double *state, double *unused, double *out_3153156099227407698) {
  H_10(state, unused, out_3153156099227407698);
}
void live_h_12(double *state, double *unused, double *out_5619056622607744023) {
  h_12(state, unused, out_5619056622607744023);
}
void live_H_12(double *state, double *unused, double *out_5031714051192349968) {
  H_12(state, unused, out_5031714051192349968);
}
void live_h_35(double *state, double *unused, double *out_3057915715388954701) {
  h_35(state, unused, out_3057915715388954701);
}
void live_H_35(double *state, double *unused, double *out_2286151018867336259) {
  H_35(state, unused, out_2286151018867336259);
}
void live_h_32(double *state, double *unused, double *out_353944952464395499) {
  h_32(state, unused, out_353944952464395499);
}
void live_H_32(double *state, double *unused, double *out_7543536434185938159) {
  H_32(state, unused, out_7543536434185938159);
}
void live_h_13(double *state, double *unused, double *out_6785790827913657931) {
  h_13(state, unused, out_6785790827913657931);
}
void live_H_13(double *state, double *unused, double *out_3365524075934615604) {
  H_13(state, unused, out_3365524075934615604);
}
void live_h_14(double *state, double *unused, double *out_131594804336773046) {
  h_14(state, unused, out_131594804336773046);
}
void live_H_14(double *state, double *unused, double *out_2763951523959864293) {
  H_14(state, unused, out_2763951523959864293);
}
void live_h_33(double *state, double *unused, double *out_7444621176614147926) {
  h_33(state, unused, out_7444621176614147926);
}
void live_H_33(double *state, double *unused, double *out_3533951397212846783) {
  H_33(state, unused, out_3533951397212846783);
}
void live_predict(double *in_x, double *in_P, double *in_Q, double dt) {
  predict(in_x, in_P, in_Q, dt);
}
}

const EKF live = {
  .name = "live",
  .kinds = { 4, 9, 10, 12, 35, 32, 13, 14, 33 },
  .feature_kinds = {  },
  .f_fun = live_f_fun,
  .F_fun = live_F_fun,
  .err_fun = live_err_fun,
  .inv_err_fun = live_inv_err_fun,
  .H_mod_fun = live_H_mod_fun,
  .predict = live_predict,
  .hs = {
    { 4, live_h_4 },
    { 9, live_h_9 },
    { 10, live_h_10 },
    { 12, live_h_12 },
    { 35, live_h_35 },
    { 32, live_h_32 },
    { 13, live_h_13 },
    { 14, live_h_14 },
    { 33, live_h_33 },
  },
  .Hs = {
    { 4, live_H_4 },
    { 9, live_H_9 },
    { 10, live_H_10 },
    { 12, live_H_12 },
    { 35, live_H_35 },
    { 32, live_H_32 },
    { 13, live_H_13 },
    { 14, live_H_14 },
    { 33, live_H_33 },
  },
  .updates = {
    { 4, live_update_4 },
    { 9, live_update_9 },
    { 10, live_update_10 },
    { 12, live_update_12 },
    { 35, live_update_35 },
    { 32, live_update_32 },
    { 13, live_update_13 },
    { 14, live_update_14 },
    { 33, live_update_33 },
  },
  .Hes = {
  },
  .sets = {
  },
  .extra_routines = {
    { "H", live_H },
  },
};

ekf_lib_init(live)
