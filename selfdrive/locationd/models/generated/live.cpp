#include "live.h"

namespace {
#define DIM 22
#define EDIM 21
#define MEDIM 21
typedef void (*Hfun)(double *, double *, double *);
const static double MAHA_THRESH_4 = 7.814727903251177;
const static double MAHA_THRESH_9 = 7.814727903251177;
const static double MAHA_THRESH_10 = 7.814727903251177;
const static double MAHA_THRESH_12 = 7.814727903251177;
const static double MAHA_THRESH_35 = 7.814727903251177;
const static double MAHA_THRESH_32 = 9.487729036781154;
const static double MAHA_THRESH_13 = 7.814727903251177;
const static double MAHA_THRESH_14 = 7.814727903251177;
const static double MAHA_THRESH_33 = 7.814727903251177;

/******************************************************************************
 *                       Code generated with SymPy 1.12                       *
 *                                                                            *
 *              See http://www.sympy.org/ for more information.               *
 *                                                                            *
 *                         This file is part of 'ekf'                         *
 ******************************************************************************/
void H(double *in_vec, double *out_5054326339553974158) {
   out_5054326339553974158[0] = 0;
   out_5054326339553974158[1] = -sin(in_vec[1])*sin(in_vec[2])*in_vec[4] - sin(in_vec[1])*cos(in_vec[2])*in_vec[3] - cos(in_vec[1])*in_vec[5];
   out_5054326339553974158[2] = -sin(in_vec[2])*cos(in_vec[1])*in_vec[3] + cos(in_vec[1])*cos(in_vec[2])*in_vec[4];
   out_5054326339553974158[3] = cos(in_vec[1])*cos(in_vec[2]);
   out_5054326339553974158[4] = sin(in_vec[2])*cos(in_vec[1]);
   out_5054326339553974158[5] = -sin(in_vec[1]);
   out_5054326339553974158[6] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (-sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_5054326339553974158[7] = -sin(in_vec[0])*sin(in_vec[1])*in_vec[5] + sin(in_vec[0])*sin(in_vec[2])*cos(in_vec[1])*in_vec[4] + sin(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_5054326339553974158[8] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]))*in_vec[4];
   out_5054326339553974158[9] = sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]);
   out_5054326339553974158[10] = sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) + cos(in_vec[0])*cos(in_vec[2]);
   out_5054326339553974158[11] = sin(in_vec[0])*cos(in_vec[1]);
   out_5054326339553974158[12] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (-sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) + sin(in_vec[2])*cos(in_vec[0]))*in_vec[3] - sin(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_5054326339553974158[13] = -sin(in_vec[1])*cos(in_vec[0])*in_vec[5] + sin(in_vec[2])*cos(in_vec[0])*cos(in_vec[1])*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_5054326339553974158[14] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (sin(in_vec[0])*cos(in_vec[2]) - sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[3];
   out_5054326339553974158[15] = sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]);
   out_5054326339553974158[16] = -sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]);
   out_5054326339553974158[17] = cos(in_vec[0])*cos(in_vec[1]);
}
void err_fun(double *nom_x, double *delta_x, double *out_2253683805816507243) {
   out_2253683805816507243[0] = delta_x[0] + nom_x[0];
   out_2253683805816507243[1] = delta_x[1] + nom_x[1];
   out_2253683805816507243[2] = delta_x[2] + nom_x[2];
   out_2253683805816507243[3] = -0.5*delta_x[3]*nom_x[4] - 0.5*delta_x[4]*nom_x[5] - 0.5*delta_x[5]*nom_x[6] + 1.0*nom_x[3];
   out_2253683805816507243[4] = 0.5*delta_x[3]*nom_x[3] + 0.5*delta_x[4]*nom_x[6] - 0.5*delta_x[5]*nom_x[5] + 1.0*nom_x[4];
   out_2253683805816507243[5] = -0.5*delta_x[3]*nom_x[6] + 0.5*delta_x[4]*nom_x[3] + 0.5*delta_x[5]*nom_x[4] + 1.0*nom_x[5];
   out_2253683805816507243[6] = 0.5*delta_x[3]*nom_x[5] - 0.5*delta_x[4]*nom_x[4] + 0.5*delta_x[5]*nom_x[3] + 1.0*nom_x[6];
   out_2253683805816507243[7] = delta_x[6] + nom_x[7];
   out_2253683805816507243[8] = delta_x[7] + nom_x[8];
   out_2253683805816507243[9] = delta_x[8] + nom_x[9];
   out_2253683805816507243[10] = delta_x[9] + nom_x[10];
   out_2253683805816507243[11] = delta_x[10] + nom_x[11];
   out_2253683805816507243[12] = delta_x[11] + nom_x[12];
   out_2253683805816507243[13] = delta_x[12] + nom_x[13];
   out_2253683805816507243[14] = delta_x[13] + nom_x[14];
   out_2253683805816507243[15] = delta_x[14] + nom_x[15];
   out_2253683805816507243[16] = delta_x[15] + nom_x[16];
   out_2253683805816507243[17] = delta_x[16] + nom_x[17];
   out_2253683805816507243[18] = delta_x[17] + nom_x[18];
   out_2253683805816507243[19] = delta_x[18] + nom_x[19];
   out_2253683805816507243[20] = delta_x[19] + nom_x[20];
   out_2253683805816507243[21] = delta_x[20] + nom_x[21];
}
void inv_err_fun(double *nom_x, double *true_x, double *out_3526172836950796626) {
   out_3526172836950796626[0] = -nom_x[0] + true_x[0];
   out_3526172836950796626[1] = -nom_x[1] + true_x[1];
   out_3526172836950796626[2] = -nom_x[2] + true_x[2];
   out_3526172836950796626[3] = 2*nom_x[3]*true_x[4] - 2*nom_x[4]*true_x[3] + 2*nom_x[5]*true_x[6] - 2*nom_x[6]*true_x[5];
   out_3526172836950796626[4] = 2*nom_x[3]*true_x[5] - 2*nom_x[4]*true_x[6] - 2*nom_x[5]*true_x[3] + 2*nom_x[6]*true_x[4];
   out_3526172836950796626[5] = 2*nom_x[3]*true_x[6] + 2*nom_x[4]*true_x[5] - 2*nom_x[5]*true_x[4] - 2*nom_x[6]*true_x[3];
   out_3526172836950796626[6] = -nom_x[7] + true_x[7];
   out_3526172836950796626[7] = -nom_x[8] + true_x[8];
   out_3526172836950796626[8] = -nom_x[9] + true_x[9];
   out_3526172836950796626[9] = -nom_x[10] + true_x[10];
   out_3526172836950796626[10] = -nom_x[11] + true_x[11];
   out_3526172836950796626[11] = -nom_x[12] + true_x[12];
   out_3526172836950796626[12] = -nom_x[13] + true_x[13];
   out_3526172836950796626[13] = -nom_x[14] + true_x[14];
   out_3526172836950796626[14] = -nom_x[15] + true_x[15];
   out_3526172836950796626[15] = -nom_x[16] + true_x[16];
   out_3526172836950796626[16] = -nom_x[17] + true_x[17];
   out_3526172836950796626[17] = -nom_x[18] + true_x[18];
   out_3526172836950796626[18] = -nom_x[19] + true_x[19];
   out_3526172836950796626[19] = -nom_x[20] + true_x[20];
   out_3526172836950796626[20] = -nom_x[21] + true_x[21];
}
void H_mod_fun(double *state, double *out_3099928180518603739) {
   out_3099928180518603739[0] = 1.0;
   out_3099928180518603739[1] = 0;
   out_3099928180518603739[2] = 0;
   out_3099928180518603739[3] = 0;
   out_3099928180518603739[4] = 0;
   out_3099928180518603739[5] = 0;
   out_3099928180518603739[6] = 0;
   out_3099928180518603739[7] = 0;
   out_3099928180518603739[8] = 0;
   out_3099928180518603739[9] = 0;
   out_3099928180518603739[10] = 0;
   out_3099928180518603739[11] = 0;
   out_3099928180518603739[12] = 0;
   out_3099928180518603739[13] = 0;
   out_3099928180518603739[14] = 0;
   out_3099928180518603739[15] = 0;
   out_3099928180518603739[16] = 0;
   out_3099928180518603739[17] = 0;
   out_3099928180518603739[18] = 0;
   out_3099928180518603739[19] = 0;
   out_3099928180518603739[20] = 0;
   out_3099928180518603739[21] = 0;
   out_3099928180518603739[22] = 1.0;
   out_3099928180518603739[23] = 0;
   out_3099928180518603739[24] = 0;
   out_3099928180518603739[25] = 0;
   out_3099928180518603739[26] = 0;
   out_3099928180518603739[27] = 0;
   out_3099928180518603739[28] = 0;
   out_3099928180518603739[29] = 0;
   out_3099928180518603739[30] = 0;
   out_3099928180518603739[31] = 0;
   out_3099928180518603739[32] = 0;
   out_3099928180518603739[33] = 0;
   out_3099928180518603739[34] = 0;
   out_3099928180518603739[35] = 0;
   out_3099928180518603739[36] = 0;
   out_3099928180518603739[37] = 0;
   out_3099928180518603739[38] = 0;
   out_3099928180518603739[39] = 0;
   out_3099928180518603739[40] = 0;
   out_3099928180518603739[41] = 0;
   out_3099928180518603739[42] = 0;
   out_3099928180518603739[43] = 0;
   out_3099928180518603739[44] = 1.0;
   out_3099928180518603739[45] = 0;
   out_3099928180518603739[46] = 0;
   out_3099928180518603739[47] = 0;
   out_3099928180518603739[48] = 0;
   out_3099928180518603739[49] = 0;
   out_3099928180518603739[50] = 0;
   out_3099928180518603739[51] = 0;
   out_3099928180518603739[52] = 0;
   out_3099928180518603739[53] = 0;
   out_3099928180518603739[54] = 0;
   out_3099928180518603739[55] = 0;
   out_3099928180518603739[56] = 0;
   out_3099928180518603739[57] = 0;
   out_3099928180518603739[58] = 0;
   out_3099928180518603739[59] = 0;
   out_3099928180518603739[60] = 0;
   out_3099928180518603739[61] = 0;
   out_3099928180518603739[62] = 0;
   out_3099928180518603739[63] = 0;
   out_3099928180518603739[64] = 0;
   out_3099928180518603739[65] = 0;
   out_3099928180518603739[66] = -0.5*state[4];
   out_3099928180518603739[67] = -0.5*state[5];
   out_3099928180518603739[68] = -0.5*state[6];
   out_3099928180518603739[69] = 0;
   out_3099928180518603739[70] = 0;
   out_3099928180518603739[71] = 0;
   out_3099928180518603739[72] = 0;
   out_3099928180518603739[73] = 0;
   out_3099928180518603739[74] = 0;
   out_3099928180518603739[75] = 0;
   out_3099928180518603739[76] = 0;
   out_3099928180518603739[77] = 0;
   out_3099928180518603739[78] = 0;
   out_3099928180518603739[79] = 0;
   out_3099928180518603739[80] = 0;
   out_3099928180518603739[81] = 0;
   out_3099928180518603739[82] = 0;
   out_3099928180518603739[83] = 0;
   out_3099928180518603739[84] = 0;
   out_3099928180518603739[85] = 0;
   out_3099928180518603739[86] = 0;
   out_3099928180518603739[87] = 0.5*state[3];
   out_3099928180518603739[88] = 0.5*state[6];
   out_3099928180518603739[89] = -0.5*state[5];
   out_3099928180518603739[90] = 0;
   out_3099928180518603739[91] = 0;
   out_3099928180518603739[92] = 0;
   out_3099928180518603739[93] = 0;
   out_3099928180518603739[94] = 0;
   out_3099928180518603739[95] = 0;
   out_3099928180518603739[96] = 0;
   out_3099928180518603739[97] = 0;
   out_3099928180518603739[98] = 0;
   out_3099928180518603739[99] = 0;
   out_3099928180518603739[100] = 0;
   out_3099928180518603739[101] = 0;
   out_3099928180518603739[102] = 0;
   out_3099928180518603739[103] = 0;
   out_3099928180518603739[104] = 0;
   out_3099928180518603739[105] = 0;
   out_3099928180518603739[106] = 0;
   out_3099928180518603739[107] = 0;
   out_3099928180518603739[108] = -0.5*state[6];
   out_3099928180518603739[109] = 0.5*state[3];
   out_3099928180518603739[110] = 0.5*state[4];
   out_3099928180518603739[111] = 0;
   out_3099928180518603739[112] = 0;
   out_3099928180518603739[113] = 0;
   out_3099928180518603739[114] = 0;
   out_3099928180518603739[115] = 0;
   out_3099928180518603739[116] = 0;
   out_3099928180518603739[117] = 0;
   out_3099928180518603739[118] = 0;
   out_3099928180518603739[119] = 0;
   out_3099928180518603739[120] = 0;
   out_3099928180518603739[121] = 0;
   out_3099928180518603739[122] = 0;
   out_3099928180518603739[123] = 0;
   out_3099928180518603739[124] = 0;
   out_3099928180518603739[125] = 0;
   out_3099928180518603739[126] = 0;
   out_3099928180518603739[127] = 0;
   out_3099928180518603739[128] = 0;
   out_3099928180518603739[129] = 0.5*state[5];
   out_3099928180518603739[130] = -0.5*state[4];
   out_3099928180518603739[131] = 0.5*state[3];
   out_3099928180518603739[132] = 0;
   out_3099928180518603739[133] = 0;
   out_3099928180518603739[134] = 0;
   out_3099928180518603739[135] = 0;
   out_3099928180518603739[136] = 0;
   out_3099928180518603739[137] = 0;
   out_3099928180518603739[138] = 0;
   out_3099928180518603739[139] = 0;
   out_3099928180518603739[140] = 0;
   out_3099928180518603739[141] = 0;
   out_3099928180518603739[142] = 0;
   out_3099928180518603739[143] = 0;
   out_3099928180518603739[144] = 0;
   out_3099928180518603739[145] = 0;
   out_3099928180518603739[146] = 0;
   out_3099928180518603739[147] = 0;
   out_3099928180518603739[148] = 0;
   out_3099928180518603739[149] = 0;
   out_3099928180518603739[150] = 0;
   out_3099928180518603739[151] = 0;
   out_3099928180518603739[152] = 0;
   out_3099928180518603739[153] = 1.0;
   out_3099928180518603739[154] = 0;
   out_3099928180518603739[155] = 0;
   out_3099928180518603739[156] = 0;
   out_3099928180518603739[157] = 0;
   out_3099928180518603739[158] = 0;
   out_3099928180518603739[159] = 0;
   out_3099928180518603739[160] = 0;
   out_3099928180518603739[161] = 0;
   out_3099928180518603739[162] = 0;
   out_3099928180518603739[163] = 0;
   out_3099928180518603739[164] = 0;
   out_3099928180518603739[165] = 0;
   out_3099928180518603739[166] = 0;
   out_3099928180518603739[167] = 0;
   out_3099928180518603739[168] = 0;
   out_3099928180518603739[169] = 0;
   out_3099928180518603739[170] = 0;
   out_3099928180518603739[171] = 0;
   out_3099928180518603739[172] = 0;
   out_3099928180518603739[173] = 0;
   out_3099928180518603739[174] = 0;
   out_3099928180518603739[175] = 1.0;
   out_3099928180518603739[176] = 0;
   out_3099928180518603739[177] = 0;
   out_3099928180518603739[178] = 0;
   out_3099928180518603739[179] = 0;
   out_3099928180518603739[180] = 0;
   out_3099928180518603739[181] = 0;
   out_3099928180518603739[182] = 0;
   out_3099928180518603739[183] = 0;
   out_3099928180518603739[184] = 0;
   out_3099928180518603739[185] = 0;
   out_3099928180518603739[186] = 0;
   out_3099928180518603739[187] = 0;
   out_3099928180518603739[188] = 0;
   out_3099928180518603739[189] = 0;
   out_3099928180518603739[190] = 0;
   out_3099928180518603739[191] = 0;
   out_3099928180518603739[192] = 0;
   out_3099928180518603739[193] = 0;
   out_3099928180518603739[194] = 0;
   out_3099928180518603739[195] = 0;
   out_3099928180518603739[196] = 0;
   out_3099928180518603739[197] = 1.0;
   out_3099928180518603739[198] = 0;
   out_3099928180518603739[199] = 0;
   out_3099928180518603739[200] = 0;
   out_3099928180518603739[201] = 0;
   out_3099928180518603739[202] = 0;
   out_3099928180518603739[203] = 0;
   out_3099928180518603739[204] = 0;
   out_3099928180518603739[205] = 0;
   out_3099928180518603739[206] = 0;
   out_3099928180518603739[207] = 0;
   out_3099928180518603739[208] = 0;
   out_3099928180518603739[209] = 0;
   out_3099928180518603739[210] = 0;
   out_3099928180518603739[211] = 0;
   out_3099928180518603739[212] = 0;
   out_3099928180518603739[213] = 0;
   out_3099928180518603739[214] = 0;
   out_3099928180518603739[215] = 0;
   out_3099928180518603739[216] = 0;
   out_3099928180518603739[217] = 0;
   out_3099928180518603739[218] = 0;
   out_3099928180518603739[219] = 1.0;
   out_3099928180518603739[220] = 0;
   out_3099928180518603739[221] = 0;
   out_3099928180518603739[222] = 0;
   out_3099928180518603739[223] = 0;
   out_3099928180518603739[224] = 0;
   out_3099928180518603739[225] = 0;
   out_3099928180518603739[226] = 0;
   out_3099928180518603739[227] = 0;
   out_3099928180518603739[228] = 0;
   out_3099928180518603739[229] = 0;
   out_3099928180518603739[230] = 0;
   out_3099928180518603739[231] = 0;
   out_3099928180518603739[232] = 0;
   out_3099928180518603739[233] = 0;
   out_3099928180518603739[234] = 0;
   out_3099928180518603739[235] = 0;
   out_3099928180518603739[236] = 0;
   out_3099928180518603739[237] = 0;
   out_3099928180518603739[238] = 0;
   out_3099928180518603739[239] = 0;
   out_3099928180518603739[240] = 0;
   out_3099928180518603739[241] = 1.0;
   out_3099928180518603739[242] = 0;
   out_3099928180518603739[243] = 0;
   out_3099928180518603739[244] = 0;
   out_3099928180518603739[245] = 0;
   out_3099928180518603739[246] = 0;
   out_3099928180518603739[247] = 0;
   out_3099928180518603739[248] = 0;
   out_3099928180518603739[249] = 0;
   out_3099928180518603739[250] = 0;
   out_3099928180518603739[251] = 0;
   out_3099928180518603739[252] = 0;
   out_3099928180518603739[253] = 0;
   out_3099928180518603739[254] = 0;
   out_3099928180518603739[255] = 0;
   out_3099928180518603739[256] = 0;
   out_3099928180518603739[257] = 0;
   out_3099928180518603739[258] = 0;
   out_3099928180518603739[259] = 0;
   out_3099928180518603739[260] = 0;
   out_3099928180518603739[261] = 0;
   out_3099928180518603739[262] = 0;
   out_3099928180518603739[263] = 1.0;
   out_3099928180518603739[264] = 0;
   out_3099928180518603739[265] = 0;
   out_3099928180518603739[266] = 0;
   out_3099928180518603739[267] = 0;
   out_3099928180518603739[268] = 0;
   out_3099928180518603739[269] = 0;
   out_3099928180518603739[270] = 0;
   out_3099928180518603739[271] = 0;
   out_3099928180518603739[272] = 0;
   out_3099928180518603739[273] = 0;
   out_3099928180518603739[274] = 0;
   out_3099928180518603739[275] = 0;
   out_3099928180518603739[276] = 0;
   out_3099928180518603739[277] = 0;
   out_3099928180518603739[278] = 0;
   out_3099928180518603739[279] = 0;
   out_3099928180518603739[280] = 0;
   out_3099928180518603739[281] = 0;
   out_3099928180518603739[282] = 0;
   out_3099928180518603739[283] = 0;
   out_3099928180518603739[284] = 0;
   out_3099928180518603739[285] = 1.0;
   out_3099928180518603739[286] = 0;
   out_3099928180518603739[287] = 0;
   out_3099928180518603739[288] = 0;
   out_3099928180518603739[289] = 0;
   out_3099928180518603739[290] = 0;
   out_3099928180518603739[291] = 0;
   out_3099928180518603739[292] = 0;
   out_3099928180518603739[293] = 0;
   out_3099928180518603739[294] = 0;
   out_3099928180518603739[295] = 0;
   out_3099928180518603739[296] = 0;
   out_3099928180518603739[297] = 0;
   out_3099928180518603739[298] = 0;
   out_3099928180518603739[299] = 0;
   out_3099928180518603739[300] = 0;
   out_3099928180518603739[301] = 0;
   out_3099928180518603739[302] = 0;
   out_3099928180518603739[303] = 0;
   out_3099928180518603739[304] = 0;
   out_3099928180518603739[305] = 0;
   out_3099928180518603739[306] = 0;
   out_3099928180518603739[307] = 1.0;
   out_3099928180518603739[308] = 0;
   out_3099928180518603739[309] = 0;
   out_3099928180518603739[310] = 0;
   out_3099928180518603739[311] = 0;
   out_3099928180518603739[312] = 0;
   out_3099928180518603739[313] = 0;
   out_3099928180518603739[314] = 0;
   out_3099928180518603739[315] = 0;
   out_3099928180518603739[316] = 0;
   out_3099928180518603739[317] = 0;
   out_3099928180518603739[318] = 0;
   out_3099928180518603739[319] = 0;
   out_3099928180518603739[320] = 0;
   out_3099928180518603739[321] = 0;
   out_3099928180518603739[322] = 0;
   out_3099928180518603739[323] = 0;
   out_3099928180518603739[324] = 0;
   out_3099928180518603739[325] = 0;
   out_3099928180518603739[326] = 0;
   out_3099928180518603739[327] = 0;
   out_3099928180518603739[328] = 0;
   out_3099928180518603739[329] = 1.0;
   out_3099928180518603739[330] = 0;
   out_3099928180518603739[331] = 0;
   out_3099928180518603739[332] = 0;
   out_3099928180518603739[333] = 0;
   out_3099928180518603739[334] = 0;
   out_3099928180518603739[335] = 0;
   out_3099928180518603739[336] = 0;
   out_3099928180518603739[337] = 0;
   out_3099928180518603739[338] = 0;
   out_3099928180518603739[339] = 0;
   out_3099928180518603739[340] = 0;
   out_3099928180518603739[341] = 0;
   out_3099928180518603739[342] = 0;
   out_3099928180518603739[343] = 0;
   out_3099928180518603739[344] = 0;
   out_3099928180518603739[345] = 0;
   out_3099928180518603739[346] = 0;
   out_3099928180518603739[347] = 0;
   out_3099928180518603739[348] = 0;
   out_3099928180518603739[349] = 0;
   out_3099928180518603739[350] = 0;
   out_3099928180518603739[351] = 1.0;
   out_3099928180518603739[352] = 0;
   out_3099928180518603739[353] = 0;
   out_3099928180518603739[354] = 0;
   out_3099928180518603739[355] = 0;
   out_3099928180518603739[356] = 0;
   out_3099928180518603739[357] = 0;
   out_3099928180518603739[358] = 0;
   out_3099928180518603739[359] = 0;
   out_3099928180518603739[360] = 0;
   out_3099928180518603739[361] = 0;
   out_3099928180518603739[362] = 0;
   out_3099928180518603739[363] = 0;
   out_3099928180518603739[364] = 0;
   out_3099928180518603739[365] = 0;
   out_3099928180518603739[366] = 0;
   out_3099928180518603739[367] = 0;
   out_3099928180518603739[368] = 0;
   out_3099928180518603739[369] = 0;
   out_3099928180518603739[370] = 0;
   out_3099928180518603739[371] = 0;
   out_3099928180518603739[372] = 0;
   out_3099928180518603739[373] = 1.0;
   out_3099928180518603739[374] = 0;
   out_3099928180518603739[375] = 0;
   out_3099928180518603739[376] = 0;
   out_3099928180518603739[377] = 0;
   out_3099928180518603739[378] = 0;
   out_3099928180518603739[379] = 0;
   out_3099928180518603739[380] = 0;
   out_3099928180518603739[381] = 0;
   out_3099928180518603739[382] = 0;
   out_3099928180518603739[383] = 0;
   out_3099928180518603739[384] = 0;
   out_3099928180518603739[385] = 0;
   out_3099928180518603739[386] = 0;
   out_3099928180518603739[387] = 0;
   out_3099928180518603739[388] = 0;
   out_3099928180518603739[389] = 0;
   out_3099928180518603739[390] = 0;
   out_3099928180518603739[391] = 0;
   out_3099928180518603739[392] = 0;
   out_3099928180518603739[393] = 0;
   out_3099928180518603739[394] = 0;
   out_3099928180518603739[395] = 1.0;
   out_3099928180518603739[396] = 0;
   out_3099928180518603739[397] = 0;
   out_3099928180518603739[398] = 0;
   out_3099928180518603739[399] = 0;
   out_3099928180518603739[400] = 0;
   out_3099928180518603739[401] = 0;
   out_3099928180518603739[402] = 0;
   out_3099928180518603739[403] = 0;
   out_3099928180518603739[404] = 0;
   out_3099928180518603739[405] = 0;
   out_3099928180518603739[406] = 0;
   out_3099928180518603739[407] = 0;
   out_3099928180518603739[408] = 0;
   out_3099928180518603739[409] = 0;
   out_3099928180518603739[410] = 0;
   out_3099928180518603739[411] = 0;
   out_3099928180518603739[412] = 0;
   out_3099928180518603739[413] = 0;
   out_3099928180518603739[414] = 0;
   out_3099928180518603739[415] = 0;
   out_3099928180518603739[416] = 0;
   out_3099928180518603739[417] = 1.0;
   out_3099928180518603739[418] = 0;
   out_3099928180518603739[419] = 0;
   out_3099928180518603739[420] = 0;
   out_3099928180518603739[421] = 0;
   out_3099928180518603739[422] = 0;
   out_3099928180518603739[423] = 0;
   out_3099928180518603739[424] = 0;
   out_3099928180518603739[425] = 0;
   out_3099928180518603739[426] = 0;
   out_3099928180518603739[427] = 0;
   out_3099928180518603739[428] = 0;
   out_3099928180518603739[429] = 0;
   out_3099928180518603739[430] = 0;
   out_3099928180518603739[431] = 0;
   out_3099928180518603739[432] = 0;
   out_3099928180518603739[433] = 0;
   out_3099928180518603739[434] = 0;
   out_3099928180518603739[435] = 0;
   out_3099928180518603739[436] = 0;
   out_3099928180518603739[437] = 0;
   out_3099928180518603739[438] = 0;
   out_3099928180518603739[439] = 1.0;
   out_3099928180518603739[440] = 0;
   out_3099928180518603739[441] = 0;
   out_3099928180518603739[442] = 0;
   out_3099928180518603739[443] = 0;
   out_3099928180518603739[444] = 0;
   out_3099928180518603739[445] = 0;
   out_3099928180518603739[446] = 0;
   out_3099928180518603739[447] = 0;
   out_3099928180518603739[448] = 0;
   out_3099928180518603739[449] = 0;
   out_3099928180518603739[450] = 0;
   out_3099928180518603739[451] = 0;
   out_3099928180518603739[452] = 0;
   out_3099928180518603739[453] = 0;
   out_3099928180518603739[454] = 0;
   out_3099928180518603739[455] = 0;
   out_3099928180518603739[456] = 0;
   out_3099928180518603739[457] = 0;
   out_3099928180518603739[458] = 0;
   out_3099928180518603739[459] = 0;
   out_3099928180518603739[460] = 0;
   out_3099928180518603739[461] = 1.0;
}
void f_fun(double *state, double dt, double *out_140542625930934274) {
   out_140542625930934274[0] = dt*state[7] + state[0];
   out_140542625930934274[1] = dt*state[8] + state[1];
   out_140542625930934274[2] = dt*state[9] + state[2];
   out_140542625930934274[3] = dt*(-0.5*state[4]*state[10] - 0.5*state[5]*state[11] - 0.5*state[6]*state[12]) + state[3];
   out_140542625930934274[4] = dt*(0.5*state[3]*state[10] + 0.5*state[5]*state[12] - 0.5*state[6]*state[11]) + state[4];
   out_140542625930934274[5] = dt*(0.5*state[3]*state[11] - 0.5*state[4]*state[12] + 0.5*state[6]*state[10]) + state[5];
   out_140542625930934274[6] = dt*(0.5*state[3]*state[12] + 0.5*state[4]*state[11] - 0.5*state[5]*state[10]) + state[6];
   out_140542625930934274[7] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]) + state[7];
   out_140542625930934274[8] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]) + state[8];
   out_140542625930934274[9] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]) + state[9];
   out_140542625930934274[10] = state[10];
   out_140542625930934274[11] = state[11];
   out_140542625930934274[12] = state[12];
   out_140542625930934274[13] = state[13];
   out_140542625930934274[14] = state[14];
   out_140542625930934274[15] = state[15];
   out_140542625930934274[16] = state[16];
   out_140542625930934274[17] = state[17];
   out_140542625930934274[18] = state[18];
   out_140542625930934274[19] = state[19];
   out_140542625930934274[20] = state[20];
   out_140542625930934274[21] = state[21];
}
void F_fun(double *state, double dt, double *out_385185360291656388) {
   out_385185360291656388[0] = 1;
   out_385185360291656388[1] = 0;
   out_385185360291656388[2] = 0;
   out_385185360291656388[3] = 0;
   out_385185360291656388[4] = 0;
   out_385185360291656388[5] = 0;
   out_385185360291656388[6] = dt;
   out_385185360291656388[7] = 0;
   out_385185360291656388[8] = 0;
   out_385185360291656388[9] = 0;
   out_385185360291656388[10] = 0;
   out_385185360291656388[11] = 0;
   out_385185360291656388[12] = 0;
   out_385185360291656388[13] = 0;
   out_385185360291656388[14] = 0;
   out_385185360291656388[15] = 0;
   out_385185360291656388[16] = 0;
   out_385185360291656388[17] = 0;
   out_385185360291656388[18] = 0;
   out_385185360291656388[19] = 0;
   out_385185360291656388[20] = 0;
   out_385185360291656388[21] = 0;
   out_385185360291656388[22] = 1;
   out_385185360291656388[23] = 0;
   out_385185360291656388[24] = 0;
   out_385185360291656388[25] = 0;
   out_385185360291656388[26] = 0;
   out_385185360291656388[27] = 0;
   out_385185360291656388[28] = dt;
   out_385185360291656388[29] = 0;
   out_385185360291656388[30] = 0;
   out_385185360291656388[31] = 0;
   out_385185360291656388[32] = 0;
   out_385185360291656388[33] = 0;
   out_385185360291656388[34] = 0;
   out_385185360291656388[35] = 0;
   out_385185360291656388[36] = 0;
   out_385185360291656388[37] = 0;
   out_385185360291656388[38] = 0;
   out_385185360291656388[39] = 0;
   out_385185360291656388[40] = 0;
   out_385185360291656388[41] = 0;
   out_385185360291656388[42] = 0;
   out_385185360291656388[43] = 0;
   out_385185360291656388[44] = 1;
   out_385185360291656388[45] = 0;
   out_385185360291656388[46] = 0;
   out_385185360291656388[47] = 0;
   out_385185360291656388[48] = 0;
   out_385185360291656388[49] = 0;
   out_385185360291656388[50] = dt;
   out_385185360291656388[51] = 0;
   out_385185360291656388[52] = 0;
   out_385185360291656388[53] = 0;
   out_385185360291656388[54] = 0;
   out_385185360291656388[55] = 0;
   out_385185360291656388[56] = 0;
   out_385185360291656388[57] = 0;
   out_385185360291656388[58] = 0;
   out_385185360291656388[59] = 0;
   out_385185360291656388[60] = 0;
   out_385185360291656388[61] = 0;
   out_385185360291656388[62] = 0;
   out_385185360291656388[63] = 0;
   out_385185360291656388[64] = 0;
   out_385185360291656388[65] = 0;
   out_385185360291656388[66] = 1;
   out_385185360291656388[67] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[11] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_385185360291656388[68] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[12] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[10] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[11]);
   out_385185360291656388[69] = 0;
   out_385185360291656388[70] = 0;
   out_385185360291656388[71] = 0;
   out_385185360291656388[72] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_385185360291656388[73] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_385185360291656388[74] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_385185360291656388[75] = 0;
   out_385185360291656388[76] = 0;
   out_385185360291656388[77] = 0;
   out_385185360291656388[78] = 0;
   out_385185360291656388[79] = 0;
   out_385185360291656388[80] = 0;
   out_385185360291656388[81] = 0;
   out_385185360291656388[82] = 0;
   out_385185360291656388[83] = 0;
   out_385185360291656388[84] = 0;
   out_385185360291656388[85] = 0;
   out_385185360291656388[86] = 0;
   out_385185360291656388[87] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[11] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_385185360291656388[88] = 1;
   out_385185360291656388[89] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[12] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[11] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[10]);
   out_385185360291656388[90] = 0;
   out_385185360291656388[91] = 0;
   out_385185360291656388[92] = 0;
   out_385185360291656388[93] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_385185360291656388[94] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_385185360291656388[95] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_385185360291656388[96] = 0;
   out_385185360291656388[97] = 0;
   out_385185360291656388[98] = 0;
   out_385185360291656388[99] = 0;
   out_385185360291656388[100] = 0;
   out_385185360291656388[101] = 0;
   out_385185360291656388[102] = 0;
   out_385185360291656388[103] = 0;
   out_385185360291656388[104] = 0;
   out_385185360291656388[105] = 0;
   out_385185360291656388[106] = 0;
   out_385185360291656388[107] = 0;
   out_385185360291656388[108] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[12] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[10] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[11]);
   out_385185360291656388[109] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[12] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[11] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[10]);
   out_385185360291656388[110] = 1;
   out_385185360291656388[111] = 0;
   out_385185360291656388[112] = 0;
   out_385185360291656388[113] = 0;
   out_385185360291656388[114] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_385185360291656388[115] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_385185360291656388[116] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_385185360291656388[117] = 0;
   out_385185360291656388[118] = 0;
   out_385185360291656388[119] = 0;
   out_385185360291656388[120] = 0;
   out_385185360291656388[121] = 0;
   out_385185360291656388[122] = 0;
   out_385185360291656388[123] = 0;
   out_385185360291656388[124] = 0;
   out_385185360291656388[125] = 0;
   out_385185360291656388[126] = 0;
   out_385185360291656388[127] = 0;
   out_385185360291656388[128] = 0;
   out_385185360291656388[129] = 0;
   out_385185360291656388[130] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_385185360291656388[131] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[18] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[16] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[17]);
   out_385185360291656388[132] = 1;
   out_385185360291656388[133] = 0;
   out_385185360291656388[134] = 0;
   out_385185360291656388[135] = 0;
   out_385185360291656388[136] = 0;
   out_385185360291656388[137] = 0;
   out_385185360291656388[138] = 0;
   out_385185360291656388[139] = 0;
   out_385185360291656388[140] = 0;
   out_385185360291656388[141] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_385185360291656388[142] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_385185360291656388[143] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_385185360291656388[144] = 0;
   out_385185360291656388[145] = 0;
   out_385185360291656388[146] = 0;
   out_385185360291656388[147] = 0;
   out_385185360291656388[148] = 0;
   out_385185360291656388[149] = 0;
   out_385185360291656388[150] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[17] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_385185360291656388[151] = 0;
   out_385185360291656388[152] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]);
   out_385185360291656388[153] = 0;
   out_385185360291656388[154] = 1;
   out_385185360291656388[155] = 0;
   out_385185360291656388[156] = 0;
   out_385185360291656388[157] = 0;
   out_385185360291656388[158] = 0;
   out_385185360291656388[159] = 0;
   out_385185360291656388[160] = 0;
   out_385185360291656388[161] = 0;
   out_385185360291656388[162] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_385185360291656388[163] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_385185360291656388[164] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_385185360291656388[165] = 0;
   out_385185360291656388[166] = 0;
   out_385185360291656388[167] = 0;
   out_385185360291656388[168] = 0;
   out_385185360291656388[169] = 0;
   out_385185360291656388[170] = 0;
   out_385185360291656388[171] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]);
   out_385185360291656388[172] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[18] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[17] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[16]);
   out_385185360291656388[173] = 0;
   out_385185360291656388[174] = 0;
   out_385185360291656388[175] = 0;
   out_385185360291656388[176] = 1;
   out_385185360291656388[177] = 0;
   out_385185360291656388[178] = 0;
   out_385185360291656388[179] = 0;
   out_385185360291656388[180] = 0;
   out_385185360291656388[181] = 0;
   out_385185360291656388[182] = 0;
   out_385185360291656388[183] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_385185360291656388[184] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_385185360291656388[185] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_385185360291656388[186] = 0;
   out_385185360291656388[187] = 0;
   out_385185360291656388[188] = 0;
   out_385185360291656388[189] = 0;
   out_385185360291656388[190] = 0;
   out_385185360291656388[191] = 0;
   out_385185360291656388[192] = 0;
   out_385185360291656388[193] = 0;
   out_385185360291656388[194] = 0;
   out_385185360291656388[195] = 0;
   out_385185360291656388[196] = 0;
   out_385185360291656388[197] = 0;
   out_385185360291656388[198] = 1;
   out_385185360291656388[199] = 0;
   out_385185360291656388[200] = 0;
   out_385185360291656388[201] = 0;
   out_385185360291656388[202] = 0;
   out_385185360291656388[203] = 0;
   out_385185360291656388[204] = 0;
   out_385185360291656388[205] = 0;
   out_385185360291656388[206] = 0;
   out_385185360291656388[207] = 0;
   out_385185360291656388[208] = 0;
   out_385185360291656388[209] = 0;
   out_385185360291656388[210] = 0;
   out_385185360291656388[211] = 0;
   out_385185360291656388[212] = 0;
   out_385185360291656388[213] = 0;
   out_385185360291656388[214] = 0;
   out_385185360291656388[215] = 0;
   out_385185360291656388[216] = 0;
   out_385185360291656388[217] = 0;
   out_385185360291656388[218] = 0;
   out_385185360291656388[219] = 0;
   out_385185360291656388[220] = 1;
   out_385185360291656388[221] = 0;
   out_385185360291656388[222] = 0;
   out_385185360291656388[223] = 0;
   out_385185360291656388[224] = 0;
   out_385185360291656388[225] = 0;
   out_385185360291656388[226] = 0;
   out_385185360291656388[227] = 0;
   out_385185360291656388[228] = 0;
   out_385185360291656388[229] = 0;
   out_385185360291656388[230] = 0;
   out_385185360291656388[231] = 0;
   out_385185360291656388[232] = 0;
   out_385185360291656388[233] = 0;
   out_385185360291656388[234] = 0;
   out_385185360291656388[235] = 0;
   out_385185360291656388[236] = 0;
   out_385185360291656388[237] = 0;
   out_385185360291656388[238] = 0;
   out_385185360291656388[239] = 0;
   out_385185360291656388[240] = 0;
   out_385185360291656388[241] = 0;
   out_385185360291656388[242] = 1;
   out_385185360291656388[243] = 0;
   out_385185360291656388[244] = 0;
   out_385185360291656388[245] = 0;
   out_385185360291656388[246] = 0;
   out_385185360291656388[247] = 0;
   out_385185360291656388[248] = 0;
   out_385185360291656388[249] = 0;
   out_385185360291656388[250] = 0;
   out_385185360291656388[251] = 0;
   out_385185360291656388[252] = 0;
   out_385185360291656388[253] = 0;
   out_385185360291656388[254] = 0;
   out_385185360291656388[255] = 0;
   out_385185360291656388[256] = 0;
   out_385185360291656388[257] = 0;
   out_385185360291656388[258] = 0;
   out_385185360291656388[259] = 0;
   out_385185360291656388[260] = 0;
   out_385185360291656388[261] = 0;
   out_385185360291656388[262] = 0;
   out_385185360291656388[263] = 0;
   out_385185360291656388[264] = 1;
   out_385185360291656388[265] = 0;
   out_385185360291656388[266] = 0;
   out_385185360291656388[267] = 0;
   out_385185360291656388[268] = 0;
   out_385185360291656388[269] = 0;
   out_385185360291656388[270] = 0;
   out_385185360291656388[271] = 0;
   out_385185360291656388[272] = 0;
   out_385185360291656388[273] = 0;
   out_385185360291656388[274] = 0;
   out_385185360291656388[275] = 0;
   out_385185360291656388[276] = 0;
   out_385185360291656388[277] = 0;
   out_385185360291656388[278] = 0;
   out_385185360291656388[279] = 0;
   out_385185360291656388[280] = 0;
   out_385185360291656388[281] = 0;
   out_385185360291656388[282] = 0;
   out_385185360291656388[283] = 0;
   out_385185360291656388[284] = 0;
   out_385185360291656388[285] = 0;
   out_385185360291656388[286] = 1;
   out_385185360291656388[287] = 0;
   out_385185360291656388[288] = 0;
   out_385185360291656388[289] = 0;
   out_385185360291656388[290] = 0;
   out_385185360291656388[291] = 0;
   out_385185360291656388[292] = 0;
   out_385185360291656388[293] = 0;
   out_385185360291656388[294] = 0;
   out_385185360291656388[295] = 0;
   out_385185360291656388[296] = 0;
   out_385185360291656388[297] = 0;
   out_385185360291656388[298] = 0;
   out_385185360291656388[299] = 0;
   out_385185360291656388[300] = 0;
   out_385185360291656388[301] = 0;
   out_385185360291656388[302] = 0;
   out_385185360291656388[303] = 0;
   out_385185360291656388[304] = 0;
   out_385185360291656388[305] = 0;
   out_385185360291656388[306] = 0;
   out_385185360291656388[307] = 0;
   out_385185360291656388[308] = 1;
   out_385185360291656388[309] = 0;
   out_385185360291656388[310] = 0;
   out_385185360291656388[311] = 0;
   out_385185360291656388[312] = 0;
   out_385185360291656388[313] = 0;
   out_385185360291656388[314] = 0;
   out_385185360291656388[315] = 0;
   out_385185360291656388[316] = 0;
   out_385185360291656388[317] = 0;
   out_385185360291656388[318] = 0;
   out_385185360291656388[319] = 0;
   out_385185360291656388[320] = 0;
   out_385185360291656388[321] = 0;
   out_385185360291656388[322] = 0;
   out_385185360291656388[323] = 0;
   out_385185360291656388[324] = 0;
   out_385185360291656388[325] = 0;
   out_385185360291656388[326] = 0;
   out_385185360291656388[327] = 0;
   out_385185360291656388[328] = 0;
   out_385185360291656388[329] = 0;
   out_385185360291656388[330] = 1;
   out_385185360291656388[331] = 0;
   out_385185360291656388[332] = 0;
   out_385185360291656388[333] = 0;
   out_385185360291656388[334] = 0;
   out_385185360291656388[335] = 0;
   out_385185360291656388[336] = 0;
   out_385185360291656388[337] = 0;
   out_385185360291656388[338] = 0;
   out_385185360291656388[339] = 0;
   out_385185360291656388[340] = 0;
   out_385185360291656388[341] = 0;
   out_385185360291656388[342] = 0;
   out_385185360291656388[343] = 0;
   out_385185360291656388[344] = 0;
   out_385185360291656388[345] = 0;
   out_385185360291656388[346] = 0;
   out_385185360291656388[347] = 0;
   out_385185360291656388[348] = 0;
   out_385185360291656388[349] = 0;
   out_385185360291656388[350] = 0;
   out_385185360291656388[351] = 0;
   out_385185360291656388[352] = 1;
   out_385185360291656388[353] = 0;
   out_385185360291656388[354] = 0;
   out_385185360291656388[355] = 0;
   out_385185360291656388[356] = 0;
   out_385185360291656388[357] = 0;
   out_385185360291656388[358] = 0;
   out_385185360291656388[359] = 0;
   out_385185360291656388[360] = 0;
   out_385185360291656388[361] = 0;
   out_385185360291656388[362] = 0;
   out_385185360291656388[363] = 0;
   out_385185360291656388[364] = 0;
   out_385185360291656388[365] = 0;
   out_385185360291656388[366] = 0;
   out_385185360291656388[367] = 0;
   out_385185360291656388[368] = 0;
   out_385185360291656388[369] = 0;
   out_385185360291656388[370] = 0;
   out_385185360291656388[371] = 0;
   out_385185360291656388[372] = 0;
   out_385185360291656388[373] = 0;
   out_385185360291656388[374] = 1;
   out_385185360291656388[375] = 0;
   out_385185360291656388[376] = 0;
   out_385185360291656388[377] = 0;
   out_385185360291656388[378] = 0;
   out_385185360291656388[379] = 0;
   out_385185360291656388[380] = 0;
   out_385185360291656388[381] = 0;
   out_385185360291656388[382] = 0;
   out_385185360291656388[383] = 0;
   out_385185360291656388[384] = 0;
   out_385185360291656388[385] = 0;
   out_385185360291656388[386] = 0;
   out_385185360291656388[387] = 0;
   out_385185360291656388[388] = 0;
   out_385185360291656388[389] = 0;
   out_385185360291656388[390] = 0;
   out_385185360291656388[391] = 0;
   out_385185360291656388[392] = 0;
   out_385185360291656388[393] = 0;
   out_385185360291656388[394] = 0;
   out_385185360291656388[395] = 0;
   out_385185360291656388[396] = 1;
   out_385185360291656388[397] = 0;
   out_385185360291656388[398] = 0;
   out_385185360291656388[399] = 0;
   out_385185360291656388[400] = 0;
   out_385185360291656388[401] = 0;
   out_385185360291656388[402] = 0;
   out_385185360291656388[403] = 0;
   out_385185360291656388[404] = 0;
   out_385185360291656388[405] = 0;
   out_385185360291656388[406] = 0;
   out_385185360291656388[407] = 0;
   out_385185360291656388[408] = 0;
   out_385185360291656388[409] = 0;
   out_385185360291656388[410] = 0;
   out_385185360291656388[411] = 0;
   out_385185360291656388[412] = 0;
   out_385185360291656388[413] = 0;
   out_385185360291656388[414] = 0;
   out_385185360291656388[415] = 0;
   out_385185360291656388[416] = 0;
   out_385185360291656388[417] = 0;
   out_385185360291656388[418] = 1;
   out_385185360291656388[419] = 0;
   out_385185360291656388[420] = 0;
   out_385185360291656388[421] = 0;
   out_385185360291656388[422] = 0;
   out_385185360291656388[423] = 0;
   out_385185360291656388[424] = 0;
   out_385185360291656388[425] = 0;
   out_385185360291656388[426] = 0;
   out_385185360291656388[427] = 0;
   out_385185360291656388[428] = 0;
   out_385185360291656388[429] = 0;
   out_385185360291656388[430] = 0;
   out_385185360291656388[431] = 0;
   out_385185360291656388[432] = 0;
   out_385185360291656388[433] = 0;
   out_385185360291656388[434] = 0;
   out_385185360291656388[435] = 0;
   out_385185360291656388[436] = 0;
   out_385185360291656388[437] = 0;
   out_385185360291656388[438] = 0;
   out_385185360291656388[439] = 0;
   out_385185360291656388[440] = 1;
}
void h_4(double *state, double *unused, double *out_6575910142503985242) {
   out_6575910142503985242[0] = state[10] + state[13];
   out_6575910142503985242[1] = state[11] + state[14];
   out_6575910142503985242[2] = state[12] + state[15];
}
void H_4(double *state, double *unused, double *out_6837788715331660746) {
   out_6837788715331660746[0] = 0;
   out_6837788715331660746[1] = 0;
   out_6837788715331660746[2] = 0;
   out_6837788715331660746[3] = 0;
   out_6837788715331660746[4] = 0;
   out_6837788715331660746[5] = 0;
   out_6837788715331660746[6] = 0;
   out_6837788715331660746[7] = 0;
   out_6837788715331660746[8] = 0;
   out_6837788715331660746[9] = 0;
   out_6837788715331660746[10] = 1;
   out_6837788715331660746[11] = 0;
   out_6837788715331660746[12] = 0;
   out_6837788715331660746[13] = 1;
   out_6837788715331660746[14] = 0;
   out_6837788715331660746[15] = 0;
   out_6837788715331660746[16] = 0;
   out_6837788715331660746[17] = 0;
   out_6837788715331660746[18] = 0;
   out_6837788715331660746[19] = 0;
   out_6837788715331660746[20] = 0;
   out_6837788715331660746[21] = 0;
   out_6837788715331660746[22] = 0;
   out_6837788715331660746[23] = 0;
   out_6837788715331660746[24] = 0;
   out_6837788715331660746[25] = 0;
   out_6837788715331660746[26] = 0;
   out_6837788715331660746[27] = 0;
   out_6837788715331660746[28] = 0;
   out_6837788715331660746[29] = 0;
   out_6837788715331660746[30] = 0;
   out_6837788715331660746[31] = 0;
   out_6837788715331660746[32] = 0;
   out_6837788715331660746[33] = 1;
   out_6837788715331660746[34] = 0;
   out_6837788715331660746[35] = 0;
   out_6837788715331660746[36] = 1;
   out_6837788715331660746[37] = 0;
   out_6837788715331660746[38] = 0;
   out_6837788715331660746[39] = 0;
   out_6837788715331660746[40] = 0;
   out_6837788715331660746[41] = 0;
   out_6837788715331660746[42] = 0;
   out_6837788715331660746[43] = 0;
   out_6837788715331660746[44] = 0;
   out_6837788715331660746[45] = 0;
   out_6837788715331660746[46] = 0;
   out_6837788715331660746[47] = 0;
   out_6837788715331660746[48] = 0;
   out_6837788715331660746[49] = 0;
   out_6837788715331660746[50] = 0;
   out_6837788715331660746[51] = 0;
   out_6837788715331660746[52] = 0;
   out_6837788715331660746[53] = 0;
   out_6837788715331660746[54] = 0;
   out_6837788715331660746[55] = 0;
   out_6837788715331660746[56] = 1;
   out_6837788715331660746[57] = 0;
   out_6837788715331660746[58] = 0;
   out_6837788715331660746[59] = 1;
   out_6837788715331660746[60] = 0;
   out_6837788715331660746[61] = 0;
   out_6837788715331660746[62] = 0;
   out_6837788715331660746[63] = 0;
   out_6837788715331660746[64] = 0;
   out_6837788715331660746[65] = 0;
}
void h_9(double *state, double *unused, double *out_7206080633662316249) {
   out_7206080633662316249[0] = state[10];
   out_7206080633662316249[1] = state[11];
   out_7206080633662316249[2] = state[12];
}
void H_9(double *state, double *unused, double *out_4321736423113443400) {
   out_4321736423113443400[0] = 0;
   out_4321736423113443400[1] = 0;
   out_4321736423113443400[2] = 0;
   out_4321736423113443400[3] = 0;
   out_4321736423113443400[4] = 0;
   out_4321736423113443400[5] = 0;
   out_4321736423113443400[6] = 0;
   out_4321736423113443400[7] = 0;
   out_4321736423113443400[8] = 0;
   out_4321736423113443400[9] = 0;
   out_4321736423113443400[10] = 1;
   out_4321736423113443400[11] = 0;
   out_4321736423113443400[12] = 0;
   out_4321736423113443400[13] = 0;
   out_4321736423113443400[14] = 0;
   out_4321736423113443400[15] = 0;
   out_4321736423113443400[16] = 0;
   out_4321736423113443400[17] = 0;
   out_4321736423113443400[18] = 0;
   out_4321736423113443400[19] = 0;
   out_4321736423113443400[20] = 0;
   out_4321736423113443400[21] = 0;
   out_4321736423113443400[22] = 0;
   out_4321736423113443400[23] = 0;
   out_4321736423113443400[24] = 0;
   out_4321736423113443400[25] = 0;
   out_4321736423113443400[26] = 0;
   out_4321736423113443400[27] = 0;
   out_4321736423113443400[28] = 0;
   out_4321736423113443400[29] = 0;
   out_4321736423113443400[30] = 0;
   out_4321736423113443400[31] = 0;
   out_4321736423113443400[32] = 0;
   out_4321736423113443400[33] = 1;
   out_4321736423113443400[34] = 0;
   out_4321736423113443400[35] = 0;
   out_4321736423113443400[36] = 0;
   out_4321736423113443400[37] = 0;
   out_4321736423113443400[38] = 0;
   out_4321736423113443400[39] = 0;
   out_4321736423113443400[40] = 0;
   out_4321736423113443400[41] = 0;
   out_4321736423113443400[42] = 0;
   out_4321736423113443400[43] = 0;
   out_4321736423113443400[44] = 0;
   out_4321736423113443400[45] = 0;
   out_4321736423113443400[46] = 0;
   out_4321736423113443400[47] = 0;
   out_4321736423113443400[48] = 0;
   out_4321736423113443400[49] = 0;
   out_4321736423113443400[50] = 0;
   out_4321736423113443400[51] = 0;
   out_4321736423113443400[52] = 0;
   out_4321736423113443400[53] = 0;
   out_4321736423113443400[54] = 0;
   out_4321736423113443400[55] = 0;
   out_4321736423113443400[56] = 1;
   out_4321736423113443400[57] = 0;
   out_4321736423113443400[58] = 0;
   out_4321736423113443400[59] = 0;
   out_4321736423113443400[60] = 0;
   out_4321736423113443400[61] = 0;
   out_4321736423113443400[62] = 0;
   out_4321736423113443400[63] = 0;
   out_4321736423113443400[64] = 0;
   out_4321736423113443400[65] = 0;
}
void h_10(double *state, double *unused, double *out_3893921519831623240) {
   out_3893921519831623240[0] = 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0] + state[16] + state[19];
   out_3893921519831623240[1] = 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1] + state[17] + state[20];
   out_3893921519831623240[2] = 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[2] + state[18] + state[21];
}
void H_10(double *state, double *unused, double *out_6733325502537478925) {
   out_6733325502537478925[0] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*pow(state[0], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_6733325502537478925[1] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_6733325502537478925[2] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[2];
   out_6733325502537478925[3] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_6733325502537478925[4] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_6733325502537478925[5] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_6733325502537478925[6] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_6733325502537478925[7] = 0;
   out_6733325502537478925[8] = 0;
   out_6733325502537478925[9] = 0;
   out_6733325502537478925[10] = 0;
   out_6733325502537478925[11] = 0;
   out_6733325502537478925[12] = 0;
   out_6733325502537478925[13] = 0;
   out_6733325502537478925[14] = 0;
   out_6733325502537478925[15] = 0;
   out_6733325502537478925[16] = 1;
   out_6733325502537478925[17] = 0;
   out_6733325502537478925[18] = 0;
   out_6733325502537478925[19] = 1;
   out_6733325502537478925[20] = 0;
   out_6733325502537478925[21] = 0;
   out_6733325502537478925[22] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_6733325502537478925[23] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*pow(state[1], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_6733325502537478925[24] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1]*state[2];
   out_6733325502537478925[25] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_6733325502537478925[26] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_6733325502537478925[27] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_6733325502537478925[28] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_6733325502537478925[29] = 0;
   out_6733325502537478925[30] = 0;
   out_6733325502537478925[31] = 0;
   out_6733325502537478925[32] = 0;
   out_6733325502537478925[33] = 0;
   out_6733325502537478925[34] = 0;
   out_6733325502537478925[35] = 0;
   out_6733325502537478925[36] = 0;
   out_6733325502537478925[37] = 0;
   out_6733325502537478925[38] = 0;
   out_6733325502537478925[39] = 1;
   out_6733325502537478925[40] = 0;
   out_6733325502537478925[41] = 0;
   out_6733325502537478925[42] = 1;
   out_6733325502537478925[43] = 0;
   out_6733325502537478925[44] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[0]*state[2];
   out_6733325502537478925[45] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[1]*state[2];
   out_6733325502537478925[46] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*pow(state[2], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_6733325502537478925[47] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_6733325502537478925[48] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_6733325502537478925[49] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_6733325502537478925[50] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_6733325502537478925[51] = 0;
   out_6733325502537478925[52] = 0;
   out_6733325502537478925[53] = 0;
   out_6733325502537478925[54] = 0;
   out_6733325502537478925[55] = 0;
   out_6733325502537478925[56] = 0;
   out_6733325502537478925[57] = 0;
   out_6733325502537478925[58] = 0;
   out_6733325502537478925[59] = 0;
   out_6733325502537478925[60] = 0;
   out_6733325502537478925[61] = 0;
   out_6733325502537478925[62] = 1;
   out_6733325502537478925[63] = 0;
   out_6733325502537478925[64] = 0;
   out_6733325502537478925[65] = 1;
}
void h_12(double *state, double *unused, double *out_600302823877196604) {
   out_600302823877196604[0] = state[0];
   out_600302823877196604[1] = state[1];
   out_600302823877196604[2] = state[2];
}
void H_12(double *state, double *unused, double *out_456530338288927750) {
   out_456530338288927750[0] = 1;
   out_456530338288927750[1] = 0;
   out_456530338288927750[2] = 0;
   out_456530338288927750[3] = 0;
   out_456530338288927750[4] = 0;
   out_456530338288927750[5] = 0;
   out_456530338288927750[6] = 0;
   out_456530338288927750[7] = 0;
   out_456530338288927750[8] = 0;
   out_456530338288927750[9] = 0;
   out_456530338288927750[10] = 0;
   out_456530338288927750[11] = 0;
   out_456530338288927750[12] = 0;
   out_456530338288927750[13] = 0;
   out_456530338288927750[14] = 0;
   out_456530338288927750[15] = 0;
   out_456530338288927750[16] = 0;
   out_456530338288927750[17] = 0;
   out_456530338288927750[18] = 0;
   out_456530338288927750[19] = 0;
   out_456530338288927750[20] = 0;
   out_456530338288927750[21] = 0;
   out_456530338288927750[22] = 0;
   out_456530338288927750[23] = 1;
   out_456530338288927750[24] = 0;
   out_456530338288927750[25] = 0;
   out_456530338288927750[26] = 0;
   out_456530338288927750[27] = 0;
   out_456530338288927750[28] = 0;
   out_456530338288927750[29] = 0;
   out_456530338288927750[30] = 0;
   out_456530338288927750[31] = 0;
   out_456530338288927750[32] = 0;
   out_456530338288927750[33] = 0;
   out_456530338288927750[34] = 0;
   out_456530338288927750[35] = 0;
   out_456530338288927750[36] = 0;
   out_456530338288927750[37] = 0;
   out_456530338288927750[38] = 0;
   out_456530338288927750[39] = 0;
   out_456530338288927750[40] = 0;
   out_456530338288927750[41] = 0;
   out_456530338288927750[42] = 0;
   out_456530338288927750[43] = 0;
   out_456530338288927750[44] = 0;
   out_456530338288927750[45] = 0;
   out_456530338288927750[46] = 1;
   out_456530338288927750[47] = 0;
   out_456530338288927750[48] = 0;
   out_456530338288927750[49] = 0;
   out_456530338288927750[50] = 0;
   out_456530338288927750[51] = 0;
   out_456530338288927750[52] = 0;
   out_456530338288927750[53] = 0;
   out_456530338288927750[54] = 0;
   out_456530338288927750[55] = 0;
   out_456530338288927750[56] = 0;
   out_456530338288927750[57] = 0;
   out_456530338288927750[58] = 0;
   out_456530338288927750[59] = 0;
   out_456530338288927750[60] = 0;
   out_456530338288927750[61] = 0;
   out_456530338288927750[62] = 0;
   out_456530338288927750[63] = 0;
   out_456530338288927750[64] = 0;
   out_456530338288927750[65] = 0;
}
void h_35(double *state, double *unused, double *out_7920533085332522504) {
   out_7920533085332522504[0] = state[7];
   out_7920533085332522504[1] = state[8];
   out_7920533085332522504[2] = state[9];
}
void H_35(double *state, double *unused, double *out_3843935918020915366) {
   out_3843935918020915366[0] = 0;
   out_3843935918020915366[1] = 0;
   out_3843935918020915366[2] = 0;
   out_3843935918020915366[3] = 0;
   out_3843935918020915366[4] = 0;
   out_3843935918020915366[5] = 0;
   out_3843935918020915366[6] = 0;
   out_3843935918020915366[7] = 1;
   out_3843935918020915366[8] = 0;
   out_3843935918020915366[9] = 0;
   out_3843935918020915366[10] = 0;
   out_3843935918020915366[11] = 0;
   out_3843935918020915366[12] = 0;
   out_3843935918020915366[13] = 0;
   out_3843935918020915366[14] = 0;
   out_3843935918020915366[15] = 0;
   out_3843935918020915366[16] = 0;
   out_3843935918020915366[17] = 0;
   out_3843935918020915366[18] = 0;
   out_3843935918020915366[19] = 0;
   out_3843935918020915366[20] = 0;
   out_3843935918020915366[21] = 0;
   out_3843935918020915366[22] = 0;
   out_3843935918020915366[23] = 0;
   out_3843935918020915366[24] = 0;
   out_3843935918020915366[25] = 0;
   out_3843935918020915366[26] = 0;
   out_3843935918020915366[27] = 0;
   out_3843935918020915366[28] = 0;
   out_3843935918020915366[29] = 0;
   out_3843935918020915366[30] = 1;
   out_3843935918020915366[31] = 0;
   out_3843935918020915366[32] = 0;
   out_3843935918020915366[33] = 0;
   out_3843935918020915366[34] = 0;
   out_3843935918020915366[35] = 0;
   out_3843935918020915366[36] = 0;
   out_3843935918020915366[37] = 0;
   out_3843935918020915366[38] = 0;
   out_3843935918020915366[39] = 0;
   out_3843935918020915366[40] = 0;
   out_3843935918020915366[41] = 0;
   out_3843935918020915366[42] = 0;
   out_3843935918020915366[43] = 0;
   out_3843935918020915366[44] = 0;
   out_3843935918020915366[45] = 0;
   out_3843935918020915366[46] = 0;
   out_3843935918020915366[47] = 0;
   out_3843935918020915366[48] = 0;
   out_3843935918020915366[49] = 0;
   out_3843935918020915366[50] = 0;
   out_3843935918020915366[51] = 0;
   out_3843935918020915366[52] = 0;
   out_3843935918020915366[53] = 1;
   out_3843935918020915366[54] = 0;
   out_3843935918020915366[55] = 0;
   out_3843935918020915366[56] = 0;
   out_3843935918020915366[57] = 0;
   out_3843935918020915366[58] = 0;
   out_3843935918020915366[59] = 0;
   out_3843935918020915366[60] = 0;
   out_3843935918020915366[61] = 0;
   out_3843935918020915366[62] = 0;
   out_3843935918020915366[63] = 0;
   out_3843935918020915366[64] = 0;
   out_3843935918020915366[65] = 0;
}
void h_32(double *state, double *unused, double *out_7255736416755076579) {
   out_7255736416755076579[0] = state[3];
   out_7255736416755076579[1] = state[4];
   out_7255736416755076579[2] = state[5];
   out_7255736416755076579[3] = state[6];
}
void H_32(double *state, double *unused, double *out_9003397742821554017) {
   out_9003397742821554017[0] = 0;
   out_9003397742821554017[1] = 0;
   out_9003397742821554017[2] = 0;
   out_9003397742821554017[3] = 1;
   out_9003397742821554017[4] = 0;
   out_9003397742821554017[5] = 0;
   out_9003397742821554017[6] = 0;
   out_9003397742821554017[7] = 0;
   out_9003397742821554017[8] = 0;
   out_9003397742821554017[9] = 0;
   out_9003397742821554017[10] = 0;
   out_9003397742821554017[11] = 0;
   out_9003397742821554017[12] = 0;
   out_9003397742821554017[13] = 0;
   out_9003397742821554017[14] = 0;
   out_9003397742821554017[15] = 0;
   out_9003397742821554017[16] = 0;
   out_9003397742821554017[17] = 0;
   out_9003397742821554017[18] = 0;
   out_9003397742821554017[19] = 0;
   out_9003397742821554017[20] = 0;
   out_9003397742821554017[21] = 0;
   out_9003397742821554017[22] = 0;
   out_9003397742821554017[23] = 0;
   out_9003397742821554017[24] = 0;
   out_9003397742821554017[25] = 0;
   out_9003397742821554017[26] = 1;
   out_9003397742821554017[27] = 0;
   out_9003397742821554017[28] = 0;
   out_9003397742821554017[29] = 0;
   out_9003397742821554017[30] = 0;
   out_9003397742821554017[31] = 0;
   out_9003397742821554017[32] = 0;
   out_9003397742821554017[33] = 0;
   out_9003397742821554017[34] = 0;
   out_9003397742821554017[35] = 0;
   out_9003397742821554017[36] = 0;
   out_9003397742821554017[37] = 0;
   out_9003397742821554017[38] = 0;
   out_9003397742821554017[39] = 0;
   out_9003397742821554017[40] = 0;
   out_9003397742821554017[41] = 0;
   out_9003397742821554017[42] = 0;
   out_9003397742821554017[43] = 0;
   out_9003397742821554017[44] = 0;
   out_9003397742821554017[45] = 0;
   out_9003397742821554017[46] = 0;
   out_9003397742821554017[47] = 0;
   out_9003397742821554017[48] = 0;
   out_9003397742821554017[49] = 1;
   out_9003397742821554017[50] = 0;
   out_9003397742821554017[51] = 0;
   out_9003397742821554017[52] = 0;
   out_9003397742821554017[53] = 0;
   out_9003397742821554017[54] = 0;
   out_9003397742821554017[55] = 0;
   out_9003397742821554017[56] = 0;
   out_9003397742821554017[57] = 0;
   out_9003397742821554017[58] = 0;
   out_9003397742821554017[59] = 0;
   out_9003397742821554017[60] = 0;
   out_9003397742821554017[61] = 0;
   out_9003397742821554017[62] = 0;
   out_9003397742821554017[63] = 0;
   out_9003397742821554017[64] = 0;
   out_9003397742821554017[65] = 0;
   out_9003397742821554017[66] = 0;
   out_9003397742821554017[67] = 0;
   out_9003397742821554017[68] = 0;
   out_9003397742821554017[69] = 0;
   out_9003397742821554017[70] = 0;
   out_9003397742821554017[71] = 0;
   out_9003397742821554017[72] = 1;
   out_9003397742821554017[73] = 0;
   out_9003397742821554017[74] = 0;
   out_9003397742821554017[75] = 0;
   out_9003397742821554017[76] = 0;
   out_9003397742821554017[77] = 0;
   out_9003397742821554017[78] = 0;
   out_9003397742821554017[79] = 0;
   out_9003397742821554017[80] = 0;
   out_9003397742821554017[81] = 0;
   out_9003397742821554017[82] = 0;
   out_9003397742821554017[83] = 0;
   out_9003397742821554017[84] = 0;
   out_9003397742821554017[85] = 0;
   out_9003397742821554017[86] = 0;
   out_9003397742821554017[87] = 0;
}
void h_13(double *state, double *unused, double *out_4072459639110765147) {
   out_4072459639110765147[0] = (-2*state[3]*state[5] + 2*state[4]*state[6])*state[9] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[8] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[7];
   out_4072459639110765147[1] = (2*state[3]*state[4] + 2*state[5]*state[6])*state[9] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[7] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[8];
   out_4072459639110765147[2] = (-2*state[3]*state[4] + 2*state[5]*state[6])*state[8] + (2*state[3]*state[5] + 2*state[4]*state[6])*state[7] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[9];
}
void H_13(double *state, double *unused, double *out_6284467681283875319) {
   out_6284467681283875319[0] = 0;
   out_6284467681283875319[1] = 0;
   out_6284467681283875319[2] = 0;
   out_6284467681283875319[3] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_6284467681283875319[4] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_6284467681283875319[5] = -2*state[3]*state[9] + 2*state[4]*state[8] - 2*state[5]*state[7];
   out_6284467681283875319[6] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_6284467681283875319[7] = pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2);
   out_6284467681283875319[8] = 2*state[3]*state[6] + 2*state[4]*state[5];
   out_6284467681283875319[9] = -2*state[3]*state[5] + 2*state[4]*state[6];
   out_6284467681283875319[10] = 0;
   out_6284467681283875319[11] = 0;
   out_6284467681283875319[12] = 0;
   out_6284467681283875319[13] = 0;
   out_6284467681283875319[14] = 0;
   out_6284467681283875319[15] = 0;
   out_6284467681283875319[16] = 0;
   out_6284467681283875319[17] = 0;
   out_6284467681283875319[18] = 0;
   out_6284467681283875319[19] = 0;
   out_6284467681283875319[20] = 0;
   out_6284467681283875319[21] = 0;
   out_6284467681283875319[22] = 0;
   out_6284467681283875319[23] = 0;
   out_6284467681283875319[24] = 0;
   out_6284467681283875319[25] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_6284467681283875319[26] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_6284467681283875319[27] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_6284467681283875319[28] = -2*state[3]*state[7] + 2*state[5]*state[9] - 2*state[6]*state[8];
   out_6284467681283875319[29] = -2*state[3]*state[6] + 2*state[4]*state[5];
   out_6284467681283875319[30] = pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2);
   out_6284467681283875319[31] = 2*state[3]*state[4] + 2*state[5]*state[6];
   out_6284467681283875319[32] = 0;
   out_6284467681283875319[33] = 0;
   out_6284467681283875319[34] = 0;
   out_6284467681283875319[35] = 0;
   out_6284467681283875319[36] = 0;
   out_6284467681283875319[37] = 0;
   out_6284467681283875319[38] = 0;
   out_6284467681283875319[39] = 0;
   out_6284467681283875319[40] = 0;
   out_6284467681283875319[41] = 0;
   out_6284467681283875319[42] = 0;
   out_6284467681283875319[43] = 0;
   out_6284467681283875319[44] = 0;
   out_6284467681283875319[45] = 0;
   out_6284467681283875319[46] = 0;
   out_6284467681283875319[47] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_6284467681283875319[48] = -2*state[3]*state[8] - 2*state[4]*state[9] + 2*state[6]*state[7];
   out_6284467681283875319[49] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_6284467681283875319[50] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_6284467681283875319[51] = 2*state[3]*state[5] + 2*state[4]*state[6];
   out_6284467681283875319[52] = -2*state[3]*state[4] + 2*state[5]*state[6];
   out_6284467681283875319[53] = pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2);
   out_6284467681283875319[54] = 0;
   out_6284467681283875319[55] = 0;
   out_6284467681283875319[56] = 0;
   out_6284467681283875319[57] = 0;
   out_6284467681283875319[58] = 0;
   out_6284467681283875319[59] = 0;
   out_6284467681283875319[60] = 0;
   out_6284467681283875319[61] = 0;
   out_6284467681283875319[62] = 0;
   out_6284467681283875319[63] = 0;
   out_6284467681283875319[64] = 0;
   out_6284467681283875319[65] = 0;
}
void h_14(double *state, double *unused, double *out_7206080633662316249) {
   out_7206080633662316249[0] = state[10];
   out_7206080633662316249[1] = state[11];
   out_7206080633662316249[2] = state[12];
}
void H_14(double *state, double *unused, double *out_4321736423113443400) {
   out_4321736423113443400[0] = 0;
   out_4321736423113443400[1] = 0;
   out_4321736423113443400[2] = 0;
   out_4321736423113443400[3] = 0;
   out_4321736423113443400[4] = 0;
   out_4321736423113443400[5] = 0;
   out_4321736423113443400[6] = 0;
   out_4321736423113443400[7] = 0;
   out_4321736423113443400[8] = 0;
   out_4321736423113443400[9] = 0;
   out_4321736423113443400[10] = 1;
   out_4321736423113443400[11] = 0;
   out_4321736423113443400[12] = 0;
   out_4321736423113443400[13] = 0;
   out_4321736423113443400[14] = 0;
   out_4321736423113443400[15] = 0;
   out_4321736423113443400[16] = 0;
   out_4321736423113443400[17] = 0;
   out_4321736423113443400[18] = 0;
   out_4321736423113443400[19] = 0;
   out_4321736423113443400[20] = 0;
   out_4321736423113443400[21] = 0;
   out_4321736423113443400[22] = 0;
   out_4321736423113443400[23] = 0;
   out_4321736423113443400[24] = 0;
   out_4321736423113443400[25] = 0;
   out_4321736423113443400[26] = 0;
   out_4321736423113443400[27] = 0;
   out_4321736423113443400[28] = 0;
   out_4321736423113443400[29] = 0;
   out_4321736423113443400[30] = 0;
   out_4321736423113443400[31] = 0;
   out_4321736423113443400[32] = 0;
   out_4321736423113443400[33] = 1;
   out_4321736423113443400[34] = 0;
   out_4321736423113443400[35] = 0;
   out_4321736423113443400[36] = 0;
   out_4321736423113443400[37] = 0;
   out_4321736423113443400[38] = 0;
   out_4321736423113443400[39] = 0;
   out_4321736423113443400[40] = 0;
   out_4321736423113443400[41] = 0;
   out_4321736423113443400[42] = 0;
   out_4321736423113443400[43] = 0;
   out_4321736423113443400[44] = 0;
   out_4321736423113443400[45] = 0;
   out_4321736423113443400[46] = 0;
   out_4321736423113443400[47] = 0;
   out_4321736423113443400[48] = 0;
   out_4321736423113443400[49] = 0;
   out_4321736423113443400[50] = 0;
   out_4321736423113443400[51] = 0;
   out_4321736423113443400[52] = 0;
   out_4321736423113443400[53] = 0;
   out_4321736423113443400[54] = 0;
   out_4321736423113443400[55] = 0;
   out_4321736423113443400[56] = 1;
   out_4321736423113443400[57] = 0;
   out_4321736423113443400[58] = 0;
   out_4321736423113443400[59] = 0;
   out_4321736423113443400[60] = 0;
   out_4321736423113443400[61] = 0;
   out_4321736423113443400[62] = 0;
   out_4321736423113443400[63] = 0;
   out_4321736423113443400[64] = 0;
   out_4321736423113443400[65] = 0;
}
void h_33(double *state, double *unused, double *out_6882477148619358322) {
   out_6882477148619358322[0] = state[16];
   out_6882477148619358322[1] = state[17];
   out_6882477148619358322[2] = state[18];
}
void H_33(double *state, double *unused, double *out_693378913382057762) {
   out_693378913382057762[0] = 0;
   out_693378913382057762[1] = 0;
   out_693378913382057762[2] = 0;
   out_693378913382057762[3] = 0;
   out_693378913382057762[4] = 0;
   out_693378913382057762[5] = 0;
   out_693378913382057762[6] = 0;
   out_693378913382057762[7] = 0;
   out_693378913382057762[8] = 0;
   out_693378913382057762[9] = 0;
   out_693378913382057762[10] = 0;
   out_693378913382057762[11] = 0;
   out_693378913382057762[12] = 0;
   out_693378913382057762[13] = 0;
   out_693378913382057762[14] = 0;
   out_693378913382057762[15] = 0;
   out_693378913382057762[16] = 1;
   out_693378913382057762[17] = 0;
   out_693378913382057762[18] = 0;
   out_693378913382057762[19] = 0;
   out_693378913382057762[20] = 0;
   out_693378913382057762[21] = 0;
   out_693378913382057762[22] = 0;
   out_693378913382057762[23] = 0;
   out_693378913382057762[24] = 0;
   out_693378913382057762[25] = 0;
   out_693378913382057762[26] = 0;
   out_693378913382057762[27] = 0;
   out_693378913382057762[28] = 0;
   out_693378913382057762[29] = 0;
   out_693378913382057762[30] = 0;
   out_693378913382057762[31] = 0;
   out_693378913382057762[32] = 0;
   out_693378913382057762[33] = 0;
   out_693378913382057762[34] = 0;
   out_693378913382057762[35] = 0;
   out_693378913382057762[36] = 0;
   out_693378913382057762[37] = 0;
   out_693378913382057762[38] = 0;
   out_693378913382057762[39] = 1;
   out_693378913382057762[40] = 0;
   out_693378913382057762[41] = 0;
   out_693378913382057762[42] = 0;
   out_693378913382057762[43] = 0;
   out_693378913382057762[44] = 0;
   out_693378913382057762[45] = 0;
   out_693378913382057762[46] = 0;
   out_693378913382057762[47] = 0;
   out_693378913382057762[48] = 0;
   out_693378913382057762[49] = 0;
   out_693378913382057762[50] = 0;
   out_693378913382057762[51] = 0;
   out_693378913382057762[52] = 0;
   out_693378913382057762[53] = 0;
   out_693378913382057762[54] = 0;
   out_693378913382057762[55] = 0;
   out_693378913382057762[56] = 0;
   out_693378913382057762[57] = 0;
   out_693378913382057762[58] = 0;
   out_693378913382057762[59] = 0;
   out_693378913382057762[60] = 0;
   out_693378913382057762[61] = 0;
   out_693378913382057762[62] = 1;
   out_693378913382057762[63] = 0;
   out_693378913382057762[64] = 0;
   out_693378913382057762[65] = 0;
}
#include <eigen3/Eigen/Dense>
#include <iostream>

typedef Eigen::Matrix<double, DIM, DIM, Eigen::RowMajor> DDM;
typedef Eigen::Matrix<double, EDIM, EDIM, Eigen::RowMajor> EEM;
typedef Eigen::Matrix<double, DIM, EDIM, Eigen::RowMajor> DEM;

void predict(double *in_x, double *in_P, double *in_Q, double dt) {
  typedef Eigen::Matrix<double, MEDIM, MEDIM, Eigen::RowMajor> RRM;

  double nx[DIM] = {0};
  double in_F[EDIM*EDIM] = {0};

  // functions from sympy
  f_fun(in_x, dt, nx);
  F_fun(in_x, dt, in_F);


  EEM F(in_F);
  EEM P(in_P);
  EEM Q(in_Q);

  RRM F_main = F.topLeftCorner(MEDIM, MEDIM);
  P.topLeftCorner(MEDIM, MEDIM) = (F_main * P.topLeftCorner(MEDIM, MEDIM)) * F_main.transpose();
  P.topRightCorner(MEDIM, EDIM - MEDIM) = F_main * P.topRightCorner(MEDIM, EDIM - MEDIM);
  P.bottomLeftCorner(EDIM - MEDIM, MEDIM) = P.bottomLeftCorner(EDIM - MEDIM, MEDIM) * F_main.transpose();

  P = P + dt*Q;

  // copy out state
  memcpy(in_x, nx, DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
}

// note: extra_args dim only correct when null space projecting
// otherwise 1
template <int ZDIM, int EADIM, bool MAHA_TEST>
void update(double *in_x, double *in_P, Hfun h_fun, Hfun H_fun, Hfun Hea_fun, double *in_z, double *in_R, double *in_ea, double MAHA_THRESHOLD) {
  typedef Eigen::Matrix<double, ZDIM, ZDIM, Eigen::RowMajor> ZZM;
  typedef Eigen::Matrix<double, ZDIM, DIM, Eigen::RowMajor> ZDM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, EDIM, Eigen::RowMajor> XEM;
  //typedef Eigen::Matrix<double, EDIM, ZDIM, Eigen::RowMajor> EZM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, 1> X1M;
  typedef Eigen::Matrix<double, Eigen::Dynamic, Eigen::Dynamic, Eigen::RowMajor> XXM;

  double in_hx[ZDIM] = {0};
  double in_H[ZDIM * DIM] = {0};
  double in_H_mod[EDIM * DIM] = {0};
  double delta_x[EDIM] = {0};
  double x_new[DIM] = {0};


  // state x, P
  Eigen::Matrix<double, ZDIM, 1> z(in_z);
  EEM P(in_P);
  ZZM pre_R(in_R);

  // functions from sympy
  h_fun(in_x, in_ea, in_hx);
  H_fun(in_x, in_ea, in_H);
  ZDM pre_H(in_H);

  // get y (y = z - hx)
  Eigen::Matrix<double, ZDIM, 1> pre_y(in_hx); pre_y = z - pre_y;
  X1M y; XXM H; XXM R;
  if (Hea_fun){
    typedef Eigen::Matrix<double, ZDIM, EADIM, Eigen::RowMajor> ZAM;
    double in_Hea[ZDIM * EADIM] = {0};
    Hea_fun(in_x, in_ea, in_Hea);
    ZAM Hea(in_Hea);
    XXM A = Hea.transpose().fullPivLu().kernel();


    y = A.transpose() * pre_y;
    H = A.transpose() * pre_H;
    R = A.transpose() * pre_R * A;
  } else {
    y = pre_y;
    H = pre_H;
    R = pre_R;
  }
  // get modified H
  H_mod_fun(in_x, in_H_mod);
  DEM H_mod(in_H_mod);
  XEM H_err = H * H_mod;

  // Do mahalobis distance test
  if (MAHA_TEST){
    XXM a = (H_err * P * H_err.transpose() + R).inverse();
    double maha_dist = y.transpose() * a * y;
    if (maha_dist > MAHA_THRESHOLD){
      R = 1.0e16 * R;
    }
  }

  // Outlier resilient weighting
  double weight = 1;//(1.5)/(1 + y.squaredNorm()/R.sum());

  // kalman gains and I_KH
  XXM S = ((H_err * P) * H_err.transpose()) + R/weight;
  XEM KT = S.fullPivLu().solve(H_err * P.transpose());
  //EZM K = KT.transpose(); TODO: WHY DOES THIS NOT COMPILE?
  //EZM K = S.fullPivLu().solve(H_err * P.transpose()).transpose();
  //std::cout << "Here is the matrix rot:\n" << K << std::endl;
  EEM I_KH = Eigen::Matrix<double, EDIM, EDIM>::Identity() - (KT.transpose() * H_err);

  // update state by injecting dx
  Eigen::Matrix<double, EDIM, 1> dx(delta_x);
  dx  = (KT.transpose() * y);
  memcpy(delta_x, dx.data(), EDIM * sizeof(double));
  err_fun(in_x, delta_x, x_new);
  Eigen::Matrix<double, DIM, 1> x(x_new);

  // update cov
  P = ((I_KH * P) * I_KH.transpose()) + ((KT.transpose() * R) * KT);

  // copy out state
  memcpy(in_x, x.data(), DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
  memcpy(in_z, y.data(), y.rows() * sizeof(double));
}




}
extern "C" {

void live_update_4(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_4, H_4, NULL, in_z, in_R, in_ea, MAHA_THRESH_4);
}
void live_update_9(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_9, H_9, NULL, in_z, in_R, in_ea, MAHA_THRESH_9);
}
void live_update_10(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_10, H_10, NULL, in_z, in_R, in_ea, MAHA_THRESH_10);
}
void live_update_12(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_12, H_12, NULL, in_z, in_R, in_ea, MAHA_THRESH_12);
}
void live_update_35(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_35, H_35, NULL, in_z, in_R, in_ea, MAHA_THRESH_35);
}
void live_update_32(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<4, 3, 0>(in_x, in_P, h_32, H_32, NULL, in_z, in_R, in_ea, MAHA_THRESH_32);
}
void live_update_13(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_13, H_13, NULL, in_z, in_R, in_ea, MAHA_THRESH_13);
}
void live_update_14(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_14, H_14, NULL, in_z, in_R, in_ea, MAHA_THRESH_14);
}
void live_update_33(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_33, H_33, NULL, in_z, in_R, in_ea, MAHA_THRESH_33);
}
void live_H(double *in_vec, double *out_5054326339553974158) {
  H(in_vec, out_5054326339553974158);
}
void live_err_fun(double *nom_x, double *delta_x, double *out_2253683805816507243) {
  err_fun(nom_x, delta_x, out_2253683805816507243);
}
void live_inv_err_fun(double *nom_x, double *true_x, double *out_3526172836950796626) {
  inv_err_fun(nom_x, true_x, out_3526172836950796626);
}
void live_H_mod_fun(double *state, double *out_3099928180518603739) {
  H_mod_fun(state, out_3099928180518603739);
}
void live_f_fun(double *state, double dt, double *out_140542625930934274) {
  f_fun(state,  dt, out_140542625930934274);
}
void live_F_fun(double *state, double dt, double *out_385185360291656388) {
  F_fun(state,  dt, out_385185360291656388);
}
void live_h_4(double *state, double *unused, double *out_6575910142503985242) {
  h_4(state, unused, out_6575910142503985242);
}
void live_H_4(double *state, double *unused, double *out_6837788715331660746) {
  H_4(state, unused, out_6837788715331660746);
}
void live_h_9(double *state, double *unused, double *out_7206080633662316249) {
  h_9(state, unused, out_7206080633662316249);
}
void live_H_9(double *state, double *unused, double *out_4321736423113443400) {
  H_9(state, unused, out_4321736423113443400);
}
void live_h_10(double *state, double *unused, double *out_3893921519831623240) {
  h_10(state, unused, out_3893921519831623240);
}
void live_H_10(double *state, double *unused, double *out_6733325502537478925) {
  H_10(state, unused, out_6733325502537478925);
}
void live_h_12(double *state, double *unused, double *out_600302823877196604) {
  h_12(state, unused, out_600302823877196604);
}
void live_H_12(double *state, double *unused, double *out_456530338288927750) {
  H_12(state, unused, out_456530338288927750);
}
void live_h_35(double *state, double *unused, double *out_7920533085332522504) {
  h_35(state, unused, out_7920533085332522504);
}
void live_H_35(double *state, double *unused, double *out_3843935918020915366) {
  H_35(state, unused, out_3843935918020915366);
}
void live_h_32(double *state, double *unused, double *out_7255736416755076579) {
  h_32(state, unused, out_7255736416755076579);
}
void live_H_32(double *state, double *unused, double *out_9003397742821554017) {
  H_32(state, unused, out_9003397742821554017);
}
void live_h_13(double *state, double *unused, double *out_4072459639110765147) {
  h_13(state, unused, out_4072459639110765147);
}
void live_H_13(double *state, double *unused, double *out_6284467681283875319) {
  H_13(state, unused, out_6284467681283875319);
}
void live_h_14(double *state, double *unused, double *out_7206080633662316249) {
  h_14(state, unused, out_7206080633662316249);
}
void live_H_14(double *state, double *unused, double *out_4321736423113443400) {
  H_14(state, unused, out_4321736423113443400);
}
void live_h_33(double *state, double *unused, double *out_6882477148619358322) {
  h_33(state, unused, out_6882477148619358322);
}
void live_H_33(double *state, double *unused, double *out_693378913382057762) {
  H_33(state, unused, out_693378913382057762);
}
void live_predict(double *in_x, double *in_P, double *in_Q, double dt) {
  predict(in_x, in_P, in_Q, dt);
}
}

const EKF live = {
  .name = "live",
  .kinds = { 4, 9, 10, 12, 35, 32, 13, 14, 33 },
  .feature_kinds = {  },
  .f_fun = live_f_fun,
  .F_fun = live_F_fun,
  .err_fun = live_err_fun,
  .inv_err_fun = live_inv_err_fun,
  .H_mod_fun = live_H_mod_fun,
  .predict = live_predict,
  .hs = {
    { 4, live_h_4 },
    { 9, live_h_9 },
    { 10, live_h_10 },
    { 12, live_h_12 },
    { 35, live_h_35 },
    { 32, live_h_32 },
    { 13, live_h_13 },
    { 14, live_h_14 },
    { 33, live_h_33 },
  },
  .Hs = {
    { 4, live_H_4 },
    { 9, live_H_9 },
    { 10, live_H_10 },
    { 12, live_H_12 },
    { 35, live_H_35 },
    { 32, live_H_32 },
    { 13, live_H_13 },
    { 14, live_H_14 },
    { 33, live_H_33 },
  },
  .updates = {
    { 4, live_update_4 },
    { 9, live_update_9 },
    { 10, live_update_10 },
    { 12, live_update_12 },
    { 35, live_update_35 },
    { 32, live_update_32 },
    { 13, live_update_13 },
    { 14, live_update_14 },
    { 33, live_update_33 },
  },
  .Hes = {
  },
  .sets = {
  },
  .extra_routines = {
    { "H", live_H },
  },
};

ekf_lib_init(live)
