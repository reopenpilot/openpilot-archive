#include "live.h"

namespace {
#define DIM 22
#define EDIM 21
#define MEDIM 21
typedef void (*Hfun)(double *, double *, double *);
const static double MAHA_THRESH_4 = 7.814727903251177;
const static double MAHA_THRESH_9 = 7.814727903251177;
const static double MAHA_THRESH_10 = 7.814727903251177;
const static double MAHA_THRESH_12 = 7.814727903251177;
const static double MAHA_THRESH_35 = 7.814727903251177;
const static double MAHA_THRESH_32 = 9.487729036781154;
const static double MAHA_THRESH_13 = 7.814727903251177;
const static double MAHA_THRESH_14 = 7.814727903251177;
const static double MAHA_THRESH_33 = 7.814727903251177;

/******************************************************************************
 *                       Code generated with SymPy 1.12                       *
 *                                                                            *
 *              See http://www.sympy.org/ for more information.               *
 *                                                                            *
 *                         This file is part of 'ekf'                         *
 ******************************************************************************/
void H(double *in_vec, double *out_1931533319113004099) {
   out_1931533319113004099[0] = 0;
   out_1931533319113004099[1] = -sin(in_vec[1])*sin(in_vec[2])*in_vec[4] - sin(in_vec[1])*cos(in_vec[2])*in_vec[3] - cos(in_vec[1])*in_vec[5];
   out_1931533319113004099[2] = -sin(in_vec[2])*cos(in_vec[1])*in_vec[3] + cos(in_vec[1])*cos(in_vec[2])*in_vec[4];
   out_1931533319113004099[3] = cos(in_vec[1])*cos(in_vec[2]);
   out_1931533319113004099[4] = sin(in_vec[2])*cos(in_vec[1]);
   out_1931533319113004099[5] = -sin(in_vec[1]);
   out_1931533319113004099[6] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (-sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_1931533319113004099[7] = -sin(in_vec[0])*sin(in_vec[1])*in_vec[5] + sin(in_vec[0])*sin(in_vec[2])*cos(in_vec[1])*in_vec[4] + sin(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_1931533319113004099[8] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]))*in_vec[4];
   out_1931533319113004099[9] = sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]);
   out_1931533319113004099[10] = sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) + cos(in_vec[0])*cos(in_vec[2]);
   out_1931533319113004099[11] = sin(in_vec[0])*cos(in_vec[1]);
   out_1931533319113004099[12] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (-sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) + sin(in_vec[2])*cos(in_vec[0]))*in_vec[3] - sin(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_1931533319113004099[13] = -sin(in_vec[1])*cos(in_vec[0])*in_vec[5] + sin(in_vec[2])*cos(in_vec[0])*cos(in_vec[1])*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_1931533319113004099[14] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (sin(in_vec[0])*cos(in_vec[2]) - sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[3];
   out_1931533319113004099[15] = sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]);
   out_1931533319113004099[16] = -sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]);
   out_1931533319113004099[17] = cos(in_vec[0])*cos(in_vec[1]);
}
void err_fun(double *nom_x, double *delta_x, double *out_5009011685682981123) {
   out_5009011685682981123[0] = delta_x[0] + nom_x[0];
   out_5009011685682981123[1] = delta_x[1] + nom_x[1];
   out_5009011685682981123[2] = delta_x[2] + nom_x[2];
   out_5009011685682981123[3] = -0.5*delta_x[3]*nom_x[4] - 0.5*delta_x[4]*nom_x[5] - 0.5*delta_x[5]*nom_x[6] + 1.0*nom_x[3];
   out_5009011685682981123[4] = 0.5*delta_x[3]*nom_x[3] + 0.5*delta_x[4]*nom_x[6] - 0.5*delta_x[5]*nom_x[5] + 1.0*nom_x[4];
   out_5009011685682981123[5] = -0.5*delta_x[3]*nom_x[6] + 0.5*delta_x[4]*nom_x[3] + 0.5*delta_x[5]*nom_x[4] + 1.0*nom_x[5];
   out_5009011685682981123[6] = 0.5*delta_x[3]*nom_x[5] - 0.5*delta_x[4]*nom_x[4] + 0.5*delta_x[5]*nom_x[3] + 1.0*nom_x[6];
   out_5009011685682981123[7] = delta_x[6] + nom_x[7];
   out_5009011685682981123[8] = delta_x[7] + nom_x[8];
   out_5009011685682981123[9] = delta_x[8] + nom_x[9];
   out_5009011685682981123[10] = delta_x[9] + nom_x[10];
   out_5009011685682981123[11] = delta_x[10] + nom_x[11];
   out_5009011685682981123[12] = delta_x[11] + nom_x[12];
   out_5009011685682981123[13] = delta_x[12] + nom_x[13];
   out_5009011685682981123[14] = delta_x[13] + nom_x[14];
   out_5009011685682981123[15] = delta_x[14] + nom_x[15];
   out_5009011685682981123[16] = delta_x[15] + nom_x[16];
   out_5009011685682981123[17] = delta_x[16] + nom_x[17];
   out_5009011685682981123[18] = delta_x[17] + nom_x[18];
   out_5009011685682981123[19] = delta_x[18] + nom_x[19];
   out_5009011685682981123[20] = delta_x[19] + nom_x[20];
   out_5009011685682981123[21] = delta_x[20] + nom_x[21];
}
void inv_err_fun(double *nom_x, double *true_x, double *out_2335008714666607763) {
   out_2335008714666607763[0] = -nom_x[0] + true_x[0];
   out_2335008714666607763[1] = -nom_x[1] + true_x[1];
   out_2335008714666607763[2] = -nom_x[2] + true_x[2];
   out_2335008714666607763[3] = 2*nom_x[3]*true_x[4] - 2*nom_x[4]*true_x[3] + 2*nom_x[5]*true_x[6] - 2*nom_x[6]*true_x[5];
   out_2335008714666607763[4] = 2*nom_x[3]*true_x[5] - 2*nom_x[4]*true_x[6] - 2*nom_x[5]*true_x[3] + 2*nom_x[6]*true_x[4];
   out_2335008714666607763[5] = 2*nom_x[3]*true_x[6] + 2*nom_x[4]*true_x[5] - 2*nom_x[5]*true_x[4] - 2*nom_x[6]*true_x[3];
   out_2335008714666607763[6] = -nom_x[7] + true_x[7];
   out_2335008714666607763[7] = -nom_x[8] + true_x[8];
   out_2335008714666607763[8] = -nom_x[9] + true_x[9];
   out_2335008714666607763[9] = -nom_x[10] + true_x[10];
   out_2335008714666607763[10] = -nom_x[11] + true_x[11];
   out_2335008714666607763[11] = -nom_x[12] + true_x[12];
   out_2335008714666607763[12] = -nom_x[13] + true_x[13];
   out_2335008714666607763[13] = -nom_x[14] + true_x[14];
   out_2335008714666607763[14] = -nom_x[15] + true_x[15];
   out_2335008714666607763[15] = -nom_x[16] + true_x[16];
   out_2335008714666607763[16] = -nom_x[17] + true_x[17];
   out_2335008714666607763[17] = -nom_x[18] + true_x[18];
   out_2335008714666607763[18] = -nom_x[19] + true_x[19];
   out_2335008714666607763[19] = -nom_x[20] + true_x[20];
   out_2335008714666607763[20] = -nom_x[21] + true_x[21];
}
void H_mod_fun(double *state, double *out_4238032830930582124) {
   out_4238032830930582124[0] = 1.0;
   out_4238032830930582124[1] = 0;
   out_4238032830930582124[2] = 0;
   out_4238032830930582124[3] = 0;
   out_4238032830930582124[4] = 0;
   out_4238032830930582124[5] = 0;
   out_4238032830930582124[6] = 0;
   out_4238032830930582124[7] = 0;
   out_4238032830930582124[8] = 0;
   out_4238032830930582124[9] = 0;
   out_4238032830930582124[10] = 0;
   out_4238032830930582124[11] = 0;
   out_4238032830930582124[12] = 0;
   out_4238032830930582124[13] = 0;
   out_4238032830930582124[14] = 0;
   out_4238032830930582124[15] = 0;
   out_4238032830930582124[16] = 0;
   out_4238032830930582124[17] = 0;
   out_4238032830930582124[18] = 0;
   out_4238032830930582124[19] = 0;
   out_4238032830930582124[20] = 0;
   out_4238032830930582124[21] = 0;
   out_4238032830930582124[22] = 1.0;
   out_4238032830930582124[23] = 0;
   out_4238032830930582124[24] = 0;
   out_4238032830930582124[25] = 0;
   out_4238032830930582124[26] = 0;
   out_4238032830930582124[27] = 0;
   out_4238032830930582124[28] = 0;
   out_4238032830930582124[29] = 0;
   out_4238032830930582124[30] = 0;
   out_4238032830930582124[31] = 0;
   out_4238032830930582124[32] = 0;
   out_4238032830930582124[33] = 0;
   out_4238032830930582124[34] = 0;
   out_4238032830930582124[35] = 0;
   out_4238032830930582124[36] = 0;
   out_4238032830930582124[37] = 0;
   out_4238032830930582124[38] = 0;
   out_4238032830930582124[39] = 0;
   out_4238032830930582124[40] = 0;
   out_4238032830930582124[41] = 0;
   out_4238032830930582124[42] = 0;
   out_4238032830930582124[43] = 0;
   out_4238032830930582124[44] = 1.0;
   out_4238032830930582124[45] = 0;
   out_4238032830930582124[46] = 0;
   out_4238032830930582124[47] = 0;
   out_4238032830930582124[48] = 0;
   out_4238032830930582124[49] = 0;
   out_4238032830930582124[50] = 0;
   out_4238032830930582124[51] = 0;
   out_4238032830930582124[52] = 0;
   out_4238032830930582124[53] = 0;
   out_4238032830930582124[54] = 0;
   out_4238032830930582124[55] = 0;
   out_4238032830930582124[56] = 0;
   out_4238032830930582124[57] = 0;
   out_4238032830930582124[58] = 0;
   out_4238032830930582124[59] = 0;
   out_4238032830930582124[60] = 0;
   out_4238032830930582124[61] = 0;
   out_4238032830930582124[62] = 0;
   out_4238032830930582124[63] = 0;
   out_4238032830930582124[64] = 0;
   out_4238032830930582124[65] = 0;
   out_4238032830930582124[66] = -0.5*state[4];
   out_4238032830930582124[67] = -0.5*state[5];
   out_4238032830930582124[68] = -0.5*state[6];
   out_4238032830930582124[69] = 0;
   out_4238032830930582124[70] = 0;
   out_4238032830930582124[71] = 0;
   out_4238032830930582124[72] = 0;
   out_4238032830930582124[73] = 0;
   out_4238032830930582124[74] = 0;
   out_4238032830930582124[75] = 0;
   out_4238032830930582124[76] = 0;
   out_4238032830930582124[77] = 0;
   out_4238032830930582124[78] = 0;
   out_4238032830930582124[79] = 0;
   out_4238032830930582124[80] = 0;
   out_4238032830930582124[81] = 0;
   out_4238032830930582124[82] = 0;
   out_4238032830930582124[83] = 0;
   out_4238032830930582124[84] = 0;
   out_4238032830930582124[85] = 0;
   out_4238032830930582124[86] = 0;
   out_4238032830930582124[87] = 0.5*state[3];
   out_4238032830930582124[88] = 0.5*state[6];
   out_4238032830930582124[89] = -0.5*state[5];
   out_4238032830930582124[90] = 0;
   out_4238032830930582124[91] = 0;
   out_4238032830930582124[92] = 0;
   out_4238032830930582124[93] = 0;
   out_4238032830930582124[94] = 0;
   out_4238032830930582124[95] = 0;
   out_4238032830930582124[96] = 0;
   out_4238032830930582124[97] = 0;
   out_4238032830930582124[98] = 0;
   out_4238032830930582124[99] = 0;
   out_4238032830930582124[100] = 0;
   out_4238032830930582124[101] = 0;
   out_4238032830930582124[102] = 0;
   out_4238032830930582124[103] = 0;
   out_4238032830930582124[104] = 0;
   out_4238032830930582124[105] = 0;
   out_4238032830930582124[106] = 0;
   out_4238032830930582124[107] = 0;
   out_4238032830930582124[108] = -0.5*state[6];
   out_4238032830930582124[109] = 0.5*state[3];
   out_4238032830930582124[110] = 0.5*state[4];
   out_4238032830930582124[111] = 0;
   out_4238032830930582124[112] = 0;
   out_4238032830930582124[113] = 0;
   out_4238032830930582124[114] = 0;
   out_4238032830930582124[115] = 0;
   out_4238032830930582124[116] = 0;
   out_4238032830930582124[117] = 0;
   out_4238032830930582124[118] = 0;
   out_4238032830930582124[119] = 0;
   out_4238032830930582124[120] = 0;
   out_4238032830930582124[121] = 0;
   out_4238032830930582124[122] = 0;
   out_4238032830930582124[123] = 0;
   out_4238032830930582124[124] = 0;
   out_4238032830930582124[125] = 0;
   out_4238032830930582124[126] = 0;
   out_4238032830930582124[127] = 0;
   out_4238032830930582124[128] = 0;
   out_4238032830930582124[129] = 0.5*state[5];
   out_4238032830930582124[130] = -0.5*state[4];
   out_4238032830930582124[131] = 0.5*state[3];
   out_4238032830930582124[132] = 0;
   out_4238032830930582124[133] = 0;
   out_4238032830930582124[134] = 0;
   out_4238032830930582124[135] = 0;
   out_4238032830930582124[136] = 0;
   out_4238032830930582124[137] = 0;
   out_4238032830930582124[138] = 0;
   out_4238032830930582124[139] = 0;
   out_4238032830930582124[140] = 0;
   out_4238032830930582124[141] = 0;
   out_4238032830930582124[142] = 0;
   out_4238032830930582124[143] = 0;
   out_4238032830930582124[144] = 0;
   out_4238032830930582124[145] = 0;
   out_4238032830930582124[146] = 0;
   out_4238032830930582124[147] = 0;
   out_4238032830930582124[148] = 0;
   out_4238032830930582124[149] = 0;
   out_4238032830930582124[150] = 0;
   out_4238032830930582124[151] = 0;
   out_4238032830930582124[152] = 0;
   out_4238032830930582124[153] = 1.0;
   out_4238032830930582124[154] = 0;
   out_4238032830930582124[155] = 0;
   out_4238032830930582124[156] = 0;
   out_4238032830930582124[157] = 0;
   out_4238032830930582124[158] = 0;
   out_4238032830930582124[159] = 0;
   out_4238032830930582124[160] = 0;
   out_4238032830930582124[161] = 0;
   out_4238032830930582124[162] = 0;
   out_4238032830930582124[163] = 0;
   out_4238032830930582124[164] = 0;
   out_4238032830930582124[165] = 0;
   out_4238032830930582124[166] = 0;
   out_4238032830930582124[167] = 0;
   out_4238032830930582124[168] = 0;
   out_4238032830930582124[169] = 0;
   out_4238032830930582124[170] = 0;
   out_4238032830930582124[171] = 0;
   out_4238032830930582124[172] = 0;
   out_4238032830930582124[173] = 0;
   out_4238032830930582124[174] = 0;
   out_4238032830930582124[175] = 1.0;
   out_4238032830930582124[176] = 0;
   out_4238032830930582124[177] = 0;
   out_4238032830930582124[178] = 0;
   out_4238032830930582124[179] = 0;
   out_4238032830930582124[180] = 0;
   out_4238032830930582124[181] = 0;
   out_4238032830930582124[182] = 0;
   out_4238032830930582124[183] = 0;
   out_4238032830930582124[184] = 0;
   out_4238032830930582124[185] = 0;
   out_4238032830930582124[186] = 0;
   out_4238032830930582124[187] = 0;
   out_4238032830930582124[188] = 0;
   out_4238032830930582124[189] = 0;
   out_4238032830930582124[190] = 0;
   out_4238032830930582124[191] = 0;
   out_4238032830930582124[192] = 0;
   out_4238032830930582124[193] = 0;
   out_4238032830930582124[194] = 0;
   out_4238032830930582124[195] = 0;
   out_4238032830930582124[196] = 0;
   out_4238032830930582124[197] = 1.0;
   out_4238032830930582124[198] = 0;
   out_4238032830930582124[199] = 0;
   out_4238032830930582124[200] = 0;
   out_4238032830930582124[201] = 0;
   out_4238032830930582124[202] = 0;
   out_4238032830930582124[203] = 0;
   out_4238032830930582124[204] = 0;
   out_4238032830930582124[205] = 0;
   out_4238032830930582124[206] = 0;
   out_4238032830930582124[207] = 0;
   out_4238032830930582124[208] = 0;
   out_4238032830930582124[209] = 0;
   out_4238032830930582124[210] = 0;
   out_4238032830930582124[211] = 0;
   out_4238032830930582124[212] = 0;
   out_4238032830930582124[213] = 0;
   out_4238032830930582124[214] = 0;
   out_4238032830930582124[215] = 0;
   out_4238032830930582124[216] = 0;
   out_4238032830930582124[217] = 0;
   out_4238032830930582124[218] = 0;
   out_4238032830930582124[219] = 1.0;
   out_4238032830930582124[220] = 0;
   out_4238032830930582124[221] = 0;
   out_4238032830930582124[222] = 0;
   out_4238032830930582124[223] = 0;
   out_4238032830930582124[224] = 0;
   out_4238032830930582124[225] = 0;
   out_4238032830930582124[226] = 0;
   out_4238032830930582124[227] = 0;
   out_4238032830930582124[228] = 0;
   out_4238032830930582124[229] = 0;
   out_4238032830930582124[230] = 0;
   out_4238032830930582124[231] = 0;
   out_4238032830930582124[232] = 0;
   out_4238032830930582124[233] = 0;
   out_4238032830930582124[234] = 0;
   out_4238032830930582124[235] = 0;
   out_4238032830930582124[236] = 0;
   out_4238032830930582124[237] = 0;
   out_4238032830930582124[238] = 0;
   out_4238032830930582124[239] = 0;
   out_4238032830930582124[240] = 0;
   out_4238032830930582124[241] = 1.0;
   out_4238032830930582124[242] = 0;
   out_4238032830930582124[243] = 0;
   out_4238032830930582124[244] = 0;
   out_4238032830930582124[245] = 0;
   out_4238032830930582124[246] = 0;
   out_4238032830930582124[247] = 0;
   out_4238032830930582124[248] = 0;
   out_4238032830930582124[249] = 0;
   out_4238032830930582124[250] = 0;
   out_4238032830930582124[251] = 0;
   out_4238032830930582124[252] = 0;
   out_4238032830930582124[253] = 0;
   out_4238032830930582124[254] = 0;
   out_4238032830930582124[255] = 0;
   out_4238032830930582124[256] = 0;
   out_4238032830930582124[257] = 0;
   out_4238032830930582124[258] = 0;
   out_4238032830930582124[259] = 0;
   out_4238032830930582124[260] = 0;
   out_4238032830930582124[261] = 0;
   out_4238032830930582124[262] = 0;
   out_4238032830930582124[263] = 1.0;
   out_4238032830930582124[264] = 0;
   out_4238032830930582124[265] = 0;
   out_4238032830930582124[266] = 0;
   out_4238032830930582124[267] = 0;
   out_4238032830930582124[268] = 0;
   out_4238032830930582124[269] = 0;
   out_4238032830930582124[270] = 0;
   out_4238032830930582124[271] = 0;
   out_4238032830930582124[272] = 0;
   out_4238032830930582124[273] = 0;
   out_4238032830930582124[274] = 0;
   out_4238032830930582124[275] = 0;
   out_4238032830930582124[276] = 0;
   out_4238032830930582124[277] = 0;
   out_4238032830930582124[278] = 0;
   out_4238032830930582124[279] = 0;
   out_4238032830930582124[280] = 0;
   out_4238032830930582124[281] = 0;
   out_4238032830930582124[282] = 0;
   out_4238032830930582124[283] = 0;
   out_4238032830930582124[284] = 0;
   out_4238032830930582124[285] = 1.0;
   out_4238032830930582124[286] = 0;
   out_4238032830930582124[287] = 0;
   out_4238032830930582124[288] = 0;
   out_4238032830930582124[289] = 0;
   out_4238032830930582124[290] = 0;
   out_4238032830930582124[291] = 0;
   out_4238032830930582124[292] = 0;
   out_4238032830930582124[293] = 0;
   out_4238032830930582124[294] = 0;
   out_4238032830930582124[295] = 0;
   out_4238032830930582124[296] = 0;
   out_4238032830930582124[297] = 0;
   out_4238032830930582124[298] = 0;
   out_4238032830930582124[299] = 0;
   out_4238032830930582124[300] = 0;
   out_4238032830930582124[301] = 0;
   out_4238032830930582124[302] = 0;
   out_4238032830930582124[303] = 0;
   out_4238032830930582124[304] = 0;
   out_4238032830930582124[305] = 0;
   out_4238032830930582124[306] = 0;
   out_4238032830930582124[307] = 1.0;
   out_4238032830930582124[308] = 0;
   out_4238032830930582124[309] = 0;
   out_4238032830930582124[310] = 0;
   out_4238032830930582124[311] = 0;
   out_4238032830930582124[312] = 0;
   out_4238032830930582124[313] = 0;
   out_4238032830930582124[314] = 0;
   out_4238032830930582124[315] = 0;
   out_4238032830930582124[316] = 0;
   out_4238032830930582124[317] = 0;
   out_4238032830930582124[318] = 0;
   out_4238032830930582124[319] = 0;
   out_4238032830930582124[320] = 0;
   out_4238032830930582124[321] = 0;
   out_4238032830930582124[322] = 0;
   out_4238032830930582124[323] = 0;
   out_4238032830930582124[324] = 0;
   out_4238032830930582124[325] = 0;
   out_4238032830930582124[326] = 0;
   out_4238032830930582124[327] = 0;
   out_4238032830930582124[328] = 0;
   out_4238032830930582124[329] = 1.0;
   out_4238032830930582124[330] = 0;
   out_4238032830930582124[331] = 0;
   out_4238032830930582124[332] = 0;
   out_4238032830930582124[333] = 0;
   out_4238032830930582124[334] = 0;
   out_4238032830930582124[335] = 0;
   out_4238032830930582124[336] = 0;
   out_4238032830930582124[337] = 0;
   out_4238032830930582124[338] = 0;
   out_4238032830930582124[339] = 0;
   out_4238032830930582124[340] = 0;
   out_4238032830930582124[341] = 0;
   out_4238032830930582124[342] = 0;
   out_4238032830930582124[343] = 0;
   out_4238032830930582124[344] = 0;
   out_4238032830930582124[345] = 0;
   out_4238032830930582124[346] = 0;
   out_4238032830930582124[347] = 0;
   out_4238032830930582124[348] = 0;
   out_4238032830930582124[349] = 0;
   out_4238032830930582124[350] = 0;
   out_4238032830930582124[351] = 1.0;
   out_4238032830930582124[352] = 0;
   out_4238032830930582124[353] = 0;
   out_4238032830930582124[354] = 0;
   out_4238032830930582124[355] = 0;
   out_4238032830930582124[356] = 0;
   out_4238032830930582124[357] = 0;
   out_4238032830930582124[358] = 0;
   out_4238032830930582124[359] = 0;
   out_4238032830930582124[360] = 0;
   out_4238032830930582124[361] = 0;
   out_4238032830930582124[362] = 0;
   out_4238032830930582124[363] = 0;
   out_4238032830930582124[364] = 0;
   out_4238032830930582124[365] = 0;
   out_4238032830930582124[366] = 0;
   out_4238032830930582124[367] = 0;
   out_4238032830930582124[368] = 0;
   out_4238032830930582124[369] = 0;
   out_4238032830930582124[370] = 0;
   out_4238032830930582124[371] = 0;
   out_4238032830930582124[372] = 0;
   out_4238032830930582124[373] = 1.0;
   out_4238032830930582124[374] = 0;
   out_4238032830930582124[375] = 0;
   out_4238032830930582124[376] = 0;
   out_4238032830930582124[377] = 0;
   out_4238032830930582124[378] = 0;
   out_4238032830930582124[379] = 0;
   out_4238032830930582124[380] = 0;
   out_4238032830930582124[381] = 0;
   out_4238032830930582124[382] = 0;
   out_4238032830930582124[383] = 0;
   out_4238032830930582124[384] = 0;
   out_4238032830930582124[385] = 0;
   out_4238032830930582124[386] = 0;
   out_4238032830930582124[387] = 0;
   out_4238032830930582124[388] = 0;
   out_4238032830930582124[389] = 0;
   out_4238032830930582124[390] = 0;
   out_4238032830930582124[391] = 0;
   out_4238032830930582124[392] = 0;
   out_4238032830930582124[393] = 0;
   out_4238032830930582124[394] = 0;
   out_4238032830930582124[395] = 1.0;
   out_4238032830930582124[396] = 0;
   out_4238032830930582124[397] = 0;
   out_4238032830930582124[398] = 0;
   out_4238032830930582124[399] = 0;
   out_4238032830930582124[400] = 0;
   out_4238032830930582124[401] = 0;
   out_4238032830930582124[402] = 0;
   out_4238032830930582124[403] = 0;
   out_4238032830930582124[404] = 0;
   out_4238032830930582124[405] = 0;
   out_4238032830930582124[406] = 0;
   out_4238032830930582124[407] = 0;
   out_4238032830930582124[408] = 0;
   out_4238032830930582124[409] = 0;
   out_4238032830930582124[410] = 0;
   out_4238032830930582124[411] = 0;
   out_4238032830930582124[412] = 0;
   out_4238032830930582124[413] = 0;
   out_4238032830930582124[414] = 0;
   out_4238032830930582124[415] = 0;
   out_4238032830930582124[416] = 0;
   out_4238032830930582124[417] = 1.0;
   out_4238032830930582124[418] = 0;
   out_4238032830930582124[419] = 0;
   out_4238032830930582124[420] = 0;
   out_4238032830930582124[421] = 0;
   out_4238032830930582124[422] = 0;
   out_4238032830930582124[423] = 0;
   out_4238032830930582124[424] = 0;
   out_4238032830930582124[425] = 0;
   out_4238032830930582124[426] = 0;
   out_4238032830930582124[427] = 0;
   out_4238032830930582124[428] = 0;
   out_4238032830930582124[429] = 0;
   out_4238032830930582124[430] = 0;
   out_4238032830930582124[431] = 0;
   out_4238032830930582124[432] = 0;
   out_4238032830930582124[433] = 0;
   out_4238032830930582124[434] = 0;
   out_4238032830930582124[435] = 0;
   out_4238032830930582124[436] = 0;
   out_4238032830930582124[437] = 0;
   out_4238032830930582124[438] = 0;
   out_4238032830930582124[439] = 1.0;
   out_4238032830930582124[440] = 0;
   out_4238032830930582124[441] = 0;
   out_4238032830930582124[442] = 0;
   out_4238032830930582124[443] = 0;
   out_4238032830930582124[444] = 0;
   out_4238032830930582124[445] = 0;
   out_4238032830930582124[446] = 0;
   out_4238032830930582124[447] = 0;
   out_4238032830930582124[448] = 0;
   out_4238032830930582124[449] = 0;
   out_4238032830930582124[450] = 0;
   out_4238032830930582124[451] = 0;
   out_4238032830930582124[452] = 0;
   out_4238032830930582124[453] = 0;
   out_4238032830930582124[454] = 0;
   out_4238032830930582124[455] = 0;
   out_4238032830930582124[456] = 0;
   out_4238032830930582124[457] = 0;
   out_4238032830930582124[458] = 0;
   out_4238032830930582124[459] = 0;
   out_4238032830930582124[460] = 0;
   out_4238032830930582124[461] = 1.0;
}
void f_fun(double *state, double dt, double *out_7585063412439571151) {
   out_7585063412439571151[0] = dt*state[7] + state[0];
   out_7585063412439571151[1] = dt*state[8] + state[1];
   out_7585063412439571151[2] = dt*state[9] + state[2];
   out_7585063412439571151[3] = dt*(-0.5*state[4]*state[10] - 0.5*state[5]*state[11] - 0.5*state[6]*state[12]) + state[3];
   out_7585063412439571151[4] = dt*(0.5*state[3]*state[10] + 0.5*state[5]*state[12] - 0.5*state[6]*state[11]) + state[4];
   out_7585063412439571151[5] = dt*(0.5*state[3]*state[11] - 0.5*state[4]*state[12] + 0.5*state[6]*state[10]) + state[5];
   out_7585063412439571151[6] = dt*(0.5*state[3]*state[12] + 0.5*state[4]*state[11] - 0.5*state[5]*state[10]) + state[6];
   out_7585063412439571151[7] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]) + state[7];
   out_7585063412439571151[8] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]) + state[8];
   out_7585063412439571151[9] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]) + state[9];
   out_7585063412439571151[10] = state[10];
   out_7585063412439571151[11] = state[11];
   out_7585063412439571151[12] = state[12];
   out_7585063412439571151[13] = state[13];
   out_7585063412439571151[14] = state[14];
   out_7585063412439571151[15] = state[15];
   out_7585063412439571151[16] = state[16];
   out_7585063412439571151[17] = state[17];
   out_7585063412439571151[18] = state[18];
   out_7585063412439571151[19] = state[19];
   out_7585063412439571151[20] = state[20];
   out_7585063412439571151[21] = state[21];
}
void F_fun(double *state, double dt, double *out_5834932782085019445) {
   out_5834932782085019445[0] = 1;
   out_5834932782085019445[1] = 0;
   out_5834932782085019445[2] = 0;
   out_5834932782085019445[3] = 0;
   out_5834932782085019445[4] = 0;
   out_5834932782085019445[5] = 0;
   out_5834932782085019445[6] = dt;
   out_5834932782085019445[7] = 0;
   out_5834932782085019445[8] = 0;
   out_5834932782085019445[9] = 0;
   out_5834932782085019445[10] = 0;
   out_5834932782085019445[11] = 0;
   out_5834932782085019445[12] = 0;
   out_5834932782085019445[13] = 0;
   out_5834932782085019445[14] = 0;
   out_5834932782085019445[15] = 0;
   out_5834932782085019445[16] = 0;
   out_5834932782085019445[17] = 0;
   out_5834932782085019445[18] = 0;
   out_5834932782085019445[19] = 0;
   out_5834932782085019445[20] = 0;
   out_5834932782085019445[21] = 0;
   out_5834932782085019445[22] = 1;
   out_5834932782085019445[23] = 0;
   out_5834932782085019445[24] = 0;
   out_5834932782085019445[25] = 0;
   out_5834932782085019445[26] = 0;
   out_5834932782085019445[27] = 0;
   out_5834932782085019445[28] = dt;
   out_5834932782085019445[29] = 0;
   out_5834932782085019445[30] = 0;
   out_5834932782085019445[31] = 0;
   out_5834932782085019445[32] = 0;
   out_5834932782085019445[33] = 0;
   out_5834932782085019445[34] = 0;
   out_5834932782085019445[35] = 0;
   out_5834932782085019445[36] = 0;
   out_5834932782085019445[37] = 0;
   out_5834932782085019445[38] = 0;
   out_5834932782085019445[39] = 0;
   out_5834932782085019445[40] = 0;
   out_5834932782085019445[41] = 0;
   out_5834932782085019445[42] = 0;
   out_5834932782085019445[43] = 0;
   out_5834932782085019445[44] = 1;
   out_5834932782085019445[45] = 0;
   out_5834932782085019445[46] = 0;
   out_5834932782085019445[47] = 0;
   out_5834932782085019445[48] = 0;
   out_5834932782085019445[49] = 0;
   out_5834932782085019445[50] = dt;
   out_5834932782085019445[51] = 0;
   out_5834932782085019445[52] = 0;
   out_5834932782085019445[53] = 0;
   out_5834932782085019445[54] = 0;
   out_5834932782085019445[55] = 0;
   out_5834932782085019445[56] = 0;
   out_5834932782085019445[57] = 0;
   out_5834932782085019445[58] = 0;
   out_5834932782085019445[59] = 0;
   out_5834932782085019445[60] = 0;
   out_5834932782085019445[61] = 0;
   out_5834932782085019445[62] = 0;
   out_5834932782085019445[63] = 0;
   out_5834932782085019445[64] = 0;
   out_5834932782085019445[65] = 0;
   out_5834932782085019445[66] = 1;
   out_5834932782085019445[67] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[11] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_5834932782085019445[68] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[12] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[10] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[11]);
   out_5834932782085019445[69] = 0;
   out_5834932782085019445[70] = 0;
   out_5834932782085019445[71] = 0;
   out_5834932782085019445[72] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_5834932782085019445[73] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_5834932782085019445[74] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_5834932782085019445[75] = 0;
   out_5834932782085019445[76] = 0;
   out_5834932782085019445[77] = 0;
   out_5834932782085019445[78] = 0;
   out_5834932782085019445[79] = 0;
   out_5834932782085019445[80] = 0;
   out_5834932782085019445[81] = 0;
   out_5834932782085019445[82] = 0;
   out_5834932782085019445[83] = 0;
   out_5834932782085019445[84] = 0;
   out_5834932782085019445[85] = 0;
   out_5834932782085019445[86] = 0;
   out_5834932782085019445[87] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[11] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_5834932782085019445[88] = 1;
   out_5834932782085019445[89] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[12] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[11] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[10]);
   out_5834932782085019445[90] = 0;
   out_5834932782085019445[91] = 0;
   out_5834932782085019445[92] = 0;
   out_5834932782085019445[93] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_5834932782085019445[94] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_5834932782085019445[95] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_5834932782085019445[96] = 0;
   out_5834932782085019445[97] = 0;
   out_5834932782085019445[98] = 0;
   out_5834932782085019445[99] = 0;
   out_5834932782085019445[100] = 0;
   out_5834932782085019445[101] = 0;
   out_5834932782085019445[102] = 0;
   out_5834932782085019445[103] = 0;
   out_5834932782085019445[104] = 0;
   out_5834932782085019445[105] = 0;
   out_5834932782085019445[106] = 0;
   out_5834932782085019445[107] = 0;
   out_5834932782085019445[108] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[12] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[10] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[11]);
   out_5834932782085019445[109] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[12] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[11] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[10]);
   out_5834932782085019445[110] = 1;
   out_5834932782085019445[111] = 0;
   out_5834932782085019445[112] = 0;
   out_5834932782085019445[113] = 0;
   out_5834932782085019445[114] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_5834932782085019445[115] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_5834932782085019445[116] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_5834932782085019445[117] = 0;
   out_5834932782085019445[118] = 0;
   out_5834932782085019445[119] = 0;
   out_5834932782085019445[120] = 0;
   out_5834932782085019445[121] = 0;
   out_5834932782085019445[122] = 0;
   out_5834932782085019445[123] = 0;
   out_5834932782085019445[124] = 0;
   out_5834932782085019445[125] = 0;
   out_5834932782085019445[126] = 0;
   out_5834932782085019445[127] = 0;
   out_5834932782085019445[128] = 0;
   out_5834932782085019445[129] = 0;
   out_5834932782085019445[130] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_5834932782085019445[131] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[18] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[16] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[17]);
   out_5834932782085019445[132] = 1;
   out_5834932782085019445[133] = 0;
   out_5834932782085019445[134] = 0;
   out_5834932782085019445[135] = 0;
   out_5834932782085019445[136] = 0;
   out_5834932782085019445[137] = 0;
   out_5834932782085019445[138] = 0;
   out_5834932782085019445[139] = 0;
   out_5834932782085019445[140] = 0;
   out_5834932782085019445[141] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_5834932782085019445[142] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_5834932782085019445[143] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_5834932782085019445[144] = 0;
   out_5834932782085019445[145] = 0;
   out_5834932782085019445[146] = 0;
   out_5834932782085019445[147] = 0;
   out_5834932782085019445[148] = 0;
   out_5834932782085019445[149] = 0;
   out_5834932782085019445[150] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[17] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_5834932782085019445[151] = 0;
   out_5834932782085019445[152] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]);
   out_5834932782085019445[153] = 0;
   out_5834932782085019445[154] = 1;
   out_5834932782085019445[155] = 0;
   out_5834932782085019445[156] = 0;
   out_5834932782085019445[157] = 0;
   out_5834932782085019445[158] = 0;
   out_5834932782085019445[159] = 0;
   out_5834932782085019445[160] = 0;
   out_5834932782085019445[161] = 0;
   out_5834932782085019445[162] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_5834932782085019445[163] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_5834932782085019445[164] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_5834932782085019445[165] = 0;
   out_5834932782085019445[166] = 0;
   out_5834932782085019445[167] = 0;
   out_5834932782085019445[168] = 0;
   out_5834932782085019445[169] = 0;
   out_5834932782085019445[170] = 0;
   out_5834932782085019445[171] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]);
   out_5834932782085019445[172] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[18] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[17] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[16]);
   out_5834932782085019445[173] = 0;
   out_5834932782085019445[174] = 0;
   out_5834932782085019445[175] = 0;
   out_5834932782085019445[176] = 1;
   out_5834932782085019445[177] = 0;
   out_5834932782085019445[178] = 0;
   out_5834932782085019445[179] = 0;
   out_5834932782085019445[180] = 0;
   out_5834932782085019445[181] = 0;
   out_5834932782085019445[182] = 0;
   out_5834932782085019445[183] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_5834932782085019445[184] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_5834932782085019445[185] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_5834932782085019445[186] = 0;
   out_5834932782085019445[187] = 0;
   out_5834932782085019445[188] = 0;
   out_5834932782085019445[189] = 0;
   out_5834932782085019445[190] = 0;
   out_5834932782085019445[191] = 0;
   out_5834932782085019445[192] = 0;
   out_5834932782085019445[193] = 0;
   out_5834932782085019445[194] = 0;
   out_5834932782085019445[195] = 0;
   out_5834932782085019445[196] = 0;
   out_5834932782085019445[197] = 0;
   out_5834932782085019445[198] = 1;
   out_5834932782085019445[199] = 0;
   out_5834932782085019445[200] = 0;
   out_5834932782085019445[201] = 0;
   out_5834932782085019445[202] = 0;
   out_5834932782085019445[203] = 0;
   out_5834932782085019445[204] = 0;
   out_5834932782085019445[205] = 0;
   out_5834932782085019445[206] = 0;
   out_5834932782085019445[207] = 0;
   out_5834932782085019445[208] = 0;
   out_5834932782085019445[209] = 0;
   out_5834932782085019445[210] = 0;
   out_5834932782085019445[211] = 0;
   out_5834932782085019445[212] = 0;
   out_5834932782085019445[213] = 0;
   out_5834932782085019445[214] = 0;
   out_5834932782085019445[215] = 0;
   out_5834932782085019445[216] = 0;
   out_5834932782085019445[217] = 0;
   out_5834932782085019445[218] = 0;
   out_5834932782085019445[219] = 0;
   out_5834932782085019445[220] = 1;
   out_5834932782085019445[221] = 0;
   out_5834932782085019445[222] = 0;
   out_5834932782085019445[223] = 0;
   out_5834932782085019445[224] = 0;
   out_5834932782085019445[225] = 0;
   out_5834932782085019445[226] = 0;
   out_5834932782085019445[227] = 0;
   out_5834932782085019445[228] = 0;
   out_5834932782085019445[229] = 0;
   out_5834932782085019445[230] = 0;
   out_5834932782085019445[231] = 0;
   out_5834932782085019445[232] = 0;
   out_5834932782085019445[233] = 0;
   out_5834932782085019445[234] = 0;
   out_5834932782085019445[235] = 0;
   out_5834932782085019445[236] = 0;
   out_5834932782085019445[237] = 0;
   out_5834932782085019445[238] = 0;
   out_5834932782085019445[239] = 0;
   out_5834932782085019445[240] = 0;
   out_5834932782085019445[241] = 0;
   out_5834932782085019445[242] = 1;
   out_5834932782085019445[243] = 0;
   out_5834932782085019445[244] = 0;
   out_5834932782085019445[245] = 0;
   out_5834932782085019445[246] = 0;
   out_5834932782085019445[247] = 0;
   out_5834932782085019445[248] = 0;
   out_5834932782085019445[249] = 0;
   out_5834932782085019445[250] = 0;
   out_5834932782085019445[251] = 0;
   out_5834932782085019445[252] = 0;
   out_5834932782085019445[253] = 0;
   out_5834932782085019445[254] = 0;
   out_5834932782085019445[255] = 0;
   out_5834932782085019445[256] = 0;
   out_5834932782085019445[257] = 0;
   out_5834932782085019445[258] = 0;
   out_5834932782085019445[259] = 0;
   out_5834932782085019445[260] = 0;
   out_5834932782085019445[261] = 0;
   out_5834932782085019445[262] = 0;
   out_5834932782085019445[263] = 0;
   out_5834932782085019445[264] = 1;
   out_5834932782085019445[265] = 0;
   out_5834932782085019445[266] = 0;
   out_5834932782085019445[267] = 0;
   out_5834932782085019445[268] = 0;
   out_5834932782085019445[269] = 0;
   out_5834932782085019445[270] = 0;
   out_5834932782085019445[271] = 0;
   out_5834932782085019445[272] = 0;
   out_5834932782085019445[273] = 0;
   out_5834932782085019445[274] = 0;
   out_5834932782085019445[275] = 0;
   out_5834932782085019445[276] = 0;
   out_5834932782085019445[277] = 0;
   out_5834932782085019445[278] = 0;
   out_5834932782085019445[279] = 0;
   out_5834932782085019445[280] = 0;
   out_5834932782085019445[281] = 0;
   out_5834932782085019445[282] = 0;
   out_5834932782085019445[283] = 0;
   out_5834932782085019445[284] = 0;
   out_5834932782085019445[285] = 0;
   out_5834932782085019445[286] = 1;
   out_5834932782085019445[287] = 0;
   out_5834932782085019445[288] = 0;
   out_5834932782085019445[289] = 0;
   out_5834932782085019445[290] = 0;
   out_5834932782085019445[291] = 0;
   out_5834932782085019445[292] = 0;
   out_5834932782085019445[293] = 0;
   out_5834932782085019445[294] = 0;
   out_5834932782085019445[295] = 0;
   out_5834932782085019445[296] = 0;
   out_5834932782085019445[297] = 0;
   out_5834932782085019445[298] = 0;
   out_5834932782085019445[299] = 0;
   out_5834932782085019445[300] = 0;
   out_5834932782085019445[301] = 0;
   out_5834932782085019445[302] = 0;
   out_5834932782085019445[303] = 0;
   out_5834932782085019445[304] = 0;
   out_5834932782085019445[305] = 0;
   out_5834932782085019445[306] = 0;
   out_5834932782085019445[307] = 0;
   out_5834932782085019445[308] = 1;
   out_5834932782085019445[309] = 0;
   out_5834932782085019445[310] = 0;
   out_5834932782085019445[311] = 0;
   out_5834932782085019445[312] = 0;
   out_5834932782085019445[313] = 0;
   out_5834932782085019445[314] = 0;
   out_5834932782085019445[315] = 0;
   out_5834932782085019445[316] = 0;
   out_5834932782085019445[317] = 0;
   out_5834932782085019445[318] = 0;
   out_5834932782085019445[319] = 0;
   out_5834932782085019445[320] = 0;
   out_5834932782085019445[321] = 0;
   out_5834932782085019445[322] = 0;
   out_5834932782085019445[323] = 0;
   out_5834932782085019445[324] = 0;
   out_5834932782085019445[325] = 0;
   out_5834932782085019445[326] = 0;
   out_5834932782085019445[327] = 0;
   out_5834932782085019445[328] = 0;
   out_5834932782085019445[329] = 0;
   out_5834932782085019445[330] = 1;
   out_5834932782085019445[331] = 0;
   out_5834932782085019445[332] = 0;
   out_5834932782085019445[333] = 0;
   out_5834932782085019445[334] = 0;
   out_5834932782085019445[335] = 0;
   out_5834932782085019445[336] = 0;
   out_5834932782085019445[337] = 0;
   out_5834932782085019445[338] = 0;
   out_5834932782085019445[339] = 0;
   out_5834932782085019445[340] = 0;
   out_5834932782085019445[341] = 0;
   out_5834932782085019445[342] = 0;
   out_5834932782085019445[343] = 0;
   out_5834932782085019445[344] = 0;
   out_5834932782085019445[345] = 0;
   out_5834932782085019445[346] = 0;
   out_5834932782085019445[347] = 0;
   out_5834932782085019445[348] = 0;
   out_5834932782085019445[349] = 0;
   out_5834932782085019445[350] = 0;
   out_5834932782085019445[351] = 0;
   out_5834932782085019445[352] = 1;
   out_5834932782085019445[353] = 0;
   out_5834932782085019445[354] = 0;
   out_5834932782085019445[355] = 0;
   out_5834932782085019445[356] = 0;
   out_5834932782085019445[357] = 0;
   out_5834932782085019445[358] = 0;
   out_5834932782085019445[359] = 0;
   out_5834932782085019445[360] = 0;
   out_5834932782085019445[361] = 0;
   out_5834932782085019445[362] = 0;
   out_5834932782085019445[363] = 0;
   out_5834932782085019445[364] = 0;
   out_5834932782085019445[365] = 0;
   out_5834932782085019445[366] = 0;
   out_5834932782085019445[367] = 0;
   out_5834932782085019445[368] = 0;
   out_5834932782085019445[369] = 0;
   out_5834932782085019445[370] = 0;
   out_5834932782085019445[371] = 0;
   out_5834932782085019445[372] = 0;
   out_5834932782085019445[373] = 0;
   out_5834932782085019445[374] = 1;
   out_5834932782085019445[375] = 0;
   out_5834932782085019445[376] = 0;
   out_5834932782085019445[377] = 0;
   out_5834932782085019445[378] = 0;
   out_5834932782085019445[379] = 0;
   out_5834932782085019445[380] = 0;
   out_5834932782085019445[381] = 0;
   out_5834932782085019445[382] = 0;
   out_5834932782085019445[383] = 0;
   out_5834932782085019445[384] = 0;
   out_5834932782085019445[385] = 0;
   out_5834932782085019445[386] = 0;
   out_5834932782085019445[387] = 0;
   out_5834932782085019445[388] = 0;
   out_5834932782085019445[389] = 0;
   out_5834932782085019445[390] = 0;
   out_5834932782085019445[391] = 0;
   out_5834932782085019445[392] = 0;
   out_5834932782085019445[393] = 0;
   out_5834932782085019445[394] = 0;
   out_5834932782085019445[395] = 0;
   out_5834932782085019445[396] = 1;
   out_5834932782085019445[397] = 0;
   out_5834932782085019445[398] = 0;
   out_5834932782085019445[399] = 0;
   out_5834932782085019445[400] = 0;
   out_5834932782085019445[401] = 0;
   out_5834932782085019445[402] = 0;
   out_5834932782085019445[403] = 0;
   out_5834932782085019445[404] = 0;
   out_5834932782085019445[405] = 0;
   out_5834932782085019445[406] = 0;
   out_5834932782085019445[407] = 0;
   out_5834932782085019445[408] = 0;
   out_5834932782085019445[409] = 0;
   out_5834932782085019445[410] = 0;
   out_5834932782085019445[411] = 0;
   out_5834932782085019445[412] = 0;
   out_5834932782085019445[413] = 0;
   out_5834932782085019445[414] = 0;
   out_5834932782085019445[415] = 0;
   out_5834932782085019445[416] = 0;
   out_5834932782085019445[417] = 0;
   out_5834932782085019445[418] = 1;
   out_5834932782085019445[419] = 0;
   out_5834932782085019445[420] = 0;
   out_5834932782085019445[421] = 0;
   out_5834932782085019445[422] = 0;
   out_5834932782085019445[423] = 0;
   out_5834932782085019445[424] = 0;
   out_5834932782085019445[425] = 0;
   out_5834932782085019445[426] = 0;
   out_5834932782085019445[427] = 0;
   out_5834932782085019445[428] = 0;
   out_5834932782085019445[429] = 0;
   out_5834932782085019445[430] = 0;
   out_5834932782085019445[431] = 0;
   out_5834932782085019445[432] = 0;
   out_5834932782085019445[433] = 0;
   out_5834932782085019445[434] = 0;
   out_5834932782085019445[435] = 0;
   out_5834932782085019445[436] = 0;
   out_5834932782085019445[437] = 0;
   out_5834932782085019445[438] = 0;
   out_5834932782085019445[439] = 0;
   out_5834932782085019445[440] = 1;
}
void h_4(double *state, double *unused, double *out_933951982293561690) {
   out_933951982293561690[0] = state[10] + state[13];
   out_933951982293561690[1] = state[11] + state[14];
   out_933951982293561690[2] = state[12] + state[15];
}
void H_4(double *state, double *unused, double *out_8141784331109756621) {
   out_8141784331109756621[0] = 0;
   out_8141784331109756621[1] = 0;
   out_8141784331109756621[2] = 0;
   out_8141784331109756621[3] = 0;
   out_8141784331109756621[4] = 0;
   out_8141784331109756621[5] = 0;
   out_8141784331109756621[6] = 0;
   out_8141784331109756621[7] = 0;
   out_8141784331109756621[8] = 0;
   out_8141784331109756621[9] = 0;
   out_8141784331109756621[10] = 1;
   out_8141784331109756621[11] = 0;
   out_8141784331109756621[12] = 0;
   out_8141784331109756621[13] = 1;
   out_8141784331109756621[14] = 0;
   out_8141784331109756621[15] = 0;
   out_8141784331109756621[16] = 0;
   out_8141784331109756621[17] = 0;
   out_8141784331109756621[18] = 0;
   out_8141784331109756621[19] = 0;
   out_8141784331109756621[20] = 0;
   out_8141784331109756621[21] = 0;
   out_8141784331109756621[22] = 0;
   out_8141784331109756621[23] = 0;
   out_8141784331109756621[24] = 0;
   out_8141784331109756621[25] = 0;
   out_8141784331109756621[26] = 0;
   out_8141784331109756621[27] = 0;
   out_8141784331109756621[28] = 0;
   out_8141784331109756621[29] = 0;
   out_8141784331109756621[30] = 0;
   out_8141784331109756621[31] = 0;
   out_8141784331109756621[32] = 0;
   out_8141784331109756621[33] = 1;
   out_8141784331109756621[34] = 0;
   out_8141784331109756621[35] = 0;
   out_8141784331109756621[36] = 1;
   out_8141784331109756621[37] = 0;
   out_8141784331109756621[38] = 0;
   out_8141784331109756621[39] = 0;
   out_8141784331109756621[40] = 0;
   out_8141784331109756621[41] = 0;
   out_8141784331109756621[42] = 0;
   out_8141784331109756621[43] = 0;
   out_8141784331109756621[44] = 0;
   out_8141784331109756621[45] = 0;
   out_8141784331109756621[46] = 0;
   out_8141784331109756621[47] = 0;
   out_8141784331109756621[48] = 0;
   out_8141784331109756621[49] = 0;
   out_8141784331109756621[50] = 0;
   out_8141784331109756621[51] = 0;
   out_8141784331109756621[52] = 0;
   out_8141784331109756621[53] = 0;
   out_8141784331109756621[54] = 0;
   out_8141784331109756621[55] = 0;
   out_8141784331109756621[56] = 1;
   out_8141784331109756621[57] = 0;
   out_8141784331109756621[58] = 0;
   out_8141784331109756621[59] = 1;
   out_8141784331109756621[60] = 0;
   out_8141784331109756621[61] = 0;
   out_8141784331109756621[62] = 0;
   out_8141784331109756621[63] = 0;
   out_8141784331109756621[64] = 0;
   out_8141784331109756621[65] = 0;
}
void h_9(double *state, double *unused, double *out_5125084311528000235) {
   out_5125084311528000235[0] = state[10];
   out_5125084311528000235[1] = state[11];
   out_5125084311528000235[2] = state[12];
}
void H_9(double *state, double *unused, double *out_8382973977739347266) {
   out_8382973977739347266[0] = 0;
   out_8382973977739347266[1] = 0;
   out_8382973977739347266[2] = 0;
   out_8382973977739347266[3] = 0;
   out_8382973977739347266[4] = 0;
   out_8382973977739347266[5] = 0;
   out_8382973977739347266[6] = 0;
   out_8382973977739347266[7] = 0;
   out_8382973977739347266[8] = 0;
   out_8382973977739347266[9] = 0;
   out_8382973977739347266[10] = 1;
   out_8382973977739347266[11] = 0;
   out_8382973977739347266[12] = 0;
   out_8382973977739347266[13] = 0;
   out_8382973977739347266[14] = 0;
   out_8382973977739347266[15] = 0;
   out_8382973977739347266[16] = 0;
   out_8382973977739347266[17] = 0;
   out_8382973977739347266[18] = 0;
   out_8382973977739347266[19] = 0;
   out_8382973977739347266[20] = 0;
   out_8382973977739347266[21] = 0;
   out_8382973977739347266[22] = 0;
   out_8382973977739347266[23] = 0;
   out_8382973977739347266[24] = 0;
   out_8382973977739347266[25] = 0;
   out_8382973977739347266[26] = 0;
   out_8382973977739347266[27] = 0;
   out_8382973977739347266[28] = 0;
   out_8382973977739347266[29] = 0;
   out_8382973977739347266[30] = 0;
   out_8382973977739347266[31] = 0;
   out_8382973977739347266[32] = 0;
   out_8382973977739347266[33] = 1;
   out_8382973977739347266[34] = 0;
   out_8382973977739347266[35] = 0;
   out_8382973977739347266[36] = 0;
   out_8382973977739347266[37] = 0;
   out_8382973977739347266[38] = 0;
   out_8382973977739347266[39] = 0;
   out_8382973977739347266[40] = 0;
   out_8382973977739347266[41] = 0;
   out_8382973977739347266[42] = 0;
   out_8382973977739347266[43] = 0;
   out_8382973977739347266[44] = 0;
   out_8382973977739347266[45] = 0;
   out_8382973977739347266[46] = 0;
   out_8382973977739347266[47] = 0;
   out_8382973977739347266[48] = 0;
   out_8382973977739347266[49] = 0;
   out_8382973977739347266[50] = 0;
   out_8382973977739347266[51] = 0;
   out_8382973977739347266[52] = 0;
   out_8382973977739347266[53] = 0;
   out_8382973977739347266[54] = 0;
   out_8382973977739347266[55] = 0;
   out_8382973977739347266[56] = 1;
   out_8382973977739347266[57] = 0;
   out_8382973977739347266[58] = 0;
   out_8382973977739347266[59] = 0;
   out_8382973977739347266[60] = 0;
   out_8382973977739347266[61] = 0;
   out_8382973977739347266[62] = 0;
   out_8382973977739347266[63] = 0;
   out_8382973977739347266[64] = 0;
   out_8382973977739347266[65] = 0;
}
void h_10(double *state, double *unused, double *out_6938653177338759794) {
   out_6938653177338759794[0] = 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0] + state[16] + state[19];
   out_6938653177338759794[1] = 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1] + state[17] + state[20];
   out_6938653177338759794[2] = 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[2] + state[18] + state[21];
}
void H_10(double *state, double *unused, double *out_8538141439590197972) {
   out_8538141439590197972[0] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*pow(state[0], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_8538141439590197972[1] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_8538141439590197972[2] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[2];
   out_8538141439590197972[3] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_8538141439590197972[4] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_8538141439590197972[5] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_8538141439590197972[6] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_8538141439590197972[7] = 0;
   out_8538141439590197972[8] = 0;
   out_8538141439590197972[9] = 0;
   out_8538141439590197972[10] = 0;
   out_8538141439590197972[11] = 0;
   out_8538141439590197972[12] = 0;
   out_8538141439590197972[13] = 0;
   out_8538141439590197972[14] = 0;
   out_8538141439590197972[15] = 0;
   out_8538141439590197972[16] = 1;
   out_8538141439590197972[17] = 0;
   out_8538141439590197972[18] = 0;
   out_8538141439590197972[19] = 1;
   out_8538141439590197972[20] = 0;
   out_8538141439590197972[21] = 0;
   out_8538141439590197972[22] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_8538141439590197972[23] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*pow(state[1], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_8538141439590197972[24] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1]*state[2];
   out_8538141439590197972[25] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_8538141439590197972[26] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_8538141439590197972[27] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_8538141439590197972[28] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_8538141439590197972[29] = 0;
   out_8538141439590197972[30] = 0;
   out_8538141439590197972[31] = 0;
   out_8538141439590197972[32] = 0;
   out_8538141439590197972[33] = 0;
   out_8538141439590197972[34] = 0;
   out_8538141439590197972[35] = 0;
   out_8538141439590197972[36] = 0;
   out_8538141439590197972[37] = 0;
   out_8538141439590197972[38] = 0;
   out_8538141439590197972[39] = 1;
   out_8538141439590197972[40] = 0;
   out_8538141439590197972[41] = 0;
   out_8538141439590197972[42] = 1;
   out_8538141439590197972[43] = 0;
   out_8538141439590197972[44] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[0]*state[2];
   out_8538141439590197972[45] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[1]*state[2];
   out_8538141439590197972[46] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*pow(state[2], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_8538141439590197972[47] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_8538141439590197972[48] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_8538141439590197972[49] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_8538141439590197972[50] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_8538141439590197972[51] = 0;
   out_8538141439590197972[52] = 0;
   out_8538141439590197972[53] = 0;
   out_8538141439590197972[54] = 0;
   out_8538141439590197972[55] = 0;
   out_8538141439590197972[56] = 0;
   out_8538141439590197972[57] = 0;
   out_8538141439590197972[58] = 0;
   out_8538141439590197972[59] = 0;
   out_8538141439590197972[60] = 0;
   out_8538141439590197972[61] = 0;
   out_8538141439590197972[62] = 1;
   out_8538141439590197972[63] = 0;
   out_8538141439590197972[64] = 0;
   out_8538141439590197972[65] = 1;
}
void h_12(double *state, double *unused, double *out_5441453947133532954) {
   out_5441453947133532954[0] = state[0];
   out_5441453947133532954[1] = state[1];
   out_5441453947133532954[2] = state[2];
}
void H_12(double *state, double *unused, double *out_5285503334567833200) {
   out_5285503334567833200[0] = 1;
   out_5285503334567833200[1] = 0;
   out_5285503334567833200[2] = 0;
   out_5285503334567833200[3] = 0;
   out_5285503334567833200[4] = 0;
   out_5285503334567833200[5] = 0;
   out_5285503334567833200[6] = 0;
   out_5285503334567833200[7] = 0;
   out_5285503334567833200[8] = 0;
   out_5285503334567833200[9] = 0;
   out_5285503334567833200[10] = 0;
   out_5285503334567833200[11] = 0;
   out_5285503334567833200[12] = 0;
   out_5285503334567833200[13] = 0;
   out_5285503334567833200[14] = 0;
   out_5285503334567833200[15] = 0;
   out_5285503334567833200[16] = 0;
   out_5285503334567833200[17] = 0;
   out_5285503334567833200[18] = 0;
   out_5285503334567833200[19] = 0;
   out_5285503334567833200[20] = 0;
   out_5285503334567833200[21] = 0;
   out_5285503334567833200[22] = 0;
   out_5285503334567833200[23] = 1;
   out_5285503334567833200[24] = 0;
   out_5285503334567833200[25] = 0;
   out_5285503334567833200[26] = 0;
   out_5285503334567833200[27] = 0;
   out_5285503334567833200[28] = 0;
   out_5285503334567833200[29] = 0;
   out_5285503334567833200[30] = 0;
   out_5285503334567833200[31] = 0;
   out_5285503334567833200[32] = 0;
   out_5285503334567833200[33] = 0;
   out_5285503334567833200[34] = 0;
   out_5285503334567833200[35] = 0;
   out_5285503334567833200[36] = 0;
   out_5285503334567833200[37] = 0;
   out_5285503334567833200[38] = 0;
   out_5285503334567833200[39] = 0;
   out_5285503334567833200[40] = 0;
   out_5285503334567833200[41] = 0;
   out_5285503334567833200[42] = 0;
   out_5285503334567833200[43] = 0;
   out_5285503334567833200[44] = 0;
   out_5285503334567833200[45] = 0;
   out_5285503334567833200[46] = 1;
   out_5285503334567833200[47] = 0;
   out_5285503334567833200[48] = 0;
   out_5285503334567833200[49] = 0;
   out_5285503334567833200[50] = 0;
   out_5285503334567833200[51] = 0;
   out_5285503334567833200[52] = 0;
   out_5285503334567833200[53] = 0;
   out_5285503334567833200[54] = 0;
   out_5285503334567833200[55] = 0;
   out_5285503334567833200[56] = 0;
   out_5285503334567833200[57] = 0;
   out_5285503334567833200[58] = 0;
   out_5285503334567833200[59] = 0;
   out_5285503334567833200[60] = 0;
   out_5285503334567833200[61] = 0;
   out_5285503334567833200[62] = 0;
   out_5285503334567833200[63] = 0;
   out_5285503334567833200[64] = 0;
   out_5285503334567833200[65] = 0;
}
void h_35(double *state, double *unused, double *out_5594073681285733482) {
   out_5594073681285733482[0] = state[7];
   out_5594073681285733482[1] = state[8];
   out_5594073681285733482[2] = state[9];
}
void H_35(double *state, double *unused, double *out_2539940302242819491) {
   out_2539940302242819491[0] = 0;
   out_2539940302242819491[1] = 0;
   out_2539940302242819491[2] = 0;
   out_2539940302242819491[3] = 0;
   out_2539940302242819491[4] = 0;
   out_2539940302242819491[5] = 0;
   out_2539940302242819491[6] = 0;
   out_2539940302242819491[7] = 1;
   out_2539940302242819491[8] = 0;
   out_2539940302242819491[9] = 0;
   out_2539940302242819491[10] = 0;
   out_2539940302242819491[11] = 0;
   out_2539940302242819491[12] = 0;
   out_2539940302242819491[13] = 0;
   out_2539940302242819491[14] = 0;
   out_2539940302242819491[15] = 0;
   out_2539940302242819491[16] = 0;
   out_2539940302242819491[17] = 0;
   out_2539940302242819491[18] = 0;
   out_2539940302242819491[19] = 0;
   out_2539940302242819491[20] = 0;
   out_2539940302242819491[21] = 0;
   out_2539940302242819491[22] = 0;
   out_2539940302242819491[23] = 0;
   out_2539940302242819491[24] = 0;
   out_2539940302242819491[25] = 0;
   out_2539940302242819491[26] = 0;
   out_2539940302242819491[27] = 0;
   out_2539940302242819491[28] = 0;
   out_2539940302242819491[29] = 0;
   out_2539940302242819491[30] = 1;
   out_2539940302242819491[31] = 0;
   out_2539940302242819491[32] = 0;
   out_2539940302242819491[33] = 0;
   out_2539940302242819491[34] = 0;
   out_2539940302242819491[35] = 0;
   out_2539940302242819491[36] = 0;
   out_2539940302242819491[37] = 0;
   out_2539940302242819491[38] = 0;
   out_2539940302242819491[39] = 0;
   out_2539940302242819491[40] = 0;
   out_2539940302242819491[41] = 0;
   out_2539940302242819491[42] = 0;
   out_2539940302242819491[43] = 0;
   out_2539940302242819491[44] = 0;
   out_2539940302242819491[45] = 0;
   out_2539940302242819491[46] = 0;
   out_2539940302242819491[47] = 0;
   out_2539940302242819491[48] = 0;
   out_2539940302242819491[49] = 0;
   out_2539940302242819491[50] = 0;
   out_2539940302242819491[51] = 0;
   out_2539940302242819491[52] = 0;
   out_2539940302242819491[53] = 1;
   out_2539940302242819491[54] = 0;
   out_2539940302242819491[55] = 0;
   out_2539940302242819491[56] = 0;
   out_2539940302242819491[57] = 0;
   out_2539940302242819491[58] = 0;
   out_2539940302242819491[59] = 0;
   out_2539940302242819491[60] = 0;
   out_2539940302242819491[61] = 0;
   out_2539940302242819491[62] = 0;
   out_2539940302242819491[63] = 0;
   out_2539940302242819491[64] = 0;
   out_2539940302242819491[65] = 0;
}
void h_32(double *state, double *unused, double *out_6048972135051726880) {
   out_6048972135051726880[0] = state[3];
   out_6048972135051726880[1] = state[4];
   out_6048972135051726880[2] = state[5];
   out_6048972135051726880[3] = state[6];
}
void H_32(double *state, double *unused, double *out_3261364069964793067) {
   out_3261364069964793067[0] = 0;
   out_3261364069964793067[1] = 0;
   out_3261364069964793067[2] = 0;
   out_3261364069964793067[3] = 1;
   out_3261364069964793067[4] = 0;
   out_3261364069964793067[5] = 0;
   out_3261364069964793067[6] = 0;
   out_3261364069964793067[7] = 0;
   out_3261364069964793067[8] = 0;
   out_3261364069964793067[9] = 0;
   out_3261364069964793067[10] = 0;
   out_3261364069964793067[11] = 0;
   out_3261364069964793067[12] = 0;
   out_3261364069964793067[13] = 0;
   out_3261364069964793067[14] = 0;
   out_3261364069964793067[15] = 0;
   out_3261364069964793067[16] = 0;
   out_3261364069964793067[17] = 0;
   out_3261364069964793067[18] = 0;
   out_3261364069964793067[19] = 0;
   out_3261364069964793067[20] = 0;
   out_3261364069964793067[21] = 0;
   out_3261364069964793067[22] = 0;
   out_3261364069964793067[23] = 0;
   out_3261364069964793067[24] = 0;
   out_3261364069964793067[25] = 0;
   out_3261364069964793067[26] = 1;
   out_3261364069964793067[27] = 0;
   out_3261364069964793067[28] = 0;
   out_3261364069964793067[29] = 0;
   out_3261364069964793067[30] = 0;
   out_3261364069964793067[31] = 0;
   out_3261364069964793067[32] = 0;
   out_3261364069964793067[33] = 0;
   out_3261364069964793067[34] = 0;
   out_3261364069964793067[35] = 0;
   out_3261364069964793067[36] = 0;
   out_3261364069964793067[37] = 0;
   out_3261364069964793067[38] = 0;
   out_3261364069964793067[39] = 0;
   out_3261364069964793067[40] = 0;
   out_3261364069964793067[41] = 0;
   out_3261364069964793067[42] = 0;
   out_3261364069964793067[43] = 0;
   out_3261364069964793067[44] = 0;
   out_3261364069964793067[45] = 0;
   out_3261364069964793067[46] = 0;
   out_3261364069964793067[47] = 0;
   out_3261364069964793067[48] = 0;
   out_3261364069964793067[49] = 1;
   out_3261364069964793067[50] = 0;
   out_3261364069964793067[51] = 0;
   out_3261364069964793067[52] = 0;
   out_3261364069964793067[53] = 0;
   out_3261364069964793067[54] = 0;
   out_3261364069964793067[55] = 0;
   out_3261364069964793067[56] = 0;
   out_3261364069964793067[57] = 0;
   out_3261364069964793067[58] = 0;
   out_3261364069964793067[59] = 0;
   out_3261364069964793067[60] = 0;
   out_3261364069964793067[61] = 0;
   out_3261364069964793067[62] = 0;
   out_3261364069964793067[63] = 0;
   out_3261364069964793067[64] = 0;
   out_3261364069964793067[65] = 0;
   out_3261364069964793067[66] = 0;
   out_3261364069964793067[67] = 0;
   out_3261364069964793067[68] = 0;
   out_3261364069964793067[69] = 0;
   out_3261364069964793067[70] = 0;
   out_3261364069964793067[71] = 0;
   out_3261364069964793067[72] = 1;
   out_3261364069964793067[73] = 0;
   out_3261364069964793067[74] = 0;
   out_3261364069964793067[75] = 0;
   out_3261364069964793067[76] = 0;
   out_3261364069964793067[77] = 0;
   out_3261364069964793067[78] = 0;
   out_3261364069964793067[79] = 0;
   out_3261364069964793067[80] = 0;
   out_3261364069964793067[81] = 0;
   out_3261364069964793067[82] = 0;
   out_3261364069964793067[83] = 0;
   out_3261364069964793067[84] = 0;
   out_3261364069964793067[85] = 0;
   out_3261364069964793067[86] = 0;
   out_3261364069964793067[87] = 0;
}
void h_13(double *state, double *unused, double *out_3771920064741574164) {
   out_3771920064741574164[0] = (-2*state[3]*state[5] + 2*state[4]*state[6])*state[9] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[8] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[7];
   out_3771920064741574164[1] = (2*state[3]*state[4] + 2*state[5]*state[6])*state[9] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[7] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[8];
   out_3771920064741574164[2] = (-2*state[3]*state[4] + 2*state[5]*state[6])*state[8] + (2*state[3]*state[5] + 2*state[4]*state[6])*state[7] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[9];
}
void H_13(double *state, double *unused, double *out_1957106560879512810) {
   out_1957106560879512810[0] = 0;
   out_1957106560879512810[1] = 0;
   out_1957106560879512810[2] = 0;
   out_1957106560879512810[3] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_1957106560879512810[4] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_1957106560879512810[5] = -2*state[3]*state[9] + 2*state[4]*state[8] - 2*state[5]*state[7];
   out_1957106560879512810[6] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_1957106560879512810[7] = pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2);
   out_1957106560879512810[8] = 2*state[3]*state[6] + 2*state[4]*state[5];
   out_1957106560879512810[9] = -2*state[3]*state[5] + 2*state[4]*state[6];
   out_1957106560879512810[10] = 0;
   out_1957106560879512810[11] = 0;
   out_1957106560879512810[12] = 0;
   out_1957106560879512810[13] = 0;
   out_1957106560879512810[14] = 0;
   out_1957106560879512810[15] = 0;
   out_1957106560879512810[16] = 0;
   out_1957106560879512810[17] = 0;
   out_1957106560879512810[18] = 0;
   out_1957106560879512810[19] = 0;
   out_1957106560879512810[20] = 0;
   out_1957106560879512810[21] = 0;
   out_1957106560879512810[22] = 0;
   out_1957106560879512810[23] = 0;
   out_1957106560879512810[24] = 0;
   out_1957106560879512810[25] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_1957106560879512810[26] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_1957106560879512810[27] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_1957106560879512810[28] = -2*state[3]*state[7] + 2*state[5]*state[9] - 2*state[6]*state[8];
   out_1957106560879512810[29] = -2*state[3]*state[6] + 2*state[4]*state[5];
   out_1957106560879512810[30] = pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2);
   out_1957106560879512810[31] = 2*state[3]*state[4] + 2*state[5]*state[6];
   out_1957106560879512810[32] = 0;
   out_1957106560879512810[33] = 0;
   out_1957106560879512810[34] = 0;
   out_1957106560879512810[35] = 0;
   out_1957106560879512810[36] = 0;
   out_1957106560879512810[37] = 0;
   out_1957106560879512810[38] = 0;
   out_1957106560879512810[39] = 0;
   out_1957106560879512810[40] = 0;
   out_1957106560879512810[41] = 0;
   out_1957106560879512810[42] = 0;
   out_1957106560879512810[43] = 0;
   out_1957106560879512810[44] = 0;
   out_1957106560879512810[45] = 0;
   out_1957106560879512810[46] = 0;
   out_1957106560879512810[47] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_1957106560879512810[48] = -2*state[3]*state[8] - 2*state[4]*state[9] + 2*state[6]*state[7];
   out_1957106560879512810[49] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_1957106560879512810[50] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_1957106560879512810[51] = 2*state[3]*state[5] + 2*state[4]*state[6];
   out_1957106560879512810[52] = -2*state[3]*state[4] + 2*state[5]*state[6];
   out_1957106560879512810[53] = pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2);
   out_1957106560879512810[54] = 0;
   out_1957106560879512810[55] = 0;
   out_1957106560879512810[56] = 0;
   out_1957106560879512810[57] = 0;
   out_1957106560879512810[58] = 0;
   out_1957106560879512810[59] = 0;
   out_1957106560879512810[60] = 0;
   out_1957106560879512810[61] = 0;
   out_1957106560879512810[62] = 0;
   out_1957106560879512810[63] = 0;
   out_1957106560879512810[64] = 0;
   out_1957106560879512810[65] = 0;
}
void h_14(double *state, double *unused, double *out_5125084311528000235) {
   out_5125084311528000235[0] = state[10];
   out_5125084311528000235[1] = state[11];
   out_5125084311528000235[2] = state[12];
}
void H_14(double *state, double *unused, double *out_8382973977739347266) {
   out_8382973977739347266[0] = 0;
   out_8382973977739347266[1] = 0;
   out_8382973977739347266[2] = 0;
   out_8382973977739347266[3] = 0;
   out_8382973977739347266[4] = 0;
   out_8382973977739347266[5] = 0;
   out_8382973977739347266[6] = 0;
   out_8382973977739347266[7] = 0;
   out_8382973977739347266[8] = 0;
   out_8382973977739347266[9] = 0;
   out_8382973977739347266[10] = 1;
   out_8382973977739347266[11] = 0;
   out_8382973977739347266[12] = 0;
   out_8382973977739347266[13] = 0;
   out_8382973977739347266[14] = 0;
   out_8382973977739347266[15] = 0;
   out_8382973977739347266[16] = 0;
   out_8382973977739347266[17] = 0;
   out_8382973977739347266[18] = 0;
   out_8382973977739347266[19] = 0;
   out_8382973977739347266[20] = 0;
   out_8382973977739347266[21] = 0;
   out_8382973977739347266[22] = 0;
   out_8382973977739347266[23] = 0;
   out_8382973977739347266[24] = 0;
   out_8382973977739347266[25] = 0;
   out_8382973977739347266[26] = 0;
   out_8382973977739347266[27] = 0;
   out_8382973977739347266[28] = 0;
   out_8382973977739347266[29] = 0;
   out_8382973977739347266[30] = 0;
   out_8382973977739347266[31] = 0;
   out_8382973977739347266[32] = 0;
   out_8382973977739347266[33] = 1;
   out_8382973977739347266[34] = 0;
   out_8382973977739347266[35] = 0;
   out_8382973977739347266[36] = 0;
   out_8382973977739347266[37] = 0;
   out_8382973977739347266[38] = 0;
   out_8382973977739347266[39] = 0;
   out_8382973977739347266[40] = 0;
   out_8382973977739347266[41] = 0;
   out_8382973977739347266[42] = 0;
   out_8382973977739347266[43] = 0;
   out_8382973977739347266[44] = 0;
   out_8382973977739347266[45] = 0;
   out_8382973977739347266[46] = 0;
   out_8382973977739347266[47] = 0;
   out_8382973977739347266[48] = 0;
   out_8382973977739347266[49] = 0;
   out_8382973977739347266[50] = 0;
   out_8382973977739347266[51] = 0;
   out_8382973977739347266[52] = 0;
   out_8382973977739347266[53] = 0;
   out_8382973977739347266[54] = 0;
   out_8382973977739347266[55] = 0;
   out_8382973977739347266[56] = 1;
   out_8382973977739347266[57] = 0;
   out_8382973977739347266[58] = 0;
   out_8382973977739347266[59] = 0;
   out_8382973977739347266[60] = 0;
   out_8382973977739347266[61] = 0;
   out_8382973977739347266[62] = 0;
   out_8382973977739347266[63] = 0;
   out_8382973977739347266[64] = 0;
   out_8382973977739347266[65] = 0;
}
void h_33(double *state, double *unused, double *out_2812386132205215612) {
   out_2812386132205215612[0] = state[16];
   out_2812386132205215612[1] = state[17];
   out_2812386132205215612[2] = state[18];
}
void H_33(double *state, double *unused, double *out_3787740680588330015) {
   out_3787740680588330015[0] = 0;
   out_3787740680588330015[1] = 0;
   out_3787740680588330015[2] = 0;
   out_3787740680588330015[3] = 0;
   out_3787740680588330015[4] = 0;
   out_3787740680588330015[5] = 0;
   out_3787740680588330015[6] = 0;
   out_3787740680588330015[7] = 0;
   out_3787740680588330015[8] = 0;
   out_3787740680588330015[9] = 0;
   out_3787740680588330015[10] = 0;
   out_3787740680588330015[11] = 0;
   out_3787740680588330015[12] = 0;
   out_3787740680588330015[13] = 0;
   out_3787740680588330015[14] = 0;
   out_3787740680588330015[15] = 0;
   out_3787740680588330015[16] = 1;
   out_3787740680588330015[17] = 0;
   out_3787740680588330015[18] = 0;
   out_3787740680588330015[19] = 0;
   out_3787740680588330015[20] = 0;
   out_3787740680588330015[21] = 0;
   out_3787740680588330015[22] = 0;
   out_3787740680588330015[23] = 0;
   out_3787740680588330015[24] = 0;
   out_3787740680588330015[25] = 0;
   out_3787740680588330015[26] = 0;
   out_3787740680588330015[27] = 0;
   out_3787740680588330015[28] = 0;
   out_3787740680588330015[29] = 0;
   out_3787740680588330015[30] = 0;
   out_3787740680588330015[31] = 0;
   out_3787740680588330015[32] = 0;
   out_3787740680588330015[33] = 0;
   out_3787740680588330015[34] = 0;
   out_3787740680588330015[35] = 0;
   out_3787740680588330015[36] = 0;
   out_3787740680588330015[37] = 0;
   out_3787740680588330015[38] = 0;
   out_3787740680588330015[39] = 1;
   out_3787740680588330015[40] = 0;
   out_3787740680588330015[41] = 0;
   out_3787740680588330015[42] = 0;
   out_3787740680588330015[43] = 0;
   out_3787740680588330015[44] = 0;
   out_3787740680588330015[45] = 0;
   out_3787740680588330015[46] = 0;
   out_3787740680588330015[47] = 0;
   out_3787740680588330015[48] = 0;
   out_3787740680588330015[49] = 0;
   out_3787740680588330015[50] = 0;
   out_3787740680588330015[51] = 0;
   out_3787740680588330015[52] = 0;
   out_3787740680588330015[53] = 0;
   out_3787740680588330015[54] = 0;
   out_3787740680588330015[55] = 0;
   out_3787740680588330015[56] = 0;
   out_3787740680588330015[57] = 0;
   out_3787740680588330015[58] = 0;
   out_3787740680588330015[59] = 0;
   out_3787740680588330015[60] = 0;
   out_3787740680588330015[61] = 0;
   out_3787740680588330015[62] = 1;
   out_3787740680588330015[63] = 0;
   out_3787740680588330015[64] = 0;
   out_3787740680588330015[65] = 0;
}
#include <eigen3/Eigen/Dense>
#include <iostream>

typedef Eigen::Matrix<double, DIM, DIM, Eigen::RowMajor> DDM;
typedef Eigen::Matrix<double, EDIM, EDIM, Eigen::RowMajor> EEM;
typedef Eigen::Matrix<double, DIM, EDIM, Eigen::RowMajor> DEM;

void predict(double *in_x, double *in_P, double *in_Q, double dt) {
  typedef Eigen::Matrix<double, MEDIM, MEDIM, Eigen::RowMajor> RRM;

  double nx[DIM] = {0};
  double in_F[EDIM*EDIM] = {0};

  // functions from sympy
  f_fun(in_x, dt, nx);
  F_fun(in_x, dt, in_F);


  EEM F(in_F);
  EEM P(in_P);
  EEM Q(in_Q);

  RRM F_main = F.topLeftCorner(MEDIM, MEDIM);
  P.topLeftCorner(MEDIM, MEDIM) = (F_main * P.topLeftCorner(MEDIM, MEDIM)) * F_main.transpose();
  P.topRightCorner(MEDIM, EDIM - MEDIM) = F_main * P.topRightCorner(MEDIM, EDIM - MEDIM);
  P.bottomLeftCorner(EDIM - MEDIM, MEDIM) = P.bottomLeftCorner(EDIM - MEDIM, MEDIM) * F_main.transpose();

  P = P + dt*Q;

  // copy out state
  memcpy(in_x, nx, DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
}

// note: extra_args dim only correct when null space projecting
// otherwise 1
template <int ZDIM, int EADIM, bool MAHA_TEST>
void update(double *in_x, double *in_P, Hfun h_fun, Hfun H_fun, Hfun Hea_fun, double *in_z, double *in_R, double *in_ea, double MAHA_THRESHOLD) {
  typedef Eigen::Matrix<double, ZDIM, ZDIM, Eigen::RowMajor> ZZM;
  typedef Eigen::Matrix<double, ZDIM, DIM, Eigen::RowMajor> ZDM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, EDIM, Eigen::RowMajor> XEM;
  //typedef Eigen::Matrix<double, EDIM, ZDIM, Eigen::RowMajor> EZM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, 1> X1M;
  typedef Eigen::Matrix<double, Eigen::Dynamic, Eigen::Dynamic, Eigen::RowMajor> XXM;

  double in_hx[ZDIM] = {0};
  double in_H[ZDIM * DIM] = {0};
  double in_H_mod[EDIM * DIM] = {0};
  double delta_x[EDIM] = {0};
  double x_new[DIM] = {0};


  // state x, P
  Eigen::Matrix<double, ZDIM, 1> z(in_z);
  EEM P(in_P);
  ZZM pre_R(in_R);

  // functions from sympy
  h_fun(in_x, in_ea, in_hx);
  H_fun(in_x, in_ea, in_H);
  ZDM pre_H(in_H);

  // get y (y = z - hx)
  Eigen::Matrix<double, ZDIM, 1> pre_y(in_hx); pre_y = z - pre_y;
  X1M y; XXM H; XXM R;
  if (Hea_fun){
    typedef Eigen::Matrix<double, ZDIM, EADIM, Eigen::RowMajor> ZAM;
    double in_Hea[ZDIM * EADIM] = {0};
    Hea_fun(in_x, in_ea, in_Hea);
    ZAM Hea(in_Hea);
    XXM A = Hea.transpose().fullPivLu().kernel();


    y = A.transpose() * pre_y;
    H = A.transpose() * pre_H;
    R = A.transpose() * pre_R * A;
  } else {
    y = pre_y;
    H = pre_H;
    R = pre_R;
  }
  // get modified H
  H_mod_fun(in_x, in_H_mod);
  DEM H_mod(in_H_mod);
  XEM H_err = H * H_mod;

  // Do mahalobis distance test
  if (MAHA_TEST){
    XXM a = (H_err * P * H_err.transpose() + R).inverse();
    double maha_dist = y.transpose() * a * y;
    if (maha_dist > MAHA_THRESHOLD){
      R = 1.0e16 * R;
    }
  }

  // Outlier resilient weighting
  double weight = 1;//(1.5)/(1 + y.squaredNorm()/R.sum());

  // kalman gains and I_KH
  XXM S = ((H_err * P) * H_err.transpose()) + R/weight;
  XEM KT = S.fullPivLu().solve(H_err * P.transpose());
  //EZM K = KT.transpose(); TODO: WHY DOES THIS NOT COMPILE?
  //EZM K = S.fullPivLu().solve(H_err * P.transpose()).transpose();
  //std::cout << "Here is the matrix rot:\n" << K << std::endl;
  EEM I_KH = Eigen::Matrix<double, EDIM, EDIM>::Identity() - (KT.transpose() * H_err);

  // update state by injecting dx
  Eigen::Matrix<double, EDIM, 1> dx(delta_x);
  dx  = (KT.transpose() * y);
  memcpy(delta_x, dx.data(), EDIM * sizeof(double));
  err_fun(in_x, delta_x, x_new);
  Eigen::Matrix<double, DIM, 1> x(x_new);

  // update cov
  P = ((I_KH * P) * I_KH.transpose()) + ((KT.transpose() * R) * KT);

  // copy out state
  memcpy(in_x, x.data(), DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
  memcpy(in_z, y.data(), y.rows() * sizeof(double));
}




}
extern "C" {

void live_update_4(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_4, H_4, NULL, in_z, in_R, in_ea, MAHA_THRESH_4);
}
void live_update_9(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_9, H_9, NULL, in_z, in_R, in_ea, MAHA_THRESH_9);
}
void live_update_10(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_10, H_10, NULL, in_z, in_R, in_ea, MAHA_THRESH_10);
}
void live_update_12(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_12, H_12, NULL, in_z, in_R, in_ea, MAHA_THRESH_12);
}
void live_update_35(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_35, H_35, NULL, in_z, in_R, in_ea, MAHA_THRESH_35);
}
void live_update_32(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<4, 3, 0>(in_x, in_P, h_32, H_32, NULL, in_z, in_R, in_ea, MAHA_THRESH_32);
}
void live_update_13(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_13, H_13, NULL, in_z, in_R, in_ea, MAHA_THRESH_13);
}
void live_update_14(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_14, H_14, NULL, in_z, in_R, in_ea, MAHA_THRESH_14);
}
void live_update_33(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_33, H_33, NULL, in_z, in_R, in_ea, MAHA_THRESH_33);
}
void live_H(double *in_vec, double *out_1931533319113004099) {
  H(in_vec, out_1931533319113004099);
}
void live_err_fun(double *nom_x, double *delta_x, double *out_5009011685682981123) {
  err_fun(nom_x, delta_x, out_5009011685682981123);
}
void live_inv_err_fun(double *nom_x, double *true_x, double *out_2335008714666607763) {
  inv_err_fun(nom_x, true_x, out_2335008714666607763);
}
void live_H_mod_fun(double *state, double *out_4238032830930582124) {
  H_mod_fun(state, out_4238032830930582124);
}
void live_f_fun(double *state, double dt, double *out_7585063412439571151) {
  f_fun(state,  dt, out_7585063412439571151);
}
void live_F_fun(double *state, double dt, double *out_5834932782085019445) {
  F_fun(state,  dt, out_5834932782085019445);
}
void live_h_4(double *state, double *unused, double *out_933951982293561690) {
  h_4(state, unused, out_933951982293561690);
}
void live_H_4(double *state, double *unused, double *out_8141784331109756621) {
  H_4(state, unused, out_8141784331109756621);
}
void live_h_9(double *state, double *unused, double *out_5125084311528000235) {
  h_9(state, unused, out_5125084311528000235);
}
void live_H_9(double *state, double *unused, double *out_8382973977739347266) {
  H_9(state, unused, out_8382973977739347266);
}
void live_h_10(double *state, double *unused, double *out_6938653177338759794) {
  h_10(state, unused, out_6938653177338759794);
}
void live_H_10(double *state, double *unused, double *out_8538141439590197972) {
  H_10(state, unused, out_8538141439590197972);
}
void live_h_12(double *state, double *unused, double *out_5441453947133532954) {
  h_12(state, unused, out_5441453947133532954);
}
void live_H_12(double *state, double *unused, double *out_5285503334567833200) {
  H_12(state, unused, out_5285503334567833200);
}
void live_h_35(double *state, double *unused, double *out_5594073681285733482) {
  h_35(state, unused, out_5594073681285733482);
}
void live_H_35(double *state, double *unused, double *out_2539940302242819491) {
  H_35(state, unused, out_2539940302242819491);
}
void live_h_32(double *state, double *unused, double *out_6048972135051726880) {
  h_32(state, unused, out_6048972135051726880);
}
void live_H_32(double *state, double *unused, double *out_3261364069964793067) {
  H_32(state, unused, out_3261364069964793067);
}
void live_h_13(double *state, double *unused, double *out_3771920064741574164) {
  h_13(state, unused, out_3771920064741574164);
}
void live_H_13(double *state, double *unused, double *out_1957106560879512810) {
  H_13(state, unused, out_1957106560879512810);
}
void live_h_14(double *state, double *unused, double *out_5125084311528000235) {
  h_14(state, unused, out_5125084311528000235);
}
void live_H_14(double *state, double *unused, double *out_8382973977739347266) {
  H_14(state, unused, out_8382973977739347266);
}
void live_h_33(double *state, double *unused, double *out_2812386132205215612) {
  h_33(state, unused, out_2812386132205215612);
}
void live_H_33(double *state, double *unused, double *out_3787740680588330015) {
  H_33(state, unused, out_3787740680588330015);
}
void live_predict(double *in_x, double *in_P, double *in_Q, double dt) {
  predict(in_x, in_P, in_Q, dt);
}
}

const EKF live = {
  .name = "live",
  .kinds = { 4, 9, 10, 12, 35, 32, 13, 14, 33 },
  .feature_kinds = {  },
  .f_fun = live_f_fun,
  .F_fun = live_F_fun,
  .err_fun = live_err_fun,
  .inv_err_fun = live_inv_err_fun,
  .H_mod_fun = live_H_mod_fun,
  .predict = live_predict,
  .hs = {
    { 4, live_h_4 },
    { 9, live_h_9 },
    { 10, live_h_10 },
    { 12, live_h_12 },
    { 35, live_h_35 },
    { 32, live_h_32 },
    { 13, live_h_13 },
    { 14, live_h_14 },
    { 33, live_h_33 },
  },
  .Hs = {
    { 4, live_H_4 },
    { 9, live_H_9 },
    { 10, live_H_10 },
    { 12, live_H_12 },
    { 35, live_H_35 },
    { 32, live_H_32 },
    { 13, live_H_13 },
    { 14, live_H_14 },
    { 33, live_H_33 },
  },
  .updates = {
    { 4, live_update_4 },
    { 9, live_update_9 },
    { 10, live_update_10 },
    { 12, live_update_12 },
    { 35, live_update_35 },
    { 32, live_update_32 },
    { 13, live_update_13 },
    { 14, live_update_14 },
    { 33, live_update_33 },
  },
  .Hes = {
  },
  .sets = {
  },
  .extra_routines = {
    { "H", live_H },
  },
};

ekf_lib_init(live)
