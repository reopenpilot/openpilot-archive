#include "live.h"

namespace {
#define DIM 22
#define EDIM 21
#define MEDIM 21
typedef void (*Hfun)(double *, double *, double *);
const static double MAHA_THRESH_4 = 7.814727903251177;
const static double MAHA_THRESH_9 = 7.814727903251177;
const static double MAHA_THRESH_10 = 7.814727903251177;
const static double MAHA_THRESH_12 = 7.814727903251177;
const static double MAHA_THRESH_35 = 7.814727903251177;
const static double MAHA_THRESH_32 = 9.487729036781154;
const static double MAHA_THRESH_13 = 7.814727903251177;
const static double MAHA_THRESH_14 = 7.814727903251177;
const static double MAHA_THRESH_33 = 7.814727903251177;

/******************************************************************************
 *                       Code generated with SymPy 1.12                       *
 *                                                                            *
 *              See http://www.sympy.org/ for more information.               *
 *                                                                            *
 *                         This file is part of 'ekf'                         *
 ******************************************************************************/
void H(double *in_vec, double *out_5146098374437838409) {
   out_5146098374437838409[0] = 0;
   out_5146098374437838409[1] = -sin(in_vec[1])*sin(in_vec[2])*in_vec[4] - sin(in_vec[1])*cos(in_vec[2])*in_vec[3] - cos(in_vec[1])*in_vec[5];
   out_5146098374437838409[2] = -sin(in_vec[2])*cos(in_vec[1])*in_vec[3] + cos(in_vec[1])*cos(in_vec[2])*in_vec[4];
   out_5146098374437838409[3] = cos(in_vec[1])*cos(in_vec[2]);
   out_5146098374437838409[4] = sin(in_vec[2])*cos(in_vec[1]);
   out_5146098374437838409[5] = -sin(in_vec[1]);
   out_5146098374437838409[6] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (-sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_5146098374437838409[7] = -sin(in_vec[0])*sin(in_vec[1])*in_vec[5] + sin(in_vec[0])*sin(in_vec[2])*cos(in_vec[1])*in_vec[4] + sin(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_5146098374437838409[8] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]))*in_vec[4];
   out_5146098374437838409[9] = sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]);
   out_5146098374437838409[10] = sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) + cos(in_vec[0])*cos(in_vec[2]);
   out_5146098374437838409[11] = sin(in_vec[0])*cos(in_vec[1]);
   out_5146098374437838409[12] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (-sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) + sin(in_vec[2])*cos(in_vec[0]))*in_vec[3] - sin(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_5146098374437838409[13] = -sin(in_vec[1])*cos(in_vec[0])*in_vec[5] + sin(in_vec[2])*cos(in_vec[0])*cos(in_vec[1])*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_5146098374437838409[14] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (sin(in_vec[0])*cos(in_vec[2]) - sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[3];
   out_5146098374437838409[15] = sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]);
   out_5146098374437838409[16] = -sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]);
   out_5146098374437838409[17] = cos(in_vec[0])*cos(in_vec[1]);
}
void err_fun(double *nom_x, double *delta_x, double *out_4606547918624798595) {
   out_4606547918624798595[0] = delta_x[0] + nom_x[0];
   out_4606547918624798595[1] = delta_x[1] + nom_x[1];
   out_4606547918624798595[2] = delta_x[2] + nom_x[2];
   out_4606547918624798595[3] = -0.5*delta_x[3]*nom_x[4] - 0.5*delta_x[4]*nom_x[5] - 0.5*delta_x[5]*nom_x[6] + 1.0*nom_x[3];
   out_4606547918624798595[4] = 0.5*delta_x[3]*nom_x[3] + 0.5*delta_x[4]*nom_x[6] - 0.5*delta_x[5]*nom_x[5] + 1.0*nom_x[4];
   out_4606547918624798595[5] = -0.5*delta_x[3]*nom_x[6] + 0.5*delta_x[4]*nom_x[3] + 0.5*delta_x[5]*nom_x[4] + 1.0*nom_x[5];
   out_4606547918624798595[6] = 0.5*delta_x[3]*nom_x[5] - 0.5*delta_x[4]*nom_x[4] + 0.5*delta_x[5]*nom_x[3] + 1.0*nom_x[6];
   out_4606547918624798595[7] = delta_x[6] + nom_x[7];
   out_4606547918624798595[8] = delta_x[7] + nom_x[8];
   out_4606547918624798595[9] = delta_x[8] + nom_x[9];
   out_4606547918624798595[10] = delta_x[9] + nom_x[10];
   out_4606547918624798595[11] = delta_x[10] + nom_x[11];
   out_4606547918624798595[12] = delta_x[11] + nom_x[12];
   out_4606547918624798595[13] = delta_x[12] + nom_x[13];
   out_4606547918624798595[14] = delta_x[13] + nom_x[14];
   out_4606547918624798595[15] = delta_x[14] + nom_x[15];
   out_4606547918624798595[16] = delta_x[15] + nom_x[16];
   out_4606547918624798595[17] = delta_x[16] + nom_x[17];
   out_4606547918624798595[18] = delta_x[17] + nom_x[18];
   out_4606547918624798595[19] = delta_x[18] + nom_x[19];
   out_4606547918624798595[20] = delta_x[19] + nom_x[20];
   out_4606547918624798595[21] = delta_x[20] + nom_x[21];
}
void inv_err_fun(double *nom_x, double *true_x, double *out_3802232110797367930) {
   out_3802232110797367930[0] = -nom_x[0] + true_x[0];
   out_3802232110797367930[1] = -nom_x[1] + true_x[1];
   out_3802232110797367930[2] = -nom_x[2] + true_x[2];
   out_3802232110797367930[3] = 2*nom_x[3]*true_x[4] - 2*nom_x[4]*true_x[3] + 2*nom_x[5]*true_x[6] - 2*nom_x[6]*true_x[5];
   out_3802232110797367930[4] = 2*nom_x[3]*true_x[5] - 2*nom_x[4]*true_x[6] - 2*nom_x[5]*true_x[3] + 2*nom_x[6]*true_x[4];
   out_3802232110797367930[5] = 2*nom_x[3]*true_x[6] + 2*nom_x[4]*true_x[5] - 2*nom_x[5]*true_x[4] - 2*nom_x[6]*true_x[3];
   out_3802232110797367930[6] = -nom_x[7] + true_x[7];
   out_3802232110797367930[7] = -nom_x[8] + true_x[8];
   out_3802232110797367930[8] = -nom_x[9] + true_x[9];
   out_3802232110797367930[9] = -nom_x[10] + true_x[10];
   out_3802232110797367930[10] = -nom_x[11] + true_x[11];
   out_3802232110797367930[11] = -nom_x[12] + true_x[12];
   out_3802232110797367930[12] = -nom_x[13] + true_x[13];
   out_3802232110797367930[13] = -nom_x[14] + true_x[14];
   out_3802232110797367930[14] = -nom_x[15] + true_x[15];
   out_3802232110797367930[15] = -nom_x[16] + true_x[16];
   out_3802232110797367930[16] = -nom_x[17] + true_x[17];
   out_3802232110797367930[17] = -nom_x[18] + true_x[18];
   out_3802232110797367930[18] = -nom_x[19] + true_x[19];
   out_3802232110797367930[19] = -nom_x[20] + true_x[20];
   out_3802232110797367930[20] = -nom_x[21] + true_x[21];
}
void H_mod_fun(double *state, double *out_2403703269386432532) {
   out_2403703269386432532[0] = 1.0;
   out_2403703269386432532[1] = 0;
   out_2403703269386432532[2] = 0;
   out_2403703269386432532[3] = 0;
   out_2403703269386432532[4] = 0;
   out_2403703269386432532[5] = 0;
   out_2403703269386432532[6] = 0;
   out_2403703269386432532[7] = 0;
   out_2403703269386432532[8] = 0;
   out_2403703269386432532[9] = 0;
   out_2403703269386432532[10] = 0;
   out_2403703269386432532[11] = 0;
   out_2403703269386432532[12] = 0;
   out_2403703269386432532[13] = 0;
   out_2403703269386432532[14] = 0;
   out_2403703269386432532[15] = 0;
   out_2403703269386432532[16] = 0;
   out_2403703269386432532[17] = 0;
   out_2403703269386432532[18] = 0;
   out_2403703269386432532[19] = 0;
   out_2403703269386432532[20] = 0;
   out_2403703269386432532[21] = 0;
   out_2403703269386432532[22] = 1.0;
   out_2403703269386432532[23] = 0;
   out_2403703269386432532[24] = 0;
   out_2403703269386432532[25] = 0;
   out_2403703269386432532[26] = 0;
   out_2403703269386432532[27] = 0;
   out_2403703269386432532[28] = 0;
   out_2403703269386432532[29] = 0;
   out_2403703269386432532[30] = 0;
   out_2403703269386432532[31] = 0;
   out_2403703269386432532[32] = 0;
   out_2403703269386432532[33] = 0;
   out_2403703269386432532[34] = 0;
   out_2403703269386432532[35] = 0;
   out_2403703269386432532[36] = 0;
   out_2403703269386432532[37] = 0;
   out_2403703269386432532[38] = 0;
   out_2403703269386432532[39] = 0;
   out_2403703269386432532[40] = 0;
   out_2403703269386432532[41] = 0;
   out_2403703269386432532[42] = 0;
   out_2403703269386432532[43] = 0;
   out_2403703269386432532[44] = 1.0;
   out_2403703269386432532[45] = 0;
   out_2403703269386432532[46] = 0;
   out_2403703269386432532[47] = 0;
   out_2403703269386432532[48] = 0;
   out_2403703269386432532[49] = 0;
   out_2403703269386432532[50] = 0;
   out_2403703269386432532[51] = 0;
   out_2403703269386432532[52] = 0;
   out_2403703269386432532[53] = 0;
   out_2403703269386432532[54] = 0;
   out_2403703269386432532[55] = 0;
   out_2403703269386432532[56] = 0;
   out_2403703269386432532[57] = 0;
   out_2403703269386432532[58] = 0;
   out_2403703269386432532[59] = 0;
   out_2403703269386432532[60] = 0;
   out_2403703269386432532[61] = 0;
   out_2403703269386432532[62] = 0;
   out_2403703269386432532[63] = 0;
   out_2403703269386432532[64] = 0;
   out_2403703269386432532[65] = 0;
   out_2403703269386432532[66] = -0.5*state[4];
   out_2403703269386432532[67] = -0.5*state[5];
   out_2403703269386432532[68] = -0.5*state[6];
   out_2403703269386432532[69] = 0;
   out_2403703269386432532[70] = 0;
   out_2403703269386432532[71] = 0;
   out_2403703269386432532[72] = 0;
   out_2403703269386432532[73] = 0;
   out_2403703269386432532[74] = 0;
   out_2403703269386432532[75] = 0;
   out_2403703269386432532[76] = 0;
   out_2403703269386432532[77] = 0;
   out_2403703269386432532[78] = 0;
   out_2403703269386432532[79] = 0;
   out_2403703269386432532[80] = 0;
   out_2403703269386432532[81] = 0;
   out_2403703269386432532[82] = 0;
   out_2403703269386432532[83] = 0;
   out_2403703269386432532[84] = 0;
   out_2403703269386432532[85] = 0;
   out_2403703269386432532[86] = 0;
   out_2403703269386432532[87] = 0.5*state[3];
   out_2403703269386432532[88] = 0.5*state[6];
   out_2403703269386432532[89] = -0.5*state[5];
   out_2403703269386432532[90] = 0;
   out_2403703269386432532[91] = 0;
   out_2403703269386432532[92] = 0;
   out_2403703269386432532[93] = 0;
   out_2403703269386432532[94] = 0;
   out_2403703269386432532[95] = 0;
   out_2403703269386432532[96] = 0;
   out_2403703269386432532[97] = 0;
   out_2403703269386432532[98] = 0;
   out_2403703269386432532[99] = 0;
   out_2403703269386432532[100] = 0;
   out_2403703269386432532[101] = 0;
   out_2403703269386432532[102] = 0;
   out_2403703269386432532[103] = 0;
   out_2403703269386432532[104] = 0;
   out_2403703269386432532[105] = 0;
   out_2403703269386432532[106] = 0;
   out_2403703269386432532[107] = 0;
   out_2403703269386432532[108] = -0.5*state[6];
   out_2403703269386432532[109] = 0.5*state[3];
   out_2403703269386432532[110] = 0.5*state[4];
   out_2403703269386432532[111] = 0;
   out_2403703269386432532[112] = 0;
   out_2403703269386432532[113] = 0;
   out_2403703269386432532[114] = 0;
   out_2403703269386432532[115] = 0;
   out_2403703269386432532[116] = 0;
   out_2403703269386432532[117] = 0;
   out_2403703269386432532[118] = 0;
   out_2403703269386432532[119] = 0;
   out_2403703269386432532[120] = 0;
   out_2403703269386432532[121] = 0;
   out_2403703269386432532[122] = 0;
   out_2403703269386432532[123] = 0;
   out_2403703269386432532[124] = 0;
   out_2403703269386432532[125] = 0;
   out_2403703269386432532[126] = 0;
   out_2403703269386432532[127] = 0;
   out_2403703269386432532[128] = 0;
   out_2403703269386432532[129] = 0.5*state[5];
   out_2403703269386432532[130] = -0.5*state[4];
   out_2403703269386432532[131] = 0.5*state[3];
   out_2403703269386432532[132] = 0;
   out_2403703269386432532[133] = 0;
   out_2403703269386432532[134] = 0;
   out_2403703269386432532[135] = 0;
   out_2403703269386432532[136] = 0;
   out_2403703269386432532[137] = 0;
   out_2403703269386432532[138] = 0;
   out_2403703269386432532[139] = 0;
   out_2403703269386432532[140] = 0;
   out_2403703269386432532[141] = 0;
   out_2403703269386432532[142] = 0;
   out_2403703269386432532[143] = 0;
   out_2403703269386432532[144] = 0;
   out_2403703269386432532[145] = 0;
   out_2403703269386432532[146] = 0;
   out_2403703269386432532[147] = 0;
   out_2403703269386432532[148] = 0;
   out_2403703269386432532[149] = 0;
   out_2403703269386432532[150] = 0;
   out_2403703269386432532[151] = 0;
   out_2403703269386432532[152] = 0;
   out_2403703269386432532[153] = 1.0;
   out_2403703269386432532[154] = 0;
   out_2403703269386432532[155] = 0;
   out_2403703269386432532[156] = 0;
   out_2403703269386432532[157] = 0;
   out_2403703269386432532[158] = 0;
   out_2403703269386432532[159] = 0;
   out_2403703269386432532[160] = 0;
   out_2403703269386432532[161] = 0;
   out_2403703269386432532[162] = 0;
   out_2403703269386432532[163] = 0;
   out_2403703269386432532[164] = 0;
   out_2403703269386432532[165] = 0;
   out_2403703269386432532[166] = 0;
   out_2403703269386432532[167] = 0;
   out_2403703269386432532[168] = 0;
   out_2403703269386432532[169] = 0;
   out_2403703269386432532[170] = 0;
   out_2403703269386432532[171] = 0;
   out_2403703269386432532[172] = 0;
   out_2403703269386432532[173] = 0;
   out_2403703269386432532[174] = 0;
   out_2403703269386432532[175] = 1.0;
   out_2403703269386432532[176] = 0;
   out_2403703269386432532[177] = 0;
   out_2403703269386432532[178] = 0;
   out_2403703269386432532[179] = 0;
   out_2403703269386432532[180] = 0;
   out_2403703269386432532[181] = 0;
   out_2403703269386432532[182] = 0;
   out_2403703269386432532[183] = 0;
   out_2403703269386432532[184] = 0;
   out_2403703269386432532[185] = 0;
   out_2403703269386432532[186] = 0;
   out_2403703269386432532[187] = 0;
   out_2403703269386432532[188] = 0;
   out_2403703269386432532[189] = 0;
   out_2403703269386432532[190] = 0;
   out_2403703269386432532[191] = 0;
   out_2403703269386432532[192] = 0;
   out_2403703269386432532[193] = 0;
   out_2403703269386432532[194] = 0;
   out_2403703269386432532[195] = 0;
   out_2403703269386432532[196] = 0;
   out_2403703269386432532[197] = 1.0;
   out_2403703269386432532[198] = 0;
   out_2403703269386432532[199] = 0;
   out_2403703269386432532[200] = 0;
   out_2403703269386432532[201] = 0;
   out_2403703269386432532[202] = 0;
   out_2403703269386432532[203] = 0;
   out_2403703269386432532[204] = 0;
   out_2403703269386432532[205] = 0;
   out_2403703269386432532[206] = 0;
   out_2403703269386432532[207] = 0;
   out_2403703269386432532[208] = 0;
   out_2403703269386432532[209] = 0;
   out_2403703269386432532[210] = 0;
   out_2403703269386432532[211] = 0;
   out_2403703269386432532[212] = 0;
   out_2403703269386432532[213] = 0;
   out_2403703269386432532[214] = 0;
   out_2403703269386432532[215] = 0;
   out_2403703269386432532[216] = 0;
   out_2403703269386432532[217] = 0;
   out_2403703269386432532[218] = 0;
   out_2403703269386432532[219] = 1.0;
   out_2403703269386432532[220] = 0;
   out_2403703269386432532[221] = 0;
   out_2403703269386432532[222] = 0;
   out_2403703269386432532[223] = 0;
   out_2403703269386432532[224] = 0;
   out_2403703269386432532[225] = 0;
   out_2403703269386432532[226] = 0;
   out_2403703269386432532[227] = 0;
   out_2403703269386432532[228] = 0;
   out_2403703269386432532[229] = 0;
   out_2403703269386432532[230] = 0;
   out_2403703269386432532[231] = 0;
   out_2403703269386432532[232] = 0;
   out_2403703269386432532[233] = 0;
   out_2403703269386432532[234] = 0;
   out_2403703269386432532[235] = 0;
   out_2403703269386432532[236] = 0;
   out_2403703269386432532[237] = 0;
   out_2403703269386432532[238] = 0;
   out_2403703269386432532[239] = 0;
   out_2403703269386432532[240] = 0;
   out_2403703269386432532[241] = 1.0;
   out_2403703269386432532[242] = 0;
   out_2403703269386432532[243] = 0;
   out_2403703269386432532[244] = 0;
   out_2403703269386432532[245] = 0;
   out_2403703269386432532[246] = 0;
   out_2403703269386432532[247] = 0;
   out_2403703269386432532[248] = 0;
   out_2403703269386432532[249] = 0;
   out_2403703269386432532[250] = 0;
   out_2403703269386432532[251] = 0;
   out_2403703269386432532[252] = 0;
   out_2403703269386432532[253] = 0;
   out_2403703269386432532[254] = 0;
   out_2403703269386432532[255] = 0;
   out_2403703269386432532[256] = 0;
   out_2403703269386432532[257] = 0;
   out_2403703269386432532[258] = 0;
   out_2403703269386432532[259] = 0;
   out_2403703269386432532[260] = 0;
   out_2403703269386432532[261] = 0;
   out_2403703269386432532[262] = 0;
   out_2403703269386432532[263] = 1.0;
   out_2403703269386432532[264] = 0;
   out_2403703269386432532[265] = 0;
   out_2403703269386432532[266] = 0;
   out_2403703269386432532[267] = 0;
   out_2403703269386432532[268] = 0;
   out_2403703269386432532[269] = 0;
   out_2403703269386432532[270] = 0;
   out_2403703269386432532[271] = 0;
   out_2403703269386432532[272] = 0;
   out_2403703269386432532[273] = 0;
   out_2403703269386432532[274] = 0;
   out_2403703269386432532[275] = 0;
   out_2403703269386432532[276] = 0;
   out_2403703269386432532[277] = 0;
   out_2403703269386432532[278] = 0;
   out_2403703269386432532[279] = 0;
   out_2403703269386432532[280] = 0;
   out_2403703269386432532[281] = 0;
   out_2403703269386432532[282] = 0;
   out_2403703269386432532[283] = 0;
   out_2403703269386432532[284] = 0;
   out_2403703269386432532[285] = 1.0;
   out_2403703269386432532[286] = 0;
   out_2403703269386432532[287] = 0;
   out_2403703269386432532[288] = 0;
   out_2403703269386432532[289] = 0;
   out_2403703269386432532[290] = 0;
   out_2403703269386432532[291] = 0;
   out_2403703269386432532[292] = 0;
   out_2403703269386432532[293] = 0;
   out_2403703269386432532[294] = 0;
   out_2403703269386432532[295] = 0;
   out_2403703269386432532[296] = 0;
   out_2403703269386432532[297] = 0;
   out_2403703269386432532[298] = 0;
   out_2403703269386432532[299] = 0;
   out_2403703269386432532[300] = 0;
   out_2403703269386432532[301] = 0;
   out_2403703269386432532[302] = 0;
   out_2403703269386432532[303] = 0;
   out_2403703269386432532[304] = 0;
   out_2403703269386432532[305] = 0;
   out_2403703269386432532[306] = 0;
   out_2403703269386432532[307] = 1.0;
   out_2403703269386432532[308] = 0;
   out_2403703269386432532[309] = 0;
   out_2403703269386432532[310] = 0;
   out_2403703269386432532[311] = 0;
   out_2403703269386432532[312] = 0;
   out_2403703269386432532[313] = 0;
   out_2403703269386432532[314] = 0;
   out_2403703269386432532[315] = 0;
   out_2403703269386432532[316] = 0;
   out_2403703269386432532[317] = 0;
   out_2403703269386432532[318] = 0;
   out_2403703269386432532[319] = 0;
   out_2403703269386432532[320] = 0;
   out_2403703269386432532[321] = 0;
   out_2403703269386432532[322] = 0;
   out_2403703269386432532[323] = 0;
   out_2403703269386432532[324] = 0;
   out_2403703269386432532[325] = 0;
   out_2403703269386432532[326] = 0;
   out_2403703269386432532[327] = 0;
   out_2403703269386432532[328] = 0;
   out_2403703269386432532[329] = 1.0;
   out_2403703269386432532[330] = 0;
   out_2403703269386432532[331] = 0;
   out_2403703269386432532[332] = 0;
   out_2403703269386432532[333] = 0;
   out_2403703269386432532[334] = 0;
   out_2403703269386432532[335] = 0;
   out_2403703269386432532[336] = 0;
   out_2403703269386432532[337] = 0;
   out_2403703269386432532[338] = 0;
   out_2403703269386432532[339] = 0;
   out_2403703269386432532[340] = 0;
   out_2403703269386432532[341] = 0;
   out_2403703269386432532[342] = 0;
   out_2403703269386432532[343] = 0;
   out_2403703269386432532[344] = 0;
   out_2403703269386432532[345] = 0;
   out_2403703269386432532[346] = 0;
   out_2403703269386432532[347] = 0;
   out_2403703269386432532[348] = 0;
   out_2403703269386432532[349] = 0;
   out_2403703269386432532[350] = 0;
   out_2403703269386432532[351] = 1.0;
   out_2403703269386432532[352] = 0;
   out_2403703269386432532[353] = 0;
   out_2403703269386432532[354] = 0;
   out_2403703269386432532[355] = 0;
   out_2403703269386432532[356] = 0;
   out_2403703269386432532[357] = 0;
   out_2403703269386432532[358] = 0;
   out_2403703269386432532[359] = 0;
   out_2403703269386432532[360] = 0;
   out_2403703269386432532[361] = 0;
   out_2403703269386432532[362] = 0;
   out_2403703269386432532[363] = 0;
   out_2403703269386432532[364] = 0;
   out_2403703269386432532[365] = 0;
   out_2403703269386432532[366] = 0;
   out_2403703269386432532[367] = 0;
   out_2403703269386432532[368] = 0;
   out_2403703269386432532[369] = 0;
   out_2403703269386432532[370] = 0;
   out_2403703269386432532[371] = 0;
   out_2403703269386432532[372] = 0;
   out_2403703269386432532[373] = 1.0;
   out_2403703269386432532[374] = 0;
   out_2403703269386432532[375] = 0;
   out_2403703269386432532[376] = 0;
   out_2403703269386432532[377] = 0;
   out_2403703269386432532[378] = 0;
   out_2403703269386432532[379] = 0;
   out_2403703269386432532[380] = 0;
   out_2403703269386432532[381] = 0;
   out_2403703269386432532[382] = 0;
   out_2403703269386432532[383] = 0;
   out_2403703269386432532[384] = 0;
   out_2403703269386432532[385] = 0;
   out_2403703269386432532[386] = 0;
   out_2403703269386432532[387] = 0;
   out_2403703269386432532[388] = 0;
   out_2403703269386432532[389] = 0;
   out_2403703269386432532[390] = 0;
   out_2403703269386432532[391] = 0;
   out_2403703269386432532[392] = 0;
   out_2403703269386432532[393] = 0;
   out_2403703269386432532[394] = 0;
   out_2403703269386432532[395] = 1.0;
   out_2403703269386432532[396] = 0;
   out_2403703269386432532[397] = 0;
   out_2403703269386432532[398] = 0;
   out_2403703269386432532[399] = 0;
   out_2403703269386432532[400] = 0;
   out_2403703269386432532[401] = 0;
   out_2403703269386432532[402] = 0;
   out_2403703269386432532[403] = 0;
   out_2403703269386432532[404] = 0;
   out_2403703269386432532[405] = 0;
   out_2403703269386432532[406] = 0;
   out_2403703269386432532[407] = 0;
   out_2403703269386432532[408] = 0;
   out_2403703269386432532[409] = 0;
   out_2403703269386432532[410] = 0;
   out_2403703269386432532[411] = 0;
   out_2403703269386432532[412] = 0;
   out_2403703269386432532[413] = 0;
   out_2403703269386432532[414] = 0;
   out_2403703269386432532[415] = 0;
   out_2403703269386432532[416] = 0;
   out_2403703269386432532[417] = 1.0;
   out_2403703269386432532[418] = 0;
   out_2403703269386432532[419] = 0;
   out_2403703269386432532[420] = 0;
   out_2403703269386432532[421] = 0;
   out_2403703269386432532[422] = 0;
   out_2403703269386432532[423] = 0;
   out_2403703269386432532[424] = 0;
   out_2403703269386432532[425] = 0;
   out_2403703269386432532[426] = 0;
   out_2403703269386432532[427] = 0;
   out_2403703269386432532[428] = 0;
   out_2403703269386432532[429] = 0;
   out_2403703269386432532[430] = 0;
   out_2403703269386432532[431] = 0;
   out_2403703269386432532[432] = 0;
   out_2403703269386432532[433] = 0;
   out_2403703269386432532[434] = 0;
   out_2403703269386432532[435] = 0;
   out_2403703269386432532[436] = 0;
   out_2403703269386432532[437] = 0;
   out_2403703269386432532[438] = 0;
   out_2403703269386432532[439] = 1.0;
   out_2403703269386432532[440] = 0;
   out_2403703269386432532[441] = 0;
   out_2403703269386432532[442] = 0;
   out_2403703269386432532[443] = 0;
   out_2403703269386432532[444] = 0;
   out_2403703269386432532[445] = 0;
   out_2403703269386432532[446] = 0;
   out_2403703269386432532[447] = 0;
   out_2403703269386432532[448] = 0;
   out_2403703269386432532[449] = 0;
   out_2403703269386432532[450] = 0;
   out_2403703269386432532[451] = 0;
   out_2403703269386432532[452] = 0;
   out_2403703269386432532[453] = 0;
   out_2403703269386432532[454] = 0;
   out_2403703269386432532[455] = 0;
   out_2403703269386432532[456] = 0;
   out_2403703269386432532[457] = 0;
   out_2403703269386432532[458] = 0;
   out_2403703269386432532[459] = 0;
   out_2403703269386432532[460] = 0;
   out_2403703269386432532[461] = 1.0;
}
void f_fun(double *state, double dt, double *out_9213513043125960057) {
   out_9213513043125960057[0] = dt*state[7] + state[0];
   out_9213513043125960057[1] = dt*state[8] + state[1];
   out_9213513043125960057[2] = dt*state[9] + state[2];
   out_9213513043125960057[3] = dt*(-0.5*state[4]*state[10] - 0.5*state[5]*state[11] - 0.5*state[6]*state[12]) + state[3];
   out_9213513043125960057[4] = dt*(0.5*state[3]*state[10] + 0.5*state[5]*state[12] - 0.5*state[6]*state[11]) + state[4];
   out_9213513043125960057[5] = dt*(0.5*state[3]*state[11] - 0.5*state[4]*state[12] + 0.5*state[6]*state[10]) + state[5];
   out_9213513043125960057[6] = dt*(0.5*state[3]*state[12] + 0.5*state[4]*state[11] - 0.5*state[5]*state[10]) + state[6];
   out_9213513043125960057[7] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]) + state[7];
   out_9213513043125960057[8] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]) + state[8];
   out_9213513043125960057[9] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]) + state[9];
   out_9213513043125960057[10] = state[10];
   out_9213513043125960057[11] = state[11];
   out_9213513043125960057[12] = state[12];
   out_9213513043125960057[13] = state[13];
   out_9213513043125960057[14] = state[14];
   out_9213513043125960057[15] = state[15];
   out_9213513043125960057[16] = state[16];
   out_9213513043125960057[17] = state[17];
   out_9213513043125960057[18] = state[18];
   out_9213513043125960057[19] = state[19];
   out_9213513043125960057[20] = state[20];
   out_9213513043125960057[21] = state[21];
}
void F_fun(double *state, double dt, double *out_7305383426993286797) {
   out_7305383426993286797[0] = 1;
   out_7305383426993286797[1] = 0;
   out_7305383426993286797[2] = 0;
   out_7305383426993286797[3] = 0;
   out_7305383426993286797[4] = 0;
   out_7305383426993286797[5] = 0;
   out_7305383426993286797[6] = dt;
   out_7305383426993286797[7] = 0;
   out_7305383426993286797[8] = 0;
   out_7305383426993286797[9] = 0;
   out_7305383426993286797[10] = 0;
   out_7305383426993286797[11] = 0;
   out_7305383426993286797[12] = 0;
   out_7305383426993286797[13] = 0;
   out_7305383426993286797[14] = 0;
   out_7305383426993286797[15] = 0;
   out_7305383426993286797[16] = 0;
   out_7305383426993286797[17] = 0;
   out_7305383426993286797[18] = 0;
   out_7305383426993286797[19] = 0;
   out_7305383426993286797[20] = 0;
   out_7305383426993286797[21] = 0;
   out_7305383426993286797[22] = 1;
   out_7305383426993286797[23] = 0;
   out_7305383426993286797[24] = 0;
   out_7305383426993286797[25] = 0;
   out_7305383426993286797[26] = 0;
   out_7305383426993286797[27] = 0;
   out_7305383426993286797[28] = dt;
   out_7305383426993286797[29] = 0;
   out_7305383426993286797[30] = 0;
   out_7305383426993286797[31] = 0;
   out_7305383426993286797[32] = 0;
   out_7305383426993286797[33] = 0;
   out_7305383426993286797[34] = 0;
   out_7305383426993286797[35] = 0;
   out_7305383426993286797[36] = 0;
   out_7305383426993286797[37] = 0;
   out_7305383426993286797[38] = 0;
   out_7305383426993286797[39] = 0;
   out_7305383426993286797[40] = 0;
   out_7305383426993286797[41] = 0;
   out_7305383426993286797[42] = 0;
   out_7305383426993286797[43] = 0;
   out_7305383426993286797[44] = 1;
   out_7305383426993286797[45] = 0;
   out_7305383426993286797[46] = 0;
   out_7305383426993286797[47] = 0;
   out_7305383426993286797[48] = 0;
   out_7305383426993286797[49] = 0;
   out_7305383426993286797[50] = dt;
   out_7305383426993286797[51] = 0;
   out_7305383426993286797[52] = 0;
   out_7305383426993286797[53] = 0;
   out_7305383426993286797[54] = 0;
   out_7305383426993286797[55] = 0;
   out_7305383426993286797[56] = 0;
   out_7305383426993286797[57] = 0;
   out_7305383426993286797[58] = 0;
   out_7305383426993286797[59] = 0;
   out_7305383426993286797[60] = 0;
   out_7305383426993286797[61] = 0;
   out_7305383426993286797[62] = 0;
   out_7305383426993286797[63] = 0;
   out_7305383426993286797[64] = 0;
   out_7305383426993286797[65] = 0;
   out_7305383426993286797[66] = 1;
   out_7305383426993286797[67] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[11] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_7305383426993286797[68] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[12] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[10] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[11]);
   out_7305383426993286797[69] = 0;
   out_7305383426993286797[70] = 0;
   out_7305383426993286797[71] = 0;
   out_7305383426993286797[72] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_7305383426993286797[73] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_7305383426993286797[74] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_7305383426993286797[75] = 0;
   out_7305383426993286797[76] = 0;
   out_7305383426993286797[77] = 0;
   out_7305383426993286797[78] = 0;
   out_7305383426993286797[79] = 0;
   out_7305383426993286797[80] = 0;
   out_7305383426993286797[81] = 0;
   out_7305383426993286797[82] = 0;
   out_7305383426993286797[83] = 0;
   out_7305383426993286797[84] = 0;
   out_7305383426993286797[85] = 0;
   out_7305383426993286797[86] = 0;
   out_7305383426993286797[87] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[11] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_7305383426993286797[88] = 1;
   out_7305383426993286797[89] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[12] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[11] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[10]);
   out_7305383426993286797[90] = 0;
   out_7305383426993286797[91] = 0;
   out_7305383426993286797[92] = 0;
   out_7305383426993286797[93] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_7305383426993286797[94] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_7305383426993286797[95] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_7305383426993286797[96] = 0;
   out_7305383426993286797[97] = 0;
   out_7305383426993286797[98] = 0;
   out_7305383426993286797[99] = 0;
   out_7305383426993286797[100] = 0;
   out_7305383426993286797[101] = 0;
   out_7305383426993286797[102] = 0;
   out_7305383426993286797[103] = 0;
   out_7305383426993286797[104] = 0;
   out_7305383426993286797[105] = 0;
   out_7305383426993286797[106] = 0;
   out_7305383426993286797[107] = 0;
   out_7305383426993286797[108] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[12] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[10] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[11]);
   out_7305383426993286797[109] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[12] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[11] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[10]);
   out_7305383426993286797[110] = 1;
   out_7305383426993286797[111] = 0;
   out_7305383426993286797[112] = 0;
   out_7305383426993286797[113] = 0;
   out_7305383426993286797[114] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_7305383426993286797[115] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_7305383426993286797[116] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_7305383426993286797[117] = 0;
   out_7305383426993286797[118] = 0;
   out_7305383426993286797[119] = 0;
   out_7305383426993286797[120] = 0;
   out_7305383426993286797[121] = 0;
   out_7305383426993286797[122] = 0;
   out_7305383426993286797[123] = 0;
   out_7305383426993286797[124] = 0;
   out_7305383426993286797[125] = 0;
   out_7305383426993286797[126] = 0;
   out_7305383426993286797[127] = 0;
   out_7305383426993286797[128] = 0;
   out_7305383426993286797[129] = 0;
   out_7305383426993286797[130] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_7305383426993286797[131] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[18] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[16] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[17]);
   out_7305383426993286797[132] = 1;
   out_7305383426993286797[133] = 0;
   out_7305383426993286797[134] = 0;
   out_7305383426993286797[135] = 0;
   out_7305383426993286797[136] = 0;
   out_7305383426993286797[137] = 0;
   out_7305383426993286797[138] = 0;
   out_7305383426993286797[139] = 0;
   out_7305383426993286797[140] = 0;
   out_7305383426993286797[141] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_7305383426993286797[142] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_7305383426993286797[143] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_7305383426993286797[144] = 0;
   out_7305383426993286797[145] = 0;
   out_7305383426993286797[146] = 0;
   out_7305383426993286797[147] = 0;
   out_7305383426993286797[148] = 0;
   out_7305383426993286797[149] = 0;
   out_7305383426993286797[150] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[17] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_7305383426993286797[151] = 0;
   out_7305383426993286797[152] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]);
   out_7305383426993286797[153] = 0;
   out_7305383426993286797[154] = 1;
   out_7305383426993286797[155] = 0;
   out_7305383426993286797[156] = 0;
   out_7305383426993286797[157] = 0;
   out_7305383426993286797[158] = 0;
   out_7305383426993286797[159] = 0;
   out_7305383426993286797[160] = 0;
   out_7305383426993286797[161] = 0;
   out_7305383426993286797[162] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_7305383426993286797[163] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_7305383426993286797[164] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_7305383426993286797[165] = 0;
   out_7305383426993286797[166] = 0;
   out_7305383426993286797[167] = 0;
   out_7305383426993286797[168] = 0;
   out_7305383426993286797[169] = 0;
   out_7305383426993286797[170] = 0;
   out_7305383426993286797[171] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]);
   out_7305383426993286797[172] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[18] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[17] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[16]);
   out_7305383426993286797[173] = 0;
   out_7305383426993286797[174] = 0;
   out_7305383426993286797[175] = 0;
   out_7305383426993286797[176] = 1;
   out_7305383426993286797[177] = 0;
   out_7305383426993286797[178] = 0;
   out_7305383426993286797[179] = 0;
   out_7305383426993286797[180] = 0;
   out_7305383426993286797[181] = 0;
   out_7305383426993286797[182] = 0;
   out_7305383426993286797[183] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_7305383426993286797[184] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_7305383426993286797[185] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_7305383426993286797[186] = 0;
   out_7305383426993286797[187] = 0;
   out_7305383426993286797[188] = 0;
   out_7305383426993286797[189] = 0;
   out_7305383426993286797[190] = 0;
   out_7305383426993286797[191] = 0;
   out_7305383426993286797[192] = 0;
   out_7305383426993286797[193] = 0;
   out_7305383426993286797[194] = 0;
   out_7305383426993286797[195] = 0;
   out_7305383426993286797[196] = 0;
   out_7305383426993286797[197] = 0;
   out_7305383426993286797[198] = 1;
   out_7305383426993286797[199] = 0;
   out_7305383426993286797[200] = 0;
   out_7305383426993286797[201] = 0;
   out_7305383426993286797[202] = 0;
   out_7305383426993286797[203] = 0;
   out_7305383426993286797[204] = 0;
   out_7305383426993286797[205] = 0;
   out_7305383426993286797[206] = 0;
   out_7305383426993286797[207] = 0;
   out_7305383426993286797[208] = 0;
   out_7305383426993286797[209] = 0;
   out_7305383426993286797[210] = 0;
   out_7305383426993286797[211] = 0;
   out_7305383426993286797[212] = 0;
   out_7305383426993286797[213] = 0;
   out_7305383426993286797[214] = 0;
   out_7305383426993286797[215] = 0;
   out_7305383426993286797[216] = 0;
   out_7305383426993286797[217] = 0;
   out_7305383426993286797[218] = 0;
   out_7305383426993286797[219] = 0;
   out_7305383426993286797[220] = 1;
   out_7305383426993286797[221] = 0;
   out_7305383426993286797[222] = 0;
   out_7305383426993286797[223] = 0;
   out_7305383426993286797[224] = 0;
   out_7305383426993286797[225] = 0;
   out_7305383426993286797[226] = 0;
   out_7305383426993286797[227] = 0;
   out_7305383426993286797[228] = 0;
   out_7305383426993286797[229] = 0;
   out_7305383426993286797[230] = 0;
   out_7305383426993286797[231] = 0;
   out_7305383426993286797[232] = 0;
   out_7305383426993286797[233] = 0;
   out_7305383426993286797[234] = 0;
   out_7305383426993286797[235] = 0;
   out_7305383426993286797[236] = 0;
   out_7305383426993286797[237] = 0;
   out_7305383426993286797[238] = 0;
   out_7305383426993286797[239] = 0;
   out_7305383426993286797[240] = 0;
   out_7305383426993286797[241] = 0;
   out_7305383426993286797[242] = 1;
   out_7305383426993286797[243] = 0;
   out_7305383426993286797[244] = 0;
   out_7305383426993286797[245] = 0;
   out_7305383426993286797[246] = 0;
   out_7305383426993286797[247] = 0;
   out_7305383426993286797[248] = 0;
   out_7305383426993286797[249] = 0;
   out_7305383426993286797[250] = 0;
   out_7305383426993286797[251] = 0;
   out_7305383426993286797[252] = 0;
   out_7305383426993286797[253] = 0;
   out_7305383426993286797[254] = 0;
   out_7305383426993286797[255] = 0;
   out_7305383426993286797[256] = 0;
   out_7305383426993286797[257] = 0;
   out_7305383426993286797[258] = 0;
   out_7305383426993286797[259] = 0;
   out_7305383426993286797[260] = 0;
   out_7305383426993286797[261] = 0;
   out_7305383426993286797[262] = 0;
   out_7305383426993286797[263] = 0;
   out_7305383426993286797[264] = 1;
   out_7305383426993286797[265] = 0;
   out_7305383426993286797[266] = 0;
   out_7305383426993286797[267] = 0;
   out_7305383426993286797[268] = 0;
   out_7305383426993286797[269] = 0;
   out_7305383426993286797[270] = 0;
   out_7305383426993286797[271] = 0;
   out_7305383426993286797[272] = 0;
   out_7305383426993286797[273] = 0;
   out_7305383426993286797[274] = 0;
   out_7305383426993286797[275] = 0;
   out_7305383426993286797[276] = 0;
   out_7305383426993286797[277] = 0;
   out_7305383426993286797[278] = 0;
   out_7305383426993286797[279] = 0;
   out_7305383426993286797[280] = 0;
   out_7305383426993286797[281] = 0;
   out_7305383426993286797[282] = 0;
   out_7305383426993286797[283] = 0;
   out_7305383426993286797[284] = 0;
   out_7305383426993286797[285] = 0;
   out_7305383426993286797[286] = 1;
   out_7305383426993286797[287] = 0;
   out_7305383426993286797[288] = 0;
   out_7305383426993286797[289] = 0;
   out_7305383426993286797[290] = 0;
   out_7305383426993286797[291] = 0;
   out_7305383426993286797[292] = 0;
   out_7305383426993286797[293] = 0;
   out_7305383426993286797[294] = 0;
   out_7305383426993286797[295] = 0;
   out_7305383426993286797[296] = 0;
   out_7305383426993286797[297] = 0;
   out_7305383426993286797[298] = 0;
   out_7305383426993286797[299] = 0;
   out_7305383426993286797[300] = 0;
   out_7305383426993286797[301] = 0;
   out_7305383426993286797[302] = 0;
   out_7305383426993286797[303] = 0;
   out_7305383426993286797[304] = 0;
   out_7305383426993286797[305] = 0;
   out_7305383426993286797[306] = 0;
   out_7305383426993286797[307] = 0;
   out_7305383426993286797[308] = 1;
   out_7305383426993286797[309] = 0;
   out_7305383426993286797[310] = 0;
   out_7305383426993286797[311] = 0;
   out_7305383426993286797[312] = 0;
   out_7305383426993286797[313] = 0;
   out_7305383426993286797[314] = 0;
   out_7305383426993286797[315] = 0;
   out_7305383426993286797[316] = 0;
   out_7305383426993286797[317] = 0;
   out_7305383426993286797[318] = 0;
   out_7305383426993286797[319] = 0;
   out_7305383426993286797[320] = 0;
   out_7305383426993286797[321] = 0;
   out_7305383426993286797[322] = 0;
   out_7305383426993286797[323] = 0;
   out_7305383426993286797[324] = 0;
   out_7305383426993286797[325] = 0;
   out_7305383426993286797[326] = 0;
   out_7305383426993286797[327] = 0;
   out_7305383426993286797[328] = 0;
   out_7305383426993286797[329] = 0;
   out_7305383426993286797[330] = 1;
   out_7305383426993286797[331] = 0;
   out_7305383426993286797[332] = 0;
   out_7305383426993286797[333] = 0;
   out_7305383426993286797[334] = 0;
   out_7305383426993286797[335] = 0;
   out_7305383426993286797[336] = 0;
   out_7305383426993286797[337] = 0;
   out_7305383426993286797[338] = 0;
   out_7305383426993286797[339] = 0;
   out_7305383426993286797[340] = 0;
   out_7305383426993286797[341] = 0;
   out_7305383426993286797[342] = 0;
   out_7305383426993286797[343] = 0;
   out_7305383426993286797[344] = 0;
   out_7305383426993286797[345] = 0;
   out_7305383426993286797[346] = 0;
   out_7305383426993286797[347] = 0;
   out_7305383426993286797[348] = 0;
   out_7305383426993286797[349] = 0;
   out_7305383426993286797[350] = 0;
   out_7305383426993286797[351] = 0;
   out_7305383426993286797[352] = 1;
   out_7305383426993286797[353] = 0;
   out_7305383426993286797[354] = 0;
   out_7305383426993286797[355] = 0;
   out_7305383426993286797[356] = 0;
   out_7305383426993286797[357] = 0;
   out_7305383426993286797[358] = 0;
   out_7305383426993286797[359] = 0;
   out_7305383426993286797[360] = 0;
   out_7305383426993286797[361] = 0;
   out_7305383426993286797[362] = 0;
   out_7305383426993286797[363] = 0;
   out_7305383426993286797[364] = 0;
   out_7305383426993286797[365] = 0;
   out_7305383426993286797[366] = 0;
   out_7305383426993286797[367] = 0;
   out_7305383426993286797[368] = 0;
   out_7305383426993286797[369] = 0;
   out_7305383426993286797[370] = 0;
   out_7305383426993286797[371] = 0;
   out_7305383426993286797[372] = 0;
   out_7305383426993286797[373] = 0;
   out_7305383426993286797[374] = 1;
   out_7305383426993286797[375] = 0;
   out_7305383426993286797[376] = 0;
   out_7305383426993286797[377] = 0;
   out_7305383426993286797[378] = 0;
   out_7305383426993286797[379] = 0;
   out_7305383426993286797[380] = 0;
   out_7305383426993286797[381] = 0;
   out_7305383426993286797[382] = 0;
   out_7305383426993286797[383] = 0;
   out_7305383426993286797[384] = 0;
   out_7305383426993286797[385] = 0;
   out_7305383426993286797[386] = 0;
   out_7305383426993286797[387] = 0;
   out_7305383426993286797[388] = 0;
   out_7305383426993286797[389] = 0;
   out_7305383426993286797[390] = 0;
   out_7305383426993286797[391] = 0;
   out_7305383426993286797[392] = 0;
   out_7305383426993286797[393] = 0;
   out_7305383426993286797[394] = 0;
   out_7305383426993286797[395] = 0;
   out_7305383426993286797[396] = 1;
   out_7305383426993286797[397] = 0;
   out_7305383426993286797[398] = 0;
   out_7305383426993286797[399] = 0;
   out_7305383426993286797[400] = 0;
   out_7305383426993286797[401] = 0;
   out_7305383426993286797[402] = 0;
   out_7305383426993286797[403] = 0;
   out_7305383426993286797[404] = 0;
   out_7305383426993286797[405] = 0;
   out_7305383426993286797[406] = 0;
   out_7305383426993286797[407] = 0;
   out_7305383426993286797[408] = 0;
   out_7305383426993286797[409] = 0;
   out_7305383426993286797[410] = 0;
   out_7305383426993286797[411] = 0;
   out_7305383426993286797[412] = 0;
   out_7305383426993286797[413] = 0;
   out_7305383426993286797[414] = 0;
   out_7305383426993286797[415] = 0;
   out_7305383426993286797[416] = 0;
   out_7305383426993286797[417] = 0;
   out_7305383426993286797[418] = 1;
   out_7305383426993286797[419] = 0;
   out_7305383426993286797[420] = 0;
   out_7305383426993286797[421] = 0;
   out_7305383426993286797[422] = 0;
   out_7305383426993286797[423] = 0;
   out_7305383426993286797[424] = 0;
   out_7305383426993286797[425] = 0;
   out_7305383426993286797[426] = 0;
   out_7305383426993286797[427] = 0;
   out_7305383426993286797[428] = 0;
   out_7305383426993286797[429] = 0;
   out_7305383426993286797[430] = 0;
   out_7305383426993286797[431] = 0;
   out_7305383426993286797[432] = 0;
   out_7305383426993286797[433] = 0;
   out_7305383426993286797[434] = 0;
   out_7305383426993286797[435] = 0;
   out_7305383426993286797[436] = 0;
   out_7305383426993286797[437] = 0;
   out_7305383426993286797[438] = 0;
   out_7305383426993286797[439] = 0;
   out_7305383426993286797[440] = 1;
}
void h_4(double *state, double *unused, double *out_7379252546041605396) {
   out_7379252546041605396[0] = state[10] + state[13];
   out_7379252546041605396[1] = state[11] + state[14];
   out_7379252546041605396[2] = state[12] + state[15];
}
void H_4(double *state, double *unused, double *out_4401136805161921209) {
   out_4401136805161921209[0] = 0;
   out_4401136805161921209[1] = 0;
   out_4401136805161921209[2] = 0;
   out_4401136805161921209[3] = 0;
   out_4401136805161921209[4] = 0;
   out_4401136805161921209[5] = 0;
   out_4401136805161921209[6] = 0;
   out_4401136805161921209[7] = 0;
   out_4401136805161921209[8] = 0;
   out_4401136805161921209[9] = 0;
   out_4401136805161921209[10] = 1;
   out_4401136805161921209[11] = 0;
   out_4401136805161921209[12] = 0;
   out_4401136805161921209[13] = 1;
   out_4401136805161921209[14] = 0;
   out_4401136805161921209[15] = 0;
   out_4401136805161921209[16] = 0;
   out_4401136805161921209[17] = 0;
   out_4401136805161921209[18] = 0;
   out_4401136805161921209[19] = 0;
   out_4401136805161921209[20] = 0;
   out_4401136805161921209[21] = 0;
   out_4401136805161921209[22] = 0;
   out_4401136805161921209[23] = 0;
   out_4401136805161921209[24] = 0;
   out_4401136805161921209[25] = 0;
   out_4401136805161921209[26] = 0;
   out_4401136805161921209[27] = 0;
   out_4401136805161921209[28] = 0;
   out_4401136805161921209[29] = 0;
   out_4401136805161921209[30] = 0;
   out_4401136805161921209[31] = 0;
   out_4401136805161921209[32] = 0;
   out_4401136805161921209[33] = 1;
   out_4401136805161921209[34] = 0;
   out_4401136805161921209[35] = 0;
   out_4401136805161921209[36] = 1;
   out_4401136805161921209[37] = 0;
   out_4401136805161921209[38] = 0;
   out_4401136805161921209[39] = 0;
   out_4401136805161921209[40] = 0;
   out_4401136805161921209[41] = 0;
   out_4401136805161921209[42] = 0;
   out_4401136805161921209[43] = 0;
   out_4401136805161921209[44] = 0;
   out_4401136805161921209[45] = 0;
   out_4401136805161921209[46] = 0;
   out_4401136805161921209[47] = 0;
   out_4401136805161921209[48] = 0;
   out_4401136805161921209[49] = 0;
   out_4401136805161921209[50] = 0;
   out_4401136805161921209[51] = 0;
   out_4401136805161921209[52] = 0;
   out_4401136805161921209[53] = 0;
   out_4401136805161921209[54] = 0;
   out_4401136805161921209[55] = 0;
   out_4401136805161921209[56] = 1;
   out_4401136805161921209[57] = 0;
   out_4401136805161921209[58] = 0;
   out_4401136805161921209[59] = 1;
   out_4401136805161921209[60] = 0;
   out_4401136805161921209[61] = 0;
   out_4401136805161921209[62] = 0;
   out_4401136805161921209[63] = 0;
   out_4401136805161921209[64] = 0;
   out_4401136805161921209[65] = 0;
}
void h_9(double *state, double *unused, double *out_1202757841265508903) {
   out_1202757841265508903[0] = state[10];
   out_1202757841265508903[1] = state[11];
   out_1202757841265508903[2] = state[12];
}
void H_9(double *state, double *unused, double *out_6758388333283182937) {
   out_6758388333283182937[0] = 0;
   out_6758388333283182937[1] = 0;
   out_6758388333283182937[2] = 0;
   out_6758388333283182937[3] = 0;
   out_6758388333283182937[4] = 0;
   out_6758388333283182937[5] = 0;
   out_6758388333283182937[6] = 0;
   out_6758388333283182937[7] = 0;
   out_6758388333283182937[8] = 0;
   out_6758388333283182937[9] = 0;
   out_6758388333283182937[10] = 1;
   out_6758388333283182937[11] = 0;
   out_6758388333283182937[12] = 0;
   out_6758388333283182937[13] = 0;
   out_6758388333283182937[14] = 0;
   out_6758388333283182937[15] = 0;
   out_6758388333283182937[16] = 0;
   out_6758388333283182937[17] = 0;
   out_6758388333283182937[18] = 0;
   out_6758388333283182937[19] = 0;
   out_6758388333283182937[20] = 0;
   out_6758388333283182937[21] = 0;
   out_6758388333283182937[22] = 0;
   out_6758388333283182937[23] = 0;
   out_6758388333283182937[24] = 0;
   out_6758388333283182937[25] = 0;
   out_6758388333283182937[26] = 0;
   out_6758388333283182937[27] = 0;
   out_6758388333283182937[28] = 0;
   out_6758388333283182937[29] = 0;
   out_6758388333283182937[30] = 0;
   out_6758388333283182937[31] = 0;
   out_6758388333283182937[32] = 0;
   out_6758388333283182937[33] = 1;
   out_6758388333283182937[34] = 0;
   out_6758388333283182937[35] = 0;
   out_6758388333283182937[36] = 0;
   out_6758388333283182937[37] = 0;
   out_6758388333283182937[38] = 0;
   out_6758388333283182937[39] = 0;
   out_6758388333283182937[40] = 0;
   out_6758388333283182937[41] = 0;
   out_6758388333283182937[42] = 0;
   out_6758388333283182937[43] = 0;
   out_6758388333283182937[44] = 0;
   out_6758388333283182937[45] = 0;
   out_6758388333283182937[46] = 0;
   out_6758388333283182937[47] = 0;
   out_6758388333283182937[48] = 0;
   out_6758388333283182937[49] = 0;
   out_6758388333283182937[50] = 0;
   out_6758388333283182937[51] = 0;
   out_6758388333283182937[52] = 0;
   out_6758388333283182937[53] = 0;
   out_6758388333283182937[54] = 0;
   out_6758388333283182937[55] = 0;
   out_6758388333283182937[56] = 1;
   out_6758388333283182937[57] = 0;
   out_6758388333283182937[58] = 0;
   out_6758388333283182937[59] = 0;
   out_6758388333283182937[60] = 0;
   out_6758388333283182937[61] = 0;
   out_6758388333283182937[62] = 0;
   out_6758388333283182937[63] = 0;
   out_6758388333283182937[64] = 0;
   out_6758388333283182937[65] = 0;
}
void h_10(double *state, double *unused, double *out_6666467861509210036) {
   out_6666467861509210036[0] = 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0] + state[16] + state[19];
   out_6666467861509210036[1] = 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1] + state[17] + state[20];
   out_6666467861509210036[2] = 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[2] + state[18] + state[21];
}
void H_10(double *state, double *unused, double *out_6188938886958562214) {
   out_6188938886958562214[0] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*pow(state[0], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_6188938886958562214[1] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_6188938886958562214[2] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[2];
   out_6188938886958562214[3] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_6188938886958562214[4] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_6188938886958562214[5] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_6188938886958562214[6] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_6188938886958562214[7] = 0;
   out_6188938886958562214[8] = 0;
   out_6188938886958562214[9] = 0;
   out_6188938886958562214[10] = 0;
   out_6188938886958562214[11] = 0;
   out_6188938886958562214[12] = 0;
   out_6188938886958562214[13] = 0;
   out_6188938886958562214[14] = 0;
   out_6188938886958562214[15] = 0;
   out_6188938886958562214[16] = 1;
   out_6188938886958562214[17] = 0;
   out_6188938886958562214[18] = 0;
   out_6188938886958562214[19] = 1;
   out_6188938886958562214[20] = 0;
   out_6188938886958562214[21] = 0;
   out_6188938886958562214[22] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_6188938886958562214[23] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*pow(state[1], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_6188938886958562214[24] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1]*state[2];
   out_6188938886958562214[25] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_6188938886958562214[26] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_6188938886958562214[27] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_6188938886958562214[28] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_6188938886958562214[29] = 0;
   out_6188938886958562214[30] = 0;
   out_6188938886958562214[31] = 0;
   out_6188938886958562214[32] = 0;
   out_6188938886958562214[33] = 0;
   out_6188938886958562214[34] = 0;
   out_6188938886958562214[35] = 0;
   out_6188938886958562214[36] = 0;
   out_6188938886958562214[37] = 0;
   out_6188938886958562214[38] = 0;
   out_6188938886958562214[39] = 1;
   out_6188938886958562214[40] = 0;
   out_6188938886958562214[41] = 0;
   out_6188938886958562214[42] = 1;
   out_6188938886958562214[43] = 0;
   out_6188938886958562214[44] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[0]*state[2];
   out_6188938886958562214[45] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[1]*state[2];
   out_6188938886958562214[46] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*pow(state[2], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_6188938886958562214[47] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_6188938886958562214[48] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_6188938886958562214[49] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_6188938886958562214[50] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_6188938886958562214[51] = 0;
   out_6188938886958562214[52] = 0;
   out_6188938886958562214[53] = 0;
   out_6188938886958562214[54] = 0;
   out_6188938886958562214[55] = 0;
   out_6188938886958562214[56] = 0;
   out_6188938886958562214[57] = 0;
   out_6188938886958562214[58] = 0;
   out_6188938886958562214[59] = 0;
   out_6188938886958562214[60] = 0;
   out_6188938886958562214[61] = 0;
   out_6188938886958562214[62] = 1;
   out_6188938886958562214[63] = 0;
   out_6188938886958562214[64] = 0;
   out_6188938886958562214[65] = 1;
}
void h_12(double *state, double *unused, double *out_7968597318252026652) {
   out_7968597318252026652[0] = state[0];
   out_7968597318252026652[1] = state[1];
   out_7968597318252026652[2] = state[2];
}
void H_12(double *state, double *unused, double *out_9026150860515668612) {
   out_9026150860515668612[0] = 1;
   out_9026150860515668612[1] = 0;
   out_9026150860515668612[2] = 0;
   out_9026150860515668612[3] = 0;
   out_9026150860515668612[4] = 0;
   out_9026150860515668612[5] = 0;
   out_9026150860515668612[6] = 0;
   out_9026150860515668612[7] = 0;
   out_9026150860515668612[8] = 0;
   out_9026150860515668612[9] = 0;
   out_9026150860515668612[10] = 0;
   out_9026150860515668612[11] = 0;
   out_9026150860515668612[12] = 0;
   out_9026150860515668612[13] = 0;
   out_9026150860515668612[14] = 0;
   out_9026150860515668612[15] = 0;
   out_9026150860515668612[16] = 0;
   out_9026150860515668612[17] = 0;
   out_9026150860515668612[18] = 0;
   out_9026150860515668612[19] = 0;
   out_9026150860515668612[20] = 0;
   out_9026150860515668612[21] = 0;
   out_9026150860515668612[22] = 0;
   out_9026150860515668612[23] = 1;
   out_9026150860515668612[24] = 0;
   out_9026150860515668612[25] = 0;
   out_9026150860515668612[26] = 0;
   out_9026150860515668612[27] = 0;
   out_9026150860515668612[28] = 0;
   out_9026150860515668612[29] = 0;
   out_9026150860515668612[30] = 0;
   out_9026150860515668612[31] = 0;
   out_9026150860515668612[32] = 0;
   out_9026150860515668612[33] = 0;
   out_9026150860515668612[34] = 0;
   out_9026150860515668612[35] = 0;
   out_9026150860515668612[36] = 0;
   out_9026150860515668612[37] = 0;
   out_9026150860515668612[38] = 0;
   out_9026150860515668612[39] = 0;
   out_9026150860515668612[40] = 0;
   out_9026150860515668612[41] = 0;
   out_9026150860515668612[42] = 0;
   out_9026150860515668612[43] = 0;
   out_9026150860515668612[44] = 0;
   out_9026150860515668612[45] = 0;
   out_9026150860515668612[46] = 1;
   out_9026150860515668612[47] = 0;
   out_9026150860515668612[48] = 0;
   out_9026150860515668612[49] = 0;
   out_9026150860515668612[50] = 0;
   out_9026150860515668612[51] = 0;
   out_9026150860515668612[52] = 0;
   out_9026150860515668612[53] = 0;
   out_9026150860515668612[54] = 0;
   out_9026150860515668612[55] = 0;
   out_9026150860515668612[56] = 0;
   out_9026150860515668612[57] = 0;
   out_9026150860515668612[58] = 0;
   out_9026150860515668612[59] = 0;
   out_9026150860515668612[60] = 0;
   out_9026150860515668612[61] = 0;
   out_9026150860515668612[62] = 0;
   out_9026150860515668612[63] = 0;
   out_9026150860515668612[64] = 0;
   out_9026150860515668612[65] = 0;
}
void h_35(double *state, double *unused, double *out_4318590434504429685) {
   out_4318590434504429685[0] = state[7];
   out_4318590434504429685[1] = state[8];
   out_4318590434504429685[2] = state[9];
}
void H_35(double *state, double *unused, double *out_7767798862534528585) {
   out_7767798862534528585[0] = 0;
   out_7767798862534528585[1] = 0;
   out_7767798862534528585[2] = 0;
   out_7767798862534528585[3] = 0;
   out_7767798862534528585[4] = 0;
   out_7767798862534528585[5] = 0;
   out_7767798862534528585[6] = 0;
   out_7767798862534528585[7] = 1;
   out_7767798862534528585[8] = 0;
   out_7767798862534528585[9] = 0;
   out_7767798862534528585[10] = 0;
   out_7767798862534528585[11] = 0;
   out_7767798862534528585[12] = 0;
   out_7767798862534528585[13] = 0;
   out_7767798862534528585[14] = 0;
   out_7767798862534528585[15] = 0;
   out_7767798862534528585[16] = 0;
   out_7767798862534528585[17] = 0;
   out_7767798862534528585[18] = 0;
   out_7767798862534528585[19] = 0;
   out_7767798862534528585[20] = 0;
   out_7767798862534528585[21] = 0;
   out_7767798862534528585[22] = 0;
   out_7767798862534528585[23] = 0;
   out_7767798862534528585[24] = 0;
   out_7767798862534528585[25] = 0;
   out_7767798862534528585[26] = 0;
   out_7767798862534528585[27] = 0;
   out_7767798862534528585[28] = 0;
   out_7767798862534528585[29] = 0;
   out_7767798862534528585[30] = 1;
   out_7767798862534528585[31] = 0;
   out_7767798862534528585[32] = 0;
   out_7767798862534528585[33] = 0;
   out_7767798862534528585[34] = 0;
   out_7767798862534528585[35] = 0;
   out_7767798862534528585[36] = 0;
   out_7767798862534528585[37] = 0;
   out_7767798862534528585[38] = 0;
   out_7767798862534528585[39] = 0;
   out_7767798862534528585[40] = 0;
   out_7767798862534528585[41] = 0;
   out_7767798862534528585[42] = 0;
   out_7767798862534528585[43] = 0;
   out_7767798862534528585[44] = 0;
   out_7767798862534528585[45] = 0;
   out_7767798862534528585[46] = 0;
   out_7767798862534528585[47] = 0;
   out_7767798862534528585[48] = 0;
   out_7767798862534528585[49] = 0;
   out_7767798862534528585[50] = 0;
   out_7767798862534528585[51] = 0;
   out_7767798862534528585[52] = 0;
   out_7767798862534528585[53] = 1;
   out_7767798862534528585[54] = 0;
   out_7767798862534528585[55] = 0;
   out_7767798862534528585[56] = 0;
   out_7767798862534528585[57] = 0;
   out_7767798862534528585[58] = 0;
   out_7767798862534528585[59] = 0;
   out_7767798862534528585[60] = 0;
   out_7767798862534528585[61] = 0;
   out_7767798862534528585[62] = 0;
   out_7767798862534528585[63] = 0;
   out_7767798862534528585[64] = 0;
   out_7767798862534528585[65] = 0;
}
void h_32(double *state, double *unused, double *out_3286905594513770356) {
   out_3286905594513770356[0] = state[3];
   out_3286905594513770356[1] = state[4];
   out_3286905594513770356[2] = state[5];
   out_3286905594513770356[3] = state[6];
}
void H_32(double *state, double *unused, double *out_7898963647475269054) {
   out_7898963647475269054[0] = 0;
   out_7898963647475269054[1] = 0;
   out_7898963647475269054[2] = 0;
   out_7898963647475269054[3] = 1;
   out_7898963647475269054[4] = 0;
   out_7898963647475269054[5] = 0;
   out_7898963647475269054[6] = 0;
   out_7898963647475269054[7] = 0;
   out_7898963647475269054[8] = 0;
   out_7898963647475269054[9] = 0;
   out_7898963647475269054[10] = 0;
   out_7898963647475269054[11] = 0;
   out_7898963647475269054[12] = 0;
   out_7898963647475269054[13] = 0;
   out_7898963647475269054[14] = 0;
   out_7898963647475269054[15] = 0;
   out_7898963647475269054[16] = 0;
   out_7898963647475269054[17] = 0;
   out_7898963647475269054[18] = 0;
   out_7898963647475269054[19] = 0;
   out_7898963647475269054[20] = 0;
   out_7898963647475269054[21] = 0;
   out_7898963647475269054[22] = 0;
   out_7898963647475269054[23] = 0;
   out_7898963647475269054[24] = 0;
   out_7898963647475269054[25] = 0;
   out_7898963647475269054[26] = 1;
   out_7898963647475269054[27] = 0;
   out_7898963647475269054[28] = 0;
   out_7898963647475269054[29] = 0;
   out_7898963647475269054[30] = 0;
   out_7898963647475269054[31] = 0;
   out_7898963647475269054[32] = 0;
   out_7898963647475269054[33] = 0;
   out_7898963647475269054[34] = 0;
   out_7898963647475269054[35] = 0;
   out_7898963647475269054[36] = 0;
   out_7898963647475269054[37] = 0;
   out_7898963647475269054[38] = 0;
   out_7898963647475269054[39] = 0;
   out_7898963647475269054[40] = 0;
   out_7898963647475269054[41] = 0;
   out_7898963647475269054[42] = 0;
   out_7898963647475269054[43] = 0;
   out_7898963647475269054[44] = 0;
   out_7898963647475269054[45] = 0;
   out_7898963647475269054[46] = 0;
   out_7898963647475269054[47] = 0;
   out_7898963647475269054[48] = 0;
   out_7898963647475269054[49] = 1;
   out_7898963647475269054[50] = 0;
   out_7898963647475269054[51] = 0;
   out_7898963647475269054[52] = 0;
   out_7898963647475269054[53] = 0;
   out_7898963647475269054[54] = 0;
   out_7898963647475269054[55] = 0;
   out_7898963647475269054[56] = 0;
   out_7898963647475269054[57] = 0;
   out_7898963647475269054[58] = 0;
   out_7898963647475269054[59] = 0;
   out_7898963647475269054[60] = 0;
   out_7898963647475269054[61] = 0;
   out_7898963647475269054[62] = 0;
   out_7898963647475269054[63] = 0;
   out_7898963647475269054[64] = 0;
   out_7898963647475269054[65] = 0;
   out_7898963647475269054[66] = 0;
   out_7898963647475269054[67] = 0;
   out_7898963647475269054[68] = 0;
   out_7898963647475269054[69] = 0;
   out_7898963647475269054[70] = 0;
   out_7898963647475269054[71] = 0;
   out_7898963647475269054[72] = 1;
   out_7898963647475269054[73] = 0;
   out_7898963647475269054[74] = 0;
   out_7898963647475269054[75] = 0;
   out_7898963647475269054[76] = 0;
   out_7898963647475269054[77] = 0;
   out_7898963647475269054[78] = 0;
   out_7898963647475269054[79] = 0;
   out_7898963647475269054[80] = 0;
   out_7898963647475269054[81] = 0;
   out_7898963647475269054[82] = 0;
   out_7898963647475269054[83] = 0;
   out_7898963647475269054[84] = 0;
   out_7898963647475269054[85] = 0;
   out_7898963647475269054[86] = 0;
   out_7898963647475269054[87] = 0;
}
void h_13(double *state, double *unused, double *out_4366320559866466656) {
   out_4366320559866466656[0] = (-2*state[3]*state[5] + 2*state[4]*state[6])*state[9] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[8] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[7];
   out_4366320559866466656[1] = (2*state[3]*state[4] + 2*state[5]*state[6])*state[9] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[7] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[8];
   out_4366320559866466656[2] = (-2*state[3]*state[4] + 2*state[5]*state[6])*state[8] + (2*state[3]*state[5] + 2*state[4]*state[6])*state[7] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[9];
}
void H_13(double *state, double *unused, double *out_5007255343360337644) {
   out_5007255343360337644[0] = 0;
   out_5007255343360337644[1] = 0;
   out_5007255343360337644[2] = 0;
   out_5007255343360337644[3] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_5007255343360337644[4] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_5007255343360337644[5] = -2*state[3]*state[9] + 2*state[4]*state[8] - 2*state[5]*state[7];
   out_5007255343360337644[6] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_5007255343360337644[7] = pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2);
   out_5007255343360337644[8] = 2*state[3]*state[6] + 2*state[4]*state[5];
   out_5007255343360337644[9] = -2*state[3]*state[5] + 2*state[4]*state[6];
   out_5007255343360337644[10] = 0;
   out_5007255343360337644[11] = 0;
   out_5007255343360337644[12] = 0;
   out_5007255343360337644[13] = 0;
   out_5007255343360337644[14] = 0;
   out_5007255343360337644[15] = 0;
   out_5007255343360337644[16] = 0;
   out_5007255343360337644[17] = 0;
   out_5007255343360337644[18] = 0;
   out_5007255343360337644[19] = 0;
   out_5007255343360337644[20] = 0;
   out_5007255343360337644[21] = 0;
   out_5007255343360337644[22] = 0;
   out_5007255343360337644[23] = 0;
   out_5007255343360337644[24] = 0;
   out_5007255343360337644[25] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_5007255343360337644[26] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_5007255343360337644[27] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_5007255343360337644[28] = -2*state[3]*state[7] + 2*state[5]*state[9] - 2*state[6]*state[8];
   out_5007255343360337644[29] = -2*state[3]*state[6] + 2*state[4]*state[5];
   out_5007255343360337644[30] = pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2);
   out_5007255343360337644[31] = 2*state[3]*state[4] + 2*state[5]*state[6];
   out_5007255343360337644[32] = 0;
   out_5007255343360337644[33] = 0;
   out_5007255343360337644[34] = 0;
   out_5007255343360337644[35] = 0;
   out_5007255343360337644[36] = 0;
   out_5007255343360337644[37] = 0;
   out_5007255343360337644[38] = 0;
   out_5007255343360337644[39] = 0;
   out_5007255343360337644[40] = 0;
   out_5007255343360337644[41] = 0;
   out_5007255343360337644[42] = 0;
   out_5007255343360337644[43] = 0;
   out_5007255343360337644[44] = 0;
   out_5007255343360337644[45] = 0;
   out_5007255343360337644[46] = 0;
   out_5007255343360337644[47] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_5007255343360337644[48] = -2*state[3]*state[8] - 2*state[4]*state[9] + 2*state[6]*state[7];
   out_5007255343360337644[49] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_5007255343360337644[50] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_5007255343360337644[51] = 2*state[3]*state[5] + 2*state[4]*state[6];
   out_5007255343360337644[52] = -2*state[3]*state[4] + 2*state[5]*state[6];
   out_5007255343360337644[53] = pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2);
   out_5007255343360337644[54] = 0;
   out_5007255343360337644[55] = 0;
   out_5007255343360337644[56] = 0;
   out_5007255343360337644[57] = 0;
   out_5007255343360337644[58] = 0;
   out_5007255343360337644[59] = 0;
   out_5007255343360337644[60] = 0;
   out_5007255343360337644[61] = 0;
   out_5007255343360337644[62] = 0;
   out_5007255343360337644[63] = 0;
   out_5007255343360337644[64] = 0;
   out_5007255343360337644[65] = 0;
}
void h_14(double *state, double *unused, double *out_1202757841265508903) {
   out_1202757841265508903[0] = state[10];
   out_1202757841265508903[1] = state[11];
   out_1202757841265508903[2] = state[12];
}
void H_14(double *state, double *unused, double *out_6758388333283182937) {
   out_6758388333283182937[0] = 0;
   out_6758388333283182937[1] = 0;
   out_6758388333283182937[2] = 0;
   out_6758388333283182937[3] = 0;
   out_6758388333283182937[4] = 0;
   out_6758388333283182937[5] = 0;
   out_6758388333283182937[6] = 0;
   out_6758388333283182937[7] = 0;
   out_6758388333283182937[8] = 0;
   out_6758388333283182937[9] = 0;
   out_6758388333283182937[10] = 1;
   out_6758388333283182937[11] = 0;
   out_6758388333283182937[12] = 0;
   out_6758388333283182937[13] = 0;
   out_6758388333283182937[14] = 0;
   out_6758388333283182937[15] = 0;
   out_6758388333283182937[16] = 0;
   out_6758388333283182937[17] = 0;
   out_6758388333283182937[18] = 0;
   out_6758388333283182937[19] = 0;
   out_6758388333283182937[20] = 0;
   out_6758388333283182937[21] = 0;
   out_6758388333283182937[22] = 0;
   out_6758388333283182937[23] = 0;
   out_6758388333283182937[24] = 0;
   out_6758388333283182937[25] = 0;
   out_6758388333283182937[26] = 0;
   out_6758388333283182937[27] = 0;
   out_6758388333283182937[28] = 0;
   out_6758388333283182937[29] = 0;
   out_6758388333283182937[30] = 0;
   out_6758388333283182937[31] = 0;
   out_6758388333283182937[32] = 0;
   out_6758388333283182937[33] = 1;
   out_6758388333283182937[34] = 0;
   out_6758388333283182937[35] = 0;
   out_6758388333283182937[36] = 0;
   out_6758388333283182937[37] = 0;
   out_6758388333283182937[38] = 0;
   out_6758388333283182937[39] = 0;
   out_6758388333283182937[40] = 0;
   out_6758388333283182937[41] = 0;
   out_6758388333283182937[42] = 0;
   out_6758388333283182937[43] = 0;
   out_6758388333283182937[44] = 0;
   out_6758388333283182937[45] = 0;
   out_6758388333283182937[46] = 0;
   out_6758388333283182937[47] = 0;
   out_6758388333283182937[48] = 0;
   out_6758388333283182937[49] = 0;
   out_6758388333283182937[50] = 0;
   out_6758388333283182937[51] = 0;
   out_6758388333283182937[52] = 0;
   out_6758388333283182937[53] = 0;
   out_6758388333283182937[54] = 0;
   out_6758388333283182937[55] = 0;
   out_6758388333283182937[56] = 1;
   out_6758388333283182937[57] = 0;
   out_6758388333283182937[58] = 0;
   out_6758388333283182937[59] = 0;
   out_6758388333283182937[60] = 0;
   out_6758388333283182937[61] = 0;
   out_6758388333283182937[62] = 0;
   out_6758388333283182937[63] = 0;
   out_6758388333283182937[64] = 0;
   out_6758388333283182937[65] = 0;
}
void h_33(double *state, double *unused, double *out_7199808014083085380) {
   out_7199808014083085380[0] = state[16];
   out_7199808014083085380[1] = state[17];
   out_7199808014083085380[2] = state[18];
}
void H_33(double *state, double *unused, double *out_7528388206536165427) {
   out_7528388206536165427[0] = 0;
   out_7528388206536165427[1] = 0;
   out_7528388206536165427[2] = 0;
   out_7528388206536165427[3] = 0;
   out_7528388206536165427[4] = 0;
   out_7528388206536165427[5] = 0;
   out_7528388206536165427[6] = 0;
   out_7528388206536165427[7] = 0;
   out_7528388206536165427[8] = 0;
   out_7528388206536165427[9] = 0;
   out_7528388206536165427[10] = 0;
   out_7528388206536165427[11] = 0;
   out_7528388206536165427[12] = 0;
   out_7528388206536165427[13] = 0;
   out_7528388206536165427[14] = 0;
   out_7528388206536165427[15] = 0;
   out_7528388206536165427[16] = 1;
   out_7528388206536165427[17] = 0;
   out_7528388206536165427[18] = 0;
   out_7528388206536165427[19] = 0;
   out_7528388206536165427[20] = 0;
   out_7528388206536165427[21] = 0;
   out_7528388206536165427[22] = 0;
   out_7528388206536165427[23] = 0;
   out_7528388206536165427[24] = 0;
   out_7528388206536165427[25] = 0;
   out_7528388206536165427[26] = 0;
   out_7528388206536165427[27] = 0;
   out_7528388206536165427[28] = 0;
   out_7528388206536165427[29] = 0;
   out_7528388206536165427[30] = 0;
   out_7528388206536165427[31] = 0;
   out_7528388206536165427[32] = 0;
   out_7528388206536165427[33] = 0;
   out_7528388206536165427[34] = 0;
   out_7528388206536165427[35] = 0;
   out_7528388206536165427[36] = 0;
   out_7528388206536165427[37] = 0;
   out_7528388206536165427[38] = 0;
   out_7528388206536165427[39] = 1;
   out_7528388206536165427[40] = 0;
   out_7528388206536165427[41] = 0;
   out_7528388206536165427[42] = 0;
   out_7528388206536165427[43] = 0;
   out_7528388206536165427[44] = 0;
   out_7528388206536165427[45] = 0;
   out_7528388206536165427[46] = 0;
   out_7528388206536165427[47] = 0;
   out_7528388206536165427[48] = 0;
   out_7528388206536165427[49] = 0;
   out_7528388206536165427[50] = 0;
   out_7528388206536165427[51] = 0;
   out_7528388206536165427[52] = 0;
   out_7528388206536165427[53] = 0;
   out_7528388206536165427[54] = 0;
   out_7528388206536165427[55] = 0;
   out_7528388206536165427[56] = 0;
   out_7528388206536165427[57] = 0;
   out_7528388206536165427[58] = 0;
   out_7528388206536165427[59] = 0;
   out_7528388206536165427[60] = 0;
   out_7528388206536165427[61] = 0;
   out_7528388206536165427[62] = 1;
   out_7528388206536165427[63] = 0;
   out_7528388206536165427[64] = 0;
   out_7528388206536165427[65] = 0;
}
#include <eigen3/Eigen/Dense>
#include <iostream>

typedef Eigen::Matrix<double, DIM, DIM, Eigen::RowMajor> DDM;
typedef Eigen::Matrix<double, EDIM, EDIM, Eigen::RowMajor> EEM;
typedef Eigen::Matrix<double, DIM, EDIM, Eigen::RowMajor> DEM;

void predict(double *in_x, double *in_P, double *in_Q, double dt) {
  typedef Eigen::Matrix<double, MEDIM, MEDIM, Eigen::RowMajor> RRM;

  double nx[DIM] = {0};
  double in_F[EDIM*EDIM] = {0};

  // functions from sympy
  f_fun(in_x, dt, nx);
  F_fun(in_x, dt, in_F);


  EEM F(in_F);
  EEM P(in_P);
  EEM Q(in_Q);

  RRM F_main = F.topLeftCorner(MEDIM, MEDIM);
  P.topLeftCorner(MEDIM, MEDIM) = (F_main * P.topLeftCorner(MEDIM, MEDIM)) * F_main.transpose();
  P.topRightCorner(MEDIM, EDIM - MEDIM) = F_main * P.topRightCorner(MEDIM, EDIM - MEDIM);
  P.bottomLeftCorner(EDIM - MEDIM, MEDIM) = P.bottomLeftCorner(EDIM - MEDIM, MEDIM) * F_main.transpose();

  P = P + dt*Q;

  // copy out state
  memcpy(in_x, nx, DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
}

// note: extra_args dim only correct when null space projecting
// otherwise 1
template <int ZDIM, int EADIM, bool MAHA_TEST>
void update(double *in_x, double *in_P, Hfun h_fun, Hfun H_fun, Hfun Hea_fun, double *in_z, double *in_R, double *in_ea, double MAHA_THRESHOLD) {
  typedef Eigen::Matrix<double, ZDIM, ZDIM, Eigen::RowMajor> ZZM;
  typedef Eigen::Matrix<double, ZDIM, DIM, Eigen::RowMajor> ZDM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, EDIM, Eigen::RowMajor> XEM;
  //typedef Eigen::Matrix<double, EDIM, ZDIM, Eigen::RowMajor> EZM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, 1> X1M;
  typedef Eigen::Matrix<double, Eigen::Dynamic, Eigen::Dynamic, Eigen::RowMajor> XXM;

  double in_hx[ZDIM] = {0};
  double in_H[ZDIM * DIM] = {0};
  double in_H_mod[EDIM * DIM] = {0};
  double delta_x[EDIM] = {0};
  double x_new[DIM] = {0};


  // state x, P
  Eigen::Matrix<double, ZDIM, 1> z(in_z);
  EEM P(in_P);
  ZZM pre_R(in_R);

  // functions from sympy
  h_fun(in_x, in_ea, in_hx);
  H_fun(in_x, in_ea, in_H);
  ZDM pre_H(in_H);

  // get y (y = z - hx)
  Eigen::Matrix<double, ZDIM, 1> pre_y(in_hx); pre_y = z - pre_y;
  X1M y; XXM H; XXM R;
  if (Hea_fun){
    typedef Eigen::Matrix<double, ZDIM, EADIM, Eigen::RowMajor> ZAM;
    double in_Hea[ZDIM * EADIM] = {0};
    Hea_fun(in_x, in_ea, in_Hea);
    ZAM Hea(in_Hea);
    XXM A = Hea.transpose().fullPivLu().kernel();


    y = A.transpose() * pre_y;
    H = A.transpose() * pre_H;
    R = A.transpose() * pre_R * A;
  } else {
    y = pre_y;
    H = pre_H;
    R = pre_R;
  }
  // get modified H
  H_mod_fun(in_x, in_H_mod);
  DEM H_mod(in_H_mod);
  XEM H_err = H * H_mod;

  // Do mahalobis distance test
  if (MAHA_TEST){
    XXM a = (H_err * P * H_err.transpose() + R).inverse();
    double maha_dist = y.transpose() * a * y;
    if (maha_dist > MAHA_THRESHOLD){
      R = 1.0e16 * R;
    }
  }

  // Outlier resilient weighting
  double weight = 1;//(1.5)/(1 + y.squaredNorm()/R.sum());

  // kalman gains and I_KH
  XXM S = ((H_err * P) * H_err.transpose()) + R/weight;
  XEM KT = S.fullPivLu().solve(H_err * P.transpose());
  //EZM K = KT.transpose(); TODO: WHY DOES THIS NOT COMPILE?
  //EZM K = S.fullPivLu().solve(H_err * P.transpose()).transpose();
  //std::cout << "Here is the matrix rot:\n" << K << std::endl;
  EEM I_KH = Eigen::Matrix<double, EDIM, EDIM>::Identity() - (KT.transpose() * H_err);

  // update state by injecting dx
  Eigen::Matrix<double, EDIM, 1> dx(delta_x);
  dx  = (KT.transpose() * y);
  memcpy(delta_x, dx.data(), EDIM * sizeof(double));
  err_fun(in_x, delta_x, x_new);
  Eigen::Matrix<double, DIM, 1> x(x_new);

  // update cov
  P = ((I_KH * P) * I_KH.transpose()) + ((KT.transpose() * R) * KT);

  // copy out state
  memcpy(in_x, x.data(), DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
  memcpy(in_z, y.data(), y.rows() * sizeof(double));
}




}
extern "C" {

void live_update_4(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_4, H_4, NULL, in_z, in_R, in_ea, MAHA_THRESH_4);
}
void live_update_9(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_9, H_9, NULL, in_z, in_R, in_ea, MAHA_THRESH_9);
}
void live_update_10(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_10, H_10, NULL, in_z, in_R, in_ea, MAHA_THRESH_10);
}
void live_update_12(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_12, H_12, NULL, in_z, in_R, in_ea, MAHA_THRESH_12);
}
void live_update_35(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_35, H_35, NULL, in_z, in_R, in_ea, MAHA_THRESH_35);
}
void live_update_32(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<4, 3, 0>(in_x, in_P, h_32, H_32, NULL, in_z, in_R, in_ea, MAHA_THRESH_32);
}
void live_update_13(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_13, H_13, NULL, in_z, in_R, in_ea, MAHA_THRESH_13);
}
void live_update_14(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_14, H_14, NULL, in_z, in_R, in_ea, MAHA_THRESH_14);
}
void live_update_33(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_33, H_33, NULL, in_z, in_R, in_ea, MAHA_THRESH_33);
}
void live_H(double *in_vec, double *out_5146098374437838409) {
  H(in_vec, out_5146098374437838409);
}
void live_err_fun(double *nom_x, double *delta_x, double *out_4606547918624798595) {
  err_fun(nom_x, delta_x, out_4606547918624798595);
}
void live_inv_err_fun(double *nom_x, double *true_x, double *out_3802232110797367930) {
  inv_err_fun(nom_x, true_x, out_3802232110797367930);
}
void live_H_mod_fun(double *state, double *out_2403703269386432532) {
  H_mod_fun(state, out_2403703269386432532);
}
void live_f_fun(double *state, double dt, double *out_9213513043125960057) {
  f_fun(state,  dt, out_9213513043125960057);
}
void live_F_fun(double *state, double dt, double *out_7305383426993286797) {
  F_fun(state,  dt, out_7305383426993286797);
}
void live_h_4(double *state, double *unused, double *out_7379252546041605396) {
  h_4(state, unused, out_7379252546041605396);
}
void live_H_4(double *state, double *unused, double *out_4401136805161921209) {
  H_4(state, unused, out_4401136805161921209);
}
void live_h_9(double *state, double *unused, double *out_1202757841265508903) {
  h_9(state, unused, out_1202757841265508903);
}
void live_H_9(double *state, double *unused, double *out_6758388333283182937) {
  H_9(state, unused, out_6758388333283182937);
}
void live_h_10(double *state, double *unused, double *out_6666467861509210036) {
  h_10(state, unused, out_6666467861509210036);
}
void live_H_10(double *state, double *unused, double *out_6188938886958562214) {
  H_10(state, unused, out_6188938886958562214);
}
void live_h_12(double *state, double *unused, double *out_7968597318252026652) {
  h_12(state, unused, out_7968597318252026652);
}
void live_H_12(double *state, double *unused, double *out_9026150860515668612) {
  H_12(state, unused, out_9026150860515668612);
}
void live_h_35(double *state, double *unused, double *out_4318590434504429685) {
  h_35(state, unused, out_4318590434504429685);
}
void live_H_35(double *state, double *unused, double *out_7767798862534528585) {
  H_35(state, unused, out_7767798862534528585);
}
void live_h_32(double *state, double *unused, double *out_3286905594513770356) {
  h_32(state, unused, out_3286905594513770356);
}
void live_H_32(double *state, double *unused, double *out_7898963647475269054) {
  H_32(state, unused, out_7898963647475269054);
}
void live_h_13(double *state, double *unused, double *out_4366320559866466656) {
  h_13(state, unused, out_4366320559866466656);
}
void live_H_13(double *state, double *unused, double *out_5007255343360337644) {
  H_13(state, unused, out_5007255343360337644);
}
void live_h_14(double *state, double *unused, double *out_1202757841265508903) {
  h_14(state, unused, out_1202757841265508903);
}
void live_H_14(double *state, double *unused, double *out_6758388333283182937) {
  H_14(state, unused, out_6758388333283182937);
}
void live_h_33(double *state, double *unused, double *out_7199808014083085380) {
  h_33(state, unused, out_7199808014083085380);
}
void live_H_33(double *state, double *unused, double *out_7528388206536165427) {
  H_33(state, unused, out_7528388206536165427);
}
void live_predict(double *in_x, double *in_P, double *in_Q, double dt) {
  predict(in_x, in_P, in_Q, dt);
}
}

const EKF live = {
  .name = "live",
  .kinds = { 4, 9, 10, 12, 35, 32, 13, 14, 33 },
  .feature_kinds = {  },
  .f_fun = live_f_fun,
  .F_fun = live_F_fun,
  .err_fun = live_err_fun,
  .inv_err_fun = live_inv_err_fun,
  .H_mod_fun = live_H_mod_fun,
  .predict = live_predict,
  .hs = {
    { 4, live_h_4 },
    { 9, live_h_9 },
    { 10, live_h_10 },
    { 12, live_h_12 },
    { 35, live_h_35 },
    { 32, live_h_32 },
    { 13, live_h_13 },
    { 14, live_h_14 },
    { 33, live_h_33 },
  },
  .Hs = {
    { 4, live_H_4 },
    { 9, live_H_9 },
    { 10, live_H_10 },
    { 12, live_H_12 },
    { 35, live_H_35 },
    { 32, live_H_32 },
    { 13, live_H_13 },
    { 14, live_H_14 },
    { 33, live_H_33 },
  },
  .updates = {
    { 4, live_update_4 },
    { 9, live_update_9 },
    { 10, live_update_10 },
    { 12, live_update_12 },
    { 35, live_update_35 },
    { 32, live_update_32 },
    { 13, live_update_13 },
    { 14, live_update_14 },
    { 33, live_update_33 },
  },
  .Hes = {
  },
  .sets = {
  },
  .extra_routines = {
    { "H", live_H },
  },
};

ekf_lib_init(live)
