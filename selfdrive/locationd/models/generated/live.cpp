#include "live.h"

namespace {
#define DIM 22
#define EDIM 21
#define MEDIM 21
typedef void (*Hfun)(double *, double *, double *);
const static double MAHA_THRESH_4 = 7.814727903251177;
const static double MAHA_THRESH_9 = 7.814727903251177;
const static double MAHA_THRESH_10 = 7.814727903251177;
const static double MAHA_THRESH_12 = 7.814727903251177;
const static double MAHA_THRESH_35 = 7.814727903251177;
const static double MAHA_THRESH_32 = 9.487729036781154;
const static double MAHA_THRESH_13 = 7.814727903251177;
const static double MAHA_THRESH_14 = 7.814727903251177;
const static double MAHA_THRESH_33 = 7.814727903251177;

/******************************************************************************
 *                       Code generated with SymPy 1.12                       *
 *                                                                            *
 *              See http://www.sympy.org/ for more information.               *
 *                                                                            *
 *                         This file is part of 'ekf'                         *
 ******************************************************************************/
void H(double *in_vec, double *out_7636484281099317628) {
   out_7636484281099317628[0] = 0;
   out_7636484281099317628[1] = -sin(in_vec[1])*sin(in_vec[2])*in_vec[4] - sin(in_vec[1])*cos(in_vec[2])*in_vec[3] - cos(in_vec[1])*in_vec[5];
   out_7636484281099317628[2] = -sin(in_vec[2])*cos(in_vec[1])*in_vec[3] + cos(in_vec[1])*cos(in_vec[2])*in_vec[4];
   out_7636484281099317628[3] = cos(in_vec[1])*cos(in_vec[2]);
   out_7636484281099317628[4] = sin(in_vec[2])*cos(in_vec[1]);
   out_7636484281099317628[5] = -sin(in_vec[1]);
   out_7636484281099317628[6] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (-sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_7636484281099317628[7] = -sin(in_vec[0])*sin(in_vec[1])*in_vec[5] + sin(in_vec[0])*sin(in_vec[2])*cos(in_vec[1])*in_vec[4] + sin(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_7636484281099317628[8] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]))*in_vec[4];
   out_7636484281099317628[9] = sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]);
   out_7636484281099317628[10] = sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) + cos(in_vec[0])*cos(in_vec[2]);
   out_7636484281099317628[11] = sin(in_vec[0])*cos(in_vec[1]);
   out_7636484281099317628[12] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (-sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) + sin(in_vec[2])*cos(in_vec[0]))*in_vec[3] - sin(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_7636484281099317628[13] = -sin(in_vec[1])*cos(in_vec[0])*in_vec[5] + sin(in_vec[2])*cos(in_vec[0])*cos(in_vec[1])*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_7636484281099317628[14] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (sin(in_vec[0])*cos(in_vec[2]) - sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[3];
   out_7636484281099317628[15] = sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]);
   out_7636484281099317628[16] = -sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]);
   out_7636484281099317628[17] = cos(in_vec[0])*cos(in_vec[1]);
}
void err_fun(double *nom_x, double *delta_x, double *out_3792382315294674748) {
   out_3792382315294674748[0] = delta_x[0] + nom_x[0];
   out_3792382315294674748[1] = delta_x[1] + nom_x[1];
   out_3792382315294674748[2] = delta_x[2] + nom_x[2];
   out_3792382315294674748[3] = -0.5*delta_x[3]*nom_x[4] - 0.5*delta_x[4]*nom_x[5] - 0.5*delta_x[5]*nom_x[6] + 1.0*nom_x[3];
   out_3792382315294674748[4] = 0.5*delta_x[3]*nom_x[3] + 0.5*delta_x[4]*nom_x[6] - 0.5*delta_x[5]*nom_x[5] + 1.0*nom_x[4];
   out_3792382315294674748[5] = -0.5*delta_x[3]*nom_x[6] + 0.5*delta_x[4]*nom_x[3] + 0.5*delta_x[5]*nom_x[4] + 1.0*nom_x[5];
   out_3792382315294674748[6] = 0.5*delta_x[3]*nom_x[5] - 0.5*delta_x[4]*nom_x[4] + 0.5*delta_x[5]*nom_x[3] + 1.0*nom_x[6];
   out_3792382315294674748[7] = delta_x[6] + nom_x[7];
   out_3792382315294674748[8] = delta_x[7] + nom_x[8];
   out_3792382315294674748[9] = delta_x[8] + nom_x[9];
   out_3792382315294674748[10] = delta_x[9] + nom_x[10];
   out_3792382315294674748[11] = delta_x[10] + nom_x[11];
   out_3792382315294674748[12] = delta_x[11] + nom_x[12];
   out_3792382315294674748[13] = delta_x[12] + nom_x[13];
   out_3792382315294674748[14] = delta_x[13] + nom_x[14];
   out_3792382315294674748[15] = delta_x[14] + nom_x[15];
   out_3792382315294674748[16] = delta_x[15] + nom_x[16];
   out_3792382315294674748[17] = delta_x[16] + nom_x[17];
   out_3792382315294674748[18] = delta_x[17] + nom_x[18];
   out_3792382315294674748[19] = delta_x[18] + nom_x[19];
   out_3792382315294674748[20] = delta_x[19] + nom_x[20];
   out_3792382315294674748[21] = delta_x[20] + nom_x[21];
}
void inv_err_fun(double *nom_x, double *true_x, double *out_6340804207628921062) {
   out_6340804207628921062[0] = -nom_x[0] + true_x[0];
   out_6340804207628921062[1] = -nom_x[1] + true_x[1];
   out_6340804207628921062[2] = -nom_x[2] + true_x[2];
   out_6340804207628921062[3] = 2*nom_x[3]*true_x[4] - 2*nom_x[4]*true_x[3] + 2*nom_x[5]*true_x[6] - 2*nom_x[6]*true_x[5];
   out_6340804207628921062[4] = 2*nom_x[3]*true_x[5] - 2*nom_x[4]*true_x[6] - 2*nom_x[5]*true_x[3] + 2*nom_x[6]*true_x[4];
   out_6340804207628921062[5] = 2*nom_x[3]*true_x[6] + 2*nom_x[4]*true_x[5] - 2*nom_x[5]*true_x[4] - 2*nom_x[6]*true_x[3];
   out_6340804207628921062[6] = -nom_x[7] + true_x[7];
   out_6340804207628921062[7] = -nom_x[8] + true_x[8];
   out_6340804207628921062[8] = -nom_x[9] + true_x[9];
   out_6340804207628921062[9] = -nom_x[10] + true_x[10];
   out_6340804207628921062[10] = -nom_x[11] + true_x[11];
   out_6340804207628921062[11] = -nom_x[12] + true_x[12];
   out_6340804207628921062[12] = -nom_x[13] + true_x[13];
   out_6340804207628921062[13] = -nom_x[14] + true_x[14];
   out_6340804207628921062[14] = -nom_x[15] + true_x[15];
   out_6340804207628921062[15] = -nom_x[16] + true_x[16];
   out_6340804207628921062[16] = -nom_x[17] + true_x[17];
   out_6340804207628921062[17] = -nom_x[18] + true_x[18];
   out_6340804207628921062[18] = -nom_x[19] + true_x[19];
   out_6340804207628921062[19] = -nom_x[20] + true_x[20];
   out_6340804207628921062[20] = -nom_x[21] + true_x[21];
}
void H_mod_fun(double *state, double *out_1718859822839648252) {
   out_1718859822839648252[0] = 1.0;
   out_1718859822839648252[1] = 0;
   out_1718859822839648252[2] = 0;
   out_1718859822839648252[3] = 0;
   out_1718859822839648252[4] = 0;
   out_1718859822839648252[5] = 0;
   out_1718859822839648252[6] = 0;
   out_1718859822839648252[7] = 0;
   out_1718859822839648252[8] = 0;
   out_1718859822839648252[9] = 0;
   out_1718859822839648252[10] = 0;
   out_1718859822839648252[11] = 0;
   out_1718859822839648252[12] = 0;
   out_1718859822839648252[13] = 0;
   out_1718859822839648252[14] = 0;
   out_1718859822839648252[15] = 0;
   out_1718859822839648252[16] = 0;
   out_1718859822839648252[17] = 0;
   out_1718859822839648252[18] = 0;
   out_1718859822839648252[19] = 0;
   out_1718859822839648252[20] = 0;
   out_1718859822839648252[21] = 0;
   out_1718859822839648252[22] = 1.0;
   out_1718859822839648252[23] = 0;
   out_1718859822839648252[24] = 0;
   out_1718859822839648252[25] = 0;
   out_1718859822839648252[26] = 0;
   out_1718859822839648252[27] = 0;
   out_1718859822839648252[28] = 0;
   out_1718859822839648252[29] = 0;
   out_1718859822839648252[30] = 0;
   out_1718859822839648252[31] = 0;
   out_1718859822839648252[32] = 0;
   out_1718859822839648252[33] = 0;
   out_1718859822839648252[34] = 0;
   out_1718859822839648252[35] = 0;
   out_1718859822839648252[36] = 0;
   out_1718859822839648252[37] = 0;
   out_1718859822839648252[38] = 0;
   out_1718859822839648252[39] = 0;
   out_1718859822839648252[40] = 0;
   out_1718859822839648252[41] = 0;
   out_1718859822839648252[42] = 0;
   out_1718859822839648252[43] = 0;
   out_1718859822839648252[44] = 1.0;
   out_1718859822839648252[45] = 0;
   out_1718859822839648252[46] = 0;
   out_1718859822839648252[47] = 0;
   out_1718859822839648252[48] = 0;
   out_1718859822839648252[49] = 0;
   out_1718859822839648252[50] = 0;
   out_1718859822839648252[51] = 0;
   out_1718859822839648252[52] = 0;
   out_1718859822839648252[53] = 0;
   out_1718859822839648252[54] = 0;
   out_1718859822839648252[55] = 0;
   out_1718859822839648252[56] = 0;
   out_1718859822839648252[57] = 0;
   out_1718859822839648252[58] = 0;
   out_1718859822839648252[59] = 0;
   out_1718859822839648252[60] = 0;
   out_1718859822839648252[61] = 0;
   out_1718859822839648252[62] = 0;
   out_1718859822839648252[63] = 0;
   out_1718859822839648252[64] = 0;
   out_1718859822839648252[65] = 0;
   out_1718859822839648252[66] = -0.5*state[4];
   out_1718859822839648252[67] = -0.5*state[5];
   out_1718859822839648252[68] = -0.5*state[6];
   out_1718859822839648252[69] = 0;
   out_1718859822839648252[70] = 0;
   out_1718859822839648252[71] = 0;
   out_1718859822839648252[72] = 0;
   out_1718859822839648252[73] = 0;
   out_1718859822839648252[74] = 0;
   out_1718859822839648252[75] = 0;
   out_1718859822839648252[76] = 0;
   out_1718859822839648252[77] = 0;
   out_1718859822839648252[78] = 0;
   out_1718859822839648252[79] = 0;
   out_1718859822839648252[80] = 0;
   out_1718859822839648252[81] = 0;
   out_1718859822839648252[82] = 0;
   out_1718859822839648252[83] = 0;
   out_1718859822839648252[84] = 0;
   out_1718859822839648252[85] = 0;
   out_1718859822839648252[86] = 0;
   out_1718859822839648252[87] = 0.5*state[3];
   out_1718859822839648252[88] = 0.5*state[6];
   out_1718859822839648252[89] = -0.5*state[5];
   out_1718859822839648252[90] = 0;
   out_1718859822839648252[91] = 0;
   out_1718859822839648252[92] = 0;
   out_1718859822839648252[93] = 0;
   out_1718859822839648252[94] = 0;
   out_1718859822839648252[95] = 0;
   out_1718859822839648252[96] = 0;
   out_1718859822839648252[97] = 0;
   out_1718859822839648252[98] = 0;
   out_1718859822839648252[99] = 0;
   out_1718859822839648252[100] = 0;
   out_1718859822839648252[101] = 0;
   out_1718859822839648252[102] = 0;
   out_1718859822839648252[103] = 0;
   out_1718859822839648252[104] = 0;
   out_1718859822839648252[105] = 0;
   out_1718859822839648252[106] = 0;
   out_1718859822839648252[107] = 0;
   out_1718859822839648252[108] = -0.5*state[6];
   out_1718859822839648252[109] = 0.5*state[3];
   out_1718859822839648252[110] = 0.5*state[4];
   out_1718859822839648252[111] = 0;
   out_1718859822839648252[112] = 0;
   out_1718859822839648252[113] = 0;
   out_1718859822839648252[114] = 0;
   out_1718859822839648252[115] = 0;
   out_1718859822839648252[116] = 0;
   out_1718859822839648252[117] = 0;
   out_1718859822839648252[118] = 0;
   out_1718859822839648252[119] = 0;
   out_1718859822839648252[120] = 0;
   out_1718859822839648252[121] = 0;
   out_1718859822839648252[122] = 0;
   out_1718859822839648252[123] = 0;
   out_1718859822839648252[124] = 0;
   out_1718859822839648252[125] = 0;
   out_1718859822839648252[126] = 0;
   out_1718859822839648252[127] = 0;
   out_1718859822839648252[128] = 0;
   out_1718859822839648252[129] = 0.5*state[5];
   out_1718859822839648252[130] = -0.5*state[4];
   out_1718859822839648252[131] = 0.5*state[3];
   out_1718859822839648252[132] = 0;
   out_1718859822839648252[133] = 0;
   out_1718859822839648252[134] = 0;
   out_1718859822839648252[135] = 0;
   out_1718859822839648252[136] = 0;
   out_1718859822839648252[137] = 0;
   out_1718859822839648252[138] = 0;
   out_1718859822839648252[139] = 0;
   out_1718859822839648252[140] = 0;
   out_1718859822839648252[141] = 0;
   out_1718859822839648252[142] = 0;
   out_1718859822839648252[143] = 0;
   out_1718859822839648252[144] = 0;
   out_1718859822839648252[145] = 0;
   out_1718859822839648252[146] = 0;
   out_1718859822839648252[147] = 0;
   out_1718859822839648252[148] = 0;
   out_1718859822839648252[149] = 0;
   out_1718859822839648252[150] = 0;
   out_1718859822839648252[151] = 0;
   out_1718859822839648252[152] = 0;
   out_1718859822839648252[153] = 1.0;
   out_1718859822839648252[154] = 0;
   out_1718859822839648252[155] = 0;
   out_1718859822839648252[156] = 0;
   out_1718859822839648252[157] = 0;
   out_1718859822839648252[158] = 0;
   out_1718859822839648252[159] = 0;
   out_1718859822839648252[160] = 0;
   out_1718859822839648252[161] = 0;
   out_1718859822839648252[162] = 0;
   out_1718859822839648252[163] = 0;
   out_1718859822839648252[164] = 0;
   out_1718859822839648252[165] = 0;
   out_1718859822839648252[166] = 0;
   out_1718859822839648252[167] = 0;
   out_1718859822839648252[168] = 0;
   out_1718859822839648252[169] = 0;
   out_1718859822839648252[170] = 0;
   out_1718859822839648252[171] = 0;
   out_1718859822839648252[172] = 0;
   out_1718859822839648252[173] = 0;
   out_1718859822839648252[174] = 0;
   out_1718859822839648252[175] = 1.0;
   out_1718859822839648252[176] = 0;
   out_1718859822839648252[177] = 0;
   out_1718859822839648252[178] = 0;
   out_1718859822839648252[179] = 0;
   out_1718859822839648252[180] = 0;
   out_1718859822839648252[181] = 0;
   out_1718859822839648252[182] = 0;
   out_1718859822839648252[183] = 0;
   out_1718859822839648252[184] = 0;
   out_1718859822839648252[185] = 0;
   out_1718859822839648252[186] = 0;
   out_1718859822839648252[187] = 0;
   out_1718859822839648252[188] = 0;
   out_1718859822839648252[189] = 0;
   out_1718859822839648252[190] = 0;
   out_1718859822839648252[191] = 0;
   out_1718859822839648252[192] = 0;
   out_1718859822839648252[193] = 0;
   out_1718859822839648252[194] = 0;
   out_1718859822839648252[195] = 0;
   out_1718859822839648252[196] = 0;
   out_1718859822839648252[197] = 1.0;
   out_1718859822839648252[198] = 0;
   out_1718859822839648252[199] = 0;
   out_1718859822839648252[200] = 0;
   out_1718859822839648252[201] = 0;
   out_1718859822839648252[202] = 0;
   out_1718859822839648252[203] = 0;
   out_1718859822839648252[204] = 0;
   out_1718859822839648252[205] = 0;
   out_1718859822839648252[206] = 0;
   out_1718859822839648252[207] = 0;
   out_1718859822839648252[208] = 0;
   out_1718859822839648252[209] = 0;
   out_1718859822839648252[210] = 0;
   out_1718859822839648252[211] = 0;
   out_1718859822839648252[212] = 0;
   out_1718859822839648252[213] = 0;
   out_1718859822839648252[214] = 0;
   out_1718859822839648252[215] = 0;
   out_1718859822839648252[216] = 0;
   out_1718859822839648252[217] = 0;
   out_1718859822839648252[218] = 0;
   out_1718859822839648252[219] = 1.0;
   out_1718859822839648252[220] = 0;
   out_1718859822839648252[221] = 0;
   out_1718859822839648252[222] = 0;
   out_1718859822839648252[223] = 0;
   out_1718859822839648252[224] = 0;
   out_1718859822839648252[225] = 0;
   out_1718859822839648252[226] = 0;
   out_1718859822839648252[227] = 0;
   out_1718859822839648252[228] = 0;
   out_1718859822839648252[229] = 0;
   out_1718859822839648252[230] = 0;
   out_1718859822839648252[231] = 0;
   out_1718859822839648252[232] = 0;
   out_1718859822839648252[233] = 0;
   out_1718859822839648252[234] = 0;
   out_1718859822839648252[235] = 0;
   out_1718859822839648252[236] = 0;
   out_1718859822839648252[237] = 0;
   out_1718859822839648252[238] = 0;
   out_1718859822839648252[239] = 0;
   out_1718859822839648252[240] = 0;
   out_1718859822839648252[241] = 1.0;
   out_1718859822839648252[242] = 0;
   out_1718859822839648252[243] = 0;
   out_1718859822839648252[244] = 0;
   out_1718859822839648252[245] = 0;
   out_1718859822839648252[246] = 0;
   out_1718859822839648252[247] = 0;
   out_1718859822839648252[248] = 0;
   out_1718859822839648252[249] = 0;
   out_1718859822839648252[250] = 0;
   out_1718859822839648252[251] = 0;
   out_1718859822839648252[252] = 0;
   out_1718859822839648252[253] = 0;
   out_1718859822839648252[254] = 0;
   out_1718859822839648252[255] = 0;
   out_1718859822839648252[256] = 0;
   out_1718859822839648252[257] = 0;
   out_1718859822839648252[258] = 0;
   out_1718859822839648252[259] = 0;
   out_1718859822839648252[260] = 0;
   out_1718859822839648252[261] = 0;
   out_1718859822839648252[262] = 0;
   out_1718859822839648252[263] = 1.0;
   out_1718859822839648252[264] = 0;
   out_1718859822839648252[265] = 0;
   out_1718859822839648252[266] = 0;
   out_1718859822839648252[267] = 0;
   out_1718859822839648252[268] = 0;
   out_1718859822839648252[269] = 0;
   out_1718859822839648252[270] = 0;
   out_1718859822839648252[271] = 0;
   out_1718859822839648252[272] = 0;
   out_1718859822839648252[273] = 0;
   out_1718859822839648252[274] = 0;
   out_1718859822839648252[275] = 0;
   out_1718859822839648252[276] = 0;
   out_1718859822839648252[277] = 0;
   out_1718859822839648252[278] = 0;
   out_1718859822839648252[279] = 0;
   out_1718859822839648252[280] = 0;
   out_1718859822839648252[281] = 0;
   out_1718859822839648252[282] = 0;
   out_1718859822839648252[283] = 0;
   out_1718859822839648252[284] = 0;
   out_1718859822839648252[285] = 1.0;
   out_1718859822839648252[286] = 0;
   out_1718859822839648252[287] = 0;
   out_1718859822839648252[288] = 0;
   out_1718859822839648252[289] = 0;
   out_1718859822839648252[290] = 0;
   out_1718859822839648252[291] = 0;
   out_1718859822839648252[292] = 0;
   out_1718859822839648252[293] = 0;
   out_1718859822839648252[294] = 0;
   out_1718859822839648252[295] = 0;
   out_1718859822839648252[296] = 0;
   out_1718859822839648252[297] = 0;
   out_1718859822839648252[298] = 0;
   out_1718859822839648252[299] = 0;
   out_1718859822839648252[300] = 0;
   out_1718859822839648252[301] = 0;
   out_1718859822839648252[302] = 0;
   out_1718859822839648252[303] = 0;
   out_1718859822839648252[304] = 0;
   out_1718859822839648252[305] = 0;
   out_1718859822839648252[306] = 0;
   out_1718859822839648252[307] = 1.0;
   out_1718859822839648252[308] = 0;
   out_1718859822839648252[309] = 0;
   out_1718859822839648252[310] = 0;
   out_1718859822839648252[311] = 0;
   out_1718859822839648252[312] = 0;
   out_1718859822839648252[313] = 0;
   out_1718859822839648252[314] = 0;
   out_1718859822839648252[315] = 0;
   out_1718859822839648252[316] = 0;
   out_1718859822839648252[317] = 0;
   out_1718859822839648252[318] = 0;
   out_1718859822839648252[319] = 0;
   out_1718859822839648252[320] = 0;
   out_1718859822839648252[321] = 0;
   out_1718859822839648252[322] = 0;
   out_1718859822839648252[323] = 0;
   out_1718859822839648252[324] = 0;
   out_1718859822839648252[325] = 0;
   out_1718859822839648252[326] = 0;
   out_1718859822839648252[327] = 0;
   out_1718859822839648252[328] = 0;
   out_1718859822839648252[329] = 1.0;
   out_1718859822839648252[330] = 0;
   out_1718859822839648252[331] = 0;
   out_1718859822839648252[332] = 0;
   out_1718859822839648252[333] = 0;
   out_1718859822839648252[334] = 0;
   out_1718859822839648252[335] = 0;
   out_1718859822839648252[336] = 0;
   out_1718859822839648252[337] = 0;
   out_1718859822839648252[338] = 0;
   out_1718859822839648252[339] = 0;
   out_1718859822839648252[340] = 0;
   out_1718859822839648252[341] = 0;
   out_1718859822839648252[342] = 0;
   out_1718859822839648252[343] = 0;
   out_1718859822839648252[344] = 0;
   out_1718859822839648252[345] = 0;
   out_1718859822839648252[346] = 0;
   out_1718859822839648252[347] = 0;
   out_1718859822839648252[348] = 0;
   out_1718859822839648252[349] = 0;
   out_1718859822839648252[350] = 0;
   out_1718859822839648252[351] = 1.0;
   out_1718859822839648252[352] = 0;
   out_1718859822839648252[353] = 0;
   out_1718859822839648252[354] = 0;
   out_1718859822839648252[355] = 0;
   out_1718859822839648252[356] = 0;
   out_1718859822839648252[357] = 0;
   out_1718859822839648252[358] = 0;
   out_1718859822839648252[359] = 0;
   out_1718859822839648252[360] = 0;
   out_1718859822839648252[361] = 0;
   out_1718859822839648252[362] = 0;
   out_1718859822839648252[363] = 0;
   out_1718859822839648252[364] = 0;
   out_1718859822839648252[365] = 0;
   out_1718859822839648252[366] = 0;
   out_1718859822839648252[367] = 0;
   out_1718859822839648252[368] = 0;
   out_1718859822839648252[369] = 0;
   out_1718859822839648252[370] = 0;
   out_1718859822839648252[371] = 0;
   out_1718859822839648252[372] = 0;
   out_1718859822839648252[373] = 1.0;
   out_1718859822839648252[374] = 0;
   out_1718859822839648252[375] = 0;
   out_1718859822839648252[376] = 0;
   out_1718859822839648252[377] = 0;
   out_1718859822839648252[378] = 0;
   out_1718859822839648252[379] = 0;
   out_1718859822839648252[380] = 0;
   out_1718859822839648252[381] = 0;
   out_1718859822839648252[382] = 0;
   out_1718859822839648252[383] = 0;
   out_1718859822839648252[384] = 0;
   out_1718859822839648252[385] = 0;
   out_1718859822839648252[386] = 0;
   out_1718859822839648252[387] = 0;
   out_1718859822839648252[388] = 0;
   out_1718859822839648252[389] = 0;
   out_1718859822839648252[390] = 0;
   out_1718859822839648252[391] = 0;
   out_1718859822839648252[392] = 0;
   out_1718859822839648252[393] = 0;
   out_1718859822839648252[394] = 0;
   out_1718859822839648252[395] = 1.0;
   out_1718859822839648252[396] = 0;
   out_1718859822839648252[397] = 0;
   out_1718859822839648252[398] = 0;
   out_1718859822839648252[399] = 0;
   out_1718859822839648252[400] = 0;
   out_1718859822839648252[401] = 0;
   out_1718859822839648252[402] = 0;
   out_1718859822839648252[403] = 0;
   out_1718859822839648252[404] = 0;
   out_1718859822839648252[405] = 0;
   out_1718859822839648252[406] = 0;
   out_1718859822839648252[407] = 0;
   out_1718859822839648252[408] = 0;
   out_1718859822839648252[409] = 0;
   out_1718859822839648252[410] = 0;
   out_1718859822839648252[411] = 0;
   out_1718859822839648252[412] = 0;
   out_1718859822839648252[413] = 0;
   out_1718859822839648252[414] = 0;
   out_1718859822839648252[415] = 0;
   out_1718859822839648252[416] = 0;
   out_1718859822839648252[417] = 1.0;
   out_1718859822839648252[418] = 0;
   out_1718859822839648252[419] = 0;
   out_1718859822839648252[420] = 0;
   out_1718859822839648252[421] = 0;
   out_1718859822839648252[422] = 0;
   out_1718859822839648252[423] = 0;
   out_1718859822839648252[424] = 0;
   out_1718859822839648252[425] = 0;
   out_1718859822839648252[426] = 0;
   out_1718859822839648252[427] = 0;
   out_1718859822839648252[428] = 0;
   out_1718859822839648252[429] = 0;
   out_1718859822839648252[430] = 0;
   out_1718859822839648252[431] = 0;
   out_1718859822839648252[432] = 0;
   out_1718859822839648252[433] = 0;
   out_1718859822839648252[434] = 0;
   out_1718859822839648252[435] = 0;
   out_1718859822839648252[436] = 0;
   out_1718859822839648252[437] = 0;
   out_1718859822839648252[438] = 0;
   out_1718859822839648252[439] = 1.0;
   out_1718859822839648252[440] = 0;
   out_1718859822839648252[441] = 0;
   out_1718859822839648252[442] = 0;
   out_1718859822839648252[443] = 0;
   out_1718859822839648252[444] = 0;
   out_1718859822839648252[445] = 0;
   out_1718859822839648252[446] = 0;
   out_1718859822839648252[447] = 0;
   out_1718859822839648252[448] = 0;
   out_1718859822839648252[449] = 0;
   out_1718859822839648252[450] = 0;
   out_1718859822839648252[451] = 0;
   out_1718859822839648252[452] = 0;
   out_1718859822839648252[453] = 0;
   out_1718859822839648252[454] = 0;
   out_1718859822839648252[455] = 0;
   out_1718859822839648252[456] = 0;
   out_1718859822839648252[457] = 0;
   out_1718859822839648252[458] = 0;
   out_1718859822839648252[459] = 0;
   out_1718859822839648252[460] = 0;
   out_1718859822839648252[461] = 1.0;
}
void f_fun(double *state, double dt, double *out_7262865851673750904) {
   out_7262865851673750904[0] = dt*state[7] + state[0];
   out_7262865851673750904[1] = dt*state[8] + state[1];
   out_7262865851673750904[2] = dt*state[9] + state[2];
   out_7262865851673750904[3] = dt*(-0.5*state[4]*state[10] - 0.5*state[5]*state[11] - 0.5*state[6]*state[12]) + state[3];
   out_7262865851673750904[4] = dt*(0.5*state[3]*state[10] + 0.5*state[5]*state[12] - 0.5*state[6]*state[11]) + state[4];
   out_7262865851673750904[5] = dt*(0.5*state[3]*state[11] - 0.5*state[4]*state[12] + 0.5*state[6]*state[10]) + state[5];
   out_7262865851673750904[6] = dt*(0.5*state[3]*state[12] + 0.5*state[4]*state[11] - 0.5*state[5]*state[10]) + state[6];
   out_7262865851673750904[7] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]) + state[7];
   out_7262865851673750904[8] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]) + state[8];
   out_7262865851673750904[9] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]) + state[9];
   out_7262865851673750904[10] = state[10];
   out_7262865851673750904[11] = state[11];
   out_7262865851673750904[12] = state[12];
   out_7262865851673750904[13] = state[13];
   out_7262865851673750904[14] = state[14];
   out_7262865851673750904[15] = state[15];
   out_7262865851673750904[16] = state[16];
   out_7262865851673750904[17] = state[17];
   out_7262865851673750904[18] = state[18];
   out_7262865851673750904[19] = state[19];
   out_7262865851673750904[20] = state[20];
   out_7262865851673750904[21] = state[21];
}
void F_fun(double *state, double dt, double *out_4916456392957247147) {
   out_4916456392957247147[0] = 1;
   out_4916456392957247147[1] = 0;
   out_4916456392957247147[2] = 0;
   out_4916456392957247147[3] = 0;
   out_4916456392957247147[4] = 0;
   out_4916456392957247147[5] = 0;
   out_4916456392957247147[6] = dt;
   out_4916456392957247147[7] = 0;
   out_4916456392957247147[8] = 0;
   out_4916456392957247147[9] = 0;
   out_4916456392957247147[10] = 0;
   out_4916456392957247147[11] = 0;
   out_4916456392957247147[12] = 0;
   out_4916456392957247147[13] = 0;
   out_4916456392957247147[14] = 0;
   out_4916456392957247147[15] = 0;
   out_4916456392957247147[16] = 0;
   out_4916456392957247147[17] = 0;
   out_4916456392957247147[18] = 0;
   out_4916456392957247147[19] = 0;
   out_4916456392957247147[20] = 0;
   out_4916456392957247147[21] = 0;
   out_4916456392957247147[22] = 1;
   out_4916456392957247147[23] = 0;
   out_4916456392957247147[24] = 0;
   out_4916456392957247147[25] = 0;
   out_4916456392957247147[26] = 0;
   out_4916456392957247147[27] = 0;
   out_4916456392957247147[28] = dt;
   out_4916456392957247147[29] = 0;
   out_4916456392957247147[30] = 0;
   out_4916456392957247147[31] = 0;
   out_4916456392957247147[32] = 0;
   out_4916456392957247147[33] = 0;
   out_4916456392957247147[34] = 0;
   out_4916456392957247147[35] = 0;
   out_4916456392957247147[36] = 0;
   out_4916456392957247147[37] = 0;
   out_4916456392957247147[38] = 0;
   out_4916456392957247147[39] = 0;
   out_4916456392957247147[40] = 0;
   out_4916456392957247147[41] = 0;
   out_4916456392957247147[42] = 0;
   out_4916456392957247147[43] = 0;
   out_4916456392957247147[44] = 1;
   out_4916456392957247147[45] = 0;
   out_4916456392957247147[46] = 0;
   out_4916456392957247147[47] = 0;
   out_4916456392957247147[48] = 0;
   out_4916456392957247147[49] = 0;
   out_4916456392957247147[50] = dt;
   out_4916456392957247147[51] = 0;
   out_4916456392957247147[52] = 0;
   out_4916456392957247147[53] = 0;
   out_4916456392957247147[54] = 0;
   out_4916456392957247147[55] = 0;
   out_4916456392957247147[56] = 0;
   out_4916456392957247147[57] = 0;
   out_4916456392957247147[58] = 0;
   out_4916456392957247147[59] = 0;
   out_4916456392957247147[60] = 0;
   out_4916456392957247147[61] = 0;
   out_4916456392957247147[62] = 0;
   out_4916456392957247147[63] = 0;
   out_4916456392957247147[64] = 0;
   out_4916456392957247147[65] = 0;
   out_4916456392957247147[66] = 1;
   out_4916456392957247147[67] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[11] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_4916456392957247147[68] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[12] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[10] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[11]);
   out_4916456392957247147[69] = 0;
   out_4916456392957247147[70] = 0;
   out_4916456392957247147[71] = 0;
   out_4916456392957247147[72] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_4916456392957247147[73] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_4916456392957247147[74] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_4916456392957247147[75] = 0;
   out_4916456392957247147[76] = 0;
   out_4916456392957247147[77] = 0;
   out_4916456392957247147[78] = 0;
   out_4916456392957247147[79] = 0;
   out_4916456392957247147[80] = 0;
   out_4916456392957247147[81] = 0;
   out_4916456392957247147[82] = 0;
   out_4916456392957247147[83] = 0;
   out_4916456392957247147[84] = 0;
   out_4916456392957247147[85] = 0;
   out_4916456392957247147[86] = 0;
   out_4916456392957247147[87] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[11] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_4916456392957247147[88] = 1;
   out_4916456392957247147[89] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[12] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[11] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[10]);
   out_4916456392957247147[90] = 0;
   out_4916456392957247147[91] = 0;
   out_4916456392957247147[92] = 0;
   out_4916456392957247147[93] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_4916456392957247147[94] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_4916456392957247147[95] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_4916456392957247147[96] = 0;
   out_4916456392957247147[97] = 0;
   out_4916456392957247147[98] = 0;
   out_4916456392957247147[99] = 0;
   out_4916456392957247147[100] = 0;
   out_4916456392957247147[101] = 0;
   out_4916456392957247147[102] = 0;
   out_4916456392957247147[103] = 0;
   out_4916456392957247147[104] = 0;
   out_4916456392957247147[105] = 0;
   out_4916456392957247147[106] = 0;
   out_4916456392957247147[107] = 0;
   out_4916456392957247147[108] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[12] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[10] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[11]);
   out_4916456392957247147[109] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[12] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[11] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[10]);
   out_4916456392957247147[110] = 1;
   out_4916456392957247147[111] = 0;
   out_4916456392957247147[112] = 0;
   out_4916456392957247147[113] = 0;
   out_4916456392957247147[114] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_4916456392957247147[115] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_4916456392957247147[116] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_4916456392957247147[117] = 0;
   out_4916456392957247147[118] = 0;
   out_4916456392957247147[119] = 0;
   out_4916456392957247147[120] = 0;
   out_4916456392957247147[121] = 0;
   out_4916456392957247147[122] = 0;
   out_4916456392957247147[123] = 0;
   out_4916456392957247147[124] = 0;
   out_4916456392957247147[125] = 0;
   out_4916456392957247147[126] = 0;
   out_4916456392957247147[127] = 0;
   out_4916456392957247147[128] = 0;
   out_4916456392957247147[129] = 0;
   out_4916456392957247147[130] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_4916456392957247147[131] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[18] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[16] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[17]);
   out_4916456392957247147[132] = 1;
   out_4916456392957247147[133] = 0;
   out_4916456392957247147[134] = 0;
   out_4916456392957247147[135] = 0;
   out_4916456392957247147[136] = 0;
   out_4916456392957247147[137] = 0;
   out_4916456392957247147[138] = 0;
   out_4916456392957247147[139] = 0;
   out_4916456392957247147[140] = 0;
   out_4916456392957247147[141] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_4916456392957247147[142] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_4916456392957247147[143] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_4916456392957247147[144] = 0;
   out_4916456392957247147[145] = 0;
   out_4916456392957247147[146] = 0;
   out_4916456392957247147[147] = 0;
   out_4916456392957247147[148] = 0;
   out_4916456392957247147[149] = 0;
   out_4916456392957247147[150] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[17] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_4916456392957247147[151] = 0;
   out_4916456392957247147[152] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]);
   out_4916456392957247147[153] = 0;
   out_4916456392957247147[154] = 1;
   out_4916456392957247147[155] = 0;
   out_4916456392957247147[156] = 0;
   out_4916456392957247147[157] = 0;
   out_4916456392957247147[158] = 0;
   out_4916456392957247147[159] = 0;
   out_4916456392957247147[160] = 0;
   out_4916456392957247147[161] = 0;
   out_4916456392957247147[162] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_4916456392957247147[163] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_4916456392957247147[164] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_4916456392957247147[165] = 0;
   out_4916456392957247147[166] = 0;
   out_4916456392957247147[167] = 0;
   out_4916456392957247147[168] = 0;
   out_4916456392957247147[169] = 0;
   out_4916456392957247147[170] = 0;
   out_4916456392957247147[171] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]);
   out_4916456392957247147[172] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[18] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[17] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[16]);
   out_4916456392957247147[173] = 0;
   out_4916456392957247147[174] = 0;
   out_4916456392957247147[175] = 0;
   out_4916456392957247147[176] = 1;
   out_4916456392957247147[177] = 0;
   out_4916456392957247147[178] = 0;
   out_4916456392957247147[179] = 0;
   out_4916456392957247147[180] = 0;
   out_4916456392957247147[181] = 0;
   out_4916456392957247147[182] = 0;
   out_4916456392957247147[183] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_4916456392957247147[184] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_4916456392957247147[185] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_4916456392957247147[186] = 0;
   out_4916456392957247147[187] = 0;
   out_4916456392957247147[188] = 0;
   out_4916456392957247147[189] = 0;
   out_4916456392957247147[190] = 0;
   out_4916456392957247147[191] = 0;
   out_4916456392957247147[192] = 0;
   out_4916456392957247147[193] = 0;
   out_4916456392957247147[194] = 0;
   out_4916456392957247147[195] = 0;
   out_4916456392957247147[196] = 0;
   out_4916456392957247147[197] = 0;
   out_4916456392957247147[198] = 1;
   out_4916456392957247147[199] = 0;
   out_4916456392957247147[200] = 0;
   out_4916456392957247147[201] = 0;
   out_4916456392957247147[202] = 0;
   out_4916456392957247147[203] = 0;
   out_4916456392957247147[204] = 0;
   out_4916456392957247147[205] = 0;
   out_4916456392957247147[206] = 0;
   out_4916456392957247147[207] = 0;
   out_4916456392957247147[208] = 0;
   out_4916456392957247147[209] = 0;
   out_4916456392957247147[210] = 0;
   out_4916456392957247147[211] = 0;
   out_4916456392957247147[212] = 0;
   out_4916456392957247147[213] = 0;
   out_4916456392957247147[214] = 0;
   out_4916456392957247147[215] = 0;
   out_4916456392957247147[216] = 0;
   out_4916456392957247147[217] = 0;
   out_4916456392957247147[218] = 0;
   out_4916456392957247147[219] = 0;
   out_4916456392957247147[220] = 1;
   out_4916456392957247147[221] = 0;
   out_4916456392957247147[222] = 0;
   out_4916456392957247147[223] = 0;
   out_4916456392957247147[224] = 0;
   out_4916456392957247147[225] = 0;
   out_4916456392957247147[226] = 0;
   out_4916456392957247147[227] = 0;
   out_4916456392957247147[228] = 0;
   out_4916456392957247147[229] = 0;
   out_4916456392957247147[230] = 0;
   out_4916456392957247147[231] = 0;
   out_4916456392957247147[232] = 0;
   out_4916456392957247147[233] = 0;
   out_4916456392957247147[234] = 0;
   out_4916456392957247147[235] = 0;
   out_4916456392957247147[236] = 0;
   out_4916456392957247147[237] = 0;
   out_4916456392957247147[238] = 0;
   out_4916456392957247147[239] = 0;
   out_4916456392957247147[240] = 0;
   out_4916456392957247147[241] = 0;
   out_4916456392957247147[242] = 1;
   out_4916456392957247147[243] = 0;
   out_4916456392957247147[244] = 0;
   out_4916456392957247147[245] = 0;
   out_4916456392957247147[246] = 0;
   out_4916456392957247147[247] = 0;
   out_4916456392957247147[248] = 0;
   out_4916456392957247147[249] = 0;
   out_4916456392957247147[250] = 0;
   out_4916456392957247147[251] = 0;
   out_4916456392957247147[252] = 0;
   out_4916456392957247147[253] = 0;
   out_4916456392957247147[254] = 0;
   out_4916456392957247147[255] = 0;
   out_4916456392957247147[256] = 0;
   out_4916456392957247147[257] = 0;
   out_4916456392957247147[258] = 0;
   out_4916456392957247147[259] = 0;
   out_4916456392957247147[260] = 0;
   out_4916456392957247147[261] = 0;
   out_4916456392957247147[262] = 0;
   out_4916456392957247147[263] = 0;
   out_4916456392957247147[264] = 1;
   out_4916456392957247147[265] = 0;
   out_4916456392957247147[266] = 0;
   out_4916456392957247147[267] = 0;
   out_4916456392957247147[268] = 0;
   out_4916456392957247147[269] = 0;
   out_4916456392957247147[270] = 0;
   out_4916456392957247147[271] = 0;
   out_4916456392957247147[272] = 0;
   out_4916456392957247147[273] = 0;
   out_4916456392957247147[274] = 0;
   out_4916456392957247147[275] = 0;
   out_4916456392957247147[276] = 0;
   out_4916456392957247147[277] = 0;
   out_4916456392957247147[278] = 0;
   out_4916456392957247147[279] = 0;
   out_4916456392957247147[280] = 0;
   out_4916456392957247147[281] = 0;
   out_4916456392957247147[282] = 0;
   out_4916456392957247147[283] = 0;
   out_4916456392957247147[284] = 0;
   out_4916456392957247147[285] = 0;
   out_4916456392957247147[286] = 1;
   out_4916456392957247147[287] = 0;
   out_4916456392957247147[288] = 0;
   out_4916456392957247147[289] = 0;
   out_4916456392957247147[290] = 0;
   out_4916456392957247147[291] = 0;
   out_4916456392957247147[292] = 0;
   out_4916456392957247147[293] = 0;
   out_4916456392957247147[294] = 0;
   out_4916456392957247147[295] = 0;
   out_4916456392957247147[296] = 0;
   out_4916456392957247147[297] = 0;
   out_4916456392957247147[298] = 0;
   out_4916456392957247147[299] = 0;
   out_4916456392957247147[300] = 0;
   out_4916456392957247147[301] = 0;
   out_4916456392957247147[302] = 0;
   out_4916456392957247147[303] = 0;
   out_4916456392957247147[304] = 0;
   out_4916456392957247147[305] = 0;
   out_4916456392957247147[306] = 0;
   out_4916456392957247147[307] = 0;
   out_4916456392957247147[308] = 1;
   out_4916456392957247147[309] = 0;
   out_4916456392957247147[310] = 0;
   out_4916456392957247147[311] = 0;
   out_4916456392957247147[312] = 0;
   out_4916456392957247147[313] = 0;
   out_4916456392957247147[314] = 0;
   out_4916456392957247147[315] = 0;
   out_4916456392957247147[316] = 0;
   out_4916456392957247147[317] = 0;
   out_4916456392957247147[318] = 0;
   out_4916456392957247147[319] = 0;
   out_4916456392957247147[320] = 0;
   out_4916456392957247147[321] = 0;
   out_4916456392957247147[322] = 0;
   out_4916456392957247147[323] = 0;
   out_4916456392957247147[324] = 0;
   out_4916456392957247147[325] = 0;
   out_4916456392957247147[326] = 0;
   out_4916456392957247147[327] = 0;
   out_4916456392957247147[328] = 0;
   out_4916456392957247147[329] = 0;
   out_4916456392957247147[330] = 1;
   out_4916456392957247147[331] = 0;
   out_4916456392957247147[332] = 0;
   out_4916456392957247147[333] = 0;
   out_4916456392957247147[334] = 0;
   out_4916456392957247147[335] = 0;
   out_4916456392957247147[336] = 0;
   out_4916456392957247147[337] = 0;
   out_4916456392957247147[338] = 0;
   out_4916456392957247147[339] = 0;
   out_4916456392957247147[340] = 0;
   out_4916456392957247147[341] = 0;
   out_4916456392957247147[342] = 0;
   out_4916456392957247147[343] = 0;
   out_4916456392957247147[344] = 0;
   out_4916456392957247147[345] = 0;
   out_4916456392957247147[346] = 0;
   out_4916456392957247147[347] = 0;
   out_4916456392957247147[348] = 0;
   out_4916456392957247147[349] = 0;
   out_4916456392957247147[350] = 0;
   out_4916456392957247147[351] = 0;
   out_4916456392957247147[352] = 1;
   out_4916456392957247147[353] = 0;
   out_4916456392957247147[354] = 0;
   out_4916456392957247147[355] = 0;
   out_4916456392957247147[356] = 0;
   out_4916456392957247147[357] = 0;
   out_4916456392957247147[358] = 0;
   out_4916456392957247147[359] = 0;
   out_4916456392957247147[360] = 0;
   out_4916456392957247147[361] = 0;
   out_4916456392957247147[362] = 0;
   out_4916456392957247147[363] = 0;
   out_4916456392957247147[364] = 0;
   out_4916456392957247147[365] = 0;
   out_4916456392957247147[366] = 0;
   out_4916456392957247147[367] = 0;
   out_4916456392957247147[368] = 0;
   out_4916456392957247147[369] = 0;
   out_4916456392957247147[370] = 0;
   out_4916456392957247147[371] = 0;
   out_4916456392957247147[372] = 0;
   out_4916456392957247147[373] = 0;
   out_4916456392957247147[374] = 1;
   out_4916456392957247147[375] = 0;
   out_4916456392957247147[376] = 0;
   out_4916456392957247147[377] = 0;
   out_4916456392957247147[378] = 0;
   out_4916456392957247147[379] = 0;
   out_4916456392957247147[380] = 0;
   out_4916456392957247147[381] = 0;
   out_4916456392957247147[382] = 0;
   out_4916456392957247147[383] = 0;
   out_4916456392957247147[384] = 0;
   out_4916456392957247147[385] = 0;
   out_4916456392957247147[386] = 0;
   out_4916456392957247147[387] = 0;
   out_4916456392957247147[388] = 0;
   out_4916456392957247147[389] = 0;
   out_4916456392957247147[390] = 0;
   out_4916456392957247147[391] = 0;
   out_4916456392957247147[392] = 0;
   out_4916456392957247147[393] = 0;
   out_4916456392957247147[394] = 0;
   out_4916456392957247147[395] = 0;
   out_4916456392957247147[396] = 1;
   out_4916456392957247147[397] = 0;
   out_4916456392957247147[398] = 0;
   out_4916456392957247147[399] = 0;
   out_4916456392957247147[400] = 0;
   out_4916456392957247147[401] = 0;
   out_4916456392957247147[402] = 0;
   out_4916456392957247147[403] = 0;
   out_4916456392957247147[404] = 0;
   out_4916456392957247147[405] = 0;
   out_4916456392957247147[406] = 0;
   out_4916456392957247147[407] = 0;
   out_4916456392957247147[408] = 0;
   out_4916456392957247147[409] = 0;
   out_4916456392957247147[410] = 0;
   out_4916456392957247147[411] = 0;
   out_4916456392957247147[412] = 0;
   out_4916456392957247147[413] = 0;
   out_4916456392957247147[414] = 0;
   out_4916456392957247147[415] = 0;
   out_4916456392957247147[416] = 0;
   out_4916456392957247147[417] = 0;
   out_4916456392957247147[418] = 1;
   out_4916456392957247147[419] = 0;
   out_4916456392957247147[420] = 0;
   out_4916456392957247147[421] = 0;
   out_4916456392957247147[422] = 0;
   out_4916456392957247147[423] = 0;
   out_4916456392957247147[424] = 0;
   out_4916456392957247147[425] = 0;
   out_4916456392957247147[426] = 0;
   out_4916456392957247147[427] = 0;
   out_4916456392957247147[428] = 0;
   out_4916456392957247147[429] = 0;
   out_4916456392957247147[430] = 0;
   out_4916456392957247147[431] = 0;
   out_4916456392957247147[432] = 0;
   out_4916456392957247147[433] = 0;
   out_4916456392957247147[434] = 0;
   out_4916456392957247147[435] = 0;
   out_4916456392957247147[436] = 0;
   out_4916456392957247147[437] = 0;
   out_4916456392957247147[438] = 0;
   out_4916456392957247147[439] = 0;
   out_4916456392957247147[440] = 1;
}
void h_4(double *state, double *unused, double *out_1792082717344732289) {
   out_1792082717344732289[0] = state[10] + state[13];
   out_1792082717344732289[1] = state[11] + state[14];
   out_1792082717344732289[2] = state[12] + state[15];
}
void H_4(double *state, double *unused, double *out_4014718000531922761) {
   out_4014718000531922761[0] = 0;
   out_4014718000531922761[1] = 0;
   out_4014718000531922761[2] = 0;
   out_4014718000531922761[3] = 0;
   out_4014718000531922761[4] = 0;
   out_4014718000531922761[5] = 0;
   out_4014718000531922761[6] = 0;
   out_4014718000531922761[7] = 0;
   out_4014718000531922761[8] = 0;
   out_4014718000531922761[9] = 0;
   out_4014718000531922761[10] = 1;
   out_4014718000531922761[11] = 0;
   out_4014718000531922761[12] = 0;
   out_4014718000531922761[13] = 1;
   out_4014718000531922761[14] = 0;
   out_4014718000531922761[15] = 0;
   out_4014718000531922761[16] = 0;
   out_4014718000531922761[17] = 0;
   out_4014718000531922761[18] = 0;
   out_4014718000531922761[19] = 0;
   out_4014718000531922761[20] = 0;
   out_4014718000531922761[21] = 0;
   out_4014718000531922761[22] = 0;
   out_4014718000531922761[23] = 0;
   out_4014718000531922761[24] = 0;
   out_4014718000531922761[25] = 0;
   out_4014718000531922761[26] = 0;
   out_4014718000531922761[27] = 0;
   out_4014718000531922761[28] = 0;
   out_4014718000531922761[29] = 0;
   out_4014718000531922761[30] = 0;
   out_4014718000531922761[31] = 0;
   out_4014718000531922761[32] = 0;
   out_4014718000531922761[33] = 1;
   out_4014718000531922761[34] = 0;
   out_4014718000531922761[35] = 0;
   out_4014718000531922761[36] = 1;
   out_4014718000531922761[37] = 0;
   out_4014718000531922761[38] = 0;
   out_4014718000531922761[39] = 0;
   out_4014718000531922761[40] = 0;
   out_4014718000531922761[41] = 0;
   out_4014718000531922761[42] = 0;
   out_4014718000531922761[43] = 0;
   out_4014718000531922761[44] = 0;
   out_4014718000531922761[45] = 0;
   out_4014718000531922761[46] = 0;
   out_4014718000531922761[47] = 0;
   out_4014718000531922761[48] = 0;
   out_4014718000531922761[49] = 0;
   out_4014718000531922761[50] = 0;
   out_4014718000531922761[51] = 0;
   out_4014718000531922761[52] = 0;
   out_4014718000531922761[53] = 0;
   out_4014718000531922761[54] = 0;
   out_4014718000531922761[55] = 0;
   out_4014718000531922761[56] = 1;
   out_4014718000531922761[57] = 0;
   out_4014718000531922761[58] = 0;
   out_4014718000531922761[59] = 1;
   out_4014718000531922761[60] = 0;
   out_4014718000531922761[61] = 0;
   out_4014718000531922761[62] = 0;
   out_4014718000531922761[63] = 0;
   out_4014718000531922761[64] = 0;
   out_4014718000531922761[65] = 0;
}
void h_9(double *state, double *unused, double *out_1225404672650721348) {
   out_1225404672650721348[0] = state[10];
   out_1225404672650721348[1] = state[11];
   out_1225404672650721348[2] = state[12];
}
void H_9(double *state, double *unused, double *out_4255907647161513406) {
   out_4255907647161513406[0] = 0;
   out_4255907647161513406[1] = 0;
   out_4255907647161513406[2] = 0;
   out_4255907647161513406[3] = 0;
   out_4255907647161513406[4] = 0;
   out_4255907647161513406[5] = 0;
   out_4255907647161513406[6] = 0;
   out_4255907647161513406[7] = 0;
   out_4255907647161513406[8] = 0;
   out_4255907647161513406[9] = 0;
   out_4255907647161513406[10] = 1;
   out_4255907647161513406[11] = 0;
   out_4255907647161513406[12] = 0;
   out_4255907647161513406[13] = 0;
   out_4255907647161513406[14] = 0;
   out_4255907647161513406[15] = 0;
   out_4255907647161513406[16] = 0;
   out_4255907647161513406[17] = 0;
   out_4255907647161513406[18] = 0;
   out_4255907647161513406[19] = 0;
   out_4255907647161513406[20] = 0;
   out_4255907647161513406[21] = 0;
   out_4255907647161513406[22] = 0;
   out_4255907647161513406[23] = 0;
   out_4255907647161513406[24] = 0;
   out_4255907647161513406[25] = 0;
   out_4255907647161513406[26] = 0;
   out_4255907647161513406[27] = 0;
   out_4255907647161513406[28] = 0;
   out_4255907647161513406[29] = 0;
   out_4255907647161513406[30] = 0;
   out_4255907647161513406[31] = 0;
   out_4255907647161513406[32] = 0;
   out_4255907647161513406[33] = 1;
   out_4255907647161513406[34] = 0;
   out_4255907647161513406[35] = 0;
   out_4255907647161513406[36] = 0;
   out_4255907647161513406[37] = 0;
   out_4255907647161513406[38] = 0;
   out_4255907647161513406[39] = 0;
   out_4255907647161513406[40] = 0;
   out_4255907647161513406[41] = 0;
   out_4255907647161513406[42] = 0;
   out_4255907647161513406[43] = 0;
   out_4255907647161513406[44] = 0;
   out_4255907647161513406[45] = 0;
   out_4255907647161513406[46] = 0;
   out_4255907647161513406[47] = 0;
   out_4255907647161513406[48] = 0;
   out_4255907647161513406[49] = 0;
   out_4255907647161513406[50] = 0;
   out_4255907647161513406[51] = 0;
   out_4255907647161513406[52] = 0;
   out_4255907647161513406[53] = 0;
   out_4255907647161513406[54] = 0;
   out_4255907647161513406[55] = 0;
   out_4255907647161513406[56] = 1;
   out_4255907647161513406[57] = 0;
   out_4255907647161513406[58] = 0;
   out_4255907647161513406[59] = 0;
   out_4255907647161513406[60] = 0;
   out_4255907647161513406[61] = 0;
   out_4255907647161513406[62] = 0;
   out_4255907647161513406[63] = 0;
   out_4255907647161513406[64] = 0;
   out_4255907647161513406[65] = 0;
}
void h_10(double *state, double *unused, double *out_8176504100484414595) {
   out_8176504100484414595[0] = 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0] + state[16] + state[19];
   out_8176504100484414595[1] = 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1] + state[17] + state[20];
   out_8176504100484414595[2] = 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[2] + state[18] + state[21];
}
void H_10(double *state, double *unused, double *out_5879538133896681917) {
   out_5879538133896681917[0] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*pow(state[0], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_5879538133896681917[1] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_5879538133896681917[2] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[2];
   out_5879538133896681917[3] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_5879538133896681917[4] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_5879538133896681917[5] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_5879538133896681917[6] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_5879538133896681917[7] = 0;
   out_5879538133896681917[8] = 0;
   out_5879538133896681917[9] = 0;
   out_5879538133896681917[10] = 0;
   out_5879538133896681917[11] = 0;
   out_5879538133896681917[12] = 0;
   out_5879538133896681917[13] = 0;
   out_5879538133896681917[14] = 0;
   out_5879538133896681917[15] = 0;
   out_5879538133896681917[16] = 1;
   out_5879538133896681917[17] = 0;
   out_5879538133896681917[18] = 0;
   out_5879538133896681917[19] = 1;
   out_5879538133896681917[20] = 0;
   out_5879538133896681917[21] = 0;
   out_5879538133896681917[22] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_5879538133896681917[23] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*pow(state[1], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_5879538133896681917[24] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1]*state[2];
   out_5879538133896681917[25] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_5879538133896681917[26] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_5879538133896681917[27] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_5879538133896681917[28] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_5879538133896681917[29] = 0;
   out_5879538133896681917[30] = 0;
   out_5879538133896681917[31] = 0;
   out_5879538133896681917[32] = 0;
   out_5879538133896681917[33] = 0;
   out_5879538133896681917[34] = 0;
   out_5879538133896681917[35] = 0;
   out_5879538133896681917[36] = 0;
   out_5879538133896681917[37] = 0;
   out_5879538133896681917[38] = 0;
   out_5879538133896681917[39] = 1;
   out_5879538133896681917[40] = 0;
   out_5879538133896681917[41] = 0;
   out_5879538133896681917[42] = 1;
   out_5879538133896681917[43] = 0;
   out_5879538133896681917[44] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[0]*state[2];
   out_5879538133896681917[45] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[1]*state[2];
   out_5879538133896681917[46] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*pow(state[2], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_5879538133896681917[47] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_5879538133896681917[48] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_5879538133896681917[49] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_5879538133896681917[50] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_5879538133896681917[51] = 0;
   out_5879538133896681917[52] = 0;
   out_5879538133896681917[53] = 0;
   out_5879538133896681917[54] = 0;
   out_5879538133896681917[55] = 0;
   out_5879538133896681917[56] = 0;
   out_5879538133896681917[57] = 0;
   out_5879538133896681917[58] = 0;
   out_5879538133896681917[59] = 0;
   out_5879538133896681917[60] = 0;
   out_5879538133896681917[61] = 0;
   out_5879538133896681917[62] = 1;
   out_5879538133896681917[63] = 0;
   out_5879538133896681917[64] = 0;
   out_5879538133896681917[65] = 1;
}
void h_12(double *state, double *unused, double *out_2222547155725591662) {
   out_2222547155725591662[0] = state[0];
   out_2222547155725591662[1] = state[1];
   out_2222547155725591662[2] = state[2];
}
void H_12(double *state, double *unused, double *out_9034174408563884556) {
   out_9034174408563884556[0] = 1;
   out_9034174408563884556[1] = 0;
   out_9034174408563884556[2] = 0;
   out_9034174408563884556[3] = 0;
   out_9034174408563884556[4] = 0;
   out_9034174408563884556[5] = 0;
   out_9034174408563884556[6] = 0;
   out_9034174408563884556[7] = 0;
   out_9034174408563884556[8] = 0;
   out_9034174408563884556[9] = 0;
   out_9034174408563884556[10] = 0;
   out_9034174408563884556[11] = 0;
   out_9034174408563884556[12] = 0;
   out_9034174408563884556[13] = 0;
   out_9034174408563884556[14] = 0;
   out_9034174408563884556[15] = 0;
   out_9034174408563884556[16] = 0;
   out_9034174408563884556[17] = 0;
   out_9034174408563884556[18] = 0;
   out_9034174408563884556[19] = 0;
   out_9034174408563884556[20] = 0;
   out_9034174408563884556[21] = 0;
   out_9034174408563884556[22] = 0;
   out_9034174408563884556[23] = 1;
   out_9034174408563884556[24] = 0;
   out_9034174408563884556[25] = 0;
   out_9034174408563884556[26] = 0;
   out_9034174408563884556[27] = 0;
   out_9034174408563884556[28] = 0;
   out_9034174408563884556[29] = 0;
   out_9034174408563884556[30] = 0;
   out_9034174408563884556[31] = 0;
   out_9034174408563884556[32] = 0;
   out_9034174408563884556[33] = 0;
   out_9034174408563884556[34] = 0;
   out_9034174408563884556[35] = 0;
   out_9034174408563884556[36] = 0;
   out_9034174408563884556[37] = 0;
   out_9034174408563884556[38] = 0;
   out_9034174408563884556[39] = 0;
   out_9034174408563884556[40] = 0;
   out_9034174408563884556[41] = 0;
   out_9034174408563884556[42] = 0;
   out_9034174408563884556[43] = 0;
   out_9034174408563884556[44] = 0;
   out_9034174408563884556[45] = 0;
   out_9034174408563884556[46] = 1;
   out_9034174408563884556[47] = 0;
   out_9034174408563884556[48] = 0;
   out_9034174408563884556[49] = 0;
   out_9034174408563884556[50] = 0;
   out_9034174408563884556[51] = 0;
   out_9034174408563884556[52] = 0;
   out_9034174408563884556[53] = 0;
   out_9034174408563884556[54] = 0;
   out_9034174408563884556[55] = 0;
   out_9034174408563884556[56] = 0;
   out_9034174408563884556[57] = 0;
   out_9034174408563884556[58] = 0;
   out_9034174408563884556[59] = 0;
   out_9034174408563884556[60] = 0;
   out_9034174408563884556[61] = 0;
   out_9034174408563884556[62] = 0;
   out_9034174408563884556[63] = 0;
   out_9034174408563884556[64] = 0;
   out_9034174408563884556[65] = 0;
}
void h_35(double *state, double *unused, double *out_7178545893472858923) {
   out_7178545893472858923[0] = state[7];
   out_7178545893472858923[1] = state[8];
   out_7178545893472858923[2] = state[9];
}
void H_35(double *state, double *unused, double *out_6667006632820653351) {
   out_6667006632820653351[0] = 0;
   out_6667006632820653351[1] = 0;
   out_6667006632820653351[2] = 0;
   out_6667006632820653351[3] = 0;
   out_6667006632820653351[4] = 0;
   out_6667006632820653351[5] = 0;
   out_6667006632820653351[6] = 0;
   out_6667006632820653351[7] = 1;
   out_6667006632820653351[8] = 0;
   out_6667006632820653351[9] = 0;
   out_6667006632820653351[10] = 0;
   out_6667006632820653351[11] = 0;
   out_6667006632820653351[12] = 0;
   out_6667006632820653351[13] = 0;
   out_6667006632820653351[14] = 0;
   out_6667006632820653351[15] = 0;
   out_6667006632820653351[16] = 0;
   out_6667006632820653351[17] = 0;
   out_6667006632820653351[18] = 0;
   out_6667006632820653351[19] = 0;
   out_6667006632820653351[20] = 0;
   out_6667006632820653351[21] = 0;
   out_6667006632820653351[22] = 0;
   out_6667006632820653351[23] = 0;
   out_6667006632820653351[24] = 0;
   out_6667006632820653351[25] = 0;
   out_6667006632820653351[26] = 0;
   out_6667006632820653351[27] = 0;
   out_6667006632820653351[28] = 0;
   out_6667006632820653351[29] = 0;
   out_6667006632820653351[30] = 1;
   out_6667006632820653351[31] = 0;
   out_6667006632820653351[32] = 0;
   out_6667006632820653351[33] = 0;
   out_6667006632820653351[34] = 0;
   out_6667006632820653351[35] = 0;
   out_6667006632820653351[36] = 0;
   out_6667006632820653351[37] = 0;
   out_6667006632820653351[38] = 0;
   out_6667006632820653351[39] = 0;
   out_6667006632820653351[40] = 0;
   out_6667006632820653351[41] = 0;
   out_6667006632820653351[42] = 0;
   out_6667006632820653351[43] = 0;
   out_6667006632820653351[44] = 0;
   out_6667006632820653351[45] = 0;
   out_6667006632820653351[46] = 0;
   out_6667006632820653351[47] = 0;
   out_6667006632820653351[48] = 0;
   out_6667006632820653351[49] = 0;
   out_6667006632820653351[50] = 0;
   out_6667006632820653351[51] = 0;
   out_6667006632820653351[52] = 0;
   out_6667006632820653351[53] = 1;
   out_6667006632820653351[54] = 0;
   out_6667006632820653351[55] = 0;
   out_6667006632820653351[56] = 0;
   out_6667006632820653351[57] = 0;
   out_6667006632820653351[58] = 0;
   out_6667006632820653351[59] = 0;
   out_6667006632820653351[60] = 0;
   out_6667006632820653351[61] = 0;
   out_6667006632820653351[62] = 0;
   out_6667006632820653351[63] = 0;
   out_6667006632820653351[64] = 0;
   out_6667006632820653351[65] = 0;
}
void h_32(double *state, double *unused, double *out_3661899460828916794) {
   out_3661899460828916794[0] = state[3];
   out_3661899460828916794[1] = state[4];
   out_3661899460828916794[2] = state[5];
   out_3661899460828916794[3] = state[6];
}
void H_32(double *state, double *unused, double *out_3883348468402235758) {
   out_3883348468402235758[0] = 0;
   out_3883348468402235758[1] = 0;
   out_3883348468402235758[2] = 0;
   out_3883348468402235758[3] = 1;
   out_3883348468402235758[4] = 0;
   out_3883348468402235758[5] = 0;
   out_3883348468402235758[6] = 0;
   out_3883348468402235758[7] = 0;
   out_3883348468402235758[8] = 0;
   out_3883348468402235758[9] = 0;
   out_3883348468402235758[10] = 0;
   out_3883348468402235758[11] = 0;
   out_3883348468402235758[12] = 0;
   out_3883348468402235758[13] = 0;
   out_3883348468402235758[14] = 0;
   out_3883348468402235758[15] = 0;
   out_3883348468402235758[16] = 0;
   out_3883348468402235758[17] = 0;
   out_3883348468402235758[18] = 0;
   out_3883348468402235758[19] = 0;
   out_3883348468402235758[20] = 0;
   out_3883348468402235758[21] = 0;
   out_3883348468402235758[22] = 0;
   out_3883348468402235758[23] = 0;
   out_3883348468402235758[24] = 0;
   out_3883348468402235758[25] = 0;
   out_3883348468402235758[26] = 1;
   out_3883348468402235758[27] = 0;
   out_3883348468402235758[28] = 0;
   out_3883348468402235758[29] = 0;
   out_3883348468402235758[30] = 0;
   out_3883348468402235758[31] = 0;
   out_3883348468402235758[32] = 0;
   out_3883348468402235758[33] = 0;
   out_3883348468402235758[34] = 0;
   out_3883348468402235758[35] = 0;
   out_3883348468402235758[36] = 0;
   out_3883348468402235758[37] = 0;
   out_3883348468402235758[38] = 0;
   out_3883348468402235758[39] = 0;
   out_3883348468402235758[40] = 0;
   out_3883348468402235758[41] = 0;
   out_3883348468402235758[42] = 0;
   out_3883348468402235758[43] = 0;
   out_3883348468402235758[44] = 0;
   out_3883348468402235758[45] = 0;
   out_3883348468402235758[46] = 0;
   out_3883348468402235758[47] = 0;
   out_3883348468402235758[48] = 0;
   out_3883348468402235758[49] = 1;
   out_3883348468402235758[50] = 0;
   out_3883348468402235758[51] = 0;
   out_3883348468402235758[52] = 0;
   out_3883348468402235758[53] = 0;
   out_3883348468402235758[54] = 0;
   out_3883348468402235758[55] = 0;
   out_3883348468402235758[56] = 0;
   out_3883348468402235758[57] = 0;
   out_3883348468402235758[58] = 0;
   out_3883348468402235758[59] = 0;
   out_3883348468402235758[60] = 0;
   out_3883348468402235758[61] = 0;
   out_3883348468402235758[62] = 0;
   out_3883348468402235758[63] = 0;
   out_3883348468402235758[64] = 0;
   out_3883348468402235758[65] = 0;
   out_3883348468402235758[66] = 0;
   out_3883348468402235758[67] = 0;
   out_3883348468402235758[68] = 0;
   out_3883348468402235758[69] = 0;
   out_3883348468402235758[70] = 0;
   out_3883348468402235758[71] = 0;
   out_3883348468402235758[72] = 1;
   out_3883348468402235758[73] = 0;
   out_3883348468402235758[74] = 0;
   out_3883348468402235758[75] = 0;
   out_3883348468402235758[76] = 0;
   out_3883348468402235758[77] = 0;
   out_3883348468402235758[78] = 0;
   out_3883348468402235758[79] = 0;
   out_3883348468402235758[80] = 0;
   out_3883348468402235758[81] = 0;
   out_3883348468402235758[82] = 0;
   out_3883348468402235758[83] = 0;
   out_3883348468402235758[84] = 0;
   out_3883348468402235758[85] = 0;
   out_3883348468402235758[86] = 0;
   out_3883348468402235758[87] = 0;
}
void h_13(double *state, double *unused, double *out_8651793135716573050) {
   out_8651793135716573050[0] = (-2*state[3]*state[5] + 2*state[4]*state[6])*state[9] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[8] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[7];
   out_8651793135716573050[1] = (2*state[3]*state[4] + 2*state[5]*state[6])*state[9] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[7] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[8];
   out_8651793135716573050[2] = (-2*state[3]*state[4] + 2*state[5]*state[6])*state[8] + (2*state[3]*state[5] + 2*state[4]*state[6])*state[7] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[9];
}
void H_13(double *state, double *unused, double *out_4813510092443927636) {
   out_4813510092443927636[0] = 0;
   out_4813510092443927636[1] = 0;
   out_4813510092443927636[2] = 0;
   out_4813510092443927636[3] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_4813510092443927636[4] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_4813510092443927636[5] = -2*state[3]*state[9] + 2*state[4]*state[8] - 2*state[5]*state[7];
   out_4813510092443927636[6] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_4813510092443927636[7] = pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2);
   out_4813510092443927636[8] = 2*state[3]*state[6] + 2*state[4]*state[5];
   out_4813510092443927636[9] = -2*state[3]*state[5] + 2*state[4]*state[6];
   out_4813510092443927636[10] = 0;
   out_4813510092443927636[11] = 0;
   out_4813510092443927636[12] = 0;
   out_4813510092443927636[13] = 0;
   out_4813510092443927636[14] = 0;
   out_4813510092443927636[15] = 0;
   out_4813510092443927636[16] = 0;
   out_4813510092443927636[17] = 0;
   out_4813510092443927636[18] = 0;
   out_4813510092443927636[19] = 0;
   out_4813510092443927636[20] = 0;
   out_4813510092443927636[21] = 0;
   out_4813510092443927636[22] = 0;
   out_4813510092443927636[23] = 0;
   out_4813510092443927636[24] = 0;
   out_4813510092443927636[25] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_4813510092443927636[26] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_4813510092443927636[27] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_4813510092443927636[28] = -2*state[3]*state[7] + 2*state[5]*state[9] - 2*state[6]*state[8];
   out_4813510092443927636[29] = -2*state[3]*state[6] + 2*state[4]*state[5];
   out_4813510092443927636[30] = pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2);
   out_4813510092443927636[31] = 2*state[3]*state[4] + 2*state[5]*state[6];
   out_4813510092443927636[32] = 0;
   out_4813510092443927636[33] = 0;
   out_4813510092443927636[34] = 0;
   out_4813510092443927636[35] = 0;
   out_4813510092443927636[36] = 0;
   out_4813510092443927636[37] = 0;
   out_4813510092443927636[38] = 0;
   out_4813510092443927636[39] = 0;
   out_4813510092443927636[40] = 0;
   out_4813510092443927636[41] = 0;
   out_4813510092443927636[42] = 0;
   out_4813510092443927636[43] = 0;
   out_4813510092443927636[44] = 0;
   out_4813510092443927636[45] = 0;
   out_4813510092443927636[46] = 0;
   out_4813510092443927636[47] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_4813510092443927636[48] = -2*state[3]*state[8] - 2*state[4]*state[9] + 2*state[6]*state[7];
   out_4813510092443927636[49] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_4813510092443927636[50] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_4813510092443927636[51] = 2*state[3]*state[5] + 2*state[4]*state[6];
   out_4813510092443927636[52] = -2*state[3]*state[4] + 2*state[5]*state[6];
   out_4813510092443927636[53] = pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2);
   out_4813510092443927636[54] = 0;
   out_4813510092443927636[55] = 0;
   out_4813510092443927636[56] = 0;
   out_4813510092443927636[57] = 0;
   out_4813510092443927636[58] = 0;
   out_4813510092443927636[59] = 0;
   out_4813510092443927636[60] = 0;
   out_4813510092443927636[61] = 0;
   out_4813510092443927636[62] = 0;
   out_4813510092443927636[63] = 0;
   out_4813510092443927636[64] = 0;
   out_4813510092443927636[65] = 0;
}
void h_14(double *state, double *unused, double *out_1225404672650721348) {
   out_1225404672650721348[0] = state[10];
   out_1225404672650721348[1] = state[11];
   out_1225404672650721348[2] = state[12];
}
void H_14(double *state, double *unused, double *out_4255907647161513406) {
   out_4255907647161513406[0] = 0;
   out_4255907647161513406[1] = 0;
   out_4255907647161513406[2] = 0;
   out_4255907647161513406[3] = 0;
   out_4255907647161513406[4] = 0;
   out_4255907647161513406[5] = 0;
   out_4255907647161513406[6] = 0;
   out_4255907647161513406[7] = 0;
   out_4255907647161513406[8] = 0;
   out_4255907647161513406[9] = 0;
   out_4255907647161513406[10] = 1;
   out_4255907647161513406[11] = 0;
   out_4255907647161513406[12] = 0;
   out_4255907647161513406[13] = 0;
   out_4255907647161513406[14] = 0;
   out_4255907647161513406[15] = 0;
   out_4255907647161513406[16] = 0;
   out_4255907647161513406[17] = 0;
   out_4255907647161513406[18] = 0;
   out_4255907647161513406[19] = 0;
   out_4255907647161513406[20] = 0;
   out_4255907647161513406[21] = 0;
   out_4255907647161513406[22] = 0;
   out_4255907647161513406[23] = 0;
   out_4255907647161513406[24] = 0;
   out_4255907647161513406[25] = 0;
   out_4255907647161513406[26] = 0;
   out_4255907647161513406[27] = 0;
   out_4255907647161513406[28] = 0;
   out_4255907647161513406[29] = 0;
   out_4255907647161513406[30] = 0;
   out_4255907647161513406[31] = 0;
   out_4255907647161513406[32] = 0;
   out_4255907647161513406[33] = 1;
   out_4255907647161513406[34] = 0;
   out_4255907647161513406[35] = 0;
   out_4255907647161513406[36] = 0;
   out_4255907647161513406[37] = 0;
   out_4255907647161513406[38] = 0;
   out_4255907647161513406[39] = 0;
   out_4255907647161513406[40] = 0;
   out_4255907647161513406[41] = 0;
   out_4255907647161513406[42] = 0;
   out_4255907647161513406[43] = 0;
   out_4255907647161513406[44] = 0;
   out_4255907647161513406[45] = 0;
   out_4255907647161513406[46] = 0;
   out_4255907647161513406[47] = 0;
   out_4255907647161513406[48] = 0;
   out_4255907647161513406[49] = 0;
   out_4255907647161513406[50] = 0;
   out_4255907647161513406[51] = 0;
   out_4255907647161513406[52] = 0;
   out_4255907647161513406[53] = 0;
   out_4255907647161513406[54] = 0;
   out_4255907647161513406[55] = 0;
   out_4255907647161513406[56] = 1;
   out_4255907647161513406[57] = 0;
   out_4255907647161513406[58] = 0;
   out_4255907647161513406[59] = 0;
   out_4255907647161513406[60] = 0;
   out_4255907647161513406[61] = 0;
   out_4255907647161513406[62] = 0;
   out_4255907647161513406[63] = 0;
   out_4255907647161513406[64] = 0;
   out_4255907647161513406[65] = 0;
}
void h_33(double *state, double *unused, double *out_1992755826300427674) {
   out_1992755826300427674[0] = state[16];
   out_1992755826300427674[1] = state[17];
   out_1992755826300427674[2] = state[18];
}
void H_33(double *state, double *unused, double *out_3516449628181795747) {
   out_3516449628181795747[0] = 0;
   out_3516449628181795747[1] = 0;
   out_3516449628181795747[2] = 0;
   out_3516449628181795747[3] = 0;
   out_3516449628181795747[4] = 0;
   out_3516449628181795747[5] = 0;
   out_3516449628181795747[6] = 0;
   out_3516449628181795747[7] = 0;
   out_3516449628181795747[8] = 0;
   out_3516449628181795747[9] = 0;
   out_3516449628181795747[10] = 0;
   out_3516449628181795747[11] = 0;
   out_3516449628181795747[12] = 0;
   out_3516449628181795747[13] = 0;
   out_3516449628181795747[14] = 0;
   out_3516449628181795747[15] = 0;
   out_3516449628181795747[16] = 1;
   out_3516449628181795747[17] = 0;
   out_3516449628181795747[18] = 0;
   out_3516449628181795747[19] = 0;
   out_3516449628181795747[20] = 0;
   out_3516449628181795747[21] = 0;
   out_3516449628181795747[22] = 0;
   out_3516449628181795747[23] = 0;
   out_3516449628181795747[24] = 0;
   out_3516449628181795747[25] = 0;
   out_3516449628181795747[26] = 0;
   out_3516449628181795747[27] = 0;
   out_3516449628181795747[28] = 0;
   out_3516449628181795747[29] = 0;
   out_3516449628181795747[30] = 0;
   out_3516449628181795747[31] = 0;
   out_3516449628181795747[32] = 0;
   out_3516449628181795747[33] = 0;
   out_3516449628181795747[34] = 0;
   out_3516449628181795747[35] = 0;
   out_3516449628181795747[36] = 0;
   out_3516449628181795747[37] = 0;
   out_3516449628181795747[38] = 0;
   out_3516449628181795747[39] = 1;
   out_3516449628181795747[40] = 0;
   out_3516449628181795747[41] = 0;
   out_3516449628181795747[42] = 0;
   out_3516449628181795747[43] = 0;
   out_3516449628181795747[44] = 0;
   out_3516449628181795747[45] = 0;
   out_3516449628181795747[46] = 0;
   out_3516449628181795747[47] = 0;
   out_3516449628181795747[48] = 0;
   out_3516449628181795747[49] = 0;
   out_3516449628181795747[50] = 0;
   out_3516449628181795747[51] = 0;
   out_3516449628181795747[52] = 0;
   out_3516449628181795747[53] = 0;
   out_3516449628181795747[54] = 0;
   out_3516449628181795747[55] = 0;
   out_3516449628181795747[56] = 0;
   out_3516449628181795747[57] = 0;
   out_3516449628181795747[58] = 0;
   out_3516449628181795747[59] = 0;
   out_3516449628181795747[60] = 0;
   out_3516449628181795747[61] = 0;
   out_3516449628181795747[62] = 1;
   out_3516449628181795747[63] = 0;
   out_3516449628181795747[64] = 0;
   out_3516449628181795747[65] = 0;
}
#include <eigen3/Eigen/Dense>
#include <iostream>

typedef Eigen::Matrix<double, DIM, DIM, Eigen::RowMajor> DDM;
typedef Eigen::Matrix<double, EDIM, EDIM, Eigen::RowMajor> EEM;
typedef Eigen::Matrix<double, DIM, EDIM, Eigen::RowMajor> DEM;

void predict(double *in_x, double *in_P, double *in_Q, double dt) {
  typedef Eigen::Matrix<double, MEDIM, MEDIM, Eigen::RowMajor> RRM;

  double nx[DIM] = {0};
  double in_F[EDIM*EDIM] = {0};

  // functions from sympy
  f_fun(in_x, dt, nx);
  F_fun(in_x, dt, in_F);


  EEM F(in_F);
  EEM P(in_P);
  EEM Q(in_Q);

  RRM F_main = F.topLeftCorner(MEDIM, MEDIM);
  P.topLeftCorner(MEDIM, MEDIM) = (F_main * P.topLeftCorner(MEDIM, MEDIM)) * F_main.transpose();
  P.topRightCorner(MEDIM, EDIM - MEDIM) = F_main * P.topRightCorner(MEDIM, EDIM - MEDIM);
  P.bottomLeftCorner(EDIM - MEDIM, MEDIM) = P.bottomLeftCorner(EDIM - MEDIM, MEDIM) * F_main.transpose();

  P = P + dt*Q;

  // copy out state
  memcpy(in_x, nx, DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
}

// note: extra_args dim only correct when null space projecting
// otherwise 1
template <int ZDIM, int EADIM, bool MAHA_TEST>
void update(double *in_x, double *in_P, Hfun h_fun, Hfun H_fun, Hfun Hea_fun, double *in_z, double *in_R, double *in_ea, double MAHA_THRESHOLD) {
  typedef Eigen::Matrix<double, ZDIM, ZDIM, Eigen::RowMajor> ZZM;
  typedef Eigen::Matrix<double, ZDIM, DIM, Eigen::RowMajor> ZDM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, EDIM, Eigen::RowMajor> XEM;
  //typedef Eigen::Matrix<double, EDIM, ZDIM, Eigen::RowMajor> EZM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, 1> X1M;
  typedef Eigen::Matrix<double, Eigen::Dynamic, Eigen::Dynamic, Eigen::RowMajor> XXM;

  double in_hx[ZDIM] = {0};
  double in_H[ZDIM * DIM] = {0};
  double in_H_mod[EDIM * DIM] = {0};
  double delta_x[EDIM] = {0};
  double x_new[DIM] = {0};


  // state x, P
  Eigen::Matrix<double, ZDIM, 1> z(in_z);
  EEM P(in_P);
  ZZM pre_R(in_R);

  // functions from sympy
  h_fun(in_x, in_ea, in_hx);
  H_fun(in_x, in_ea, in_H);
  ZDM pre_H(in_H);

  // get y (y = z - hx)
  Eigen::Matrix<double, ZDIM, 1> pre_y(in_hx); pre_y = z - pre_y;
  X1M y; XXM H; XXM R;
  if (Hea_fun){
    typedef Eigen::Matrix<double, ZDIM, EADIM, Eigen::RowMajor> ZAM;
    double in_Hea[ZDIM * EADIM] = {0};
    Hea_fun(in_x, in_ea, in_Hea);
    ZAM Hea(in_Hea);
    XXM A = Hea.transpose().fullPivLu().kernel();


    y = A.transpose() * pre_y;
    H = A.transpose() * pre_H;
    R = A.transpose() * pre_R * A;
  } else {
    y = pre_y;
    H = pre_H;
    R = pre_R;
  }
  // get modified H
  H_mod_fun(in_x, in_H_mod);
  DEM H_mod(in_H_mod);
  XEM H_err = H * H_mod;

  // Do mahalobis distance test
  if (MAHA_TEST){
    XXM a = (H_err * P * H_err.transpose() + R).inverse();
    double maha_dist = y.transpose() * a * y;
    if (maha_dist > MAHA_THRESHOLD){
      R = 1.0e16 * R;
    }
  }

  // Outlier resilient weighting
  double weight = 1;//(1.5)/(1 + y.squaredNorm()/R.sum());

  // kalman gains and I_KH
  XXM S = ((H_err * P) * H_err.transpose()) + R/weight;
  XEM KT = S.fullPivLu().solve(H_err * P.transpose());
  //EZM K = KT.transpose(); TODO: WHY DOES THIS NOT COMPILE?
  //EZM K = S.fullPivLu().solve(H_err * P.transpose()).transpose();
  //std::cout << "Here is the matrix rot:\n" << K << std::endl;
  EEM I_KH = Eigen::Matrix<double, EDIM, EDIM>::Identity() - (KT.transpose() * H_err);

  // update state by injecting dx
  Eigen::Matrix<double, EDIM, 1> dx(delta_x);
  dx  = (KT.transpose() * y);
  memcpy(delta_x, dx.data(), EDIM * sizeof(double));
  err_fun(in_x, delta_x, x_new);
  Eigen::Matrix<double, DIM, 1> x(x_new);

  // update cov
  P = ((I_KH * P) * I_KH.transpose()) + ((KT.transpose() * R) * KT);

  // copy out state
  memcpy(in_x, x.data(), DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
  memcpy(in_z, y.data(), y.rows() * sizeof(double));
}




}
extern "C" {

void live_update_4(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_4, H_4, NULL, in_z, in_R, in_ea, MAHA_THRESH_4);
}
void live_update_9(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_9, H_9, NULL, in_z, in_R, in_ea, MAHA_THRESH_9);
}
void live_update_10(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_10, H_10, NULL, in_z, in_R, in_ea, MAHA_THRESH_10);
}
void live_update_12(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_12, H_12, NULL, in_z, in_R, in_ea, MAHA_THRESH_12);
}
void live_update_35(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_35, H_35, NULL, in_z, in_R, in_ea, MAHA_THRESH_35);
}
void live_update_32(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<4, 3, 0>(in_x, in_P, h_32, H_32, NULL, in_z, in_R, in_ea, MAHA_THRESH_32);
}
void live_update_13(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_13, H_13, NULL, in_z, in_R, in_ea, MAHA_THRESH_13);
}
void live_update_14(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_14, H_14, NULL, in_z, in_R, in_ea, MAHA_THRESH_14);
}
void live_update_33(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_33, H_33, NULL, in_z, in_R, in_ea, MAHA_THRESH_33);
}
void live_H(double *in_vec, double *out_7636484281099317628) {
  H(in_vec, out_7636484281099317628);
}
void live_err_fun(double *nom_x, double *delta_x, double *out_3792382315294674748) {
  err_fun(nom_x, delta_x, out_3792382315294674748);
}
void live_inv_err_fun(double *nom_x, double *true_x, double *out_6340804207628921062) {
  inv_err_fun(nom_x, true_x, out_6340804207628921062);
}
void live_H_mod_fun(double *state, double *out_1718859822839648252) {
  H_mod_fun(state, out_1718859822839648252);
}
void live_f_fun(double *state, double dt, double *out_7262865851673750904) {
  f_fun(state,  dt, out_7262865851673750904);
}
void live_F_fun(double *state, double dt, double *out_4916456392957247147) {
  F_fun(state,  dt, out_4916456392957247147);
}
void live_h_4(double *state, double *unused, double *out_1792082717344732289) {
  h_4(state, unused, out_1792082717344732289);
}
void live_H_4(double *state, double *unused, double *out_4014718000531922761) {
  H_4(state, unused, out_4014718000531922761);
}
void live_h_9(double *state, double *unused, double *out_1225404672650721348) {
  h_9(state, unused, out_1225404672650721348);
}
void live_H_9(double *state, double *unused, double *out_4255907647161513406) {
  H_9(state, unused, out_4255907647161513406);
}
void live_h_10(double *state, double *unused, double *out_8176504100484414595) {
  h_10(state, unused, out_8176504100484414595);
}
void live_H_10(double *state, double *unused, double *out_5879538133896681917) {
  H_10(state, unused, out_5879538133896681917);
}
void live_h_12(double *state, double *unused, double *out_2222547155725591662) {
  h_12(state, unused, out_2222547155725591662);
}
void live_H_12(double *state, double *unused, double *out_9034174408563884556) {
  H_12(state, unused, out_9034174408563884556);
}
void live_h_35(double *state, double *unused, double *out_7178545893472858923) {
  h_35(state, unused, out_7178545893472858923);
}
void live_H_35(double *state, double *unused, double *out_6667006632820653351) {
  H_35(state, unused, out_6667006632820653351);
}
void live_h_32(double *state, double *unused, double *out_3661899460828916794) {
  h_32(state, unused, out_3661899460828916794);
}
void live_H_32(double *state, double *unused, double *out_3883348468402235758) {
  H_32(state, unused, out_3883348468402235758);
}
void live_h_13(double *state, double *unused, double *out_8651793135716573050) {
  h_13(state, unused, out_8651793135716573050);
}
void live_H_13(double *state, double *unused, double *out_4813510092443927636) {
  H_13(state, unused, out_4813510092443927636);
}
void live_h_14(double *state, double *unused, double *out_1225404672650721348) {
  h_14(state, unused, out_1225404672650721348);
}
void live_H_14(double *state, double *unused, double *out_4255907647161513406) {
  H_14(state, unused, out_4255907647161513406);
}
void live_h_33(double *state, double *unused, double *out_1992755826300427674) {
  h_33(state, unused, out_1992755826300427674);
}
void live_H_33(double *state, double *unused, double *out_3516449628181795747) {
  H_33(state, unused, out_3516449628181795747);
}
void live_predict(double *in_x, double *in_P, double *in_Q, double dt) {
  predict(in_x, in_P, in_Q, dt);
}
}

const EKF live = {
  .name = "live",
  .kinds = { 4, 9, 10, 12, 35, 32, 13, 14, 33 },
  .feature_kinds = {  },
  .f_fun = live_f_fun,
  .F_fun = live_F_fun,
  .err_fun = live_err_fun,
  .inv_err_fun = live_inv_err_fun,
  .H_mod_fun = live_H_mod_fun,
  .predict = live_predict,
  .hs = {
    { 4, live_h_4 },
    { 9, live_h_9 },
    { 10, live_h_10 },
    { 12, live_h_12 },
    { 35, live_h_35 },
    { 32, live_h_32 },
    { 13, live_h_13 },
    { 14, live_h_14 },
    { 33, live_h_33 },
  },
  .Hs = {
    { 4, live_H_4 },
    { 9, live_H_9 },
    { 10, live_H_10 },
    { 12, live_H_12 },
    { 35, live_H_35 },
    { 32, live_H_32 },
    { 13, live_H_13 },
    { 14, live_H_14 },
    { 33, live_H_33 },
  },
  .updates = {
    { 4, live_update_4 },
    { 9, live_update_9 },
    { 10, live_update_10 },
    { 12, live_update_12 },
    { 35, live_update_35 },
    { 32, live_update_32 },
    { 13, live_update_13 },
    { 14, live_update_14 },
    { 33, live_update_33 },
  },
  .Hes = {
  },
  .sets = {
  },
  .extra_routines = {
    { "H", live_H },
  },
};

ekf_lib_init(live)
