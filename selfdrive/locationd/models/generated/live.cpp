#include "live.h"

namespace {
#define DIM 22
#define EDIM 21
#define MEDIM 21
typedef void (*Hfun)(double *, double *, double *);
const static double MAHA_THRESH_4 = 7.814727903251177;
const static double MAHA_THRESH_9 = 7.814727903251177;
const static double MAHA_THRESH_10 = 7.814727903251177;
const static double MAHA_THRESH_12 = 7.814727903251177;
const static double MAHA_THRESH_35 = 7.814727903251177;
const static double MAHA_THRESH_32 = 9.487729036781154;
const static double MAHA_THRESH_13 = 7.814727903251177;
const static double MAHA_THRESH_14 = 7.814727903251177;
const static double MAHA_THRESH_33 = 7.814727903251177;

/******************************************************************************
 *                       Code generated with SymPy 1.12                       *
 *                                                                            *
 *              See http://www.sympy.org/ for more information.               *
 *                                                                            *
 *                         This file is part of 'ekf'                         *
 ******************************************************************************/
void H(double *in_vec, double *out_7869006308364651371) {
   out_7869006308364651371[0] = 0;
   out_7869006308364651371[1] = -sin(in_vec[1])*sin(in_vec[2])*in_vec[4] - sin(in_vec[1])*cos(in_vec[2])*in_vec[3] - cos(in_vec[1])*in_vec[5];
   out_7869006308364651371[2] = -sin(in_vec[2])*cos(in_vec[1])*in_vec[3] + cos(in_vec[1])*cos(in_vec[2])*in_vec[4];
   out_7869006308364651371[3] = cos(in_vec[1])*cos(in_vec[2]);
   out_7869006308364651371[4] = sin(in_vec[2])*cos(in_vec[1]);
   out_7869006308364651371[5] = -sin(in_vec[1]);
   out_7869006308364651371[6] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (-sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_7869006308364651371[7] = -sin(in_vec[0])*sin(in_vec[1])*in_vec[5] + sin(in_vec[0])*sin(in_vec[2])*cos(in_vec[1])*in_vec[4] + sin(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_7869006308364651371[8] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]))*in_vec[4];
   out_7869006308364651371[9] = sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]);
   out_7869006308364651371[10] = sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) + cos(in_vec[0])*cos(in_vec[2]);
   out_7869006308364651371[11] = sin(in_vec[0])*cos(in_vec[1]);
   out_7869006308364651371[12] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (-sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) + sin(in_vec[2])*cos(in_vec[0]))*in_vec[3] - sin(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_7869006308364651371[13] = -sin(in_vec[1])*cos(in_vec[0])*in_vec[5] + sin(in_vec[2])*cos(in_vec[0])*cos(in_vec[1])*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_7869006308364651371[14] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (sin(in_vec[0])*cos(in_vec[2]) - sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[3];
   out_7869006308364651371[15] = sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]);
   out_7869006308364651371[16] = -sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]);
   out_7869006308364651371[17] = cos(in_vec[0])*cos(in_vec[1]);
}
void err_fun(double *nom_x, double *delta_x, double *out_2459398990013534767) {
   out_2459398990013534767[0] = delta_x[0] + nom_x[0];
   out_2459398990013534767[1] = delta_x[1] + nom_x[1];
   out_2459398990013534767[2] = delta_x[2] + nom_x[2];
   out_2459398990013534767[3] = -0.5*delta_x[3]*nom_x[4] - 0.5*delta_x[4]*nom_x[5] - 0.5*delta_x[5]*nom_x[6] + 1.0*nom_x[3];
   out_2459398990013534767[4] = 0.5*delta_x[3]*nom_x[3] + 0.5*delta_x[4]*nom_x[6] - 0.5*delta_x[5]*nom_x[5] + 1.0*nom_x[4];
   out_2459398990013534767[5] = -0.5*delta_x[3]*nom_x[6] + 0.5*delta_x[4]*nom_x[3] + 0.5*delta_x[5]*nom_x[4] + 1.0*nom_x[5];
   out_2459398990013534767[6] = 0.5*delta_x[3]*nom_x[5] - 0.5*delta_x[4]*nom_x[4] + 0.5*delta_x[5]*nom_x[3] + 1.0*nom_x[6];
   out_2459398990013534767[7] = delta_x[6] + nom_x[7];
   out_2459398990013534767[8] = delta_x[7] + nom_x[8];
   out_2459398990013534767[9] = delta_x[8] + nom_x[9];
   out_2459398990013534767[10] = delta_x[9] + nom_x[10];
   out_2459398990013534767[11] = delta_x[10] + nom_x[11];
   out_2459398990013534767[12] = delta_x[11] + nom_x[12];
   out_2459398990013534767[13] = delta_x[12] + nom_x[13];
   out_2459398990013534767[14] = delta_x[13] + nom_x[14];
   out_2459398990013534767[15] = delta_x[14] + nom_x[15];
   out_2459398990013534767[16] = delta_x[15] + nom_x[16];
   out_2459398990013534767[17] = delta_x[16] + nom_x[17];
   out_2459398990013534767[18] = delta_x[17] + nom_x[18];
   out_2459398990013534767[19] = delta_x[18] + nom_x[19];
   out_2459398990013534767[20] = delta_x[19] + nom_x[20];
   out_2459398990013534767[21] = delta_x[20] + nom_x[21];
}
void inv_err_fun(double *nom_x, double *true_x, double *out_8502047428813116135) {
   out_8502047428813116135[0] = -nom_x[0] + true_x[0];
   out_8502047428813116135[1] = -nom_x[1] + true_x[1];
   out_8502047428813116135[2] = -nom_x[2] + true_x[2];
   out_8502047428813116135[3] = 2*nom_x[3]*true_x[4] - 2*nom_x[4]*true_x[3] + 2*nom_x[5]*true_x[6] - 2*nom_x[6]*true_x[5];
   out_8502047428813116135[4] = 2*nom_x[3]*true_x[5] - 2*nom_x[4]*true_x[6] - 2*nom_x[5]*true_x[3] + 2*nom_x[6]*true_x[4];
   out_8502047428813116135[5] = 2*nom_x[3]*true_x[6] + 2*nom_x[4]*true_x[5] - 2*nom_x[5]*true_x[4] - 2*nom_x[6]*true_x[3];
   out_8502047428813116135[6] = -nom_x[7] + true_x[7];
   out_8502047428813116135[7] = -nom_x[8] + true_x[8];
   out_8502047428813116135[8] = -nom_x[9] + true_x[9];
   out_8502047428813116135[9] = -nom_x[10] + true_x[10];
   out_8502047428813116135[10] = -nom_x[11] + true_x[11];
   out_8502047428813116135[11] = -nom_x[12] + true_x[12];
   out_8502047428813116135[12] = -nom_x[13] + true_x[13];
   out_8502047428813116135[13] = -nom_x[14] + true_x[14];
   out_8502047428813116135[14] = -nom_x[15] + true_x[15];
   out_8502047428813116135[15] = -nom_x[16] + true_x[16];
   out_8502047428813116135[16] = -nom_x[17] + true_x[17];
   out_8502047428813116135[17] = -nom_x[18] + true_x[18];
   out_8502047428813116135[18] = -nom_x[19] + true_x[19];
   out_8502047428813116135[19] = -nom_x[20] + true_x[20];
   out_8502047428813116135[20] = -nom_x[21] + true_x[21];
}
void H_mod_fun(double *state, double *out_3997232855027068760) {
   out_3997232855027068760[0] = 1.0;
   out_3997232855027068760[1] = 0;
   out_3997232855027068760[2] = 0;
   out_3997232855027068760[3] = 0;
   out_3997232855027068760[4] = 0;
   out_3997232855027068760[5] = 0;
   out_3997232855027068760[6] = 0;
   out_3997232855027068760[7] = 0;
   out_3997232855027068760[8] = 0;
   out_3997232855027068760[9] = 0;
   out_3997232855027068760[10] = 0;
   out_3997232855027068760[11] = 0;
   out_3997232855027068760[12] = 0;
   out_3997232855027068760[13] = 0;
   out_3997232855027068760[14] = 0;
   out_3997232855027068760[15] = 0;
   out_3997232855027068760[16] = 0;
   out_3997232855027068760[17] = 0;
   out_3997232855027068760[18] = 0;
   out_3997232855027068760[19] = 0;
   out_3997232855027068760[20] = 0;
   out_3997232855027068760[21] = 0;
   out_3997232855027068760[22] = 1.0;
   out_3997232855027068760[23] = 0;
   out_3997232855027068760[24] = 0;
   out_3997232855027068760[25] = 0;
   out_3997232855027068760[26] = 0;
   out_3997232855027068760[27] = 0;
   out_3997232855027068760[28] = 0;
   out_3997232855027068760[29] = 0;
   out_3997232855027068760[30] = 0;
   out_3997232855027068760[31] = 0;
   out_3997232855027068760[32] = 0;
   out_3997232855027068760[33] = 0;
   out_3997232855027068760[34] = 0;
   out_3997232855027068760[35] = 0;
   out_3997232855027068760[36] = 0;
   out_3997232855027068760[37] = 0;
   out_3997232855027068760[38] = 0;
   out_3997232855027068760[39] = 0;
   out_3997232855027068760[40] = 0;
   out_3997232855027068760[41] = 0;
   out_3997232855027068760[42] = 0;
   out_3997232855027068760[43] = 0;
   out_3997232855027068760[44] = 1.0;
   out_3997232855027068760[45] = 0;
   out_3997232855027068760[46] = 0;
   out_3997232855027068760[47] = 0;
   out_3997232855027068760[48] = 0;
   out_3997232855027068760[49] = 0;
   out_3997232855027068760[50] = 0;
   out_3997232855027068760[51] = 0;
   out_3997232855027068760[52] = 0;
   out_3997232855027068760[53] = 0;
   out_3997232855027068760[54] = 0;
   out_3997232855027068760[55] = 0;
   out_3997232855027068760[56] = 0;
   out_3997232855027068760[57] = 0;
   out_3997232855027068760[58] = 0;
   out_3997232855027068760[59] = 0;
   out_3997232855027068760[60] = 0;
   out_3997232855027068760[61] = 0;
   out_3997232855027068760[62] = 0;
   out_3997232855027068760[63] = 0;
   out_3997232855027068760[64] = 0;
   out_3997232855027068760[65] = 0;
   out_3997232855027068760[66] = -0.5*state[4];
   out_3997232855027068760[67] = -0.5*state[5];
   out_3997232855027068760[68] = -0.5*state[6];
   out_3997232855027068760[69] = 0;
   out_3997232855027068760[70] = 0;
   out_3997232855027068760[71] = 0;
   out_3997232855027068760[72] = 0;
   out_3997232855027068760[73] = 0;
   out_3997232855027068760[74] = 0;
   out_3997232855027068760[75] = 0;
   out_3997232855027068760[76] = 0;
   out_3997232855027068760[77] = 0;
   out_3997232855027068760[78] = 0;
   out_3997232855027068760[79] = 0;
   out_3997232855027068760[80] = 0;
   out_3997232855027068760[81] = 0;
   out_3997232855027068760[82] = 0;
   out_3997232855027068760[83] = 0;
   out_3997232855027068760[84] = 0;
   out_3997232855027068760[85] = 0;
   out_3997232855027068760[86] = 0;
   out_3997232855027068760[87] = 0.5*state[3];
   out_3997232855027068760[88] = 0.5*state[6];
   out_3997232855027068760[89] = -0.5*state[5];
   out_3997232855027068760[90] = 0;
   out_3997232855027068760[91] = 0;
   out_3997232855027068760[92] = 0;
   out_3997232855027068760[93] = 0;
   out_3997232855027068760[94] = 0;
   out_3997232855027068760[95] = 0;
   out_3997232855027068760[96] = 0;
   out_3997232855027068760[97] = 0;
   out_3997232855027068760[98] = 0;
   out_3997232855027068760[99] = 0;
   out_3997232855027068760[100] = 0;
   out_3997232855027068760[101] = 0;
   out_3997232855027068760[102] = 0;
   out_3997232855027068760[103] = 0;
   out_3997232855027068760[104] = 0;
   out_3997232855027068760[105] = 0;
   out_3997232855027068760[106] = 0;
   out_3997232855027068760[107] = 0;
   out_3997232855027068760[108] = -0.5*state[6];
   out_3997232855027068760[109] = 0.5*state[3];
   out_3997232855027068760[110] = 0.5*state[4];
   out_3997232855027068760[111] = 0;
   out_3997232855027068760[112] = 0;
   out_3997232855027068760[113] = 0;
   out_3997232855027068760[114] = 0;
   out_3997232855027068760[115] = 0;
   out_3997232855027068760[116] = 0;
   out_3997232855027068760[117] = 0;
   out_3997232855027068760[118] = 0;
   out_3997232855027068760[119] = 0;
   out_3997232855027068760[120] = 0;
   out_3997232855027068760[121] = 0;
   out_3997232855027068760[122] = 0;
   out_3997232855027068760[123] = 0;
   out_3997232855027068760[124] = 0;
   out_3997232855027068760[125] = 0;
   out_3997232855027068760[126] = 0;
   out_3997232855027068760[127] = 0;
   out_3997232855027068760[128] = 0;
   out_3997232855027068760[129] = 0.5*state[5];
   out_3997232855027068760[130] = -0.5*state[4];
   out_3997232855027068760[131] = 0.5*state[3];
   out_3997232855027068760[132] = 0;
   out_3997232855027068760[133] = 0;
   out_3997232855027068760[134] = 0;
   out_3997232855027068760[135] = 0;
   out_3997232855027068760[136] = 0;
   out_3997232855027068760[137] = 0;
   out_3997232855027068760[138] = 0;
   out_3997232855027068760[139] = 0;
   out_3997232855027068760[140] = 0;
   out_3997232855027068760[141] = 0;
   out_3997232855027068760[142] = 0;
   out_3997232855027068760[143] = 0;
   out_3997232855027068760[144] = 0;
   out_3997232855027068760[145] = 0;
   out_3997232855027068760[146] = 0;
   out_3997232855027068760[147] = 0;
   out_3997232855027068760[148] = 0;
   out_3997232855027068760[149] = 0;
   out_3997232855027068760[150] = 0;
   out_3997232855027068760[151] = 0;
   out_3997232855027068760[152] = 0;
   out_3997232855027068760[153] = 1.0;
   out_3997232855027068760[154] = 0;
   out_3997232855027068760[155] = 0;
   out_3997232855027068760[156] = 0;
   out_3997232855027068760[157] = 0;
   out_3997232855027068760[158] = 0;
   out_3997232855027068760[159] = 0;
   out_3997232855027068760[160] = 0;
   out_3997232855027068760[161] = 0;
   out_3997232855027068760[162] = 0;
   out_3997232855027068760[163] = 0;
   out_3997232855027068760[164] = 0;
   out_3997232855027068760[165] = 0;
   out_3997232855027068760[166] = 0;
   out_3997232855027068760[167] = 0;
   out_3997232855027068760[168] = 0;
   out_3997232855027068760[169] = 0;
   out_3997232855027068760[170] = 0;
   out_3997232855027068760[171] = 0;
   out_3997232855027068760[172] = 0;
   out_3997232855027068760[173] = 0;
   out_3997232855027068760[174] = 0;
   out_3997232855027068760[175] = 1.0;
   out_3997232855027068760[176] = 0;
   out_3997232855027068760[177] = 0;
   out_3997232855027068760[178] = 0;
   out_3997232855027068760[179] = 0;
   out_3997232855027068760[180] = 0;
   out_3997232855027068760[181] = 0;
   out_3997232855027068760[182] = 0;
   out_3997232855027068760[183] = 0;
   out_3997232855027068760[184] = 0;
   out_3997232855027068760[185] = 0;
   out_3997232855027068760[186] = 0;
   out_3997232855027068760[187] = 0;
   out_3997232855027068760[188] = 0;
   out_3997232855027068760[189] = 0;
   out_3997232855027068760[190] = 0;
   out_3997232855027068760[191] = 0;
   out_3997232855027068760[192] = 0;
   out_3997232855027068760[193] = 0;
   out_3997232855027068760[194] = 0;
   out_3997232855027068760[195] = 0;
   out_3997232855027068760[196] = 0;
   out_3997232855027068760[197] = 1.0;
   out_3997232855027068760[198] = 0;
   out_3997232855027068760[199] = 0;
   out_3997232855027068760[200] = 0;
   out_3997232855027068760[201] = 0;
   out_3997232855027068760[202] = 0;
   out_3997232855027068760[203] = 0;
   out_3997232855027068760[204] = 0;
   out_3997232855027068760[205] = 0;
   out_3997232855027068760[206] = 0;
   out_3997232855027068760[207] = 0;
   out_3997232855027068760[208] = 0;
   out_3997232855027068760[209] = 0;
   out_3997232855027068760[210] = 0;
   out_3997232855027068760[211] = 0;
   out_3997232855027068760[212] = 0;
   out_3997232855027068760[213] = 0;
   out_3997232855027068760[214] = 0;
   out_3997232855027068760[215] = 0;
   out_3997232855027068760[216] = 0;
   out_3997232855027068760[217] = 0;
   out_3997232855027068760[218] = 0;
   out_3997232855027068760[219] = 1.0;
   out_3997232855027068760[220] = 0;
   out_3997232855027068760[221] = 0;
   out_3997232855027068760[222] = 0;
   out_3997232855027068760[223] = 0;
   out_3997232855027068760[224] = 0;
   out_3997232855027068760[225] = 0;
   out_3997232855027068760[226] = 0;
   out_3997232855027068760[227] = 0;
   out_3997232855027068760[228] = 0;
   out_3997232855027068760[229] = 0;
   out_3997232855027068760[230] = 0;
   out_3997232855027068760[231] = 0;
   out_3997232855027068760[232] = 0;
   out_3997232855027068760[233] = 0;
   out_3997232855027068760[234] = 0;
   out_3997232855027068760[235] = 0;
   out_3997232855027068760[236] = 0;
   out_3997232855027068760[237] = 0;
   out_3997232855027068760[238] = 0;
   out_3997232855027068760[239] = 0;
   out_3997232855027068760[240] = 0;
   out_3997232855027068760[241] = 1.0;
   out_3997232855027068760[242] = 0;
   out_3997232855027068760[243] = 0;
   out_3997232855027068760[244] = 0;
   out_3997232855027068760[245] = 0;
   out_3997232855027068760[246] = 0;
   out_3997232855027068760[247] = 0;
   out_3997232855027068760[248] = 0;
   out_3997232855027068760[249] = 0;
   out_3997232855027068760[250] = 0;
   out_3997232855027068760[251] = 0;
   out_3997232855027068760[252] = 0;
   out_3997232855027068760[253] = 0;
   out_3997232855027068760[254] = 0;
   out_3997232855027068760[255] = 0;
   out_3997232855027068760[256] = 0;
   out_3997232855027068760[257] = 0;
   out_3997232855027068760[258] = 0;
   out_3997232855027068760[259] = 0;
   out_3997232855027068760[260] = 0;
   out_3997232855027068760[261] = 0;
   out_3997232855027068760[262] = 0;
   out_3997232855027068760[263] = 1.0;
   out_3997232855027068760[264] = 0;
   out_3997232855027068760[265] = 0;
   out_3997232855027068760[266] = 0;
   out_3997232855027068760[267] = 0;
   out_3997232855027068760[268] = 0;
   out_3997232855027068760[269] = 0;
   out_3997232855027068760[270] = 0;
   out_3997232855027068760[271] = 0;
   out_3997232855027068760[272] = 0;
   out_3997232855027068760[273] = 0;
   out_3997232855027068760[274] = 0;
   out_3997232855027068760[275] = 0;
   out_3997232855027068760[276] = 0;
   out_3997232855027068760[277] = 0;
   out_3997232855027068760[278] = 0;
   out_3997232855027068760[279] = 0;
   out_3997232855027068760[280] = 0;
   out_3997232855027068760[281] = 0;
   out_3997232855027068760[282] = 0;
   out_3997232855027068760[283] = 0;
   out_3997232855027068760[284] = 0;
   out_3997232855027068760[285] = 1.0;
   out_3997232855027068760[286] = 0;
   out_3997232855027068760[287] = 0;
   out_3997232855027068760[288] = 0;
   out_3997232855027068760[289] = 0;
   out_3997232855027068760[290] = 0;
   out_3997232855027068760[291] = 0;
   out_3997232855027068760[292] = 0;
   out_3997232855027068760[293] = 0;
   out_3997232855027068760[294] = 0;
   out_3997232855027068760[295] = 0;
   out_3997232855027068760[296] = 0;
   out_3997232855027068760[297] = 0;
   out_3997232855027068760[298] = 0;
   out_3997232855027068760[299] = 0;
   out_3997232855027068760[300] = 0;
   out_3997232855027068760[301] = 0;
   out_3997232855027068760[302] = 0;
   out_3997232855027068760[303] = 0;
   out_3997232855027068760[304] = 0;
   out_3997232855027068760[305] = 0;
   out_3997232855027068760[306] = 0;
   out_3997232855027068760[307] = 1.0;
   out_3997232855027068760[308] = 0;
   out_3997232855027068760[309] = 0;
   out_3997232855027068760[310] = 0;
   out_3997232855027068760[311] = 0;
   out_3997232855027068760[312] = 0;
   out_3997232855027068760[313] = 0;
   out_3997232855027068760[314] = 0;
   out_3997232855027068760[315] = 0;
   out_3997232855027068760[316] = 0;
   out_3997232855027068760[317] = 0;
   out_3997232855027068760[318] = 0;
   out_3997232855027068760[319] = 0;
   out_3997232855027068760[320] = 0;
   out_3997232855027068760[321] = 0;
   out_3997232855027068760[322] = 0;
   out_3997232855027068760[323] = 0;
   out_3997232855027068760[324] = 0;
   out_3997232855027068760[325] = 0;
   out_3997232855027068760[326] = 0;
   out_3997232855027068760[327] = 0;
   out_3997232855027068760[328] = 0;
   out_3997232855027068760[329] = 1.0;
   out_3997232855027068760[330] = 0;
   out_3997232855027068760[331] = 0;
   out_3997232855027068760[332] = 0;
   out_3997232855027068760[333] = 0;
   out_3997232855027068760[334] = 0;
   out_3997232855027068760[335] = 0;
   out_3997232855027068760[336] = 0;
   out_3997232855027068760[337] = 0;
   out_3997232855027068760[338] = 0;
   out_3997232855027068760[339] = 0;
   out_3997232855027068760[340] = 0;
   out_3997232855027068760[341] = 0;
   out_3997232855027068760[342] = 0;
   out_3997232855027068760[343] = 0;
   out_3997232855027068760[344] = 0;
   out_3997232855027068760[345] = 0;
   out_3997232855027068760[346] = 0;
   out_3997232855027068760[347] = 0;
   out_3997232855027068760[348] = 0;
   out_3997232855027068760[349] = 0;
   out_3997232855027068760[350] = 0;
   out_3997232855027068760[351] = 1.0;
   out_3997232855027068760[352] = 0;
   out_3997232855027068760[353] = 0;
   out_3997232855027068760[354] = 0;
   out_3997232855027068760[355] = 0;
   out_3997232855027068760[356] = 0;
   out_3997232855027068760[357] = 0;
   out_3997232855027068760[358] = 0;
   out_3997232855027068760[359] = 0;
   out_3997232855027068760[360] = 0;
   out_3997232855027068760[361] = 0;
   out_3997232855027068760[362] = 0;
   out_3997232855027068760[363] = 0;
   out_3997232855027068760[364] = 0;
   out_3997232855027068760[365] = 0;
   out_3997232855027068760[366] = 0;
   out_3997232855027068760[367] = 0;
   out_3997232855027068760[368] = 0;
   out_3997232855027068760[369] = 0;
   out_3997232855027068760[370] = 0;
   out_3997232855027068760[371] = 0;
   out_3997232855027068760[372] = 0;
   out_3997232855027068760[373] = 1.0;
   out_3997232855027068760[374] = 0;
   out_3997232855027068760[375] = 0;
   out_3997232855027068760[376] = 0;
   out_3997232855027068760[377] = 0;
   out_3997232855027068760[378] = 0;
   out_3997232855027068760[379] = 0;
   out_3997232855027068760[380] = 0;
   out_3997232855027068760[381] = 0;
   out_3997232855027068760[382] = 0;
   out_3997232855027068760[383] = 0;
   out_3997232855027068760[384] = 0;
   out_3997232855027068760[385] = 0;
   out_3997232855027068760[386] = 0;
   out_3997232855027068760[387] = 0;
   out_3997232855027068760[388] = 0;
   out_3997232855027068760[389] = 0;
   out_3997232855027068760[390] = 0;
   out_3997232855027068760[391] = 0;
   out_3997232855027068760[392] = 0;
   out_3997232855027068760[393] = 0;
   out_3997232855027068760[394] = 0;
   out_3997232855027068760[395] = 1.0;
   out_3997232855027068760[396] = 0;
   out_3997232855027068760[397] = 0;
   out_3997232855027068760[398] = 0;
   out_3997232855027068760[399] = 0;
   out_3997232855027068760[400] = 0;
   out_3997232855027068760[401] = 0;
   out_3997232855027068760[402] = 0;
   out_3997232855027068760[403] = 0;
   out_3997232855027068760[404] = 0;
   out_3997232855027068760[405] = 0;
   out_3997232855027068760[406] = 0;
   out_3997232855027068760[407] = 0;
   out_3997232855027068760[408] = 0;
   out_3997232855027068760[409] = 0;
   out_3997232855027068760[410] = 0;
   out_3997232855027068760[411] = 0;
   out_3997232855027068760[412] = 0;
   out_3997232855027068760[413] = 0;
   out_3997232855027068760[414] = 0;
   out_3997232855027068760[415] = 0;
   out_3997232855027068760[416] = 0;
   out_3997232855027068760[417] = 1.0;
   out_3997232855027068760[418] = 0;
   out_3997232855027068760[419] = 0;
   out_3997232855027068760[420] = 0;
   out_3997232855027068760[421] = 0;
   out_3997232855027068760[422] = 0;
   out_3997232855027068760[423] = 0;
   out_3997232855027068760[424] = 0;
   out_3997232855027068760[425] = 0;
   out_3997232855027068760[426] = 0;
   out_3997232855027068760[427] = 0;
   out_3997232855027068760[428] = 0;
   out_3997232855027068760[429] = 0;
   out_3997232855027068760[430] = 0;
   out_3997232855027068760[431] = 0;
   out_3997232855027068760[432] = 0;
   out_3997232855027068760[433] = 0;
   out_3997232855027068760[434] = 0;
   out_3997232855027068760[435] = 0;
   out_3997232855027068760[436] = 0;
   out_3997232855027068760[437] = 0;
   out_3997232855027068760[438] = 0;
   out_3997232855027068760[439] = 1.0;
   out_3997232855027068760[440] = 0;
   out_3997232855027068760[441] = 0;
   out_3997232855027068760[442] = 0;
   out_3997232855027068760[443] = 0;
   out_3997232855027068760[444] = 0;
   out_3997232855027068760[445] = 0;
   out_3997232855027068760[446] = 0;
   out_3997232855027068760[447] = 0;
   out_3997232855027068760[448] = 0;
   out_3997232855027068760[449] = 0;
   out_3997232855027068760[450] = 0;
   out_3997232855027068760[451] = 0;
   out_3997232855027068760[452] = 0;
   out_3997232855027068760[453] = 0;
   out_3997232855027068760[454] = 0;
   out_3997232855027068760[455] = 0;
   out_3997232855027068760[456] = 0;
   out_3997232855027068760[457] = 0;
   out_3997232855027068760[458] = 0;
   out_3997232855027068760[459] = 0;
   out_3997232855027068760[460] = 0;
   out_3997232855027068760[461] = 1.0;
}
void f_fun(double *state, double dt, double *out_5441595500773639017) {
   out_5441595500773639017[0] = dt*state[7] + state[0];
   out_5441595500773639017[1] = dt*state[8] + state[1];
   out_5441595500773639017[2] = dt*state[9] + state[2];
   out_5441595500773639017[3] = dt*(-0.5*state[4]*state[10] - 0.5*state[5]*state[11] - 0.5*state[6]*state[12]) + state[3];
   out_5441595500773639017[4] = dt*(0.5*state[3]*state[10] + 0.5*state[5]*state[12] - 0.5*state[6]*state[11]) + state[4];
   out_5441595500773639017[5] = dt*(0.5*state[3]*state[11] - 0.5*state[4]*state[12] + 0.5*state[6]*state[10]) + state[5];
   out_5441595500773639017[6] = dt*(0.5*state[3]*state[12] + 0.5*state[4]*state[11] - 0.5*state[5]*state[10]) + state[6];
   out_5441595500773639017[7] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]) + state[7];
   out_5441595500773639017[8] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]) + state[8];
   out_5441595500773639017[9] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]) + state[9];
   out_5441595500773639017[10] = state[10];
   out_5441595500773639017[11] = state[11];
   out_5441595500773639017[12] = state[12];
   out_5441595500773639017[13] = state[13];
   out_5441595500773639017[14] = state[14];
   out_5441595500773639017[15] = state[15];
   out_5441595500773639017[16] = state[16];
   out_5441595500773639017[17] = state[17];
   out_5441595500773639017[18] = state[18];
   out_5441595500773639017[19] = state[19];
   out_5441595500773639017[20] = state[20];
   out_5441595500773639017[21] = state[21];
}
void F_fun(double *state, double dt, double *out_1704606658348508637) {
   out_1704606658348508637[0] = 1;
   out_1704606658348508637[1] = 0;
   out_1704606658348508637[2] = 0;
   out_1704606658348508637[3] = 0;
   out_1704606658348508637[4] = 0;
   out_1704606658348508637[5] = 0;
   out_1704606658348508637[6] = dt;
   out_1704606658348508637[7] = 0;
   out_1704606658348508637[8] = 0;
   out_1704606658348508637[9] = 0;
   out_1704606658348508637[10] = 0;
   out_1704606658348508637[11] = 0;
   out_1704606658348508637[12] = 0;
   out_1704606658348508637[13] = 0;
   out_1704606658348508637[14] = 0;
   out_1704606658348508637[15] = 0;
   out_1704606658348508637[16] = 0;
   out_1704606658348508637[17] = 0;
   out_1704606658348508637[18] = 0;
   out_1704606658348508637[19] = 0;
   out_1704606658348508637[20] = 0;
   out_1704606658348508637[21] = 0;
   out_1704606658348508637[22] = 1;
   out_1704606658348508637[23] = 0;
   out_1704606658348508637[24] = 0;
   out_1704606658348508637[25] = 0;
   out_1704606658348508637[26] = 0;
   out_1704606658348508637[27] = 0;
   out_1704606658348508637[28] = dt;
   out_1704606658348508637[29] = 0;
   out_1704606658348508637[30] = 0;
   out_1704606658348508637[31] = 0;
   out_1704606658348508637[32] = 0;
   out_1704606658348508637[33] = 0;
   out_1704606658348508637[34] = 0;
   out_1704606658348508637[35] = 0;
   out_1704606658348508637[36] = 0;
   out_1704606658348508637[37] = 0;
   out_1704606658348508637[38] = 0;
   out_1704606658348508637[39] = 0;
   out_1704606658348508637[40] = 0;
   out_1704606658348508637[41] = 0;
   out_1704606658348508637[42] = 0;
   out_1704606658348508637[43] = 0;
   out_1704606658348508637[44] = 1;
   out_1704606658348508637[45] = 0;
   out_1704606658348508637[46] = 0;
   out_1704606658348508637[47] = 0;
   out_1704606658348508637[48] = 0;
   out_1704606658348508637[49] = 0;
   out_1704606658348508637[50] = dt;
   out_1704606658348508637[51] = 0;
   out_1704606658348508637[52] = 0;
   out_1704606658348508637[53] = 0;
   out_1704606658348508637[54] = 0;
   out_1704606658348508637[55] = 0;
   out_1704606658348508637[56] = 0;
   out_1704606658348508637[57] = 0;
   out_1704606658348508637[58] = 0;
   out_1704606658348508637[59] = 0;
   out_1704606658348508637[60] = 0;
   out_1704606658348508637[61] = 0;
   out_1704606658348508637[62] = 0;
   out_1704606658348508637[63] = 0;
   out_1704606658348508637[64] = 0;
   out_1704606658348508637[65] = 0;
   out_1704606658348508637[66] = 1;
   out_1704606658348508637[67] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[11] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_1704606658348508637[68] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[12] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[10] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[11]);
   out_1704606658348508637[69] = 0;
   out_1704606658348508637[70] = 0;
   out_1704606658348508637[71] = 0;
   out_1704606658348508637[72] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_1704606658348508637[73] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_1704606658348508637[74] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_1704606658348508637[75] = 0;
   out_1704606658348508637[76] = 0;
   out_1704606658348508637[77] = 0;
   out_1704606658348508637[78] = 0;
   out_1704606658348508637[79] = 0;
   out_1704606658348508637[80] = 0;
   out_1704606658348508637[81] = 0;
   out_1704606658348508637[82] = 0;
   out_1704606658348508637[83] = 0;
   out_1704606658348508637[84] = 0;
   out_1704606658348508637[85] = 0;
   out_1704606658348508637[86] = 0;
   out_1704606658348508637[87] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[11] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_1704606658348508637[88] = 1;
   out_1704606658348508637[89] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[12] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[11] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[10]);
   out_1704606658348508637[90] = 0;
   out_1704606658348508637[91] = 0;
   out_1704606658348508637[92] = 0;
   out_1704606658348508637[93] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_1704606658348508637[94] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_1704606658348508637[95] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_1704606658348508637[96] = 0;
   out_1704606658348508637[97] = 0;
   out_1704606658348508637[98] = 0;
   out_1704606658348508637[99] = 0;
   out_1704606658348508637[100] = 0;
   out_1704606658348508637[101] = 0;
   out_1704606658348508637[102] = 0;
   out_1704606658348508637[103] = 0;
   out_1704606658348508637[104] = 0;
   out_1704606658348508637[105] = 0;
   out_1704606658348508637[106] = 0;
   out_1704606658348508637[107] = 0;
   out_1704606658348508637[108] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[12] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[10] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[11]);
   out_1704606658348508637[109] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[12] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[11] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[10]);
   out_1704606658348508637[110] = 1;
   out_1704606658348508637[111] = 0;
   out_1704606658348508637[112] = 0;
   out_1704606658348508637[113] = 0;
   out_1704606658348508637[114] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_1704606658348508637[115] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_1704606658348508637[116] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_1704606658348508637[117] = 0;
   out_1704606658348508637[118] = 0;
   out_1704606658348508637[119] = 0;
   out_1704606658348508637[120] = 0;
   out_1704606658348508637[121] = 0;
   out_1704606658348508637[122] = 0;
   out_1704606658348508637[123] = 0;
   out_1704606658348508637[124] = 0;
   out_1704606658348508637[125] = 0;
   out_1704606658348508637[126] = 0;
   out_1704606658348508637[127] = 0;
   out_1704606658348508637[128] = 0;
   out_1704606658348508637[129] = 0;
   out_1704606658348508637[130] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_1704606658348508637[131] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[18] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[16] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[17]);
   out_1704606658348508637[132] = 1;
   out_1704606658348508637[133] = 0;
   out_1704606658348508637[134] = 0;
   out_1704606658348508637[135] = 0;
   out_1704606658348508637[136] = 0;
   out_1704606658348508637[137] = 0;
   out_1704606658348508637[138] = 0;
   out_1704606658348508637[139] = 0;
   out_1704606658348508637[140] = 0;
   out_1704606658348508637[141] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_1704606658348508637[142] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_1704606658348508637[143] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_1704606658348508637[144] = 0;
   out_1704606658348508637[145] = 0;
   out_1704606658348508637[146] = 0;
   out_1704606658348508637[147] = 0;
   out_1704606658348508637[148] = 0;
   out_1704606658348508637[149] = 0;
   out_1704606658348508637[150] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[17] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_1704606658348508637[151] = 0;
   out_1704606658348508637[152] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]);
   out_1704606658348508637[153] = 0;
   out_1704606658348508637[154] = 1;
   out_1704606658348508637[155] = 0;
   out_1704606658348508637[156] = 0;
   out_1704606658348508637[157] = 0;
   out_1704606658348508637[158] = 0;
   out_1704606658348508637[159] = 0;
   out_1704606658348508637[160] = 0;
   out_1704606658348508637[161] = 0;
   out_1704606658348508637[162] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_1704606658348508637[163] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_1704606658348508637[164] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_1704606658348508637[165] = 0;
   out_1704606658348508637[166] = 0;
   out_1704606658348508637[167] = 0;
   out_1704606658348508637[168] = 0;
   out_1704606658348508637[169] = 0;
   out_1704606658348508637[170] = 0;
   out_1704606658348508637[171] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]);
   out_1704606658348508637[172] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[18] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[17] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[16]);
   out_1704606658348508637[173] = 0;
   out_1704606658348508637[174] = 0;
   out_1704606658348508637[175] = 0;
   out_1704606658348508637[176] = 1;
   out_1704606658348508637[177] = 0;
   out_1704606658348508637[178] = 0;
   out_1704606658348508637[179] = 0;
   out_1704606658348508637[180] = 0;
   out_1704606658348508637[181] = 0;
   out_1704606658348508637[182] = 0;
   out_1704606658348508637[183] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_1704606658348508637[184] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_1704606658348508637[185] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_1704606658348508637[186] = 0;
   out_1704606658348508637[187] = 0;
   out_1704606658348508637[188] = 0;
   out_1704606658348508637[189] = 0;
   out_1704606658348508637[190] = 0;
   out_1704606658348508637[191] = 0;
   out_1704606658348508637[192] = 0;
   out_1704606658348508637[193] = 0;
   out_1704606658348508637[194] = 0;
   out_1704606658348508637[195] = 0;
   out_1704606658348508637[196] = 0;
   out_1704606658348508637[197] = 0;
   out_1704606658348508637[198] = 1;
   out_1704606658348508637[199] = 0;
   out_1704606658348508637[200] = 0;
   out_1704606658348508637[201] = 0;
   out_1704606658348508637[202] = 0;
   out_1704606658348508637[203] = 0;
   out_1704606658348508637[204] = 0;
   out_1704606658348508637[205] = 0;
   out_1704606658348508637[206] = 0;
   out_1704606658348508637[207] = 0;
   out_1704606658348508637[208] = 0;
   out_1704606658348508637[209] = 0;
   out_1704606658348508637[210] = 0;
   out_1704606658348508637[211] = 0;
   out_1704606658348508637[212] = 0;
   out_1704606658348508637[213] = 0;
   out_1704606658348508637[214] = 0;
   out_1704606658348508637[215] = 0;
   out_1704606658348508637[216] = 0;
   out_1704606658348508637[217] = 0;
   out_1704606658348508637[218] = 0;
   out_1704606658348508637[219] = 0;
   out_1704606658348508637[220] = 1;
   out_1704606658348508637[221] = 0;
   out_1704606658348508637[222] = 0;
   out_1704606658348508637[223] = 0;
   out_1704606658348508637[224] = 0;
   out_1704606658348508637[225] = 0;
   out_1704606658348508637[226] = 0;
   out_1704606658348508637[227] = 0;
   out_1704606658348508637[228] = 0;
   out_1704606658348508637[229] = 0;
   out_1704606658348508637[230] = 0;
   out_1704606658348508637[231] = 0;
   out_1704606658348508637[232] = 0;
   out_1704606658348508637[233] = 0;
   out_1704606658348508637[234] = 0;
   out_1704606658348508637[235] = 0;
   out_1704606658348508637[236] = 0;
   out_1704606658348508637[237] = 0;
   out_1704606658348508637[238] = 0;
   out_1704606658348508637[239] = 0;
   out_1704606658348508637[240] = 0;
   out_1704606658348508637[241] = 0;
   out_1704606658348508637[242] = 1;
   out_1704606658348508637[243] = 0;
   out_1704606658348508637[244] = 0;
   out_1704606658348508637[245] = 0;
   out_1704606658348508637[246] = 0;
   out_1704606658348508637[247] = 0;
   out_1704606658348508637[248] = 0;
   out_1704606658348508637[249] = 0;
   out_1704606658348508637[250] = 0;
   out_1704606658348508637[251] = 0;
   out_1704606658348508637[252] = 0;
   out_1704606658348508637[253] = 0;
   out_1704606658348508637[254] = 0;
   out_1704606658348508637[255] = 0;
   out_1704606658348508637[256] = 0;
   out_1704606658348508637[257] = 0;
   out_1704606658348508637[258] = 0;
   out_1704606658348508637[259] = 0;
   out_1704606658348508637[260] = 0;
   out_1704606658348508637[261] = 0;
   out_1704606658348508637[262] = 0;
   out_1704606658348508637[263] = 0;
   out_1704606658348508637[264] = 1;
   out_1704606658348508637[265] = 0;
   out_1704606658348508637[266] = 0;
   out_1704606658348508637[267] = 0;
   out_1704606658348508637[268] = 0;
   out_1704606658348508637[269] = 0;
   out_1704606658348508637[270] = 0;
   out_1704606658348508637[271] = 0;
   out_1704606658348508637[272] = 0;
   out_1704606658348508637[273] = 0;
   out_1704606658348508637[274] = 0;
   out_1704606658348508637[275] = 0;
   out_1704606658348508637[276] = 0;
   out_1704606658348508637[277] = 0;
   out_1704606658348508637[278] = 0;
   out_1704606658348508637[279] = 0;
   out_1704606658348508637[280] = 0;
   out_1704606658348508637[281] = 0;
   out_1704606658348508637[282] = 0;
   out_1704606658348508637[283] = 0;
   out_1704606658348508637[284] = 0;
   out_1704606658348508637[285] = 0;
   out_1704606658348508637[286] = 1;
   out_1704606658348508637[287] = 0;
   out_1704606658348508637[288] = 0;
   out_1704606658348508637[289] = 0;
   out_1704606658348508637[290] = 0;
   out_1704606658348508637[291] = 0;
   out_1704606658348508637[292] = 0;
   out_1704606658348508637[293] = 0;
   out_1704606658348508637[294] = 0;
   out_1704606658348508637[295] = 0;
   out_1704606658348508637[296] = 0;
   out_1704606658348508637[297] = 0;
   out_1704606658348508637[298] = 0;
   out_1704606658348508637[299] = 0;
   out_1704606658348508637[300] = 0;
   out_1704606658348508637[301] = 0;
   out_1704606658348508637[302] = 0;
   out_1704606658348508637[303] = 0;
   out_1704606658348508637[304] = 0;
   out_1704606658348508637[305] = 0;
   out_1704606658348508637[306] = 0;
   out_1704606658348508637[307] = 0;
   out_1704606658348508637[308] = 1;
   out_1704606658348508637[309] = 0;
   out_1704606658348508637[310] = 0;
   out_1704606658348508637[311] = 0;
   out_1704606658348508637[312] = 0;
   out_1704606658348508637[313] = 0;
   out_1704606658348508637[314] = 0;
   out_1704606658348508637[315] = 0;
   out_1704606658348508637[316] = 0;
   out_1704606658348508637[317] = 0;
   out_1704606658348508637[318] = 0;
   out_1704606658348508637[319] = 0;
   out_1704606658348508637[320] = 0;
   out_1704606658348508637[321] = 0;
   out_1704606658348508637[322] = 0;
   out_1704606658348508637[323] = 0;
   out_1704606658348508637[324] = 0;
   out_1704606658348508637[325] = 0;
   out_1704606658348508637[326] = 0;
   out_1704606658348508637[327] = 0;
   out_1704606658348508637[328] = 0;
   out_1704606658348508637[329] = 0;
   out_1704606658348508637[330] = 1;
   out_1704606658348508637[331] = 0;
   out_1704606658348508637[332] = 0;
   out_1704606658348508637[333] = 0;
   out_1704606658348508637[334] = 0;
   out_1704606658348508637[335] = 0;
   out_1704606658348508637[336] = 0;
   out_1704606658348508637[337] = 0;
   out_1704606658348508637[338] = 0;
   out_1704606658348508637[339] = 0;
   out_1704606658348508637[340] = 0;
   out_1704606658348508637[341] = 0;
   out_1704606658348508637[342] = 0;
   out_1704606658348508637[343] = 0;
   out_1704606658348508637[344] = 0;
   out_1704606658348508637[345] = 0;
   out_1704606658348508637[346] = 0;
   out_1704606658348508637[347] = 0;
   out_1704606658348508637[348] = 0;
   out_1704606658348508637[349] = 0;
   out_1704606658348508637[350] = 0;
   out_1704606658348508637[351] = 0;
   out_1704606658348508637[352] = 1;
   out_1704606658348508637[353] = 0;
   out_1704606658348508637[354] = 0;
   out_1704606658348508637[355] = 0;
   out_1704606658348508637[356] = 0;
   out_1704606658348508637[357] = 0;
   out_1704606658348508637[358] = 0;
   out_1704606658348508637[359] = 0;
   out_1704606658348508637[360] = 0;
   out_1704606658348508637[361] = 0;
   out_1704606658348508637[362] = 0;
   out_1704606658348508637[363] = 0;
   out_1704606658348508637[364] = 0;
   out_1704606658348508637[365] = 0;
   out_1704606658348508637[366] = 0;
   out_1704606658348508637[367] = 0;
   out_1704606658348508637[368] = 0;
   out_1704606658348508637[369] = 0;
   out_1704606658348508637[370] = 0;
   out_1704606658348508637[371] = 0;
   out_1704606658348508637[372] = 0;
   out_1704606658348508637[373] = 0;
   out_1704606658348508637[374] = 1;
   out_1704606658348508637[375] = 0;
   out_1704606658348508637[376] = 0;
   out_1704606658348508637[377] = 0;
   out_1704606658348508637[378] = 0;
   out_1704606658348508637[379] = 0;
   out_1704606658348508637[380] = 0;
   out_1704606658348508637[381] = 0;
   out_1704606658348508637[382] = 0;
   out_1704606658348508637[383] = 0;
   out_1704606658348508637[384] = 0;
   out_1704606658348508637[385] = 0;
   out_1704606658348508637[386] = 0;
   out_1704606658348508637[387] = 0;
   out_1704606658348508637[388] = 0;
   out_1704606658348508637[389] = 0;
   out_1704606658348508637[390] = 0;
   out_1704606658348508637[391] = 0;
   out_1704606658348508637[392] = 0;
   out_1704606658348508637[393] = 0;
   out_1704606658348508637[394] = 0;
   out_1704606658348508637[395] = 0;
   out_1704606658348508637[396] = 1;
   out_1704606658348508637[397] = 0;
   out_1704606658348508637[398] = 0;
   out_1704606658348508637[399] = 0;
   out_1704606658348508637[400] = 0;
   out_1704606658348508637[401] = 0;
   out_1704606658348508637[402] = 0;
   out_1704606658348508637[403] = 0;
   out_1704606658348508637[404] = 0;
   out_1704606658348508637[405] = 0;
   out_1704606658348508637[406] = 0;
   out_1704606658348508637[407] = 0;
   out_1704606658348508637[408] = 0;
   out_1704606658348508637[409] = 0;
   out_1704606658348508637[410] = 0;
   out_1704606658348508637[411] = 0;
   out_1704606658348508637[412] = 0;
   out_1704606658348508637[413] = 0;
   out_1704606658348508637[414] = 0;
   out_1704606658348508637[415] = 0;
   out_1704606658348508637[416] = 0;
   out_1704606658348508637[417] = 0;
   out_1704606658348508637[418] = 1;
   out_1704606658348508637[419] = 0;
   out_1704606658348508637[420] = 0;
   out_1704606658348508637[421] = 0;
   out_1704606658348508637[422] = 0;
   out_1704606658348508637[423] = 0;
   out_1704606658348508637[424] = 0;
   out_1704606658348508637[425] = 0;
   out_1704606658348508637[426] = 0;
   out_1704606658348508637[427] = 0;
   out_1704606658348508637[428] = 0;
   out_1704606658348508637[429] = 0;
   out_1704606658348508637[430] = 0;
   out_1704606658348508637[431] = 0;
   out_1704606658348508637[432] = 0;
   out_1704606658348508637[433] = 0;
   out_1704606658348508637[434] = 0;
   out_1704606658348508637[435] = 0;
   out_1704606658348508637[436] = 0;
   out_1704606658348508637[437] = 0;
   out_1704606658348508637[438] = 0;
   out_1704606658348508637[439] = 0;
   out_1704606658348508637[440] = 1;
}
void h_4(double *state, double *unused, double *out_6200831014598738171) {
   out_6200831014598738171[0] = state[10] + state[13];
   out_6200831014598738171[1] = state[11] + state[14];
   out_6200831014598738171[2] = state[12] + state[15];
}
void H_4(double *state, double *unused, double *out_7947460525840981638) {
   out_7947460525840981638[0] = 0;
   out_7947460525840981638[1] = 0;
   out_7947460525840981638[2] = 0;
   out_7947460525840981638[3] = 0;
   out_7947460525840981638[4] = 0;
   out_7947460525840981638[5] = 0;
   out_7947460525840981638[6] = 0;
   out_7947460525840981638[7] = 0;
   out_7947460525840981638[8] = 0;
   out_7947460525840981638[9] = 0;
   out_7947460525840981638[10] = 1;
   out_7947460525840981638[11] = 0;
   out_7947460525840981638[12] = 0;
   out_7947460525840981638[13] = 1;
   out_7947460525840981638[14] = 0;
   out_7947460525840981638[15] = 0;
   out_7947460525840981638[16] = 0;
   out_7947460525840981638[17] = 0;
   out_7947460525840981638[18] = 0;
   out_7947460525840981638[19] = 0;
   out_7947460525840981638[20] = 0;
   out_7947460525840981638[21] = 0;
   out_7947460525840981638[22] = 0;
   out_7947460525840981638[23] = 0;
   out_7947460525840981638[24] = 0;
   out_7947460525840981638[25] = 0;
   out_7947460525840981638[26] = 0;
   out_7947460525840981638[27] = 0;
   out_7947460525840981638[28] = 0;
   out_7947460525840981638[29] = 0;
   out_7947460525840981638[30] = 0;
   out_7947460525840981638[31] = 0;
   out_7947460525840981638[32] = 0;
   out_7947460525840981638[33] = 1;
   out_7947460525840981638[34] = 0;
   out_7947460525840981638[35] = 0;
   out_7947460525840981638[36] = 1;
   out_7947460525840981638[37] = 0;
   out_7947460525840981638[38] = 0;
   out_7947460525840981638[39] = 0;
   out_7947460525840981638[40] = 0;
   out_7947460525840981638[41] = 0;
   out_7947460525840981638[42] = 0;
   out_7947460525840981638[43] = 0;
   out_7947460525840981638[44] = 0;
   out_7947460525840981638[45] = 0;
   out_7947460525840981638[46] = 0;
   out_7947460525840981638[47] = 0;
   out_7947460525840981638[48] = 0;
   out_7947460525840981638[49] = 0;
   out_7947460525840981638[50] = 0;
   out_7947460525840981638[51] = 0;
   out_7947460525840981638[52] = 0;
   out_7947460525840981638[53] = 0;
   out_7947460525840981638[54] = 0;
   out_7947460525840981638[55] = 0;
   out_7947460525840981638[56] = 1;
   out_7947460525840981638[57] = 0;
   out_7947460525840981638[58] = 0;
   out_7947460525840981638[59] = 1;
   out_7947460525840981638[60] = 0;
   out_7947460525840981638[61] = 0;
   out_7947460525840981638[62] = 0;
   out_7947460525840981638[63] = 0;
   out_7947460525840981638[64] = 0;
   out_7947460525840981638[65] = 0;
}
void h_9(double *state, double *unused, double *out_5699186631219487293) {
   out_5699186631219487293[0] = state[10];
   out_5699186631219487293[1] = state[11];
   out_5699186631219487293[2] = state[12];
}
void H_9(double *state, double *unused, double *out_7706270879211390993) {
   out_7706270879211390993[0] = 0;
   out_7706270879211390993[1] = 0;
   out_7706270879211390993[2] = 0;
   out_7706270879211390993[3] = 0;
   out_7706270879211390993[4] = 0;
   out_7706270879211390993[5] = 0;
   out_7706270879211390993[6] = 0;
   out_7706270879211390993[7] = 0;
   out_7706270879211390993[8] = 0;
   out_7706270879211390993[9] = 0;
   out_7706270879211390993[10] = 1;
   out_7706270879211390993[11] = 0;
   out_7706270879211390993[12] = 0;
   out_7706270879211390993[13] = 0;
   out_7706270879211390993[14] = 0;
   out_7706270879211390993[15] = 0;
   out_7706270879211390993[16] = 0;
   out_7706270879211390993[17] = 0;
   out_7706270879211390993[18] = 0;
   out_7706270879211390993[19] = 0;
   out_7706270879211390993[20] = 0;
   out_7706270879211390993[21] = 0;
   out_7706270879211390993[22] = 0;
   out_7706270879211390993[23] = 0;
   out_7706270879211390993[24] = 0;
   out_7706270879211390993[25] = 0;
   out_7706270879211390993[26] = 0;
   out_7706270879211390993[27] = 0;
   out_7706270879211390993[28] = 0;
   out_7706270879211390993[29] = 0;
   out_7706270879211390993[30] = 0;
   out_7706270879211390993[31] = 0;
   out_7706270879211390993[32] = 0;
   out_7706270879211390993[33] = 1;
   out_7706270879211390993[34] = 0;
   out_7706270879211390993[35] = 0;
   out_7706270879211390993[36] = 0;
   out_7706270879211390993[37] = 0;
   out_7706270879211390993[38] = 0;
   out_7706270879211390993[39] = 0;
   out_7706270879211390993[40] = 0;
   out_7706270879211390993[41] = 0;
   out_7706270879211390993[42] = 0;
   out_7706270879211390993[43] = 0;
   out_7706270879211390993[44] = 0;
   out_7706270879211390993[45] = 0;
   out_7706270879211390993[46] = 0;
   out_7706270879211390993[47] = 0;
   out_7706270879211390993[48] = 0;
   out_7706270879211390993[49] = 0;
   out_7706270879211390993[50] = 0;
   out_7706270879211390993[51] = 0;
   out_7706270879211390993[52] = 0;
   out_7706270879211390993[53] = 0;
   out_7706270879211390993[54] = 0;
   out_7706270879211390993[55] = 0;
   out_7706270879211390993[56] = 1;
   out_7706270879211390993[57] = 0;
   out_7706270879211390993[58] = 0;
   out_7706270879211390993[59] = 0;
   out_7706270879211390993[60] = 0;
   out_7706270879211390993[61] = 0;
   out_7706270879211390993[62] = 0;
   out_7706270879211390993[63] = 0;
   out_7706270879211390993[64] = 0;
   out_7706270879211390993[65] = 0;
}
void h_10(double *state, double *unused, double *out_5950265462866884042) {
   out_5950265462866884042[0] = 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0] + state[16] + state[19];
   out_5950265462866884042[1] = 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1] + state[17] + state[20];
   out_5950265462866884042[2] = 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[2] + state[18] + state[21];
}
void H_10(double *state, double *unused, double *out_7904147568273058876) {
   out_7904147568273058876[0] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*pow(state[0], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_7904147568273058876[1] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_7904147568273058876[2] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[2];
   out_7904147568273058876[3] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_7904147568273058876[4] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_7904147568273058876[5] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_7904147568273058876[6] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_7904147568273058876[7] = 0;
   out_7904147568273058876[8] = 0;
   out_7904147568273058876[9] = 0;
   out_7904147568273058876[10] = 0;
   out_7904147568273058876[11] = 0;
   out_7904147568273058876[12] = 0;
   out_7904147568273058876[13] = 0;
   out_7904147568273058876[14] = 0;
   out_7904147568273058876[15] = 0;
   out_7904147568273058876[16] = 1;
   out_7904147568273058876[17] = 0;
   out_7904147568273058876[18] = 0;
   out_7904147568273058876[19] = 1;
   out_7904147568273058876[20] = 0;
   out_7904147568273058876[21] = 0;
   out_7904147568273058876[22] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_7904147568273058876[23] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*pow(state[1], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_7904147568273058876[24] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1]*state[2];
   out_7904147568273058876[25] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_7904147568273058876[26] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_7904147568273058876[27] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_7904147568273058876[28] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_7904147568273058876[29] = 0;
   out_7904147568273058876[30] = 0;
   out_7904147568273058876[31] = 0;
   out_7904147568273058876[32] = 0;
   out_7904147568273058876[33] = 0;
   out_7904147568273058876[34] = 0;
   out_7904147568273058876[35] = 0;
   out_7904147568273058876[36] = 0;
   out_7904147568273058876[37] = 0;
   out_7904147568273058876[38] = 0;
   out_7904147568273058876[39] = 1;
   out_7904147568273058876[40] = 0;
   out_7904147568273058876[41] = 0;
   out_7904147568273058876[42] = 1;
   out_7904147568273058876[43] = 0;
   out_7904147568273058876[44] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[0]*state[2];
   out_7904147568273058876[45] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[1]*state[2];
   out_7904147568273058876[46] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*pow(state[2], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_7904147568273058876[47] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_7904147568273058876[48] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_7904147568273058876[49] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_7904147568273058876[50] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_7904147568273058876[51] = 0;
   out_7904147568273058876[52] = 0;
   out_7904147568273058876[53] = 0;
   out_7904147568273058876[54] = 0;
   out_7904147568273058876[55] = 0;
   out_7904147568273058876[56] = 0;
   out_7904147568273058876[57] = 0;
   out_7904147568273058876[58] = 0;
   out_7904147568273058876[59] = 0;
   out_7904147568273058876[60] = 0;
   out_7904147568273058876[61] = 0;
   out_7904147568273058876[62] = 1;
   out_7904147568273058876[63] = 0;
   out_7904147568273058876[64] = 0;
   out_7904147568273058876[65] = 1;
}
void h_12(double *state, double *unused, double *out_45344162016595475) {
   out_45344162016595475[0] = state[0];
   out_45344162016595475[1] = state[1];
   out_45344162016595475[2] = state[2];
}
void H_12(double *state, double *unused, double *out_2928004117809019843) {
   out_2928004117809019843[0] = 1;
   out_2928004117809019843[1] = 0;
   out_2928004117809019843[2] = 0;
   out_2928004117809019843[3] = 0;
   out_2928004117809019843[4] = 0;
   out_2928004117809019843[5] = 0;
   out_2928004117809019843[6] = 0;
   out_2928004117809019843[7] = 0;
   out_2928004117809019843[8] = 0;
   out_2928004117809019843[9] = 0;
   out_2928004117809019843[10] = 0;
   out_2928004117809019843[11] = 0;
   out_2928004117809019843[12] = 0;
   out_2928004117809019843[13] = 0;
   out_2928004117809019843[14] = 0;
   out_2928004117809019843[15] = 0;
   out_2928004117809019843[16] = 0;
   out_2928004117809019843[17] = 0;
   out_2928004117809019843[18] = 0;
   out_2928004117809019843[19] = 0;
   out_2928004117809019843[20] = 0;
   out_2928004117809019843[21] = 0;
   out_2928004117809019843[22] = 0;
   out_2928004117809019843[23] = 1;
   out_2928004117809019843[24] = 0;
   out_2928004117809019843[25] = 0;
   out_2928004117809019843[26] = 0;
   out_2928004117809019843[27] = 0;
   out_2928004117809019843[28] = 0;
   out_2928004117809019843[29] = 0;
   out_2928004117809019843[30] = 0;
   out_2928004117809019843[31] = 0;
   out_2928004117809019843[32] = 0;
   out_2928004117809019843[33] = 0;
   out_2928004117809019843[34] = 0;
   out_2928004117809019843[35] = 0;
   out_2928004117809019843[36] = 0;
   out_2928004117809019843[37] = 0;
   out_2928004117809019843[38] = 0;
   out_2928004117809019843[39] = 0;
   out_2928004117809019843[40] = 0;
   out_2928004117809019843[41] = 0;
   out_2928004117809019843[42] = 0;
   out_2928004117809019843[43] = 0;
   out_2928004117809019843[44] = 0;
   out_2928004117809019843[45] = 0;
   out_2928004117809019843[46] = 1;
   out_2928004117809019843[47] = 0;
   out_2928004117809019843[48] = 0;
   out_2928004117809019843[49] = 0;
   out_2928004117809019843[50] = 0;
   out_2928004117809019843[51] = 0;
   out_2928004117809019843[52] = 0;
   out_2928004117809019843[53] = 0;
   out_2928004117809019843[54] = 0;
   out_2928004117809019843[55] = 0;
   out_2928004117809019843[56] = 0;
   out_2928004117809019843[57] = 0;
   out_2928004117809019843[58] = 0;
   out_2928004117809019843[59] = 0;
   out_2928004117809019843[60] = 0;
   out_2928004117809019843[61] = 0;
   out_2928004117809019843[62] = 0;
   out_2928004117809019843[63] = 0;
   out_2928004117809019843[64] = 0;
   out_2928004117809019843[65] = 0;
}
void h_35(double *state, double *unused, double *out_3928236782950610713) {
   out_3928236782950610713[0] = state[7];
   out_3928236782950610713[1] = state[8];
   out_3928236782950610713[2] = state[9];
}
void H_35(double *state, double *unused, double *out_4580798468468374262) {
   out_4580798468468374262[0] = 0;
   out_4580798468468374262[1] = 0;
   out_4580798468468374262[2] = 0;
   out_4580798468468374262[3] = 0;
   out_4580798468468374262[4] = 0;
   out_4580798468468374262[5] = 0;
   out_4580798468468374262[6] = 0;
   out_4580798468468374262[7] = 1;
   out_4580798468468374262[8] = 0;
   out_4580798468468374262[9] = 0;
   out_4580798468468374262[10] = 0;
   out_4580798468468374262[11] = 0;
   out_4580798468468374262[12] = 0;
   out_4580798468468374262[13] = 0;
   out_4580798468468374262[14] = 0;
   out_4580798468468374262[15] = 0;
   out_4580798468468374262[16] = 0;
   out_4580798468468374262[17] = 0;
   out_4580798468468374262[18] = 0;
   out_4580798468468374262[19] = 0;
   out_4580798468468374262[20] = 0;
   out_4580798468468374262[21] = 0;
   out_4580798468468374262[22] = 0;
   out_4580798468468374262[23] = 0;
   out_4580798468468374262[24] = 0;
   out_4580798468468374262[25] = 0;
   out_4580798468468374262[26] = 0;
   out_4580798468468374262[27] = 0;
   out_4580798468468374262[28] = 0;
   out_4580798468468374262[29] = 0;
   out_4580798468468374262[30] = 1;
   out_4580798468468374262[31] = 0;
   out_4580798468468374262[32] = 0;
   out_4580798468468374262[33] = 0;
   out_4580798468468374262[34] = 0;
   out_4580798468468374262[35] = 0;
   out_4580798468468374262[36] = 0;
   out_4580798468468374262[37] = 0;
   out_4580798468468374262[38] = 0;
   out_4580798468468374262[39] = 0;
   out_4580798468468374262[40] = 0;
   out_4580798468468374262[41] = 0;
   out_4580798468468374262[42] = 0;
   out_4580798468468374262[43] = 0;
   out_4580798468468374262[44] = 0;
   out_4580798468468374262[45] = 0;
   out_4580798468468374262[46] = 0;
   out_4580798468468374262[47] = 0;
   out_4580798468468374262[48] = 0;
   out_4580798468468374262[49] = 0;
   out_4580798468468374262[50] = 0;
   out_4580798468468374262[51] = 0;
   out_4580798468468374262[52] = 0;
   out_4580798468468374262[53] = 1;
   out_4580798468468374262[54] = 0;
   out_4580798468468374262[55] = 0;
   out_4580798468468374262[56] = 0;
   out_4580798468468374262[57] = 0;
   out_4580798468468374262[58] = 0;
   out_4580798468468374262[59] = 0;
   out_4580798468468374262[60] = 0;
   out_4580798468468374262[61] = 0;
   out_4580798468468374262[62] = 0;
   out_4580798468468374262[63] = 0;
   out_4580798468468374262[64] = 0;
   out_4580798468468374262[65] = 0;
}
void h_32(double *state, double *unused, double *out_8873137764558585653) {
   out_8873137764558585653[0] = state[3];
   out_8873137764558585653[1] = state[4];
   out_8873137764558585653[2] = state[5];
   out_8873137764558585653[3] = state[6];
}
void H_32(double *state, double *unused, double *out_6951081101547060998) {
   out_6951081101547060998[0] = 0;
   out_6951081101547060998[1] = 0;
   out_6951081101547060998[2] = 0;
   out_6951081101547060998[3] = 1;
   out_6951081101547060998[4] = 0;
   out_6951081101547060998[5] = 0;
   out_6951081101547060998[6] = 0;
   out_6951081101547060998[7] = 0;
   out_6951081101547060998[8] = 0;
   out_6951081101547060998[9] = 0;
   out_6951081101547060998[10] = 0;
   out_6951081101547060998[11] = 0;
   out_6951081101547060998[12] = 0;
   out_6951081101547060998[13] = 0;
   out_6951081101547060998[14] = 0;
   out_6951081101547060998[15] = 0;
   out_6951081101547060998[16] = 0;
   out_6951081101547060998[17] = 0;
   out_6951081101547060998[18] = 0;
   out_6951081101547060998[19] = 0;
   out_6951081101547060998[20] = 0;
   out_6951081101547060998[21] = 0;
   out_6951081101547060998[22] = 0;
   out_6951081101547060998[23] = 0;
   out_6951081101547060998[24] = 0;
   out_6951081101547060998[25] = 0;
   out_6951081101547060998[26] = 1;
   out_6951081101547060998[27] = 0;
   out_6951081101547060998[28] = 0;
   out_6951081101547060998[29] = 0;
   out_6951081101547060998[30] = 0;
   out_6951081101547060998[31] = 0;
   out_6951081101547060998[32] = 0;
   out_6951081101547060998[33] = 0;
   out_6951081101547060998[34] = 0;
   out_6951081101547060998[35] = 0;
   out_6951081101547060998[36] = 0;
   out_6951081101547060998[37] = 0;
   out_6951081101547060998[38] = 0;
   out_6951081101547060998[39] = 0;
   out_6951081101547060998[40] = 0;
   out_6951081101547060998[41] = 0;
   out_6951081101547060998[42] = 0;
   out_6951081101547060998[43] = 0;
   out_6951081101547060998[44] = 0;
   out_6951081101547060998[45] = 0;
   out_6951081101547060998[46] = 0;
   out_6951081101547060998[47] = 0;
   out_6951081101547060998[48] = 0;
   out_6951081101547060998[49] = 1;
   out_6951081101547060998[50] = 0;
   out_6951081101547060998[51] = 0;
   out_6951081101547060998[52] = 0;
   out_6951081101547060998[53] = 0;
   out_6951081101547060998[54] = 0;
   out_6951081101547060998[55] = 0;
   out_6951081101547060998[56] = 0;
   out_6951081101547060998[57] = 0;
   out_6951081101547060998[58] = 0;
   out_6951081101547060998[59] = 0;
   out_6951081101547060998[60] = 0;
   out_6951081101547060998[61] = 0;
   out_6951081101547060998[62] = 0;
   out_6951081101547060998[63] = 0;
   out_6951081101547060998[64] = 0;
   out_6951081101547060998[65] = 0;
   out_6951081101547060998[66] = 0;
   out_6951081101547060998[67] = 0;
   out_6951081101547060998[68] = 0;
   out_6951081101547060998[69] = 0;
   out_6951081101547060998[70] = 0;
   out_6951081101547060998[71] = 0;
   out_6951081101547060998[72] = 1;
   out_6951081101547060998[73] = 0;
   out_6951081101547060998[74] = 0;
   out_6951081101547060998[75] = 0;
   out_6951081101547060998[76] = 0;
   out_6951081101547060998[77] = 0;
   out_6951081101547060998[78] = 0;
   out_6951081101547060998[79] = 0;
   out_6951081101547060998[80] = 0;
   out_6951081101547060998[81] = 0;
   out_6951081101547060998[82] = 0;
   out_6951081101547060998[83] = 0;
   out_6951081101547060998[84] = 0;
   out_6951081101547060998[85] = 0;
   out_6951081101547060998[86] = 0;
   out_6951081101547060998[87] = 0;
}
void h_13(double *state, double *unused, double *out_594167888267460052) {
   out_594167888267460052[0] = (-2*state[3]*state[5] + 2*state[4]*state[6])*state[9] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[8] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[7];
   out_594167888267460052[1] = (2*state[3]*state[4] + 2*state[5]*state[6])*state[9] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[7] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[8];
   out_594167888267460052[2] = (-2*state[3]*state[4] + 2*state[5]*state[6])*state[8] + (2*state[3]*state[5] + 2*state[4]*state[6])*state[7] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[9];
}
void H_13(double *state, double *unused, double *out_7204993759311350501) {
   out_7204993759311350501[0] = 0;
   out_7204993759311350501[1] = 0;
   out_7204993759311350501[2] = 0;
   out_7204993759311350501[3] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_7204993759311350501[4] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_7204993759311350501[5] = -2*state[3]*state[9] + 2*state[4]*state[8] - 2*state[5]*state[7];
   out_7204993759311350501[6] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_7204993759311350501[7] = pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2);
   out_7204993759311350501[8] = 2*state[3]*state[6] + 2*state[4]*state[5];
   out_7204993759311350501[9] = -2*state[3]*state[5] + 2*state[4]*state[6];
   out_7204993759311350501[10] = 0;
   out_7204993759311350501[11] = 0;
   out_7204993759311350501[12] = 0;
   out_7204993759311350501[13] = 0;
   out_7204993759311350501[14] = 0;
   out_7204993759311350501[15] = 0;
   out_7204993759311350501[16] = 0;
   out_7204993759311350501[17] = 0;
   out_7204993759311350501[18] = 0;
   out_7204993759311350501[19] = 0;
   out_7204993759311350501[20] = 0;
   out_7204993759311350501[21] = 0;
   out_7204993759311350501[22] = 0;
   out_7204993759311350501[23] = 0;
   out_7204993759311350501[24] = 0;
   out_7204993759311350501[25] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_7204993759311350501[26] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_7204993759311350501[27] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_7204993759311350501[28] = -2*state[3]*state[7] + 2*state[5]*state[9] - 2*state[6]*state[8];
   out_7204993759311350501[29] = -2*state[3]*state[6] + 2*state[4]*state[5];
   out_7204993759311350501[30] = pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2);
   out_7204993759311350501[31] = 2*state[3]*state[4] + 2*state[5]*state[6];
   out_7204993759311350501[32] = 0;
   out_7204993759311350501[33] = 0;
   out_7204993759311350501[34] = 0;
   out_7204993759311350501[35] = 0;
   out_7204993759311350501[36] = 0;
   out_7204993759311350501[37] = 0;
   out_7204993759311350501[38] = 0;
   out_7204993759311350501[39] = 0;
   out_7204993759311350501[40] = 0;
   out_7204993759311350501[41] = 0;
   out_7204993759311350501[42] = 0;
   out_7204993759311350501[43] = 0;
   out_7204993759311350501[44] = 0;
   out_7204993759311350501[45] = 0;
   out_7204993759311350501[46] = 0;
   out_7204993759311350501[47] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_7204993759311350501[48] = -2*state[3]*state[8] - 2*state[4]*state[9] + 2*state[6]*state[7];
   out_7204993759311350501[49] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_7204993759311350501[50] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_7204993759311350501[51] = 2*state[3]*state[5] + 2*state[4]*state[6];
   out_7204993759311350501[52] = -2*state[3]*state[4] + 2*state[5]*state[6];
   out_7204993759311350501[53] = pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2);
   out_7204993759311350501[54] = 0;
   out_7204993759311350501[55] = 0;
   out_7204993759311350501[56] = 0;
   out_7204993759311350501[57] = 0;
   out_7204993759311350501[58] = 0;
   out_7204993759311350501[59] = 0;
   out_7204993759311350501[60] = 0;
   out_7204993759311350501[61] = 0;
   out_7204993759311350501[62] = 0;
   out_7204993759311350501[63] = 0;
   out_7204993759311350501[64] = 0;
   out_7204993759311350501[65] = 0;
}
void h_14(double *state, double *unused, double *out_5699186631219487293) {
   out_5699186631219487293[0] = state[10];
   out_5699186631219487293[1] = state[11];
   out_5699186631219487293[2] = state[12];
}
void H_14(double *state, double *unused, double *out_7706270879211390993) {
   out_7706270879211390993[0] = 0;
   out_7706270879211390993[1] = 0;
   out_7706270879211390993[2] = 0;
   out_7706270879211390993[3] = 0;
   out_7706270879211390993[4] = 0;
   out_7706270879211390993[5] = 0;
   out_7706270879211390993[6] = 0;
   out_7706270879211390993[7] = 0;
   out_7706270879211390993[8] = 0;
   out_7706270879211390993[9] = 0;
   out_7706270879211390993[10] = 1;
   out_7706270879211390993[11] = 0;
   out_7706270879211390993[12] = 0;
   out_7706270879211390993[13] = 0;
   out_7706270879211390993[14] = 0;
   out_7706270879211390993[15] = 0;
   out_7706270879211390993[16] = 0;
   out_7706270879211390993[17] = 0;
   out_7706270879211390993[18] = 0;
   out_7706270879211390993[19] = 0;
   out_7706270879211390993[20] = 0;
   out_7706270879211390993[21] = 0;
   out_7706270879211390993[22] = 0;
   out_7706270879211390993[23] = 0;
   out_7706270879211390993[24] = 0;
   out_7706270879211390993[25] = 0;
   out_7706270879211390993[26] = 0;
   out_7706270879211390993[27] = 0;
   out_7706270879211390993[28] = 0;
   out_7706270879211390993[29] = 0;
   out_7706270879211390993[30] = 0;
   out_7706270879211390993[31] = 0;
   out_7706270879211390993[32] = 0;
   out_7706270879211390993[33] = 1;
   out_7706270879211390993[34] = 0;
   out_7706270879211390993[35] = 0;
   out_7706270879211390993[36] = 0;
   out_7706270879211390993[37] = 0;
   out_7706270879211390993[38] = 0;
   out_7706270879211390993[39] = 0;
   out_7706270879211390993[40] = 0;
   out_7706270879211390993[41] = 0;
   out_7706270879211390993[42] = 0;
   out_7706270879211390993[43] = 0;
   out_7706270879211390993[44] = 0;
   out_7706270879211390993[45] = 0;
   out_7706270879211390993[46] = 0;
   out_7706270879211390993[47] = 0;
   out_7706270879211390993[48] = 0;
   out_7706270879211390993[49] = 0;
   out_7706270879211390993[50] = 0;
   out_7706270879211390993[51] = 0;
   out_7706270879211390993[52] = 0;
   out_7706270879211390993[53] = 0;
   out_7706270879211390993[54] = 0;
   out_7706270879211390993[55] = 0;
   out_7706270879211390993[56] = 1;
   out_7706270879211390993[57] = 0;
   out_7706270879211390993[58] = 0;
   out_7706270879211390993[59] = 0;
   out_7706270879211390993[60] = 0;
   out_7706270879211390993[61] = 0;
   out_7706270879211390993[62] = 0;
   out_7706270879211390993[63] = 0;
   out_7706270879211390993[64] = 0;
   out_7706270879211390993[65] = 0;
}
void h_33(double *state, double *unused, double *out_5181611531768022005) {
   out_5181611531768022005[0] = state[16];
   out_5181611531768022005[1] = state[17];
   out_5181611531768022005[2] = state[18];
}
void H_33(double *state, double *unused, double *out_1430241463829516658) {
   out_1430241463829516658[0] = 0;
   out_1430241463829516658[1] = 0;
   out_1430241463829516658[2] = 0;
   out_1430241463829516658[3] = 0;
   out_1430241463829516658[4] = 0;
   out_1430241463829516658[5] = 0;
   out_1430241463829516658[6] = 0;
   out_1430241463829516658[7] = 0;
   out_1430241463829516658[8] = 0;
   out_1430241463829516658[9] = 0;
   out_1430241463829516658[10] = 0;
   out_1430241463829516658[11] = 0;
   out_1430241463829516658[12] = 0;
   out_1430241463829516658[13] = 0;
   out_1430241463829516658[14] = 0;
   out_1430241463829516658[15] = 0;
   out_1430241463829516658[16] = 1;
   out_1430241463829516658[17] = 0;
   out_1430241463829516658[18] = 0;
   out_1430241463829516658[19] = 0;
   out_1430241463829516658[20] = 0;
   out_1430241463829516658[21] = 0;
   out_1430241463829516658[22] = 0;
   out_1430241463829516658[23] = 0;
   out_1430241463829516658[24] = 0;
   out_1430241463829516658[25] = 0;
   out_1430241463829516658[26] = 0;
   out_1430241463829516658[27] = 0;
   out_1430241463829516658[28] = 0;
   out_1430241463829516658[29] = 0;
   out_1430241463829516658[30] = 0;
   out_1430241463829516658[31] = 0;
   out_1430241463829516658[32] = 0;
   out_1430241463829516658[33] = 0;
   out_1430241463829516658[34] = 0;
   out_1430241463829516658[35] = 0;
   out_1430241463829516658[36] = 0;
   out_1430241463829516658[37] = 0;
   out_1430241463829516658[38] = 0;
   out_1430241463829516658[39] = 1;
   out_1430241463829516658[40] = 0;
   out_1430241463829516658[41] = 0;
   out_1430241463829516658[42] = 0;
   out_1430241463829516658[43] = 0;
   out_1430241463829516658[44] = 0;
   out_1430241463829516658[45] = 0;
   out_1430241463829516658[46] = 0;
   out_1430241463829516658[47] = 0;
   out_1430241463829516658[48] = 0;
   out_1430241463829516658[49] = 0;
   out_1430241463829516658[50] = 0;
   out_1430241463829516658[51] = 0;
   out_1430241463829516658[52] = 0;
   out_1430241463829516658[53] = 0;
   out_1430241463829516658[54] = 0;
   out_1430241463829516658[55] = 0;
   out_1430241463829516658[56] = 0;
   out_1430241463829516658[57] = 0;
   out_1430241463829516658[58] = 0;
   out_1430241463829516658[59] = 0;
   out_1430241463829516658[60] = 0;
   out_1430241463829516658[61] = 0;
   out_1430241463829516658[62] = 1;
   out_1430241463829516658[63] = 0;
   out_1430241463829516658[64] = 0;
   out_1430241463829516658[65] = 0;
}
#include <eigen3/Eigen/Dense>
#include <iostream>

typedef Eigen::Matrix<double, DIM, DIM, Eigen::RowMajor> DDM;
typedef Eigen::Matrix<double, EDIM, EDIM, Eigen::RowMajor> EEM;
typedef Eigen::Matrix<double, DIM, EDIM, Eigen::RowMajor> DEM;

void predict(double *in_x, double *in_P, double *in_Q, double dt) {
  typedef Eigen::Matrix<double, MEDIM, MEDIM, Eigen::RowMajor> RRM;

  double nx[DIM] = {0};
  double in_F[EDIM*EDIM] = {0};

  // functions from sympy
  f_fun(in_x, dt, nx);
  F_fun(in_x, dt, in_F);


  EEM F(in_F);
  EEM P(in_P);
  EEM Q(in_Q);

  RRM F_main = F.topLeftCorner(MEDIM, MEDIM);
  P.topLeftCorner(MEDIM, MEDIM) = (F_main * P.topLeftCorner(MEDIM, MEDIM)) * F_main.transpose();
  P.topRightCorner(MEDIM, EDIM - MEDIM) = F_main * P.topRightCorner(MEDIM, EDIM - MEDIM);
  P.bottomLeftCorner(EDIM - MEDIM, MEDIM) = P.bottomLeftCorner(EDIM - MEDIM, MEDIM) * F_main.transpose();

  P = P + dt*Q;

  // copy out state
  memcpy(in_x, nx, DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
}

// note: extra_args dim only correct when null space projecting
// otherwise 1
template <int ZDIM, int EADIM, bool MAHA_TEST>
void update(double *in_x, double *in_P, Hfun h_fun, Hfun H_fun, Hfun Hea_fun, double *in_z, double *in_R, double *in_ea, double MAHA_THRESHOLD) {
  typedef Eigen::Matrix<double, ZDIM, ZDIM, Eigen::RowMajor> ZZM;
  typedef Eigen::Matrix<double, ZDIM, DIM, Eigen::RowMajor> ZDM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, EDIM, Eigen::RowMajor> XEM;
  //typedef Eigen::Matrix<double, EDIM, ZDIM, Eigen::RowMajor> EZM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, 1> X1M;
  typedef Eigen::Matrix<double, Eigen::Dynamic, Eigen::Dynamic, Eigen::RowMajor> XXM;

  double in_hx[ZDIM] = {0};
  double in_H[ZDIM * DIM] = {0};
  double in_H_mod[EDIM * DIM] = {0};
  double delta_x[EDIM] = {0};
  double x_new[DIM] = {0};


  // state x, P
  Eigen::Matrix<double, ZDIM, 1> z(in_z);
  EEM P(in_P);
  ZZM pre_R(in_R);

  // functions from sympy
  h_fun(in_x, in_ea, in_hx);
  H_fun(in_x, in_ea, in_H);
  ZDM pre_H(in_H);

  // get y (y = z - hx)
  Eigen::Matrix<double, ZDIM, 1> pre_y(in_hx); pre_y = z - pre_y;
  X1M y; XXM H; XXM R;
  if (Hea_fun){
    typedef Eigen::Matrix<double, ZDIM, EADIM, Eigen::RowMajor> ZAM;
    double in_Hea[ZDIM * EADIM] = {0};
    Hea_fun(in_x, in_ea, in_Hea);
    ZAM Hea(in_Hea);
    XXM A = Hea.transpose().fullPivLu().kernel();


    y = A.transpose() * pre_y;
    H = A.transpose() * pre_H;
    R = A.transpose() * pre_R * A;
  } else {
    y = pre_y;
    H = pre_H;
    R = pre_R;
  }
  // get modified H
  H_mod_fun(in_x, in_H_mod);
  DEM H_mod(in_H_mod);
  XEM H_err = H * H_mod;

  // Do mahalobis distance test
  if (MAHA_TEST){
    XXM a = (H_err * P * H_err.transpose() + R).inverse();
    double maha_dist = y.transpose() * a * y;
    if (maha_dist > MAHA_THRESHOLD){
      R = 1.0e16 * R;
    }
  }

  // Outlier resilient weighting
  double weight = 1;//(1.5)/(1 + y.squaredNorm()/R.sum());

  // kalman gains and I_KH
  XXM S = ((H_err * P) * H_err.transpose()) + R/weight;
  XEM KT = S.fullPivLu().solve(H_err * P.transpose());
  //EZM K = KT.transpose(); TODO: WHY DOES THIS NOT COMPILE?
  //EZM K = S.fullPivLu().solve(H_err * P.transpose()).transpose();
  //std::cout << "Here is the matrix rot:\n" << K << std::endl;
  EEM I_KH = Eigen::Matrix<double, EDIM, EDIM>::Identity() - (KT.transpose() * H_err);

  // update state by injecting dx
  Eigen::Matrix<double, EDIM, 1> dx(delta_x);
  dx  = (KT.transpose() * y);
  memcpy(delta_x, dx.data(), EDIM * sizeof(double));
  err_fun(in_x, delta_x, x_new);
  Eigen::Matrix<double, DIM, 1> x(x_new);

  // update cov
  P = ((I_KH * P) * I_KH.transpose()) + ((KT.transpose() * R) * KT);

  // copy out state
  memcpy(in_x, x.data(), DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
  memcpy(in_z, y.data(), y.rows() * sizeof(double));
}




}
extern "C" {

void live_update_4(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_4, H_4, NULL, in_z, in_R, in_ea, MAHA_THRESH_4);
}
void live_update_9(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_9, H_9, NULL, in_z, in_R, in_ea, MAHA_THRESH_9);
}
void live_update_10(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_10, H_10, NULL, in_z, in_R, in_ea, MAHA_THRESH_10);
}
void live_update_12(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_12, H_12, NULL, in_z, in_R, in_ea, MAHA_THRESH_12);
}
void live_update_35(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_35, H_35, NULL, in_z, in_R, in_ea, MAHA_THRESH_35);
}
void live_update_32(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<4, 3, 0>(in_x, in_P, h_32, H_32, NULL, in_z, in_R, in_ea, MAHA_THRESH_32);
}
void live_update_13(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_13, H_13, NULL, in_z, in_R, in_ea, MAHA_THRESH_13);
}
void live_update_14(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_14, H_14, NULL, in_z, in_R, in_ea, MAHA_THRESH_14);
}
void live_update_33(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_33, H_33, NULL, in_z, in_R, in_ea, MAHA_THRESH_33);
}
void live_H(double *in_vec, double *out_7869006308364651371) {
  H(in_vec, out_7869006308364651371);
}
void live_err_fun(double *nom_x, double *delta_x, double *out_2459398990013534767) {
  err_fun(nom_x, delta_x, out_2459398990013534767);
}
void live_inv_err_fun(double *nom_x, double *true_x, double *out_8502047428813116135) {
  inv_err_fun(nom_x, true_x, out_8502047428813116135);
}
void live_H_mod_fun(double *state, double *out_3997232855027068760) {
  H_mod_fun(state, out_3997232855027068760);
}
void live_f_fun(double *state, double dt, double *out_5441595500773639017) {
  f_fun(state,  dt, out_5441595500773639017);
}
void live_F_fun(double *state, double dt, double *out_1704606658348508637) {
  F_fun(state,  dt, out_1704606658348508637);
}
void live_h_4(double *state, double *unused, double *out_6200831014598738171) {
  h_4(state, unused, out_6200831014598738171);
}
void live_H_4(double *state, double *unused, double *out_7947460525840981638) {
  H_4(state, unused, out_7947460525840981638);
}
void live_h_9(double *state, double *unused, double *out_5699186631219487293) {
  h_9(state, unused, out_5699186631219487293);
}
void live_H_9(double *state, double *unused, double *out_7706270879211390993) {
  H_9(state, unused, out_7706270879211390993);
}
void live_h_10(double *state, double *unused, double *out_5950265462866884042) {
  h_10(state, unused, out_5950265462866884042);
}
void live_H_10(double *state, double *unused, double *out_7904147568273058876) {
  H_10(state, unused, out_7904147568273058876);
}
void live_h_12(double *state, double *unused, double *out_45344162016595475) {
  h_12(state, unused, out_45344162016595475);
}
void live_H_12(double *state, double *unused, double *out_2928004117809019843) {
  H_12(state, unused, out_2928004117809019843);
}
void live_h_35(double *state, double *unused, double *out_3928236782950610713) {
  h_35(state, unused, out_3928236782950610713);
}
void live_H_35(double *state, double *unused, double *out_4580798468468374262) {
  H_35(state, unused, out_4580798468468374262);
}
void live_h_32(double *state, double *unused, double *out_8873137764558585653) {
  h_32(state, unused, out_8873137764558585653);
}
void live_H_32(double *state, double *unused, double *out_6951081101547060998) {
  H_32(state, unused, out_6951081101547060998);
}
void live_h_13(double *state, double *unused, double *out_594167888267460052) {
  h_13(state, unused, out_594167888267460052);
}
void live_H_13(double *state, double *unused, double *out_7204993759311350501) {
  H_13(state, unused, out_7204993759311350501);
}
void live_h_14(double *state, double *unused, double *out_5699186631219487293) {
  h_14(state, unused, out_5699186631219487293);
}
void live_H_14(double *state, double *unused, double *out_7706270879211390993) {
  H_14(state, unused, out_7706270879211390993);
}
void live_h_33(double *state, double *unused, double *out_5181611531768022005) {
  h_33(state, unused, out_5181611531768022005);
}
void live_H_33(double *state, double *unused, double *out_1430241463829516658) {
  H_33(state, unused, out_1430241463829516658);
}
void live_predict(double *in_x, double *in_P, double *in_Q, double dt) {
  predict(in_x, in_P, in_Q, dt);
}
}

const EKF live = {
  .name = "live",
  .kinds = { 4, 9, 10, 12, 35, 32, 13, 14, 33 },
  .feature_kinds = {  },
  .f_fun = live_f_fun,
  .F_fun = live_F_fun,
  .err_fun = live_err_fun,
  .inv_err_fun = live_inv_err_fun,
  .H_mod_fun = live_H_mod_fun,
  .predict = live_predict,
  .hs = {
    { 4, live_h_4 },
    { 9, live_h_9 },
    { 10, live_h_10 },
    { 12, live_h_12 },
    { 35, live_h_35 },
    { 32, live_h_32 },
    { 13, live_h_13 },
    { 14, live_h_14 },
    { 33, live_h_33 },
  },
  .Hs = {
    { 4, live_H_4 },
    { 9, live_H_9 },
    { 10, live_H_10 },
    { 12, live_H_12 },
    { 35, live_H_35 },
    { 32, live_H_32 },
    { 13, live_H_13 },
    { 14, live_H_14 },
    { 33, live_H_33 },
  },
  .updates = {
    { 4, live_update_4 },
    { 9, live_update_9 },
    { 10, live_update_10 },
    { 12, live_update_12 },
    { 35, live_update_35 },
    { 32, live_update_32 },
    { 13, live_update_13 },
    { 14, live_update_14 },
    { 33, live_update_33 },
  },
  .Hes = {
  },
  .sets = {
  },
  .extra_routines = {
    { "H", live_H },
  },
};

ekf_lib_init(live)
