#include "live.h"

namespace {
#define DIM 22
#define EDIM 21
#define MEDIM 21
typedef void (*Hfun)(double *, double *, double *);
const static double MAHA_THRESH_4 = 7.814727903251177;
const static double MAHA_THRESH_9 = 7.814727903251177;
const static double MAHA_THRESH_10 = 7.814727903251177;
const static double MAHA_THRESH_12 = 7.814727903251177;
const static double MAHA_THRESH_35 = 7.814727903251177;
const static double MAHA_THRESH_32 = 9.487729036781154;
const static double MAHA_THRESH_13 = 7.814727903251177;
const static double MAHA_THRESH_14 = 7.814727903251177;
const static double MAHA_THRESH_33 = 7.814727903251177;

/******************************************************************************
 *                       Code generated with SymPy 1.12                       *
 *                                                                            *
 *              See http://www.sympy.org/ for more information.               *
 *                                                                            *
 *                         This file is part of 'ekf'                         *
 ******************************************************************************/
void H(double *in_vec, double *out_4851806503631677) {
   out_4851806503631677[0] = 0;
   out_4851806503631677[1] = -sin(in_vec[1])*sin(in_vec[2])*in_vec[4] - sin(in_vec[1])*cos(in_vec[2])*in_vec[3] - cos(in_vec[1])*in_vec[5];
   out_4851806503631677[2] = -sin(in_vec[2])*cos(in_vec[1])*in_vec[3] + cos(in_vec[1])*cos(in_vec[2])*in_vec[4];
   out_4851806503631677[3] = cos(in_vec[1])*cos(in_vec[2]);
   out_4851806503631677[4] = sin(in_vec[2])*cos(in_vec[1]);
   out_4851806503631677[5] = -sin(in_vec[1]);
   out_4851806503631677[6] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (-sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_4851806503631677[7] = -sin(in_vec[0])*sin(in_vec[1])*in_vec[5] + sin(in_vec[0])*sin(in_vec[2])*cos(in_vec[1])*in_vec[4] + sin(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_4851806503631677[8] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]))*in_vec[4];
   out_4851806503631677[9] = sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]);
   out_4851806503631677[10] = sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) + cos(in_vec[0])*cos(in_vec[2]);
   out_4851806503631677[11] = sin(in_vec[0])*cos(in_vec[1]);
   out_4851806503631677[12] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (-sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) + sin(in_vec[2])*cos(in_vec[0]))*in_vec[3] - sin(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_4851806503631677[13] = -sin(in_vec[1])*cos(in_vec[0])*in_vec[5] + sin(in_vec[2])*cos(in_vec[0])*cos(in_vec[1])*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_4851806503631677[14] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (sin(in_vec[0])*cos(in_vec[2]) - sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[3];
   out_4851806503631677[15] = sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]);
   out_4851806503631677[16] = -sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]);
   out_4851806503631677[17] = cos(in_vec[0])*cos(in_vec[1]);
}
void err_fun(double *nom_x, double *delta_x, double *out_3875369336362817395) {
   out_3875369336362817395[0] = delta_x[0] + nom_x[0];
   out_3875369336362817395[1] = delta_x[1] + nom_x[1];
   out_3875369336362817395[2] = delta_x[2] + nom_x[2];
   out_3875369336362817395[3] = -0.5*delta_x[3]*nom_x[4] - 0.5*delta_x[4]*nom_x[5] - 0.5*delta_x[5]*nom_x[6] + 1.0*nom_x[3];
   out_3875369336362817395[4] = 0.5*delta_x[3]*nom_x[3] + 0.5*delta_x[4]*nom_x[6] - 0.5*delta_x[5]*nom_x[5] + 1.0*nom_x[4];
   out_3875369336362817395[5] = -0.5*delta_x[3]*nom_x[6] + 0.5*delta_x[4]*nom_x[3] + 0.5*delta_x[5]*nom_x[4] + 1.0*nom_x[5];
   out_3875369336362817395[6] = 0.5*delta_x[3]*nom_x[5] - 0.5*delta_x[4]*nom_x[4] + 0.5*delta_x[5]*nom_x[3] + 1.0*nom_x[6];
   out_3875369336362817395[7] = delta_x[6] + nom_x[7];
   out_3875369336362817395[8] = delta_x[7] + nom_x[8];
   out_3875369336362817395[9] = delta_x[8] + nom_x[9];
   out_3875369336362817395[10] = delta_x[9] + nom_x[10];
   out_3875369336362817395[11] = delta_x[10] + nom_x[11];
   out_3875369336362817395[12] = delta_x[11] + nom_x[12];
   out_3875369336362817395[13] = delta_x[12] + nom_x[13];
   out_3875369336362817395[14] = delta_x[13] + nom_x[14];
   out_3875369336362817395[15] = delta_x[14] + nom_x[15];
   out_3875369336362817395[16] = delta_x[15] + nom_x[16];
   out_3875369336362817395[17] = delta_x[16] + nom_x[17];
   out_3875369336362817395[18] = delta_x[17] + nom_x[18];
   out_3875369336362817395[19] = delta_x[18] + nom_x[19];
   out_3875369336362817395[20] = delta_x[19] + nom_x[20];
   out_3875369336362817395[21] = delta_x[20] + nom_x[21];
}
void inv_err_fun(double *nom_x, double *true_x, double *out_2645324593160890975) {
   out_2645324593160890975[0] = -nom_x[0] + true_x[0];
   out_2645324593160890975[1] = -nom_x[1] + true_x[1];
   out_2645324593160890975[2] = -nom_x[2] + true_x[2];
   out_2645324593160890975[3] = 2*nom_x[3]*true_x[4] - 2*nom_x[4]*true_x[3] + 2*nom_x[5]*true_x[6] - 2*nom_x[6]*true_x[5];
   out_2645324593160890975[4] = 2*nom_x[3]*true_x[5] - 2*nom_x[4]*true_x[6] - 2*nom_x[5]*true_x[3] + 2*nom_x[6]*true_x[4];
   out_2645324593160890975[5] = 2*nom_x[3]*true_x[6] + 2*nom_x[4]*true_x[5] - 2*nom_x[5]*true_x[4] - 2*nom_x[6]*true_x[3];
   out_2645324593160890975[6] = -nom_x[7] + true_x[7];
   out_2645324593160890975[7] = -nom_x[8] + true_x[8];
   out_2645324593160890975[8] = -nom_x[9] + true_x[9];
   out_2645324593160890975[9] = -nom_x[10] + true_x[10];
   out_2645324593160890975[10] = -nom_x[11] + true_x[11];
   out_2645324593160890975[11] = -nom_x[12] + true_x[12];
   out_2645324593160890975[12] = -nom_x[13] + true_x[13];
   out_2645324593160890975[13] = -nom_x[14] + true_x[14];
   out_2645324593160890975[14] = -nom_x[15] + true_x[15];
   out_2645324593160890975[15] = -nom_x[16] + true_x[16];
   out_2645324593160890975[16] = -nom_x[17] + true_x[17];
   out_2645324593160890975[17] = -nom_x[18] + true_x[18];
   out_2645324593160890975[18] = -nom_x[19] + true_x[19];
   out_2645324593160890975[19] = -nom_x[20] + true_x[20];
   out_2645324593160890975[20] = -nom_x[21] + true_x[21];
}
void H_mod_fun(double *state, double *out_6561409780629387220) {
   out_6561409780629387220[0] = 1.0;
   out_6561409780629387220[1] = 0;
   out_6561409780629387220[2] = 0;
   out_6561409780629387220[3] = 0;
   out_6561409780629387220[4] = 0;
   out_6561409780629387220[5] = 0;
   out_6561409780629387220[6] = 0;
   out_6561409780629387220[7] = 0;
   out_6561409780629387220[8] = 0;
   out_6561409780629387220[9] = 0;
   out_6561409780629387220[10] = 0;
   out_6561409780629387220[11] = 0;
   out_6561409780629387220[12] = 0;
   out_6561409780629387220[13] = 0;
   out_6561409780629387220[14] = 0;
   out_6561409780629387220[15] = 0;
   out_6561409780629387220[16] = 0;
   out_6561409780629387220[17] = 0;
   out_6561409780629387220[18] = 0;
   out_6561409780629387220[19] = 0;
   out_6561409780629387220[20] = 0;
   out_6561409780629387220[21] = 0;
   out_6561409780629387220[22] = 1.0;
   out_6561409780629387220[23] = 0;
   out_6561409780629387220[24] = 0;
   out_6561409780629387220[25] = 0;
   out_6561409780629387220[26] = 0;
   out_6561409780629387220[27] = 0;
   out_6561409780629387220[28] = 0;
   out_6561409780629387220[29] = 0;
   out_6561409780629387220[30] = 0;
   out_6561409780629387220[31] = 0;
   out_6561409780629387220[32] = 0;
   out_6561409780629387220[33] = 0;
   out_6561409780629387220[34] = 0;
   out_6561409780629387220[35] = 0;
   out_6561409780629387220[36] = 0;
   out_6561409780629387220[37] = 0;
   out_6561409780629387220[38] = 0;
   out_6561409780629387220[39] = 0;
   out_6561409780629387220[40] = 0;
   out_6561409780629387220[41] = 0;
   out_6561409780629387220[42] = 0;
   out_6561409780629387220[43] = 0;
   out_6561409780629387220[44] = 1.0;
   out_6561409780629387220[45] = 0;
   out_6561409780629387220[46] = 0;
   out_6561409780629387220[47] = 0;
   out_6561409780629387220[48] = 0;
   out_6561409780629387220[49] = 0;
   out_6561409780629387220[50] = 0;
   out_6561409780629387220[51] = 0;
   out_6561409780629387220[52] = 0;
   out_6561409780629387220[53] = 0;
   out_6561409780629387220[54] = 0;
   out_6561409780629387220[55] = 0;
   out_6561409780629387220[56] = 0;
   out_6561409780629387220[57] = 0;
   out_6561409780629387220[58] = 0;
   out_6561409780629387220[59] = 0;
   out_6561409780629387220[60] = 0;
   out_6561409780629387220[61] = 0;
   out_6561409780629387220[62] = 0;
   out_6561409780629387220[63] = 0;
   out_6561409780629387220[64] = 0;
   out_6561409780629387220[65] = 0;
   out_6561409780629387220[66] = -0.5*state[4];
   out_6561409780629387220[67] = -0.5*state[5];
   out_6561409780629387220[68] = -0.5*state[6];
   out_6561409780629387220[69] = 0;
   out_6561409780629387220[70] = 0;
   out_6561409780629387220[71] = 0;
   out_6561409780629387220[72] = 0;
   out_6561409780629387220[73] = 0;
   out_6561409780629387220[74] = 0;
   out_6561409780629387220[75] = 0;
   out_6561409780629387220[76] = 0;
   out_6561409780629387220[77] = 0;
   out_6561409780629387220[78] = 0;
   out_6561409780629387220[79] = 0;
   out_6561409780629387220[80] = 0;
   out_6561409780629387220[81] = 0;
   out_6561409780629387220[82] = 0;
   out_6561409780629387220[83] = 0;
   out_6561409780629387220[84] = 0;
   out_6561409780629387220[85] = 0;
   out_6561409780629387220[86] = 0;
   out_6561409780629387220[87] = 0.5*state[3];
   out_6561409780629387220[88] = 0.5*state[6];
   out_6561409780629387220[89] = -0.5*state[5];
   out_6561409780629387220[90] = 0;
   out_6561409780629387220[91] = 0;
   out_6561409780629387220[92] = 0;
   out_6561409780629387220[93] = 0;
   out_6561409780629387220[94] = 0;
   out_6561409780629387220[95] = 0;
   out_6561409780629387220[96] = 0;
   out_6561409780629387220[97] = 0;
   out_6561409780629387220[98] = 0;
   out_6561409780629387220[99] = 0;
   out_6561409780629387220[100] = 0;
   out_6561409780629387220[101] = 0;
   out_6561409780629387220[102] = 0;
   out_6561409780629387220[103] = 0;
   out_6561409780629387220[104] = 0;
   out_6561409780629387220[105] = 0;
   out_6561409780629387220[106] = 0;
   out_6561409780629387220[107] = 0;
   out_6561409780629387220[108] = -0.5*state[6];
   out_6561409780629387220[109] = 0.5*state[3];
   out_6561409780629387220[110] = 0.5*state[4];
   out_6561409780629387220[111] = 0;
   out_6561409780629387220[112] = 0;
   out_6561409780629387220[113] = 0;
   out_6561409780629387220[114] = 0;
   out_6561409780629387220[115] = 0;
   out_6561409780629387220[116] = 0;
   out_6561409780629387220[117] = 0;
   out_6561409780629387220[118] = 0;
   out_6561409780629387220[119] = 0;
   out_6561409780629387220[120] = 0;
   out_6561409780629387220[121] = 0;
   out_6561409780629387220[122] = 0;
   out_6561409780629387220[123] = 0;
   out_6561409780629387220[124] = 0;
   out_6561409780629387220[125] = 0;
   out_6561409780629387220[126] = 0;
   out_6561409780629387220[127] = 0;
   out_6561409780629387220[128] = 0;
   out_6561409780629387220[129] = 0.5*state[5];
   out_6561409780629387220[130] = -0.5*state[4];
   out_6561409780629387220[131] = 0.5*state[3];
   out_6561409780629387220[132] = 0;
   out_6561409780629387220[133] = 0;
   out_6561409780629387220[134] = 0;
   out_6561409780629387220[135] = 0;
   out_6561409780629387220[136] = 0;
   out_6561409780629387220[137] = 0;
   out_6561409780629387220[138] = 0;
   out_6561409780629387220[139] = 0;
   out_6561409780629387220[140] = 0;
   out_6561409780629387220[141] = 0;
   out_6561409780629387220[142] = 0;
   out_6561409780629387220[143] = 0;
   out_6561409780629387220[144] = 0;
   out_6561409780629387220[145] = 0;
   out_6561409780629387220[146] = 0;
   out_6561409780629387220[147] = 0;
   out_6561409780629387220[148] = 0;
   out_6561409780629387220[149] = 0;
   out_6561409780629387220[150] = 0;
   out_6561409780629387220[151] = 0;
   out_6561409780629387220[152] = 0;
   out_6561409780629387220[153] = 1.0;
   out_6561409780629387220[154] = 0;
   out_6561409780629387220[155] = 0;
   out_6561409780629387220[156] = 0;
   out_6561409780629387220[157] = 0;
   out_6561409780629387220[158] = 0;
   out_6561409780629387220[159] = 0;
   out_6561409780629387220[160] = 0;
   out_6561409780629387220[161] = 0;
   out_6561409780629387220[162] = 0;
   out_6561409780629387220[163] = 0;
   out_6561409780629387220[164] = 0;
   out_6561409780629387220[165] = 0;
   out_6561409780629387220[166] = 0;
   out_6561409780629387220[167] = 0;
   out_6561409780629387220[168] = 0;
   out_6561409780629387220[169] = 0;
   out_6561409780629387220[170] = 0;
   out_6561409780629387220[171] = 0;
   out_6561409780629387220[172] = 0;
   out_6561409780629387220[173] = 0;
   out_6561409780629387220[174] = 0;
   out_6561409780629387220[175] = 1.0;
   out_6561409780629387220[176] = 0;
   out_6561409780629387220[177] = 0;
   out_6561409780629387220[178] = 0;
   out_6561409780629387220[179] = 0;
   out_6561409780629387220[180] = 0;
   out_6561409780629387220[181] = 0;
   out_6561409780629387220[182] = 0;
   out_6561409780629387220[183] = 0;
   out_6561409780629387220[184] = 0;
   out_6561409780629387220[185] = 0;
   out_6561409780629387220[186] = 0;
   out_6561409780629387220[187] = 0;
   out_6561409780629387220[188] = 0;
   out_6561409780629387220[189] = 0;
   out_6561409780629387220[190] = 0;
   out_6561409780629387220[191] = 0;
   out_6561409780629387220[192] = 0;
   out_6561409780629387220[193] = 0;
   out_6561409780629387220[194] = 0;
   out_6561409780629387220[195] = 0;
   out_6561409780629387220[196] = 0;
   out_6561409780629387220[197] = 1.0;
   out_6561409780629387220[198] = 0;
   out_6561409780629387220[199] = 0;
   out_6561409780629387220[200] = 0;
   out_6561409780629387220[201] = 0;
   out_6561409780629387220[202] = 0;
   out_6561409780629387220[203] = 0;
   out_6561409780629387220[204] = 0;
   out_6561409780629387220[205] = 0;
   out_6561409780629387220[206] = 0;
   out_6561409780629387220[207] = 0;
   out_6561409780629387220[208] = 0;
   out_6561409780629387220[209] = 0;
   out_6561409780629387220[210] = 0;
   out_6561409780629387220[211] = 0;
   out_6561409780629387220[212] = 0;
   out_6561409780629387220[213] = 0;
   out_6561409780629387220[214] = 0;
   out_6561409780629387220[215] = 0;
   out_6561409780629387220[216] = 0;
   out_6561409780629387220[217] = 0;
   out_6561409780629387220[218] = 0;
   out_6561409780629387220[219] = 1.0;
   out_6561409780629387220[220] = 0;
   out_6561409780629387220[221] = 0;
   out_6561409780629387220[222] = 0;
   out_6561409780629387220[223] = 0;
   out_6561409780629387220[224] = 0;
   out_6561409780629387220[225] = 0;
   out_6561409780629387220[226] = 0;
   out_6561409780629387220[227] = 0;
   out_6561409780629387220[228] = 0;
   out_6561409780629387220[229] = 0;
   out_6561409780629387220[230] = 0;
   out_6561409780629387220[231] = 0;
   out_6561409780629387220[232] = 0;
   out_6561409780629387220[233] = 0;
   out_6561409780629387220[234] = 0;
   out_6561409780629387220[235] = 0;
   out_6561409780629387220[236] = 0;
   out_6561409780629387220[237] = 0;
   out_6561409780629387220[238] = 0;
   out_6561409780629387220[239] = 0;
   out_6561409780629387220[240] = 0;
   out_6561409780629387220[241] = 1.0;
   out_6561409780629387220[242] = 0;
   out_6561409780629387220[243] = 0;
   out_6561409780629387220[244] = 0;
   out_6561409780629387220[245] = 0;
   out_6561409780629387220[246] = 0;
   out_6561409780629387220[247] = 0;
   out_6561409780629387220[248] = 0;
   out_6561409780629387220[249] = 0;
   out_6561409780629387220[250] = 0;
   out_6561409780629387220[251] = 0;
   out_6561409780629387220[252] = 0;
   out_6561409780629387220[253] = 0;
   out_6561409780629387220[254] = 0;
   out_6561409780629387220[255] = 0;
   out_6561409780629387220[256] = 0;
   out_6561409780629387220[257] = 0;
   out_6561409780629387220[258] = 0;
   out_6561409780629387220[259] = 0;
   out_6561409780629387220[260] = 0;
   out_6561409780629387220[261] = 0;
   out_6561409780629387220[262] = 0;
   out_6561409780629387220[263] = 1.0;
   out_6561409780629387220[264] = 0;
   out_6561409780629387220[265] = 0;
   out_6561409780629387220[266] = 0;
   out_6561409780629387220[267] = 0;
   out_6561409780629387220[268] = 0;
   out_6561409780629387220[269] = 0;
   out_6561409780629387220[270] = 0;
   out_6561409780629387220[271] = 0;
   out_6561409780629387220[272] = 0;
   out_6561409780629387220[273] = 0;
   out_6561409780629387220[274] = 0;
   out_6561409780629387220[275] = 0;
   out_6561409780629387220[276] = 0;
   out_6561409780629387220[277] = 0;
   out_6561409780629387220[278] = 0;
   out_6561409780629387220[279] = 0;
   out_6561409780629387220[280] = 0;
   out_6561409780629387220[281] = 0;
   out_6561409780629387220[282] = 0;
   out_6561409780629387220[283] = 0;
   out_6561409780629387220[284] = 0;
   out_6561409780629387220[285] = 1.0;
   out_6561409780629387220[286] = 0;
   out_6561409780629387220[287] = 0;
   out_6561409780629387220[288] = 0;
   out_6561409780629387220[289] = 0;
   out_6561409780629387220[290] = 0;
   out_6561409780629387220[291] = 0;
   out_6561409780629387220[292] = 0;
   out_6561409780629387220[293] = 0;
   out_6561409780629387220[294] = 0;
   out_6561409780629387220[295] = 0;
   out_6561409780629387220[296] = 0;
   out_6561409780629387220[297] = 0;
   out_6561409780629387220[298] = 0;
   out_6561409780629387220[299] = 0;
   out_6561409780629387220[300] = 0;
   out_6561409780629387220[301] = 0;
   out_6561409780629387220[302] = 0;
   out_6561409780629387220[303] = 0;
   out_6561409780629387220[304] = 0;
   out_6561409780629387220[305] = 0;
   out_6561409780629387220[306] = 0;
   out_6561409780629387220[307] = 1.0;
   out_6561409780629387220[308] = 0;
   out_6561409780629387220[309] = 0;
   out_6561409780629387220[310] = 0;
   out_6561409780629387220[311] = 0;
   out_6561409780629387220[312] = 0;
   out_6561409780629387220[313] = 0;
   out_6561409780629387220[314] = 0;
   out_6561409780629387220[315] = 0;
   out_6561409780629387220[316] = 0;
   out_6561409780629387220[317] = 0;
   out_6561409780629387220[318] = 0;
   out_6561409780629387220[319] = 0;
   out_6561409780629387220[320] = 0;
   out_6561409780629387220[321] = 0;
   out_6561409780629387220[322] = 0;
   out_6561409780629387220[323] = 0;
   out_6561409780629387220[324] = 0;
   out_6561409780629387220[325] = 0;
   out_6561409780629387220[326] = 0;
   out_6561409780629387220[327] = 0;
   out_6561409780629387220[328] = 0;
   out_6561409780629387220[329] = 1.0;
   out_6561409780629387220[330] = 0;
   out_6561409780629387220[331] = 0;
   out_6561409780629387220[332] = 0;
   out_6561409780629387220[333] = 0;
   out_6561409780629387220[334] = 0;
   out_6561409780629387220[335] = 0;
   out_6561409780629387220[336] = 0;
   out_6561409780629387220[337] = 0;
   out_6561409780629387220[338] = 0;
   out_6561409780629387220[339] = 0;
   out_6561409780629387220[340] = 0;
   out_6561409780629387220[341] = 0;
   out_6561409780629387220[342] = 0;
   out_6561409780629387220[343] = 0;
   out_6561409780629387220[344] = 0;
   out_6561409780629387220[345] = 0;
   out_6561409780629387220[346] = 0;
   out_6561409780629387220[347] = 0;
   out_6561409780629387220[348] = 0;
   out_6561409780629387220[349] = 0;
   out_6561409780629387220[350] = 0;
   out_6561409780629387220[351] = 1.0;
   out_6561409780629387220[352] = 0;
   out_6561409780629387220[353] = 0;
   out_6561409780629387220[354] = 0;
   out_6561409780629387220[355] = 0;
   out_6561409780629387220[356] = 0;
   out_6561409780629387220[357] = 0;
   out_6561409780629387220[358] = 0;
   out_6561409780629387220[359] = 0;
   out_6561409780629387220[360] = 0;
   out_6561409780629387220[361] = 0;
   out_6561409780629387220[362] = 0;
   out_6561409780629387220[363] = 0;
   out_6561409780629387220[364] = 0;
   out_6561409780629387220[365] = 0;
   out_6561409780629387220[366] = 0;
   out_6561409780629387220[367] = 0;
   out_6561409780629387220[368] = 0;
   out_6561409780629387220[369] = 0;
   out_6561409780629387220[370] = 0;
   out_6561409780629387220[371] = 0;
   out_6561409780629387220[372] = 0;
   out_6561409780629387220[373] = 1.0;
   out_6561409780629387220[374] = 0;
   out_6561409780629387220[375] = 0;
   out_6561409780629387220[376] = 0;
   out_6561409780629387220[377] = 0;
   out_6561409780629387220[378] = 0;
   out_6561409780629387220[379] = 0;
   out_6561409780629387220[380] = 0;
   out_6561409780629387220[381] = 0;
   out_6561409780629387220[382] = 0;
   out_6561409780629387220[383] = 0;
   out_6561409780629387220[384] = 0;
   out_6561409780629387220[385] = 0;
   out_6561409780629387220[386] = 0;
   out_6561409780629387220[387] = 0;
   out_6561409780629387220[388] = 0;
   out_6561409780629387220[389] = 0;
   out_6561409780629387220[390] = 0;
   out_6561409780629387220[391] = 0;
   out_6561409780629387220[392] = 0;
   out_6561409780629387220[393] = 0;
   out_6561409780629387220[394] = 0;
   out_6561409780629387220[395] = 1.0;
   out_6561409780629387220[396] = 0;
   out_6561409780629387220[397] = 0;
   out_6561409780629387220[398] = 0;
   out_6561409780629387220[399] = 0;
   out_6561409780629387220[400] = 0;
   out_6561409780629387220[401] = 0;
   out_6561409780629387220[402] = 0;
   out_6561409780629387220[403] = 0;
   out_6561409780629387220[404] = 0;
   out_6561409780629387220[405] = 0;
   out_6561409780629387220[406] = 0;
   out_6561409780629387220[407] = 0;
   out_6561409780629387220[408] = 0;
   out_6561409780629387220[409] = 0;
   out_6561409780629387220[410] = 0;
   out_6561409780629387220[411] = 0;
   out_6561409780629387220[412] = 0;
   out_6561409780629387220[413] = 0;
   out_6561409780629387220[414] = 0;
   out_6561409780629387220[415] = 0;
   out_6561409780629387220[416] = 0;
   out_6561409780629387220[417] = 1.0;
   out_6561409780629387220[418] = 0;
   out_6561409780629387220[419] = 0;
   out_6561409780629387220[420] = 0;
   out_6561409780629387220[421] = 0;
   out_6561409780629387220[422] = 0;
   out_6561409780629387220[423] = 0;
   out_6561409780629387220[424] = 0;
   out_6561409780629387220[425] = 0;
   out_6561409780629387220[426] = 0;
   out_6561409780629387220[427] = 0;
   out_6561409780629387220[428] = 0;
   out_6561409780629387220[429] = 0;
   out_6561409780629387220[430] = 0;
   out_6561409780629387220[431] = 0;
   out_6561409780629387220[432] = 0;
   out_6561409780629387220[433] = 0;
   out_6561409780629387220[434] = 0;
   out_6561409780629387220[435] = 0;
   out_6561409780629387220[436] = 0;
   out_6561409780629387220[437] = 0;
   out_6561409780629387220[438] = 0;
   out_6561409780629387220[439] = 1.0;
   out_6561409780629387220[440] = 0;
   out_6561409780629387220[441] = 0;
   out_6561409780629387220[442] = 0;
   out_6561409780629387220[443] = 0;
   out_6561409780629387220[444] = 0;
   out_6561409780629387220[445] = 0;
   out_6561409780629387220[446] = 0;
   out_6561409780629387220[447] = 0;
   out_6561409780629387220[448] = 0;
   out_6561409780629387220[449] = 0;
   out_6561409780629387220[450] = 0;
   out_6561409780629387220[451] = 0;
   out_6561409780629387220[452] = 0;
   out_6561409780629387220[453] = 0;
   out_6561409780629387220[454] = 0;
   out_6561409780629387220[455] = 0;
   out_6561409780629387220[456] = 0;
   out_6561409780629387220[457] = 0;
   out_6561409780629387220[458] = 0;
   out_6561409780629387220[459] = 0;
   out_6561409780629387220[460] = 0;
   out_6561409780629387220[461] = 1.0;
}
void f_fun(double *state, double dt, double *out_4125999630483981146) {
   out_4125999630483981146[0] = dt*state[7] + state[0];
   out_4125999630483981146[1] = dt*state[8] + state[1];
   out_4125999630483981146[2] = dt*state[9] + state[2];
   out_4125999630483981146[3] = dt*(-0.5*state[4]*state[10] - 0.5*state[5]*state[11] - 0.5*state[6]*state[12]) + state[3];
   out_4125999630483981146[4] = dt*(0.5*state[3]*state[10] + 0.5*state[5]*state[12] - 0.5*state[6]*state[11]) + state[4];
   out_4125999630483981146[5] = dt*(0.5*state[3]*state[11] - 0.5*state[4]*state[12] + 0.5*state[6]*state[10]) + state[5];
   out_4125999630483981146[6] = dt*(0.5*state[3]*state[12] + 0.5*state[4]*state[11] - 0.5*state[5]*state[10]) + state[6];
   out_4125999630483981146[7] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]) + state[7];
   out_4125999630483981146[8] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]) + state[8];
   out_4125999630483981146[9] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]) + state[9];
   out_4125999630483981146[10] = state[10];
   out_4125999630483981146[11] = state[11];
   out_4125999630483981146[12] = state[12];
   out_4125999630483981146[13] = state[13];
   out_4125999630483981146[14] = state[14];
   out_4125999630483981146[15] = state[15];
   out_4125999630483981146[16] = state[16];
   out_4125999630483981146[17] = state[17];
   out_4125999630483981146[18] = state[18];
   out_4125999630483981146[19] = state[19];
   out_4125999630483981146[20] = state[20];
   out_4125999630483981146[21] = state[21];
}
void F_fun(double *state, double dt, double *out_7442995747034510422) {
   out_7442995747034510422[0] = 1;
   out_7442995747034510422[1] = 0;
   out_7442995747034510422[2] = 0;
   out_7442995747034510422[3] = 0;
   out_7442995747034510422[4] = 0;
   out_7442995747034510422[5] = 0;
   out_7442995747034510422[6] = dt;
   out_7442995747034510422[7] = 0;
   out_7442995747034510422[8] = 0;
   out_7442995747034510422[9] = 0;
   out_7442995747034510422[10] = 0;
   out_7442995747034510422[11] = 0;
   out_7442995747034510422[12] = 0;
   out_7442995747034510422[13] = 0;
   out_7442995747034510422[14] = 0;
   out_7442995747034510422[15] = 0;
   out_7442995747034510422[16] = 0;
   out_7442995747034510422[17] = 0;
   out_7442995747034510422[18] = 0;
   out_7442995747034510422[19] = 0;
   out_7442995747034510422[20] = 0;
   out_7442995747034510422[21] = 0;
   out_7442995747034510422[22] = 1;
   out_7442995747034510422[23] = 0;
   out_7442995747034510422[24] = 0;
   out_7442995747034510422[25] = 0;
   out_7442995747034510422[26] = 0;
   out_7442995747034510422[27] = 0;
   out_7442995747034510422[28] = dt;
   out_7442995747034510422[29] = 0;
   out_7442995747034510422[30] = 0;
   out_7442995747034510422[31] = 0;
   out_7442995747034510422[32] = 0;
   out_7442995747034510422[33] = 0;
   out_7442995747034510422[34] = 0;
   out_7442995747034510422[35] = 0;
   out_7442995747034510422[36] = 0;
   out_7442995747034510422[37] = 0;
   out_7442995747034510422[38] = 0;
   out_7442995747034510422[39] = 0;
   out_7442995747034510422[40] = 0;
   out_7442995747034510422[41] = 0;
   out_7442995747034510422[42] = 0;
   out_7442995747034510422[43] = 0;
   out_7442995747034510422[44] = 1;
   out_7442995747034510422[45] = 0;
   out_7442995747034510422[46] = 0;
   out_7442995747034510422[47] = 0;
   out_7442995747034510422[48] = 0;
   out_7442995747034510422[49] = 0;
   out_7442995747034510422[50] = dt;
   out_7442995747034510422[51] = 0;
   out_7442995747034510422[52] = 0;
   out_7442995747034510422[53] = 0;
   out_7442995747034510422[54] = 0;
   out_7442995747034510422[55] = 0;
   out_7442995747034510422[56] = 0;
   out_7442995747034510422[57] = 0;
   out_7442995747034510422[58] = 0;
   out_7442995747034510422[59] = 0;
   out_7442995747034510422[60] = 0;
   out_7442995747034510422[61] = 0;
   out_7442995747034510422[62] = 0;
   out_7442995747034510422[63] = 0;
   out_7442995747034510422[64] = 0;
   out_7442995747034510422[65] = 0;
   out_7442995747034510422[66] = 1;
   out_7442995747034510422[67] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[11] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_7442995747034510422[68] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[12] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[10] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[11]);
   out_7442995747034510422[69] = 0;
   out_7442995747034510422[70] = 0;
   out_7442995747034510422[71] = 0;
   out_7442995747034510422[72] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_7442995747034510422[73] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_7442995747034510422[74] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_7442995747034510422[75] = 0;
   out_7442995747034510422[76] = 0;
   out_7442995747034510422[77] = 0;
   out_7442995747034510422[78] = 0;
   out_7442995747034510422[79] = 0;
   out_7442995747034510422[80] = 0;
   out_7442995747034510422[81] = 0;
   out_7442995747034510422[82] = 0;
   out_7442995747034510422[83] = 0;
   out_7442995747034510422[84] = 0;
   out_7442995747034510422[85] = 0;
   out_7442995747034510422[86] = 0;
   out_7442995747034510422[87] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[11] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_7442995747034510422[88] = 1;
   out_7442995747034510422[89] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[12] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[11] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[10]);
   out_7442995747034510422[90] = 0;
   out_7442995747034510422[91] = 0;
   out_7442995747034510422[92] = 0;
   out_7442995747034510422[93] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_7442995747034510422[94] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_7442995747034510422[95] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_7442995747034510422[96] = 0;
   out_7442995747034510422[97] = 0;
   out_7442995747034510422[98] = 0;
   out_7442995747034510422[99] = 0;
   out_7442995747034510422[100] = 0;
   out_7442995747034510422[101] = 0;
   out_7442995747034510422[102] = 0;
   out_7442995747034510422[103] = 0;
   out_7442995747034510422[104] = 0;
   out_7442995747034510422[105] = 0;
   out_7442995747034510422[106] = 0;
   out_7442995747034510422[107] = 0;
   out_7442995747034510422[108] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[12] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[10] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[11]);
   out_7442995747034510422[109] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[12] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[11] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[10]);
   out_7442995747034510422[110] = 1;
   out_7442995747034510422[111] = 0;
   out_7442995747034510422[112] = 0;
   out_7442995747034510422[113] = 0;
   out_7442995747034510422[114] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_7442995747034510422[115] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_7442995747034510422[116] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_7442995747034510422[117] = 0;
   out_7442995747034510422[118] = 0;
   out_7442995747034510422[119] = 0;
   out_7442995747034510422[120] = 0;
   out_7442995747034510422[121] = 0;
   out_7442995747034510422[122] = 0;
   out_7442995747034510422[123] = 0;
   out_7442995747034510422[124] = 0;
   out_7442995747034510422[125] = 0;
   out_7442995747034510422[126] = 0;
   out_7442995747034510422[127] = 0;
   out_7442995747034510422[128] = 0;
   out_7442995747034510422[129] = 0;
   out_7442995747034510422[130] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_7442995747034510422[131] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[18] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[16] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[17]);
   out_7442995747034510422[132] = 1;
   out_7442995747034510422[133] = 0;
   out_7442995747034510422[134] = 0;
   out_7442995747034510422[135] = 0;
   out_7442995747034510422[136] = 0;
   out_7442995747034510422[137] = 0;
   out_7442995747034510422[138] = 0;
   out_7442995747034510422[139] = 0;
   out_7442995747034510422[140] = 0;
   out_7442995747034510422[141] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_7442995747034510422[142] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_7442995747034510422[143] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_7442995747034510422[144] = 0;
   out_7442995747034510422[145] = 0;
   out_7442995747034510422[146] = 0;
   out_7442995747034510422[147] = 0;
   out_7442995747034510422[148] = 0;
   out_7442995747034510422[149] = 0;
   out_7442995747034510422[150] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[17] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_7442995747034510422[151] = 0;
   out_7442995747034510422[152] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]);
   out_7442995747034510422[153] = 0;
   out_7442995747034510422[154] = 1;
   out_7442995747034510422[155] = 0;
   out_7442995747034510422[156] = 0;
   out_7442995747034510422[157] = 0;
   out_7442995747034510422[158] = 0;
   out_7442995747034510422[159] = 0;
   out_7442995747034510422[160] = 0;
   out_7442995747034510422[161] = 0;
   out_7442995747034510422[162] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_7442995747034510422[163] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_7442995747034510422[164] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_7442995747034510422[165] = 0;
   out_7442995747034510422[166] = 0;
   out_7442995747034510422[167] = 0;
   out_7442995747034510422[168] = 0;
   out_7442995747034510422[169] = 0;
   out_7442995747034510422[170] = 0;
   out_7442995747034510422[171] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]);
   out_7442995747034510422[172] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[18] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[17] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[16]);
   out_7442995747034510422[173] = 0;
   out_7442995747034510422[174] = 0;
   out_7442995747034510422[175] = 0;
   out_7442995747034510422[176] = 1;
   out_7442995747034510422[177] = 0;
   out_7442995747034510422[178] = 0;
   out_7442995747034510422[179] = 0;
   out_7442995747034510422[180] = 0;
   out_7442995747034510422[181] = 0;
   out_7442995747034510422[182] = 0;
   out_7442995747034510422[183] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_7442995747034510422[184] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_7442995747034510422[185] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_7442995747034510422[186] = 0;
   out_7442995747034510422[187] = 0;
   out_7442995747034510422[188] = 0;
   out_7442995747034510422[189] = 0;
   out_7442995747034510422[190] = 0;
   out_7442995747034510422[191] = 0;
   out_7442995747034510422[192] = 0;
   out_7442995747034510422[193] = 0;
   out_7442995747034510422[194] = 0;
   out_7442995747034510422[195] = 0;
   out_7442995747034510422[196] = 0;
   out_7442995747034510422[197] = 0;
   out_7442995747034510422[198] = 1;
   out_7442995747034510422[199] = 0;
   out_7442995747034510422[200] = 0;
   out_7442995747034510422[201] = 0;
   out_7442995747034510422[202] = 0;
   out_7442995747034510422[203] = 0;
   out_7442995747034510422[204] = 0;
   out_7442995747034510422[205] = 0;
   out_7442995747034510422[206] = 0;
   out_7442995747034510422[207] = 0;
   out_7442995747034510422[208] = 0;
   out_7442995747034510422[209] = 0;
   out_7442995747034510422[210] = 0;
   out_7442995747034510422[211] = 0;
   out_7442995747034510422[212] = 0;
   out_7442995747034510422[213] = 0;
   out_7442995747034510422[214] = 0;
   out_7442995747034510422[215] = 0;
   out_7442995747034510422[216] = 0;
   out_7442995747034510422[217] = 0;
   out_7442995747034510422[218] = 0;
   out_7442995747034510422[219] = 0;
   out_7442995747034510422[220] = 1;
   out_7442995747034510422[221] = 0;
   out_7442995747034510422[222] = 0;
   out_7442995747034510422[223] = 0;
   out_7442995747034510422[224] = 0;
   out_7442995747034510422[225] = 0;
   out_7442995747034510422[226] = 0;
   out_7442995747034510422[227] = 0;
   out_7442995747034510422[228] = 0;
   out_7442995747034510422[229] = 0;
   out_7442995747034510422[230] = 0;
   out_7442995747034510422[231] = 0;
   out_7442995747034510422[232] = 0;
   out_7442995747034510422[233] = 0;
   out_7442995747034510422[234] = 0;
   out_7442995747034510422[235] = 0;
   out_7442995747034510422[236] = 0;
   out_7442995747034510422[237] = 0;
   out_7442995747034510422[238] = 0;
   out_7442995747034510422[239] = 0;
   out_7442995747034510422[240] = 0;
   out_7442995747034510422[241] = 0;
   out_7442995747034510422[242] = 1;
   out_7442995747034510422[243] = 0;
   out_7442995747034510422[244] = 0;
   out_7442995747034510422[245] = 0;
   out_7442995747034510422[246] = 0;
   out_7442995747034510422[247] = 0;
   out_7442995747034510422[248] = 0;
   out_7442995747034510422[249] = 0;
   out_7442995747034510422[250] = 0;
   out_7442995747034510422[251] = 0;
   out_7442995747034510422[252] = 0;
   out_7442995747034510422[253] = 0;
   out_7442995747034510422[254] = 0;
   out_7442995747034510422[255] = 0;
   out_7442995747034510422[256] = 0;
   out_7442995747034510422[257] = 0;
   out_7442995747034510422[258] = 0;
   out_7442995747034510422[259] = 0;
   out_7442995747034510422[260] = 0;
   out_7442995747034510422[261] = 0;
   out_7442995747034510422[262] = 0;
   out_7442995747034510422[263] = 0;
   out_7442995747034510422[264] = 1;
   out_7442995747034510422[265] = 0;
   out_7442995747034510422[266] = 0;
   out_7442995747034510422[267] = 0;
   out_7442995747034510422[268] = 0;
   out_7442995747034510422[269] = 0;
   out_7442995747034510422[270] = 0;
   out_7442995747034510422[271] = 0;
   out_7442995747034510422[272] = 0;
   out_7442995747034510422[273] = 0;
   out_7442995747034510422[274] = 0;
   out_7442995747034510422[275] = 0;
   out_7442995747034510422[276] = 0;
   out_7442995747034510422[277] = 0;
   out_7442995747034510422[278] = 0;
   out_7442995747034510422[279] = 0;
   out_7442995747034510422[280] = 0;
   out_7442995747034510422[281] = 0;
   out_7442995747034510422[282] = 0;
   out_7442995747034510422[283] = 0;
   out_7442995747034510422[284] = 0;
   out_7442995747034510422[285] = 0;
   out_7442995747034510422[286] = 1;
   out_7442995747034510422[287] = 0;
   out_7442995747034510422[288] = 0;
   out_7442995747034510422[289] = 0;
   out_7442995747034510422[290] = 0;
   out_7442995747034510422[291] = 0;
   out_7442995747034510422[292] = 0;
   out_7442995747034510422[293] = 0;
   out_7442995747034510422[294] = 0;
   out_7442995747034510422[295] = 0;
   out_7442995747034510422[296] = 0;
   out_7442995747034510422[297] = 0;
   out_7442995747034510422[298] = 0;
   out_7442995747034510422[299] = 0;
   out_7442995747034510422[300] = 0;
   out_7442995747034510422[301] = 0;
   out_7442995747034510422[302] = 0;
   out_7442995747034510422[303] = 0;
   out_7442995747034510422[304] = 0;
   out_7442995747034510422[305] = 0;
   out_7442995747034510422[306] = 0;
   out_7442995747034510422[307] = 0;
   out_7442995747034510422[308] = 1;
   out_7442995747034510422[309] = 0;
   out_7442995747034510422[310] = 0;
   out_7442995747034510422[311] = 0;
   out_7442995747034510422[312] = 0;
   out_7442995747034510422[313] = 0;
   out_7442995747034510422[314] = 0;
   out_7442995747034510422[315] = 0;
   out_7442995747034510422[316] = 0;
   out_7442995747034510422[317] = 0;
   out_7442995747034510422[318] = 0;
   out_7442995747034510422[319] = 0;
   out_7442995747034510422[320] = 0;
   out_7442995747034510422[321] = 0;
   out_7442995747034510422[322] = 0;
   out_7442995747034510422[323] = 0;
   out_7442995747034510422[324] = 0;
   out_7442995747034510422[325] = 0;
   out_7442995747034510422[326] = 0;
   out_7442995747034510422[327] = 0;
   out_7442995747034510422[328] = 0;
   out_7442995747034510422[329] = 0;
   out_7442995747034510422[330] = 1;
   out_7442995747034510422[331] = 0;
   out_7442995747034510422[332] = 0;
   out_7442995747034510422[333] = 0;
   out_7442995747034510422[334] = 0;
   out_7442995747034510422[335] = 0;
   out_7442995747034510422[336] = 0;
   out_7442995747034510422[337] = 0;
   out_7442995747034510422[338] = 0;
   out_7442995747034510422[339] = 0;
   out_7442995747034510422[340] = 0;
   out_7442995747034510422[341] = 0;
   out_7442995747034510422[342] = 0;
   out_7442995747034510422[343] = 0;
   out_7442995747034510422[344] = 0;
   out_7442995747034510422[345] = 0;
   out_7442995747034510422[346] = 0;
   out_7442995747034510422[347] = 0;
   out_7442995747034510422[348] = 0;
   out_7442995747034510422[349] = 0;
   out_7442995747034510422[350] = 0;
   out_7442995747034510422[351] = 0;
   out_7442995747034510422[352] = 1;
   out_7442995747034510422[353] = 0;
   out_7442995747034510422[354] = 0;
   out_7442995747034510422[355] = 0;
   out_7442995747034510422[356] = 0;
   out_7442995747034510422[357] = 0;
   out_7442995747034510422[358] = 0;
   out_7442995747034510422[359] = 0;
   out_7442995747034510422[360] = 0;
   out_7442995747034510422[361] = 0;
   out_7442995747034510422[362] = 0;
   out_7442995747034510422[363] = 0;
   out_7442995747034510422[364] = 0;
   out_7442995747034510422[365] = 0;
   out_7442995747034510422[366] = 0;
   out_7442995747034510422[367] = 0;
   out_7442995747034510422[368] = 0;
   out_7442995747034510422[369] = 0;
   out_7442995747034510422[370] = 0;
   out_7442995747034510422[371] = 0;
   out_7442995747034510422[372] = 0;
   out_7442995747034510422[373] = 0;
   out_7442995747034510422[374] = 1;
   out_7442995747034510422[375] = 0;
   out_7442995747034510422[376] = 0;
   out_7442995747034510422[377] = 0;
   out_7442995747034510422[378] = 0;
   out_7442995747034510422[379] = 0;
   out_7442995747034510422[380] = 0;
   out_7442995747034510422[381] = 0;
   out_7442995747034510422[382] = 0;
   out_7442995747034510422[383] = 0;
   out_7442995747034510422[384] = 0;
   out_7442995747034510422[385] = 0;
   out_7442995747034510422[386] = 0;
   out_7442995747034510422[387] = 0;
   out_7442995747034510422[388] = 0;
   out_7442995747034510422[389] = 0;
   out_7442995747034510422[390] = 0;
   out_7442995747034510422[391] = 0;
   out_7442995747034510422[392] = 0;
   out_7442995747034510422[393] = 0;
   out_7442995747034510422[394] = 0;
   out_7442995747034510422[395] = 0;
   out_7442995747034510422[396] = 1;
   out_7442995747034510422[397] = 0;
   out_7442995747034510422[398] = 0;
   out_7442995747034510422[399] = 0;
   out_7442995747034510422[400] = 0;
   out_7442995747034510422[401] = 0;
   out_7442995747034510422[402] = 0;
   out_7442995747034510422[403] = 0;
   out_7442995747034510422[404] = 0;
   out_7442995747034510422[405] = 0;
   out_7442995747034510422[406] = 0;
   out_7442995747034510422[407] = 0;
   out_7442995747034510422[408] = 0;
   out_7442995747034510422[409] = 0;
   out_7442995747034510422[410] = 0;
   out_7442995747034510422[411] = 0;
   out_7442995747034510422[412] = 0;
   out_7442995747034510422[413] = 0;
   out_7442995747034510422[414] = 0;
   out_7442995747034510422[415] = 0;
   out_7442995747034510422[416] = 0;
   out_7442995747034510422[417] = 0;
   out_7442995747034510422[418] = 1;
   out_7442995747034510422[419] = 0;
   out_7442995747034510422[420] = 0;
   out_7442995747034510422[421] = 0;
   out_7442995747034510422[422] = 0;
   out_7442995747034510422[423] = 0;
   out_7442995747034510422[424] = 0;
   out_7442995747034510422[425] = 0;
   out_7442995747034510422[426] = 0;
   out_7442995747034510422[427] = 0;
   out_7442995747034510422[428] = 0;
   out_7442995747034510422[429] = 0;
   out_7442995747034510422[430] = 0;
   out_7442995747034510422[431] = 0;
   out_7442995747034510422[432] = 0;
   out_7442995747034510422[433] = 0;
   out_7442995747034510422[434] = 0;
   out_7442995747034510422[435] = 0;
   out_7442995747034510422[436] = 0;
   out_7442995747034510422[437] = 0;
   out_7442995747034510422[438] = 0;
   out_7442995747034510422[439] = 0;
   out_7442995747034510422[440] = 1;
}
void h_4(double *state, double *unused, double *out_616819498130942584) {
   out_616819498130942584[0] = state[10] + state[13];
   out_616819498130942584[1] = state[11] + state[14];
   out_616819498130942584[2] = state[12] + state[15];
}
void H_4(double *state, double *unused, double *out_2550913927795916992) {
   out_2550913927795916992[0] = 0;
   out_2550913927795916992[1] = 0;
   out_2550913927795916992[2] = 0;
   out_2550913927795916992[3] = 0;
   out_2550913927795916992[4] = 0;
   out_2550913927795916992[5] = 0;
   out_2550913927795916992[6] = 0;
   out_2550913927795916992[7] = 0;
   out_2550913927795916992[8] = 0;
   out_2550913927795916992[9] = 0;
   out_2550913927795916992[10] = 1;
   out_2550913927795916992[11] = 0;
   out_2550913927795916992[12] = 0;
   out_2550913927795916992[13] = 1;
   out_2550913927795916992[14] = 0;
   out_2550913927795916992[15] = 0;
   out_2550913927795916992[16] = 0;
   out_2550913927795916992[17] = 0;
   out_2550913927795916992[18] = 0;
   out_2550913927795916992[19] = 0;
   out_2550913927795916992[20] = 0;
   out_2550913927795916992[21] = 0;
   out_2550913927795916992[22] = 0;
   out_2550913927795916992[23] = 0;
   out_2550913927795916992[24] = 0;
   out_2550913927795916992[25] = 0;
   out_2550913927795916992[26] = 0;
   out_2550913927795916992[27] = 0;
   out_2550913927795916992[28] = 0;
   out_2550913927795916992[29] = 0;
   out_2550913927795916992[30] = 0;
   out_2550913927795916992[31] = 0;
   out_2550913927795916992[32] = 0;
   out_2550913927795916992[33] = 1;
   out_2550913927795916992[34] = 0;
   out_2550913927795916992[35] = 0;
   out_2550913927795916992[36] = 1;
   out_2550913927795916992[37] = 0;
   out_2550913927795916992[38] = 0;
   out_2550913927795916992[39] = 0;
   out_2550913927795916992[40] = 0;
   out_2550913927795916992[41] = 0;
   out_2550913927795916992[42] = 0;
   out_2550913927795916992[43] = 0;
   out_2550913927795916992[44] = 0;
   out_2550913927795916992[45] = 0;
   out_2550913927795916992[46] = 0;
   out_2550913927795916992[47] = 0;
   out_2550913927795916992[48] = 0;
   out_2550913927795916992[49] = 0;
   out_2550913927795916992[50] = 0;
   out_2550913927795916992[51] = 0;
   out_2550913927795916992[52] = 0;
   out_2550913927795916992[53] = 0;
   out_2550913927795916992[54] = 0;
   out_2550913927795916992[55] = 0;
   out_2550913927795916992[56] = 1;
   out_2550913927795916992[57] = 0;
   out_2550913927795916992[58] = 0;
   out_2550913927795916992[59] = 1;
   out_2550913927795916992[60] = 0;
   out_2550913927795916992[61] = 0;
   out_2550913927795916992[62] = 0;
   out_2550913927795916992[63] = 0;
   out_2550913927795916992[64] = 0;
   out_2550913927795916992[65] = 0;
}
void h_9(double *state, double *unused, double *out_6999757141510273012) {
   out_6999757141510273012[0] = state[10];
   out_6999757141510273012[1] = state[11];
   out_6999757141510273012[2] = state[12];
}
void H_9(double *state, double *unused, double *out_2792103574425507637) {
   out_2792103574425507637[0] = 0;
   out_2792103574425507637[1] = 0;
   out_2792103574425507637[2] = 0;
   out_2792103574425507637[3] = 0;
   out_2792103574425507637[4] = 0;
   out_2792103574425507637[5] = 0;
   out_2792103574425507637[6] = 0;
   out_2792103574425507637[7] = 0;
   out_2792103574425507637[8] = 0;
   out_2792103574425507637[9] = 0;
   out_2792103574425507637[10] = 1;
   out_2792103574425507637[11] = 0;
   out_2792103574425507637[12] = 0;
   out_2792103574425507637[13] = 0;
   out_2792103574425507637[14] = 0;
   out_2792103574425507637[15] = 0;
   out_2792103574425507637[16] = 0;
   out_2792103574425507637[17] = 0;
   out_2792103574425507637[18] = 0;
   out_2792103574425507637[19] = 0;
   out_2792103574425507637[20] = 0;
   out_2792103574425507637[21] = 0;
   out_2792103574425507637[22] = 0;
   out_2792103574425507637[23] = 0;
   out_2792103574425507637[24] = 0;
   out_2792103574425507637[25] = 0;
   out_2792103574425507637[26] = 0;
   out_2792103574425507637[27] = 0;
   out_2792103574425507637[28] = 0;
   out_2792103574425507637[29] = 0;
   out_2792103574425507637[30] = 0;
   out_2792103574425507637[31] = 0;
   out_2792103574425507637[32] = 0;
   out_2792103574425507637[33] = 1;
   out_2792103574425507637[34] = 0;
   out_2792103574425507637[35] = 0;
   out_2792103574425507637[36] = 0;
   out_2792103574425507637[37] = 0;
   out_2792103574425507637[38] = 0;
   out_2792103574425507637[39] = 0;
   out_2792103574425507637[40] = 0;
   out_2792103574425507637[41] = 0;
   out_2792103574425507637[42] = 0;
   out_2792103574425507637[43] = 0;
   out_2792103574425507637[44] = 0;
   out_2792103574425507637[45] = 0;
   out_2792103574425507637[46] = 0;
   out_2792103574425507637[47] = 0;
   out_2792103574425507637[48] = 0;
   out_2792103574425507637[49] = 0;
   out_2792103574425507637[50] = 0;
   out_2792103574425507637[51] = 0;
   out_2792103574425507637[52] = 0;
   out_2792103574425507637[53] = 0;
   out_2792103574425507637[54] = 0;
   out_2792103574425507637[55] = 0;
   out_2792103574425507637[56] = 1;
   out_2792103574425507637[57] = 0;
   out_2792103574425507637[58] = 0;
   out_2792103574425507637[59] = 0;
   out_2792103574425507637[60] = 0;
   out_2792103574425507637[61] = 0;
   out_2792103574425507637[62] = 0;
   out_2792103574425507637[63] = 0;
   out_2792103574425507637[64] = 0;
   out_2792103574425507637[65] = 0;
}
void h_10(double *state, double *unused, double *out_9127203571950312560) {
   out_9127203571950312560[0] = 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0] + state[16] + state[19];
   out_9127203571950312560[1] = 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1] + state[17] + state[20];
   out_9127203571950312560[2] = 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[2] + state[18] + state[21];
}
void H_10(double *state, double *unused, double *out_3561658941965941475) {
   out_3561658941965941475[0] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*pow(state[0], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_3561658941965941475[1] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_3561658941965941475[2] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[2];
   out_3561658941965941475[3] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_3561658941965941475[4] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_3561658941965941475[5] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_3561658941965941475[6] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_3561658941965941475[7] = 0;
   out_3561658941965941475[8] = 0;
   out_3561658941965941475[9] = 0;
   out_3561658941965941475[10] = 0;
   out_3561658941965941475[11] = 0;
   out_3561658941965941475[12] = 0;
   out_3561658941965941475[13] = 0;
   out_3561658941965941475[14] = 0;
   out_3561658941965941475[15] = 0;
   out_3561658941965941475[16] = 1;
   out_3561658941965941475[17] = 0;
   out_3561658941965941475[18] = 0;
   out_3561658941965941475[19] = 1;
   out_3561658941965941475[20] = 0;
   out_3561658941965941475[21] = 0;
   out_3561658941965941475[22] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_3561658941965941475[23] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*pow(state[1], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_3561658941965941475[24] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1]*state[2];
   out_3561658941965941475[25] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_3561658941965941475[26] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_3561658941965941475[27] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_3561658941965941475[28] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_3561658941965941475[29] = 0;
   out_3561658941965941475[30] = 0;
   out_3561658941965941475[31] = 0;
   out_3561658941965941475[32] = 0;
   out_3561658941965941475[33] = 0;
   out_3561658941965941475[34] = 0;
   out_3561658941965941475[35] = 0;
   out_3561658941965941475[36] = 0;
   out_3561658941965941475[37] = 0;
   out_3561658941965941475[38] = 0;
   out_3561658941965941475[39] = 1;
   out_3561658941965941475[40] = 0;
   out_3561658941965941475[41] = 0;
   out_3561658941965941475[42] = 1;
   out_3561658941965941475[43] = 0;
   out_3561658941965941475[44] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[0]*state[2];
   out_3561658941965941475[45] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[1]*state[2];
   out_3561658941965941475[46] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*pow(state[2], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_3561658941965941475[47] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_3561658941965941475[48] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_3561658941965941475[49] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_3561658941965941475[50] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_3561658941965941475[51] = 0;
   out_3561658941965941475[52] = 0;
   out_3561658941965941475[53] = 0;
   out_3561658941965941475[54] = 0;
   out_3561658941965941475[55] = 0;
   out_3561658941965941475[56] = 0;
   out_3561658941965941475[57] = 0;
   out_3561658941965941475[58] = 0;
   out_3561658941965941475[59] = 0;
   out_3561658941965941475[60] = 0;
   out_3561658941965941475[61] = 0;
   out_3561658941965941475[62] = 1;
   out_3561658941965941475[63] = 0;
   out_3561658941965941475[64] = 0;
   out_3561658941965941475[65] = 1;
}
void h_12(double *state, double *unused, double *out_2499031427278358051) {
   out_2499031427278358051[0] = state[0];
   out_2499031427278358051[1] = state[1];
   out_2499031427278358051[2] = state[2];
}
void H_12(double *state, double *unused, double *out_7570370335827878787) {
   out_7570370335827878787[0] = 1;
   out_7570370335827878787[1] = 0;
   out_7570370335827878787[2] = 0;
   out_7570370335827878787[3] = 0;
   out_7570370335827878787[4] = 0;
   out_7570370335827878787[5] = 0;
   out_7570370335827878787[6] = 0;
   out_7570370335827878787[7] = 0;
   out_7570370335827878787[8] = 0;
   out_7570370335827878787[9] = 0;
   out_7570370335827878787[10] = 0;
   out_7570370335827878787[11] = 0;
   out_7570370335827878787[12] = 0;
   out_7570370335827878787[13] = 0;
   out_7570370335827878787[14] = 0;
   out_7570370335827878787[15] = 0;
   out_7570370335827878787[16] = 0;
   out_7570370335827878787[17] = 0;
   out_7570370335827878787[18] = 0;
   out_7570370335827878787[19] = 0;
   out_7570370335827878787[20] = 0;
   out_7570370335827878787[21] = 0;
   out_7570370335827878787[22] = 0;
   out_7570370335827878787[23] = 1;
   out_7570370335827878787[24] = 0;
   out_7570370335827878787[25] = 0;
   out_7570370335827878787[26] = 0;
   out_7570370335827878787[27] = 0;
   out_7570370335827878787[28] = 0;
   out_7570370335827878787[29] = 0;
   out_7570370335827878787[30] = 0;
   out_7570370335827878787[31] = 0;
   out_7570370335827878787[32] = 0;
   out_7570370335827878787[33] = 0;
   out_7570370335827878787[34] = 0;
   out_7570370335827878787[35] = 0;
   out_7570370335827878787[36] = 0;
   out_7570370335827878787[37] = 0;
   out_7570370335827878787[38] = 0;
   out_7570370335827878787[39] = 0;
   out_7570370335827878787[40] = 0;
   out_7570370335827878787[41] = 0;
   out_7570370335827878787[42] = 0;
   out_7570370335827878787[43] = 0;
   out_7570370335827878787[44] = 0;
   out_7570370335827878787[45] = 0;
   out_7570370335827878787[46] = 1;
   out_7570370335827878787[47] = 0;
   out_7570370335827878787[48] = 0;
   out_7570370335827878787[49] = 0;
   out_7570370335827878787[50] = 0;
   out_7570370335827878787[51] = 0;
   out_7570370335827878787[52] = 0;
   out_7570370335827878787[53] = 0;
   out_7570370335827878787[54] = 0;
   out_7570370335827878787[55] = 0;
   out_7570370335827878787[56] = 0;
   out_7570370335827878787[57] = 0;
   out_7570370335827878787[58] = 0;
   out_7570370335827878787[59] = 0;
   out_7570370335827878787[60] = 0;
   out_7570370335827878787[61] = 0;
   out_7570370335827878787[62] = 0;
   out_7570370335827878787[63] = 0;
   out_7570370335827878787[64] = 0;
   out_7570370335827878787[65] = 0;
}
void h_35(double *state, double *unused, double *out_8252615349203803334) {
   out_8252615349203803334[0] = state[7];
   out_8252615349203803334[1] = state[8];
   out_8252615349203803334[2] = state[9];
}
void H_35(double *state, double *unused, double *out_5917575985168524368) {
   out_5917575985168524368[0] = 0;
   out_5917575985168524368[1] = 0;
   out_5917575985168524368[2] = 0;
   out_5917575985168524368[3] = 0;
   out_5917575985168524368[4] = 0;
   out_5917575985168524368[5] = 0;
   out_5917575985168524368[6] = 0;
   out_5917575985168524368[7] = 1;
   out_5917575985168524368[8] = 0;
   out_5917575985168524368[9] = 0;
   out_5917575985168524368[10] = 0;
   out_5917575985168524368[11] = 0;
   out_5917575985168524368[12] = 0;
   out_5917575985168524368[13] = 0;
   out_5917575985168524368[14] = 0;
   out_5917575985168524368[15] = 0;
   out_5917575985168524368[16] = 0;
   out_5917575985168524368[17] = 0;
   out_5917575985168524368[18] = 0;
   out_5917575985168524368[19] = 0;
   out_5917575985168524368[20] = 0;
   out_5917575985168524368[21] = 0;
   out_5917575985168524368[22] = 0;
   out_5917575985168524368[23] = 0;
   out_5917575985168524368[24] = 0;
   out_5917575985168524368[25] = 0;
   out_5917575985168524368[26] = 0;
   out_5917575985168524368[27] = 0;
   out_5917575985168524368[28] = 0;
   out_5917575985168524368[29] = 0;
   out_5917575985168524368[30] = 1;
   out_5917575985168524368[31] = 0;
   out_5917575985168524368[32] = 0;
   out_5917575985168524368[33] = 0;
   out_5917575985168524368[34] = 0;
   out_5917575985168524368[35] = 0;
   out_5917575985168524368[36] = 0;
   out_5917575985168524368[37] = 0;
   out_5917575985168524368[38] = 0;
   out_5917575985168524368[39] = 0;
   out_5917575985168524368[40] = 0;
   out_5917575985168524368[41] = 0;
   out_5917575985168524368[42] = 0;
   out_5917575985168524368[43] = 0;
   out_5917575985168524368[44] = 0;
   out_5917575985168524368[45] = 0;
   out_5917575985168524368[46] = 0;
   out_5917575985168524368[47] = 0;
   out_5917575985168524368[48] = 0;
   out_5917575985168524368[49] = 0;
   out_5917575985168524368[50] = 0;
   out_5917575985168524368[51] = 0;
   out_5917575985168524368[52] = 0;
   out_5917575985168524368[53] = 1;
   out_5917575985168524368[54] = 0;
   out_5917575985168524368[55] = 0;
   out_5917575985168524368[56] = 0;
   out_5917575985168524368[57] = 0;
   out_5917575985168524368[58] = 0;
   out_5917575985168524368[59] = 0;
   out_5917575985168524368[60] = 0;
   out_5917575985168524368[61] = 0;
   out_5917575985168524368[62] = 0;
   out_5917575985168524368[63] = 0;
   out_5917575985168524368[64] = 0;
   out_5917575985168524368[65] = 0;
}
void h_32(double *state, double *unused, double *out_6699054471095787912) {
   out_6699054471095787912[0] = state[3];
   out_6699054471095787912[1] = state[4];
   out_6699054471095787912[2] = state[5];
   out_6699054471095787912[3] = state[6];
}
void H_32(double *state, double *unused, double *out_6727863716333414690) {
   out_6727863716333414690[0] = 0;
   out_6727863716333414690[1] = 0;
   out_6727863716333414690[2] = 0;
   out_6727863716333414690[3] = 1;
   out_6727863716333414690[4] = 0;
   out_6727863716333414690[5] = 0;
   out_6727863716333414690[6] = 0;
   out_6727863716333414690[7] = 0;
   out_6727863716333414690[8] = 0;
   out_6727863716333414690[9] = 0;
   out_6727863716333414690[10] = 0;
   out_6727863716333414690[11] = 0;
   out_6727863716333414690[12] = 0;
   out_6727863716333414690[13] = 0;
   out_6727863716333414690[14] = 0;
   out_6727863716333414690[15] = 0;
   out_6727863716333414690[16] = 0;
   out_6727863716333414690[17] = 0;
   out_6727863716333414690[18] = 0;
   out_6727863716333414690[19] = 0;
   out_6727863716333414690[20] = 0;
   out_6727863716333414690[21] = 0;
   out_6727863716333414690[22] = 0;
   out_6727863716333414690[23] = 0;
   out_6727863716333414690[24] = 0;
   out_6727863716333414690[25] = 0;
   out_6727863716333414690[26] = 1;
   out_6727863716333414690[27] = 0;
   out_6727863716333414690[28] = 0;
   out_6727863716333414690[29] = 0;
   out_6727863716333414690[30] = 0;
   out_6727863716333414690[31] = 0;
   out_6727863716333414690[32] = 0;
   out_6727863716333414690[33] = 0;
   out_6727863716333414690[34] = 0;
   out_6727863716333414690[35] = 0;
   out_6727863716333414690[36] = 0;
   out_6727863716333414690[37] = 0;
   out_6727863716333414690[38] = 0;
   out_6727863716333414690[39] = 0;
   out_6727863716333414690[40] = 0;
   out_6727863716333414690[41] = 0;
   out_6727863716333414690[42] = 0;
   out_6727863716333414690[43] = 0;
   out_6727863716333414690[44] = 0;
   out_6727863716333414690[45] = 0;
   out_6727863716333414690[46] = 0;
   out_6727863716333414690[47] = 0;
   out_6727863716333414690[48] = 0;
   out_6727863716333414690[49] = 1;
   out_6727863716333414690[50] = 0;
   out_6727863716333414690[51] = 0;
   out_6727863716333414690[52] = 0;
   out_6727863716333414690[53] = 0;
   out_6727863716333414690[54] = 0;
   out_6727863716333414690[55] = 0;
   out_6727863716333414690[56] = 0;
   out_6727863716333414690[57] = 0;
   out_6727863716333414690[58] = 0;
   out_6727863716333414690[59] = 0;
   out_6727863716333414690[60] = 0;
   out_6727863716333414690[61] = 0;
   out_6727863716333414690[62] = 0;
   out_6727863716333414690[63] = 0;
   out_6727863716333414690[64] = 0;
   out_6727863716333414690[65] = 0;
   out_6727863716333414690[66] = 0;
   out_6727863716333414690[67] = 0;
   out_6727863716333414690[68] = 0;
   out_6727863716333414690[69] = 0;
   out_6727863716333414690[70] = 0;
   out_6727863716333414690[71] = 0;
   out_6727863716333414690[72] = 1;
   out_6727863716333414690[73] = 0;
   out_6727863716333414690[74] = 0;
   out_6727863716333414690[75] = 0;
   out_6727863716333414690[76] = 0;
   out_6727863716333414690[77] = 0;
   out_6727863716333414690[78] = 0;
   out_6727863716333414690[79] = 0;
   out_6727863716333414690[80] = 0;
   out_6727863716333414690[81] = 0;
   out_6727863716333414690[82] = 0;
   out_6727863716333414690[83] = 0;
   out_6727863716333414690[84] = 0;
   out_6727863716333414690[85] = 0;
   out_6727863716333414690[86] = 0;
   out_6727863716333414690[87] = 0;
}
void h_13(double *state, double *unused, double *out_577456594247802333) {
   out_577456594247802333[0] = (-2*state[3]*state[5] + 2*state[4]*state[6])*state[9] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[8] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[7];
   out_577456594247802333[1] = (2*state[3]*state[4] + 2*state[5]*state[6])*state[9] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[7] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[8];
   out_577456594247802333[2] = (-2*state[3]*state[4] + 2*state[5]*state[6])*state[8] + (2*state[3]*state[5] + 2*state[4]*state[6])*state[7] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[9];
}
void H_13(double *state, double *unused, double *out_6278128523780275173) {
   out_6278128523780275173[0] = 0;
   out_6278128523780275173[1] = 0;
   out_6278128523780275173[2] = 0;
   out_6278128523780275173[3] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_6278128523780275173[4] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_6278128523780275173[5] = -2*state[3]*state[9] + 2*state[4]*state[8] - 2*state[5]*state[7];
   out_6278128523780275173[6] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_6278128523780275173[7] = pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2);
   out_6278128523780275173[8] = 2*state[3]*state[6] + 2*state[4]*state[5];
   out_6278128523780275173[9] = -2*state[3]*state[5] + 2*state[4]*state[6];
   out_6278128523780275173[10] = 0;
   out_6278128523780275173[11] = 0;
   out_6278128523780275173[12] = 0;
   out_6278128523780275173[13] = 0;
   out_6278128523780275173[14] = 0;
   out_6278128523780275173[15] = 0;
   out_6278128523780275173[16] = 0;
   out_6278128523780275173[17] = 0;
   out_6278128523780275173[18] = 0;
   out_6278128523780275173[19] = 0;
   out_6278128523780275173[20] = 0;
   out_6278128523780275173[21] = 0;
   out_6278128523780275173[22] = 0;
   out_6278128523780275173[23] = 0;
   out_6278128523780275173[24] = 0;
   out_6278128523780275173[25] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_6278128523780275173[26] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_6278128523780275173[27] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_6278128523780275173[28] = -2*state[3]*state[7] + 2*state[5]*state[9] - 2*state[6]*state[8];
   out_6278128523780275173[29] = -2*state[3]*state[6] + 2*state[4]*state[5];
   out_6278128523780275173[30] = pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2);
   out_6278128523780275173[31] = 2*state[3]*state[4] + 2*state[5]*state[6];
   out_6278128523780275173[32] = 0;
   out_6278128523780275173[33] = 0;
   out_6278128523780275173[34] = 0;
   out_6278128523780275173[35] = 0;
   out_6278128523780275173[36] = 0;
   out_6278128523780275173[37] = 0;
   out_6278128523780275173[38] = 0;
   out_6278128523780275173[39] = 0;
   out_6278128523780275173[40] = 0;
   out_6278128523780275173[41] = 0;
   out_6278128523780275173[42] = 0;
   out_6278128523780275173[43] = 0;
   out_6278128523780275173[44] = 0;
   out_6278128523780275173[45] = 0;
   out_6278128523780275173[46] = 0;
   out_6278128523780275173[47] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_6278128523780275173[48] = -2*state[3]*state[8] - 2*state[4]*state[9] + 2*state[6]*state[7];
   out_6278128523780275173[49] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_6278128523780275173[50] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_6278128523780275173[51] = 2*state[3]*state[5] + 2*state[4]*state[6];
   out_6278128523780275173[52] = -2*state[3]*state[4] + 2*state[5]*state[6];
   out_6278128523780275173[53] = pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2);
   out_6278128523780275173[54] = 0;
   out_6278128523780275173[55] = 0;
   out_6278128523780275173[56] = 0;
   out_6278128523780275173[57] = 0;
   out_6278128523780275173[58] = 0;
   out_6278128523780275173[59] = 0;
   out_6278128523780275173[60] = 0;
   out_6278128523780275173[61] = 0;
   out_6278128523780275173[62] = 0;
   out_6278128523780275173[63] = 0;
   out_6278128523780275173[64] = 0;
   out_6278128523780275173[65] = 0;
}
void h_14(double *state, double *unused, double *out_6999757141510273012) {
   out_6999757141510273012[0] = state[10];
   out_6999757141510273012[1] = state[11];
   out_6999757141510273012[2] = state[12];
}
void H_14(double *state, double *unused, double *out_2792103574425507637) {
   out_2792103574425507637[0] = 0;
   out_2792103574425507637[1] = 0;
   out_2792103574425507637[2] = 0;
   out_2792103574425507637[3] = 0;
   out_2792103574425507637[4] = 0;
   out_2792103574425507637[5] = 0;
   out_2792103574425507637[6] = 0;
   out_2792103574425507637[7] = 0;
   out_2792103574425507637[8] = 0;
   out_2792103574425507637[9] = 0;
   out_2792103574425507637[10] = 1;
   out_2792103574425507637[11] = 0;
   out_2792103574425507637[12] = 0;
   out_2792103574425507637[13] = 0;
   out_2792103574425507637[14] = 0;
   out_2792103574425507637[15] = 0;
   out_2792103574425507637[16] = 0;
   out_2792103574425507637[17] = 0;
   out_2792103574425507637[18] = 0;
   out_2792103574425507637[19] = 0;
   out_2792103574425507637[20] = 0;
   out_2792103574425507637[21] = 0;
   out_2792103574425507637[22] = 0;
   out_2792103574425507637[23] = 0;
   out_2792103574425507637[24] = 0;
   out_2792103574425507637[25] = 0;
   out_2792103574425507637[26] = 0;
   out_2792103574425507637[27] = 0;
   out_2792103574425507637[28] = 0;
   out_2792103574425507637[29] = 0;
   out_2792103574425507637[30] = 0;
   out_2792103574425507637[31] = 0;
   out_2792103574425507637[32] = 0;
   out_2792103574425507637[33] = 1;
   out_2792103574425507637[34] = 0;
   out_2792103574425507637[35] = 0;
   out_2792103574425507637[36] = 0;
   out_2792103574425507637[37] = 0;
   out_2792103574425507637[38] = 0;
   out_2792103574425507637[39] = 0;
   out_2792103574425507637[40] = 0;
   out_2792103574425507637[41] = 0;
   out_2792103574425507637[42] = 0;
   out_2792103574425507637[43] = 0;
   out_2792103574425507637[44] = 0;
   out_2792103574425507637[45] = 0;
   out_2792103574425507637[46] = 0;
   out_2792103574425507637[47] = 0;
   out_2792103574425507637[48] = 0;
   out_2792103574425507637[49] = 0;
   out_2792103574425507637[50] = 0;
   out_2792103574425507637[51] = 0;
   out_2792103574425507637[52] = 0;
   out_2792103574425507637[53] = 0;
   out_2792103574425507637[54] = 0;
   out_2792103574425507637[55] = 0;
   out_2792103574425507637[56] = 1;
   out_2792103574425507637[57] = 0;
   out_2792103574425507637[58] = 0;
   out_2792103574425507637[59] = 0;
   out_2792103574425507637[60] = 0;
   out_2792103574425507637[61] = 0;
   out_2792103574425507637[62] = 0;
   out_2792103574425507637[63] = 0;
   out_2792103574425507637[64] = 0;
   out_2792103574425507637[65] = 0;
}
void h_33(double *state, double *unused, double *out_6265834110182436014) {
   out_6265834110182436014[0] = state[16];
   out_6265834110182436014[1] = state[17];
   out_6265834110182436014[2] = state[18];
}
void H_33(double *state, double *unused, double *out_9068132989807381972) {
   out_9068132989807381972[0] = 0;
   out_9068132989807381972[1] = 0;
   out_9068132989807381972[2] = 0;
   out_9068132989807381972[3] = 0;
   out_9068132989807381972[4] = 0;
   out_9068132989807381972[5] = 0;
   out_9068132989807381972[6] = 0;
   out_9068132989807381972[7] = 0;
   out_9068132989807381972[8] = 0;
   out_9068132989807381972[9] = 0;
   out_9068132989807381972[10] = 0;
   out_9068132989807381972[11] = 0;
   out_9068132989807381972[12] = 0;
   out_9068132989807381972[13] = 0;
   out_9068132989807381972[14] = 0;
   out_9068132989807381972[15] = 0;
   out_9068132989807381972[16] = 1;
   out_9068132989807381972[17] = 0;
   out_9068132989807381972[18] = 0;
   out_9068132989807381972[19] = 0;
   out_9068132989807381972[20] = 0;
   out_9068132989807381972[21] = 0;
   out_9068132989807381972[22] = 0;
   out_9068132989807381972[23] = 0;
   out_9068132989807381972[24] = 0;
   out_9068132989807381972[25] = 0;
   out_9068132989807381972[26] = 0;
   out_9068132989807381972[27] = 0;
   out_9068132989807381972[28] = 0;
   out_9068132989807381972[29] = 0;
   out_9068132989807381972[30] = 0;
   out_9068132989807381972[31] = 0;
   out_9068132989807381972[32] = 0;
   out_9068132989807381972[33] = 0;
   out_9068132989807381972[34] = 0;
   out_9068132989807381972[35] = 0;
   out_9068132989807381972[36] = 0;
   out_9068132989807381972[37] = 0;
   out_9068132989807381972[38] = 0;
   out_9068132989807381972[39] = 1;
   out_9068132989807381972[40] = 0;
   out_9068132989807381972[41] = 0;
   out_9068132989807381972[42] = 0;
   out_9068132989807381972[43] = 0;
   out_9068132989807381972[44] = 0;
   out_9068132989807381972[45] = 0;
   out_9068132989807381972[46] = 0;
   out_9068132989807381972[47] = 0;
   out_9068132989807381972[48] = 0;
   out_9068132989807381972[49] = 0;
   out_9068132989807381972[50] = 0;
   out_9068132989807381972[51] = 0;
   out_9068132989807381972[52] = 0;
   out_9068132989807381972[53] = 0;
   out_9068132989807381972[54] = 0;
   out_9068132989807381972[55] = 0;
   out_9068132989807381972[56] = 0;
   out_9068132989807381972[57] = 0;
   out_9068132989807381972[58] = 0;
   out_9068132989807381972[59] = 0;
   out_9068132989807381972[60] = 0;
   out_9068132989807381972[61] = 0;
   out_9068132989807381972[62] = 1;
   out_9068132989807381972[63] = 0;
   out_9068132989807381972[64] = 0;
   out_9068132989807381972[65] = 0;
}
#include <eigen3/Eigen/Dense>
#include <iostream>

typedef Eigen::Matrix<double, DIM, DIM, Eigen::RowMajor> DDM;
typedef Eigen::Matrix<double, EDIM, EDIM, Eigen::RowMajor> EEM;
typedef Eigen::Matrix<double, DIM, EDIM, Eigen::RowMajor> DEM;

void predict(double *in_x, double *in_P, double *in_Q, double dt) {
  typedef Eigen::Matrix<double, MEDIM, MEDIM, Eigen::RowMajor> RRM;

  double nx[DIM] = {0};
  double in_F[EDIM*EDIM] = {0};

  // functions from sympy
  f_fun(in_x, dt, nx);
  F_fun(in_x, dt, in_F);


  EEM F(in_F);
  EEM P(in_P);
  EEM Q(in_Q);

  RRM F_main = F.topLeftCorner(MEDIM, MEDIM);
  P.topLeftCorner(MEDIM, MEDIM) = (F_main * P.topLeftCorner(MEDIM, MEDIM)) * F_main.transpose();
  P.topRightCorner(MEDIM, EDIM - MEDIM) = F_main * P.topRightCorner(MEDIM, EDIM - MEDIM);
  P.bottomLeftCorner(EDIM - MEDIM, MEDIM) = P.bottomLeftCorner(EDIM - MEDIM, MEDIM) * F_main.transpose();

  P = P + dt*Q;

  // copy out state
  memcpy(in_x, nx, DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
}

// note: extra_args dim only correct when null space projecting
// otherwise 1
template <int ZDIM, int EADIM, bool MAHA_TEST>
void update(double *in_x, double *in_P, Hfun h_fun, Hfun H_fun, Hfun Hea_fun, double *in_z, double *in_R, double *in_ea, double MAHA_THRESHOLD) {
  typedef Eigen::Matrix<double, ZDIM, ZDIM, Eigen::RowMajor> ZZM;
  typedef Eigen::Matrix<double, ZDIM, DIM, Eigen::RowMajor> ZDM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, EDIM, Eigen::RowMajor> XEM;
  //typedef Eigen::Matrix<double, EDIM, ZDIM, Eigen::RowMajor> EZM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, 1> X1M;
  typedef Eigen::Matrix<double, Eigen::Dynamic, Eigen::Dynamic, Eigen::RowMajor> XXM;

  double in_hx[ZDIM] = {0};
  double in_H[ZDIM * DIM] = {0};
  double in_H_mod[EDIM * DIM] = {0};
  double delta_x[EDIM] = {0};
  double x_new[DIM] = {0};


  // state x, P
  Eigen::Matrix<double, ZDIM, 1> z(in_z);
  EEM P(in_P);
  ZZM pre_R(in_R);

  // functions from sympy
  h_fun(in_x, in_ea, in_hx);
  H_fun(in_x, in_ea, in_H);
  ZDM pre_H(in_H);

  // get y (y = z - hx)
  Eigen::Matrix<double, ZDIM, 1> pre_y(in_hx); pre_y = z - pre_y;
  X1M y; XXM H; XXM R;
  if (Hea_fun){
    typedef Eigen::Matrix<double, ZDIM, EADIM, Eigen::RowMajor> ZAM;
    double in_Hea[ZDIM * EADIM] = {0};
    Hea_fun(in_x, in_ea, in_Hea);
    ZAM Hea(in_Hea);
    XXM A = Hea.transpose().fullPivLu().kernel();


    y = A.transpose() * pre_y;
    H = A.transpose() * pre_H;
    R = A.transpose() * pre_R * A;
  } else {
    y = pre_y;
    H = pre_H;
    R = pre_R;
  }
  // get modified H
  H_mod_fun(in_x, in_H_mod);
  DEM H_mod(in_H_mod);
  XEM H_err = H * H_mod;

  // Do mahalobis distance test
  if (MAHA_TEST){
    XXM a = (H_err * P * H_err.transpose() + R).inverse();
    double maha_dist = y.transpose() * a * y;
    if (maha_dist > MAHA_THRESHOLD){
      R = 1.0e16 * R;
    }
  }

  // Outlier resilient weighting
  double weight = 1;//(1.5)/(1 + y.squaredNorm()/R.sum());

  // kalman gains and I_KH
  XXM S = ((H_err * P) * H_err.transpose()) + R/weight;
  XEM KT = S.fullPivLu().solve(H_err * P.transpose());
  //EZM K = KT.transpose(); TODO: WHY DOES THIS NOT COMPILE?
  //EZM K = S.fullPivLu().solve(H_err * P.transpose()).transpose();
  //std::cout << "Here is the matrix rot:\n" << K << std::endl;
  EEM I_KH = Eigen::Matrix<double, EDIM, EDIM>::Identity() - (KT.transpose() * H_err);

  // update state by injecting dx
  Eigen::Matrix<double, EDIM, 1> dx(delta_x);
  dx  = (KT.transpose() * y);
  memcpy(delta_x, dx.data(), EDIM * sizeof(double));
  err_fun(in_x, delta_x, x_new);
  Eigen::Matrix<double, DIM, 1> x(x_new);

  // update cov
  P = ((I_KH * P) * I_KH.transpose()) + ((KT.transpose() * R) * KT);

  // copy out state
  memcpy(in_x, x.data(), DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
  memcpy(in_z, y.data(), y.rows() * sizeof(double));
}




}
extern "C" {

void live_update_4(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_4, H_4, NULL, in_z, in_R, in_ea, MAHA_THRESH_4);
}
void live_update_9(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_9, H_9, NULL, in_z, in_R, in_ea, MAHA_THRESH_9);
}
void live_update_10(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_10, H_10, NULL, in_z, in_R, in_ea, MAHA_THRESH_10);
}
void live_update_12(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_12, H_12, NULL, in_z, in_R, in_ea, MAHA_THRESH_12);
}
void live_update_35(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_35, H_35, NULL, in_z, in_R, in_ea, MAHA_THRESH_35);
}
void live_update_32(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<4, 3, 0>(in_x, in_P, h_32, H_32, NULL, in_z, in_R, in_ea, MAHA_THRESH_32);
}
void live_update_13(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_13, H_13, NULL, in_z, in_R, in_ea, MAHA_THRESH_13);
}
void live_update_14(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_14, H_14, NULL, in_z, in_R, in_ea, MAHA_THRESH_14);
}
void live_update_33(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_33, H_33, NULL, in_z, in_R, in_ea, MAHA_THRESH_33);
}
void live_H(double *in_vec, double *out_4851806503631677) {
  H(in_vec, out_4851806503631677);
}
void live_err_fun(double *nom_x, double *delta_x, double *out_3875369336362817395) {
  err_fun(nom_x, delta_x, out_3875369336362817395);
}
void live_inv_err_fun(double *nom_x, double *true_x, double *out_2645324593160890975) {
  inv_err_fun(nom_x, true_x, out_2645324593160890975);
}
void live_H_mod_fun(double *state, double *out_6561409780629387220) {
  H_mod_fun(state, out_6561409780629387220);
}
void live_f_fun(double *state, double dt, double *out_4125999630483981146) {
  f_fun(state,  dt, out_4125999630483981146);
}
void live_F_fun(double *state, double dt, double *out_7442995747034510422) {
  F_fun(state,  dt, out_7442995747034510422);
}
void live_h_4(double *state, double *unused, double *out_616819498130942584) {
  h_4(state, unused, out_616819498130942584);
}
void live_H_4(double *state, double *unused, double *out_2550913927795916992) {
  H_4(state, unused, out_2550913927795916992);
}
void live_h_9(double *state, double *unused, double *out_6999757141510273012) {
  h_9(state, unused, out_6999757141510273012);
}
void live_H_9(double *state, double *unused, double *out_2792103574425507637) {
  H_9(state, unused, out_2792103574425507637);
}
void live_h_10(double *state, double *unused, double *out_9127203571950312560) {
  h_10(state, unused, out_9127203571950312560);
}
void live_H_10(double *state, double *unused, double *out_3561658941965941475) {
  H_10(state, unused, out_3561658941965941475);
}
void live_h_12(double *state, double *unused, double *out_2499031427278358051) {
  h_12(state, unused, out_2499031427278358051);
}
void live_H_12(double *state, double *unused, double *out_7570370335827878787) {
  H_12(state, unused, out_7570370335827878787);
}
void live_h_35(double *state, double *unused, double *out_8252615349203803334) {
  h_35(state, unused, out_8252615349203803334);
}
void live_H_35(double *state, double *unused, double *out_5917575985168524368) {
  H_35(state, unused, out_5917575985168524368);
}
void live_h_32(double *state, double *unused, double *out_6699054471095787912) {
  h_32(state, unused, out_6699054471095787912);
}
void live_H_32(double *state, double *unused, double *out_6727863716333414690) {
  H_32(state, unused, out_6727863716333414690);
}
void live_h_13(double *state, double *unused, double *out_577456594247802333) {
  h_13(state, unused, out_577456594247802333);
}
void live_H_13(double *state, double *unused, double *out_6278128523780275173) {
  H_13(state, unused, out_6278128523780275173);
}
void live_h_14(double *state, double *unused, double *out_6999757141510273012) {
  h_14(state, unused, out_6999757141510273012);
}
void live_H_14(double *state, double *unused, double *out_2792103574425507637) {
  H_14(state, unused, out_2792103574425507637);
}
void live_h_33(double *state, double *unused, double *out_6265834110182436014) {
  h_33(state, unused, out_6265834110182436014);
}
void live_H_33(double *state, double *unused, double *out_9068132989807381972) {
  H_33(state, unused, out_9068132989807381972);
}
void live_predict(double *in_x, double *in_P, double *in_Q, double dt) {
  predict(in_x, in_P, in_Q, dt);
}
}

const EKF live = {
  .name = "live",
  .kinds = { 4, 9, 10, 12, 35, 32, 13, 14, 33 },
  .feature_kinds = {  },
  .f_fun = live_f_fun,
  .F_fun = live_F_fun,
  .err_fun = live_err_fun,
  .inv_err_fun = live_inv_err_fun,
  .H_mod_fun = live_H_mod_fun,
  .predict = live_predict,
  .hs = {
    { 4, live_h_4 },
    { 9, live_h_9 },
    { 10, live_h_10 },
    { 12, live_h_12 },
    { 35, live_h_35 },
    { 32, live_h_32 },
    { 13, live_h_13 },
    { 14, live_h_14 },
    { 33, live_h_33 },
  },
  .Hs = {
    { 4, live_H_4 },
    { 9, live_H_9 },
    { 10, live_H_10 },
    { 12, live_H_12 },
    { 35, live_H_35 },
    { 32, live_H_32 },
    { 13, live_H_13 },
    { 14, live_H_14 },
    { 33, live_H_33 },
  },
  .updates = {
    { 4, live_update_4 },
    { 9, live_update_9 },
    { 10, live_update_10 },
    { 12, live_update_12 },
    { 35, live_update_35 },
    { 32, live_update_32 },
    { 13, live_update_13 },
    { 14, live_update_14 },
    { 33, live_update_33 },
  },
  .Hes = {
  },
  .sets = {
  },
  .extra_routines = {
    { "H", live_H },
  },
};

ekf_lib_init(live)
