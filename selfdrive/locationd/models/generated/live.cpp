#include "live.h"

namespace {
#define DIM 22
#define EDIM 21
#define MEDIM 21
typedef void (*Hfun)(double *, double *, double *);
const static double MAHA_THRESH_4 = 7.814727903251177;
const static double MAHA_THRESH_9 = 7.814727903251177;
const static double MAHA_THRESH_10 = 7.814727903251177;
const static double MAHA_THRESH_12 = 7.814727903251177;
const static double MAHA_THRESH_35 = 7.814727903251177;
const static double MAHA_THRESH_32 = 9.487729036781154;
const static double MAHA_THRESH_13 = 7.814727903251177;
const static double MAHA_THRESH_14 = 7.814727903251177;
const static double MAHA_THRESH_33 = 7.814727903251177;

/******************************************************************************
 *                       Code generated with SymPy 1.12                       *
 *                                                                            *
 *              See http://www.sympy.org/ for more information.               *
 *                                                                            *
 *                         This file is part of 'ekf'                         *
 ******************************************************************************/
void H(double *in_vec, double *out_5927131129203117575) {
   out_5927131129203117575[0] = 0;
   out_5927131129203117575[1] = -sin(in_vec[1])*sin(in_vec[2])*in_vec[4] - sin(in_vec[1])*cos(in_vec[2])*in_vec[3] - cos(in_vec[1])*in_vec[5];
   out_5927131129203117575[2] = -sin(in_vec[2])*cos(in_vec[1])*in_vec[3] + cos(in_vec[1])*cos(in_vec[2])*in_vec[4];
   out_5927131129203117575[3] = cos(in_vec[1])*cos(in_vec[2]);
   out_5927131129203117575[4] = sin(in_vec[2])*cos(in_vec[1]);
   out_5927131129203117575[5] = -sin(in_vec[1]);
   out_5927131129203117575[6] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (-sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_5927131129203117575[7] = -sin(in_vec[0])*sin(in_vec[1])*in_vec[5] + sin(in_vec[0])*sin(in_vec[2])*cos(in_vec[1])*in_vec[4] + sin(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_5927131129203117575[8] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]))*in_vec[4];
   out_5927131129203117575[9] = sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]);
   out_5927131129203117575[10] = sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) + cos(in_vec[0])*cos(in_vec[2]);
   out_5927131129203117575[11] = sin(in_vec[0])*cos(in_vec[1]);
   out_5927131129203117575[12] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (-sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) + sin(in_vec[2])*cos(in_vec[0]))*in_vec[3] - sin(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_5927131129203117575[13] = -sin(in_vec[1])*cos(in_vec[0])*in_vec[5] + sin(in_vec[2])*cos(in_vec[0])*cos(in_vec[1])*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_5927131129203117575[14] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (sin(in_vec[0])*cos(in_vec[2]) - sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[3];
   out_5927131129203117575[15] = sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]);
   out_5927131129203117575[16] = -sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]);
   out_5927131129203117575[17] = cos(in_vec[0])*cos(in_vec[1]);
}
void err_fun(double *nom_x, double *delta_x, double *out_166480417200010184) {
   out_166480417200010184[0] = delta_x[0] + nom_x[0];
   out_166480417200010184[1] = delta_x[1] + nom_x[1];
   out_166480417200010184[2] = delta_x[2] + nom_x[2];
   out_166480417200010184[3] = -0.5*delta_x[3]*nom_x[4] - 0.5*delta_x[4]*nom_x[5] - 0.5*delta_x[5]*nom_x[6] + 1.0*nom_x[3];
   out_166480417200010184[4] = 0.5*delta_x[3]*nom_x[3] + 0.5*delta_x[4]*nom_x[6] - 0.5*delta_x[5]*nom_x[5] + 1.0*nom_x[4];
   out_166480417200010184[5] = -0.5*delta_x[3]*nom_x[6] + 0.5*delta_x[4]*nom_x[3] + 0.5*delta_x[5]*nom_x[4] + 1.0*nom_x[5];
   out_166480417200010184[6] = 0.5*delta_x[3]*nom_x[5] - 0.5*delta_x[4]*nom_x[4] + 0.5*delta_x[5]*nom_x[3] + 1.0*nom_x[6];
   out_166480417200010184[7] = delta_x[6] + nom_x[7];
   out_166480417200010184[8] = delta_x[7] + nom_x[8];
   out_166480417200010184[9] = delta_x[8] + nom_x[9];
   out_166480417200010184[10] = delta_x[9] + nom_x[10];
   out_166480417200010184[11] = delta_x[10] + nom_x[11];
   out_166480417200010184[12] = delta_x[11] + nom_x[12];
   out_166480417200010184[13] = delta_x[12] + nom_x[13];
   out_166480417200010184[14] = delta_x[13] + nom_x[14];
   out_166480417200010184[15] = delta_x[14] + nom_x[15];
   out_166480417200010184[16] = delta_x[15] + nom_x[16];
   out_166480417200010184[17] = delta_x[16] + nom_x[17];
   out_166480417200010184[18] = delta_x[17] + nom_x[18];
   out_166480417200010184[19] = delta_x[18] + nom_x[19];
   out_166480417200010184[20] = delta_x[19] + nom_x[20];
   out_166480417200010184[21] = delta_x[20] + nom_x[21];
}
void inv_err_fun(double *nom_x, double *true_x, double *out_1046491856692961924) {
   out_1046491856692961924[0] = -nom_x[0] + true_x[0];
   out_1046491856692961924[1] = -nom_x[1] + true_x[1];
   out_1046491856692961924[2] = -nom_x[2] + true_x[2];
   out_1046491856692961924[3] = 2*nom_x[3]*true_x[4] - 2*nom_x[4]*true_x[3] + 2*nom_x[5]*true_x[6] - 2*nom_x[6]*true_x[5];
   out_1046491856692961924[4] = 2*nom_x[3]*true_x[5] - 2*nom_x[4]*true_x[6] - 2*nom_x[5]*true_x[3] + 2*nom_x[6]*true_x[4];
   out_1046491856692961924[5] = 2*nom_x[3]*true_x[6] + 2*nom_x[4]*true_x[5] - 2*nom_x[5]*true_x[4] - 2*nom_x[6]*true_x[3];
   out_1046491856692961924[6] = -nom_x[7] + true_x[7];
   out_1046491856692961924[7] = -nom_x[8] + true_x[8];
   out_1046491856692961924[8] = -nom_x[9] + true_x[9];
   out_1046491856692961924[9] = -nom_x[10] + true_x[10];
   out_1046491856692961924[10] = -nom_x[11] + true_x[11];
   out_1046491856692961924[11] = -nom_x[12] + true_x[12];
   out_1046491856692961924[12] = -nom_x[13] + true_x[13];
   out_1046491856692961924[13] = -nom_x[14] + true_x[14];
   out_1046491856692961924[14] = -nom_x[15] + true_x[15];
   out_1046491856692961924[15] = -nom_x[16] + true_x[16];
   out_1046491856692961924[16] = -nom_x[17] + true_x[17];
   out_1046491856692961924[17] = -nom_x[18] + true_x[18];
   out_1046491856692961924[18] = -nom_x[19] + true_x[19];
   out_1046491856692961924[19] = -nom_x[20] + true_x[20];
   out_1046491856692961924[20] = -nom_x[21] + true_x[21];
}
void H_mod_fun(double *state, double *out_7997181526798158612) {
   out_7997181526798158612[0] = 1.0;
   out_7997181526798158612[1] = 0;
   out_7997181526798158612[2] = 0;
   out_7997181526798158612[3] = 0;
   out_7997181526798158612[4] = 0;
   out_7997181526798158612[5] = 0;
   out_7997181526798158612[6] = 0;
   out_7997181526798158612[7] = 0;
   out_7997181526798158612[8] = 0;
   out_7997181526798158612[9] = 0;
   out_7997181526798158612[10] = 0;
   out_7997181526798158612[11] = 0;
   out_7997181526798158612[12] = 0;
   out_7997181526798158612[13] = 0;
   out_7997181526798158612[14] = 0;
   out_7997181526798158612[15] = 0;
   out_7997181526798158612[16] = 0;
   out_7997181526798158612[17] = 0;
   out_7997181526798158612[18] = 0;
   out_7997181526798158612[19] = 0;
   out_7997181526798158612[20] = 0;
   out_7997181526798158612[21] = 0;
   out_7997181526798158612[22] = 1.0;
   out_7997181526798158612[23] = 0;
   out_7997181526798158612[24] = 0;
   out_7997181526798158612[25] = 0;
   out_7997181526798158612[26] = 0;
   out_7997181526798158612[27] = 0;
   out_7997181526798158612[28] = 0;
   out_7997181526798158612[29] = 0;
   out_7997181526798158612[30] = 0;
   out_7997181526798158612[31] = 0;
   out_7997181526798158612[32] = 0;
   out_7997181526798158612[33] = 0;
   out_7997181526798158612[34] = 0;
   out_7997181526798158612[35] = 0;
   out_7997181526798158612[36] = 0;
   out_7997181526798158612[37] = 0;
   out_7997181526798158612[38] = 0;
   out_7997181526798158612[39] = 0;
   out_7997181526798158612[40] = 0;
   out_7997181526798158612[41] = 0;
   out_7997181526798158612[42] = 0;
   out_7997181526798158612[43] = 0;
   out_7997181526798158612[44] = 1.0;
   out_7997181526798158612[45] = 0;
   out_7997181526798158612[46] = 0;
   out_7997181526798158612[47] = 0;
   out_7997181526798158612[48] = 0;
   out_7997181526798158612[49] = 0;
   out_7997181526798158612[50] = 0;
   out_7997181526798158612[51] = 0;
   out_7997181526798158612[52] = 0;
   out_7997181526798158612[53] = 0;
   out_7997181526798158612[54] = 0;
   out_7997181526798158612[55] = 0;
   out_7997181526798158612[56] = 0;
   out_7997181526798158612[57] = 0;
   out_7997181526798158612[58] = 0;
   out_7997181526798158612[59] = 0;
   out_7997181526798158612[60] = 0;
   out_7997181526798158612[61] = 0;
   out_7997181526798158612[62] = 0;
   out_7997181526798158612[63] = 0;
   out_7997181526798158612[64] = 0;
   out_7997181526798158612[65] = 0;
   out_7997181526798158612[66] = -0.5*state[4];
   out_7997181526798158612[67] = -0.5*state[5];
   out_7997181526798158612[68] = -0.5*state[6];
   out_7997181526798158612[69] = 0;
   out_7997181526798158612[70] = 0;
   out_7997181526798158612[71] = 0;
   out_7997181526798158612[72] = 0;
   out_7997181526798158612[73] = 0;
   out_7997181526798158612[74] = 0;
   out_7997181526798158612[75] = 0;
   out_7997181526798158612[76] = 0;
   out_7997181526798158612[77] = 0;
   out_7997181526798158612[78] = 0;
   out_7997181526798158612[79] = 0;
   out_7997181526798158612[80] = 0;
   out_7997181526798158612[81] = 0;
   out_7997181526798158612[82] = 0;
   out_7997181526798158612[83] = 0;
   out_7997181526798158612[84] = 0;
   out_7997181526798158612[85] = 0;
   out_7997181526798158612[86] = 0;
   out_7997181526798158612[87] = 0.5*state[3];
   out_7997181526798158612[88] = 0.5*state[6];
   out_7997181526798158612[89] = -0.5*state[5];
   out_7997181526798158612[90] = 0;
   out_7997181526798158612[91] = 0;
   out_7997181526798158612[92] = 0;
   out_7997181526798158612[93] = 0;
   out_7997181526798158612[94] = 0;
   out_7997181526798158612[95] = 0;
   out_7997181526798158612[96] = 0;
   out_7997181526798158612[97] = 0;
   out_7997181526798158612[98] = 0;
   out_7997181526798158612[99] = 0;
   out_7997181526798158612[100] = 0;
   out_7997181526798158612[101] = 0;
   out_7997181526798158612[102] = 0;
   out_7997181526798158612[103] = 0;
   out_7997181526798158612[104] = 0;
   out_7997181526798158612[105] = 0;
   out_7997181526798158612[106] = 0;
   out_7997181526798158612[107] = 0;
   out_7997181526798158612[108] = -0.5*state[6];
   out_7997181526798158612[109] = 0.5*state[3];
   out_7997181526798158612[110] = 0.5*state[4];
   out_7997181526798158612[111] = 0;
   out_7997181526798158612[112] = 0;
   out_7997181526798158612[113] = 0;
   out_7997181526798158612[114] = 0;
   out_7997181526798158612[115] = 0;
   out_7997181526798158612[116] = 0;
   out_7997181526798158612[117] = 0;
   out_7997181526798158612[118] = 0;
   out_7997181526798158612[119] = 0;
   out_7997181526798158612[120] = 0;
   out_7997181526798158612[121] = 0;
   out_7997181526798158612[122] = 0;
   out_7997181526798158612[123] = 0;
   out_7997181526798158612[124] = 0;
   out_7997181526798158612[125] = 0;
   out_7997181526798158612[126] = 0;
   out_7997181526798158612[127] = 0;
   out_7997181526798158612[128] = 0;
   out_7997181526798158612[129] = 0.5*state[5];
   out_7997181526798158612[130] = -0.5*state[4];
   out_7997181526798158612[131] = 0.5*state[3];
   out_7997181526798158612[132] = 0;
   out_7997181526798158612[133] = 0;
   out_7997181526798158612[134] = 0;
   out_7997181526798158612[135] = 0;
   out_7997181526798158612[136] = 0;
   out_7997181526798158612[137] = 0;
   out_7997181526798158612[138] = 0;
   out_7997181526798158612[139] = 0;
   out_7997181526798158612[140] = 0;
   out_7997181526798158612[141] = 0;
   out_7997181526798158612[142] = 0;
   out_7997181526798158612[143] = 0;
   out_7997181526798158612[144] = 0;
   out_7997181526798158612[145] = 0;
   out_7997181526798158612[146] = 0;
   out_7997181526798158612[147] = 0;
   out_7997181526798158612[148] = 0;
   out_7997181526798158612[149] = 0;
   out_7997181526798158612[150] = 0;
   out_7997181526798158612[151] = 0;
   out_7997181526798158612[152] = 0;
   out_7997181526798158612[153] = 1.0;
   out_7997181526798158612[154] = 0;
   out_7997181526798158612[155] = 0;
   out_7997181526798158612[156] = 0;
   out_7997181526798158612[157] = 0;
   out_7997181526798158612[158] = 0;
   out_7997181526798158612[159] = 0;
   out_7997181526798158612[160] = 0;
   out_7997181526798158612[161] = 0;
   out_7997181526798158612[162] = 0;
   out_7997181526798158612[163] = 0;
   out_7997181526798158612[164] = 0;
   out_7997181526798158612[165] = 0;
   out_7997181526798158612[166] = 0;
   out_7997181526798158612[167] = 0;
   out_7997181526798158612[168] = 0;
   out_7997181526798158612[169] = 0;
   out_7997181526798158612[170] = 0;
   out_7997181526798158612[171] = 0;
   out_7997181526798158612[172] = 0;
   out_7997181526798158612[173] = 0;
   out_7997181526798158612[174] = 0;
   out_7997181526798158612[175] = 1.0;
   out_7997181526798158612[176] = 0;
   out_7997181526798158612[177] = 0;
   out_7997181526798158612[178] = 0;
   out_7997181526798158612[179] = 0;
   out_7997181526798158612[180] = 0;
   out_7997181526798158612[181] = 0;
   out_7997181526798158612[182] = 0;
   out_7997181526798158612[183] = 0;
   out_7997181526798158612[184] = 0;
   out_7997181526798158612[185] = 0;
   out_7997181526798158612[186] = 0;
   out_7997181526798158612[187] = 0;
   out_7997181526798158612[188] = 0;
   out_7997181526798158612[189] = 0;
   out_7997181526798158612[190] = 0;
   out_7997181526798158612[191] = 0;
   out_7997181526798158612[192] = 0;
   out_7997181526798158612[193] = 0;
   out_7997181526798158612[194] = 0;
   out_7997181526798158612[195] = 0;
   out_7997181526798158612[196] = 0;
   out_7997181526798158612[197] = 1.0;
   out_7997181526798158612[198] = 0;
   out_7997181526798158612[199] = 0;
   out_7997181526798158612[200] = 0;
   out_7997181526798158612[201] = 0;
   out_7997181526798158612[202] = 0;
   out_7997181526798158612[203] = 0;
   out_7997181526798158612[204] = 0;
   out_7997181526798158612[205] = 0;
   out_7997181526798158612[206] = 0;
   out_7997181526798158612[207] = 0;
   out_7997181526798158612[208] = 0;
   out_7997181526798158612[209] = 0;
   out_7997181526798158612[210] = 0;
   out_7997181526798158612[211] = 0;
   out_7997181526798158612[212] = 0;
   out_7997181526798158612[213] = 0;
   out_7997181526798158612[214] = 0;
   out_7997181526798158612[215] = 0;
   out_7997181526798158612[216] = 0;
   out_7997181526798158612[217] = 0;
   out_7997181526798158612[218] = 0;
   out_7997181526798158612[219] = 1.0;
   out_7997181526798158612[220] = 0;
   out_7997181526798158612[221] = 0;
   out_7997181526798158612[222] = 0;
   out_7997181526798158612[223] = 0;
   out_7997181526798158612[224] = 0;
   out_7997181526798158612[225] = 0;
   out_7997181526798158612[226] = 0;
   out_7997181526798158612[227] = 0;
   out_7997181526798158612[228] = 0;
   out_7997181526798158612[229] = 0;
   out_7997181526798158612[230] = 0;
   out_7997181526798158612[231] = 0;
   out_7997181526798158612[232] = 0;
   out_7997181526798158612[233] = 0;
   out_7997181526798158612[234] = 0;
   out_7997181526798158612[235] = 0;
   out_7997181526798158612[236] = 0;
   out_7997181526798158612[237] = 0;
   out_7997181526798158612[238] = 0;
   out_7997181526798158612[239] = 0;
   out_7997181526798158612[240] = 0;
   out_7997181526798158612[241] = 1.0;
   out_7997181526798158612[242] = 0;
   out_7997181526798158612[243] = 0;
   out_7997181526798158612[244] = 0;
   out_7997181526798158612[245] = 0;
   out_7997181526798158612[246] = 0;
   out_7997181526798158612[247] = 0;
   out_7997181526798158612[248] = 0;
   out_7997181526798158612[249] = 0;
   out_7997181526798158612[250] = 0;
   out_7997181526798158612[251] = 0;
   out_7997181526798158612[252] = 0;
   out_7997181526798158612[253] = 0;
   out_7997181526798158612[254] = 0;
   out_7997181526798158612[255] = 0;
   out_7997181526798158612[256] = 0;
   out_7997181526798158612[257] = 0;
   out_7997181526798158612[258] = 0;
   out_7997181526798158612[259] = 0;
   out_7997181526798158612[260] = 0;
   out_7997181526798158612[261] = 0;
   out_7997181526798158612[262] = 0;
   out_7997181526798158612[263] = 1.0;
   out_7997181526798158612[264] = 0;
   out_7997181526798158612[265] = 0;
   out_7997181526798158612[266] = 0;
   out_7997181526798158612[267] = 0;
   out_7997181526798158612[268] = 0;
   out_7997181526798158612[269] = 0;
   out_7997181526798158612[270] = 0;
   out_7997181526798158612[271] = 0;
   out_7997181526798158612[272] = 0;
   out_7997181526798158612[273] = 0;
   out_7997181526798158612[274] = 0;
   out_7997181526798158612[275] = 0;
   out_7997181526798158612[276] = 0;
   out_7997181526798158612[277] = 0;
   out_7997181526798158612[278] = 0;
   out_7997181526798158612[279] = 0;
   out_7997181526798158612[280] = 0;
   out_7997181526798158612[281] = 0;
   out_7997181526798158612[282] = 0;
   out_7997181526798158612[283] = 0;
   out_7997181526798158612[284] = 0;
   out_7997181526798158612[285] = 1.0;
   out_7997181526798158612[286] = 0;
   out_7997181526798158612[287] = 0;
   out_7997181526798158612[288] = 0;
   out_7997181526798158612[289] = 0;
   out_7997181526798158612[290] = 0;
   out_7997181526798158612[291] = 0;
   out_7997181526798158612[292] = 0;
   out_7997181526798158612[293] = 0;
   out_7997181526798158612[294] = 0;
   out_7997181526798158612[295] = 0;
   out_7997181526798158612[296] = 0;
   out_7997181526798158612[297] = 0;
   out_7997181526798158612[298] = 0;
   out_7997181526798158612[299] = 0;
   out_7997181526798158612[300] = 0;
   out_7997181526798158612[301] = 0;
   out_7997181526798158612[302] = 0;
   out_7997181526798158612[303] = 0;
   out_7997181526798158612[304] = 0;
   out_7997181526798158612[305] = 0;
   out_7997181526798158612[306] = 0;
   out_7997181526798158612[307] = 1.0;
   out_7997181526798158612[308] = 0;
   out_7997181526798158612[309] = 0;
   out_7997181526798158612[310] = 0;
   out_7997181526798158612[311] = 0;
   out_7997181526798158612[312] = 0;
   out_7997181526798158612[313] = 0;
   out_7997181526798158612[314] = 0;
   out_7997181526798158612[315] = 0;
   out_7997181526798158612[316] = 0;
   out_7997181526798158612[317] = 0;
   out_7997181526798158612[318] = 0;
   out_7997181526798158612[319] = 0;
   out_7997181526798158612[320] = 0;
   out_7997181526798158612[321] = 0;
   out_7997181526798158612[322] = 0;
   out_7997181526798158612[323] = 0;
   out_7997181526798158612[324] = 0;
   out_7997181526798158612[325] = 0;
   out_7997181526798158612[326] = 0;
   out_7997181526798158612[327] = 0;
   out_7997181526798158612[328] = 0;
   out_7997181526798158612[329] = 1.0;
   out_7997181526798158612[330] = 0;
   out_7997181526798158612[331] = 0;
   out_7997181526798158612[332] = 0;
   out_7997181526798158612[333] = 0;
   out_7997181526798158612[334] = 0;
   out_7997181526798158612[335] = 0;
   out_7997181526798158612[336] = 0;
   out_7997181526798158612[337] = 0;
   out_7997181526798158612[338] = 0;
   out_7997181526798158612[339] = 0;
   out_7997181526798158612[340] = 0;
   out_7997181526798158612[341] = 0;
   out_7997181526798158612[342] = 0;
   out_7997181526798158612[343] = 0;
   out_7997181526798158612[344] = 0;
   out_7997181526798158612[345] = 0;
   out_7997181526798158612[346] = 0;
   out_7997181526798158612[347] = 0;
   out_7997181526798158612[348] = 0;
   out_7997181526798158612[349] = 0;
   out_7997181526798158612[350] = 0;
   out_7997181526798158612[351] = 1.0;
   out_7997181526798158612[352] = 0;
   out_7997181526798158612[353] = 0;
   out_7997181526798158612[354] = 0;
   out_7997181526798158612[355] = 0;
   out_7997181526798158612[356] = 0;
   out_7997181526798158612[357] = 0;
   out_7997181526798158612[358] = 0;
   out_7997181526798158612[359] = 0;
   out_7997181526798158612[360] = 0;
   out_7997181526798158612[361] = 0;
   out_7997181526798158612[362] = 0;
   out_7997181526798158612[363] = 0;
   out_7997181526798158612[364] = 0;
   out_7997181526798158612[365] = 0;
   out_7997181526798158612[366] = 0;
   out_7997181526798158612[367] = 0;
   out_7997181526798158612[368] = 0;
   out_7997181526798158612[369] = 0;
   out_7997181526798158612[370] = 0;
   out_7997181526798158612[371] = 0;
   out_7997181526798158612[372] = 0;
   out_7997181526798158612[373] = 1.0;
   out_7997181526798158612[374] = 0;
   out_7997181526798158612[375] = 0;
   out_7997181526798158612[376] = 0;
   out_7997181526798158612[377] = 0;
   out_7997181526798158612[378] = 0;
   out_7997181526798158612[379] = 0;
   out_7997181526798158612[380] = 0;
   out_7997181526798158612[381] = 0;
   out_7997181526798158612[382] = 0;
   out_7997181526798158612[383] = 0;
   out_7997181526798158612[384] = 0;
   out_7997181526798158612[385] = 0;
   out_7997181526798158612[386] = 0;
   out_7997181526798158612[387] = 0;
   out_7997181526798158612[388] = 0;
   out_7997181526798158612[389] = 0;
   out_7997181526798158612[390] = 0;
   out_7997181526798158612[391] = 0;
   out_7997181526798158612[392] = 0;
   out_7997181526798158612[393] = 0;
   out_7997181526798158612[394] = 0;
   out_7997181526798158612[395] = 1.0;
   out_7997181526798158612[396] = 0;
   out_7997181526798158612[397] = 0;
   out_7997181526798158612[398] = 0;
   out_7997181526798158612[399] = 0;
   out_7997181526798158612[400] = 0;
   out_7997181526798158612[401] = 0;
   out_7997181526798158612[402] = 0;
   out_7997181526798158612[403] = 0;
   out_7997181526798158612[404] = 0;
   out_7997181526798158612[405] = 0;
   out_7997181526798158612[406] = 0;
   out_7997181526798158612[407] = 0;
   out_7997181526798158612[408] = 0;
   out_7997181526798158612[409] = 0;
   out_7997181526798158612[410] = 0;
   out_7997181526798158612[411] = 0;
   out_7997181526798158612[412] = 0;
   out_7997181526798158612[413] = 0;
   out_7997181526798158612[414] = 0;
   out_7997181526798158612[415] = 0;
   out_7997181526798158612[416] = 0;
   out_7997181526798158612[417] = 1.0;
   out_7997181526798158612[418] = 0;
   out_7997181526798158612[419] = 0;
   out_7997181526798158612[420] = 0;
   out_7997181526798158612[421] = 0;
   out_7997181526798158612[422] = 0;
   out_7997181526798158612[423] = 0;
   out_7997181526798158612[424] = 0;
   out_7997181526798158612[425] = 0;
   out_7997181526798158612[426] = 0;
   out_7997181526798158612[427] = 0;
   out_7997181526798158612[428] = 0;
   out_7997181526798158612[429] = 0;
   out_7997181526798158612[430] = 0;
   out_7997181526798158612[431] = 0;
   out_7997181526798158612[432] = 0;
   out_7997181526798158612[433] = 0;
   out_7997181526798158612[434] = 0;
   out_7997181526798158612[435] = 0;
   out_7997181526798158612[436] = 0;
   out_7997181526798158612[437] = 0;
   out_7997181526798158612[438] = 0;
   out_7997181526798158612[439] = 1.0;
   out_7997181526798158612[440] = 0;
   out_7997181526798158612[441] = 0;
   out_7997181526798158612[442] = 0;
   out_7997181526798158612[443] = 0;
   out_7997181526798158612[444] = 0;
   out_7997181526798158612[445] = 0;
   out_7997181526798158612[446] = 0;
   out_7997181526798158612[447] = 0;
   out_7997181526798158612[448] = 0;
   out_7997181526798158612[449] = 0;
   out_7997181526798158612[450] = 0;
   out_7997181526798158612[451] = 0;
   out_7997181526798158612[452] = 0;
   out_7997181526798158612[453] = 0;
   out_7997181526798158612[454] = 0;
   out_7997181526798158612[455] = 0;
   out_7997181526798158612[456] = 0;
   out_7997181526798158612[457] = 0;
   out_7997181526798158612[458] = 0;
   out_7997181526798158612[459] = 0;
   out_7997181526798158612[460] = 0;
   out_7997181526798158612[461] = 1.0;
}
void f_fun(double *state, double dt, double *out_3066042608104121567) {
   out_3066042608104121567[0] = dt*state[7] + state[0];
   out_3066042608104121567[1] = dt*state[8] + state[1];
   out_3066042608104121567[2] = dt*state[9] + state[2];
   out_3066042608104121567[3] = dt*(-0.5*state[4]*state[10] - 0.5*state[5]*state[11] - 0.5*state[6]*state[12]) + state[3];
   out_3066042608104121567[4] = dt*(0.5*state[3]*state[10] + 0.5*state[5]*state[12] - 0.5*state[6]*state[11]) + state[4];
   out_3066042608104121567[5] = dt*(0.5*state[3]*state[11] - 0.5*state[4]*state[12] + 0.5*state[6]*state[10]) + state[5];
   out_3066042608104121567[6] = dt*(0.5*state[3]*state[12] + 0.5*state[4]*state[11] - 0.5*state[5]*state[10]) + state[6];
   out_3066042608104121567[7] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]) + state[7];
   out_3066042608104121567[8] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]) + state[8];
   out_3066042608104121567[9] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]) + state[9];
   out_3066042608104121567[10] = state[10];
   out_3066042608104121567[11] = state[11];
   out_3066042608104121567[12] = state[12];
   out_3066042608104121567[13] = state[13];
   out_3066042608104121567[14] = state[14];
   out_3066042608104121567[15] = state[15];
   out_3066042608104121567[16] = state[16];
   out_3066042608104121567[17] = state[17];
   out_3066042608104121567[18] = state[18];
   out_3066042608104121567[19] = state[19];
   out_3066042608104121567[20] = state[20];
   out_3066042608104121567[21] = state[21];
}
void F_fun(double *state, double dt, double *out_8605529000356905395) {
   out_8605529000356905395[0] = 1;
   out_8605529000356905395[1] = 0;
   out_8605529000356905395[2] = 0;
   out_8605529000356905395[3] = 0;
   out_8605529000356905395[4] = 0;
   out_8605529000356905395[5] = 0;
   out_8605529000356905395[6] = dt;
   out_8605529000356905395[7] = 0;
   out_8605529000356905395[8] = 0;
   out_8605529000356905395[9] = 0;
   out_8605529000356905395[10] = 0;
   out_8605529000356905395[11] = 0;
   out_8605529000356905395[12] = 0;
   out_8605529000356905395[13] = 0;
   out_8605529000356905395[14] = 0;
   out_8605529000356905395[15] = 0;
   out_8605529000356905395[16] = 0;
   out_8605529000356905395[17] = 0;
   out_8605529000356905395[18] = 0;
   out_8605529000356905395[19] = 0;
   out_8605529000356905395[20] = 0;
   out_8605529000356905395[21] = 0;
   out_8605529000356905395[22] = 1;
   out_8605529000356905395[23] = 0;
   out_8605529000356905395[24] = 0;
   out_8605529000356905395[25] = 0;
   out_8605529000356905395[26] = 0;
   out_8605529000356905395[27] = 0;
   out_8605529000356905395[28] = dt;
   out_8605529000356905395[29] = 0;
   out_8605529000356905395[30] = 0;
   out_8605529000356905395[31] = 0;
   out_8605529000356905395[32] = 0;
   out_8605529000356905395[33] = 0;
   out_8605529000356905395[34] = 0;
   out_8605529000356905395[35] = 0;
   out_8605529000356905395[36] = 0;
   out_8605529000356905395[37] = 0;
   out_8605529000356905395[38] = 0;
   out_8605529000356905395[39] = 0;
   out_8605529000356905395[40] = 0;
   out_8605529000356905395[41] = 0;
   out_8605529000356905395[42] = 0;
   out_8605529000356905395[43] = 0;
   out_8605529000356905395[44] = 1;
   out_8605529000356905395[45] = 0;
   out_8605529000356905395[46] = 0;
   out_8605529000356905395[47] = 0;
   out_8605529000356905395[48] = 0;
   out_8605529000356905395[49] = 0;
   out_8605529000356905395[50] = dt;
   out_8605529000356905395[51] = 0;
   out_8605529000356905395[52] = 0;
   out_8605529000356905395[53] = 0;
   out_8605529000356905395[54] = 0;
   out_8605529000356905395[55] = 0;
   out_8605529000356905395[56] = 0;
   out_8605529000356905395[57] = 0;
   out_8605529000356905395[58] = 0;
   out_8605529000356905395[59] = 0;
   out_8605529000356905395[60] = 0;
   out_8605529000356905395[61] = 0;
   out_8605529000356905395[62] = 0;
   out_8605529000356905395[63] = 0;
   out_8605529000356905395[64] = 0;
   out_8605529000356905395[65] = 0;
   out_8605529000356905395[66] = 1;
   out_8605529000356905395[67] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[11] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_8605529000356905395[68] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[12] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[10] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[11]);
   out_8605529000356905395[69] = 0;
   out_8605529000356905395[70] = 0;
   out_8605529000356905395[71] = 0;
   out_8605529000356905395[72] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_8605529000356905395[73] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_8605529000356905395[74] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_8605529000356905395[75] = 0;
   out_8605529000356905395[76] = 0;
   out_8605529000356905395[77] = 0;
   out_8605529000356905395[78] = 0;
   out_8605529000356905395[79] = 0;
   out_8605529000356905395[80] = 0;
   out_8605529000356905395[81] = 0;
   out_8605529000356905395[82] = 0;
   out_8605529000356905395[83] = 0;
   out_8605529000356905395[84] = 0;
   out_8605529000356905395[85] = 0;
   out_8605529000356905395[86] = 0;
   out_8605529000356905395[87] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[11] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_8605529000356905395[88] = 1;
   out_8605529000356905395[89] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[12] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[11] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[10]);
   out_8605529000356905395[90] = 0;
   out_8605529000356905395[91] = 0;
   out_8605529000356905395[92] = 0;
   out_8605529000356905395[93] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_8605529000356905395[94] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_8605529000356905395[95] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_8605529000356905395[96] = 0;
   out_8605529000356905395[97] = 0;
   out_8605529000356905395[98] = 0;
   out_8605529000356905395[99] = 0;
   out_8605529000356905395[100] = 0;
   out_8605529000356905395[101] = 0;
   out_8605529000356905395[102] = 0;
   out_8605529000356905395[103] = 0;
   out_8605529000356905395[104] = 0;
   out_8605529000356905395[105] = 0;
   out_8605529000356905395[106] = 0;
   out_8605529000356905395[107] = 0;
   out_8605529000356905395[108] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[12] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[10] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[11]);
   out_8605529000356905395[109] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[12] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[11] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[10]);
   out_8605529000356905395[110] = 1;
   out_8605529000356905395[111] = 0;
   out_8605529000356905395[112] = 0;
   out_8605529000356905395[113] = 0;
   out_8605529000356905395[114] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_8605529000356905395[115] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_8605529000356905395[116] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_8605529000356905395[117] = 0;
   out_8605529000356905395[118] = 0;
   out_8605529000356905395[119] = 0;
   out_8605529000356905395[120] = 0;
   out_8605529000356905395[121] = 0;
   out_8605529000356905395[122] = 0;
   out_8605529000356905395[123] = 0;
   out_8605529000356905395[124] = 0;
   out_8605529000356905395[125] = 0;
   out_8605529000356905395[126] = 0;
   out_8605529000356905395[127] = 0;
   out_8605529000356905395[128] = 0;
   out_8605529000356905395[129] = 0;
   out_8605529000356905395[130] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_8605529000356905395[131] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[18] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[16] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[17]);
   out_8605529000356905395[132] = 1;
   out_8605529000356905395[133] = 0;
   out_8605529000356905395[134] = 0;
   out_8605529000356905395[135] = 0;
   out_8605529000356905395[136] = 0;
   out_8605529000356905395[137] = 0;
   out_8605529000356905395[138] = 0;
   out_8605529000356905395[139] = 0;
   out_8605529000356905395[140] = 0;
   out_8605529000356905395[141] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_8605529000356905395[142] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_8605529000356905395[143] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_8605529000356905395[144] = 0;
   out_8605529000356905395[145] = 0;
   out_8605529000356905395[146] = 0;
   out_8605529000356905395[147] = 0;
   out_8605529000356905395[148] = 0;
   out_8605529000356905395[149] = 0;
   out_8605529000356905395[150] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[17] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_8605529000356905395[151] = 0;
   out_8605529000356905395[152] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]);
   out_8605529000356905395[153] = 0;
   out_8605529000356905395[154] = 1;
   out_8605529000356905395[155] = 0;
   out_8605529000356905395[156] = 0;
   out_8605529000356905395[157] = 0;
   out_8605529000356905395[158] = 0;
   out_8605529000356905395[159] = 0;
   out_8605529000356905395[160] = 0;
   out_8605529000356905395[161] = 0;
   out_8605529000356905395[162] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_8605529000356905395[163] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_8605529000356905395[164] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_8605529000356905395[165] = 0;
   out_8605529000356905395[166] = 0;
   out_8605529000356905395[167] = 0;
   out_8605529000356905395[168] = 0;
   out_8605529000356905395[169] = 0;
   out_8605529000356905395[170] = 0;
   out_8605529000356905395[171] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]);
   out_8605529000356905395[172] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[18] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[17] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[16]);
   out_8605529000356905395[173] = 0;
   out_8605529000356905395[174] = 0;
   out_8605529000356905395[175] = 0;
   out_8605529000356905395[176] = 1;
   out_8605529000356905395[177] = 0;
   out_8605529000356905395[178] = 0;
   out_8605529000356905395[179] = 0;
   out_8605529000356905395[180] = 0;
   out_8605529000356905395[181] = 0;
   out_8605529000356905395[182] = 0;
   out_8605529000356905395[183] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_8605529000356905395[184] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_8605529000356905395[185] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_8605529000356905395[186] = 0;
   out_8605529000356905395[187] = 0;
   out_8605529000356905395[188] = 0;
   out_8605529000356905395[189] = 0;
   out_8605529000356905395[190] = 0;
   out_8605529000356905395[191] = 0;
   out_8605529000356905395[192] = 0;
   out_8605529000356905395[193] = 0;
   out_8605529000356905395[194] = 0;
   out_8605529000356905395[195] = 0;
   out_8605529000356905395[196] = 0;
   out_8605529000356905395[197] = 0;
   out_8605529000356905395[198] = 1;
   out_8605529000356905395[199] = 0;
   out_8605529000356905395[200] = 0;
   out_8605529000356905395[201] = 0;
   out_8605529000356905395[202] = 0;
   out_8605529000356905395[203] = 0;
   out_8605529000356905395[204] = 0;
   out_8605529000356905395[205] = 0;
   out_8605529000356905395[206] = 0;
   out_8605529000356905395[207] = 0;
   out_8605529000356905395[208] = 0;
   out_8605529000356905395[209] = 0;
   out_8605529000356905395[210] = 0;
   out_8605529000356905395[211] = 0;
   out_8605529000356905395[212] = 0;
   out_8605529000356905395[213] = 0;
   out_8605529000356905395[214] = 0;
   out_8605529000356905395[215] = 0;
   out_8605529000356905395[216] = 0;
   out_8605529000356905395[217] = 0;
   out_8605529000356905395[218] = 0;
   out_8605529000356905395[219] = 0;
   out_8605529000356905395[220] = 1;
   out_8605529000356905395[221] = 0;
   out_8605529000356905395[222] = 0;
   out_8605529000356905395[223] = 0;
   out_8605529000356905395[224] = 0;
   out_8605529000356905395[225] = 0;
   out_8605529000356905395[226] = 0;
   out_8605529000356905395[227] = 0;
   out_8605529000356905395[228] = 0;
   out_8605529000356905395[229] = 0;
   out_8605529000356905395[230] = 0;
   out_8605529000356905395[231] = 0;
   out_8605529000356905395[232] = 0;
   out_8605529000356905395[233] = 0;
   out_8605529000356905395[234] = 0;
   out_8605529000356905395[235] = 0;
   out_8605529000356905395[236] = 0;
   out_8605529000356905395[237] = 0;
   out_8605529000356905395[238] = 0;
   out_8605529000356905395[239] = 0;
   out_8605529000356905395[240] = 0;
   out_8605529000356905395[241] = 0;
   out_8605529000356905395[242] = 1;
   out_8605529000356905395[243] = 0;
   out_8605529000356905395[244] = 0;
   out_8605529000356905395[245] = 0;
   out_8605529000356905395[246] = 0;
   out_8605529000356905395[247] = 0;
   out_8605529000356905395[248] = 0;
   out_8605529000356905395[249] = 0;
   out_8605529000356905395[250] = 0;
   out_8605529000356905395[251] = 0;
   out_8605529000356905395[252] = 0;
   out_8605529000356905395[253] = 0;
   out_8605529000356905395[254] = 0;
   out_8605529000356905395[255] = 0;
   out_8605529000356905395[256] = 0;
   out_8605529000356905395[257] = 0;
   out_8605529000356905395[258] = 0;
   out_8605529000356905395[259] = 0;
   out_8605529000356905395[260] = 0;
   out_8605529000356905395[261] = 0;
   out_8605529000356905395[262] = 0;
   out_8605529000356905395[263] = 0;
   out_8605529000356905395[264] = 1;
   out_8605529000356905395[265] = 0;
   out_8605529000356905395[266] = 0;
   out_8605529000356905395[267] = 0;
   out_8605529000356905395[268] = 0;
   out_8605529000356905395[269] = 0;
   out_8605529000356905395[270] = 0;
   out_8605529000356905395[271] = 0;
   out_8605529000356905395[272] = 0;
   out_8605529000356905395[273] = 0;
   out_8605529000356905395[274] = 0;
   out_8605529000356905395[275] = 0;
   out_8605529000356905395[276] = 0;
   out_8605529000356905395[277] = 0;
   out_8605529000356905395[278] = 0;
   out_8605529000356905395[279] = 0;
   out_8605529000356905395[280] = 0;
   out_8605529000356905395[281] = 0;
   out_8605529000356905395[282] = 0;
   out_8605529000356905395[283] = 0;
   out_8605529000356905395[284] = 0;
   out_8605529000356905395[285] = 0;
   out_8605529000356905395[286] = 1;
   out_8605529000356905395[287] = 0;
   out_8605529000356905395[288] = 0;
   out_8605529000356905395[289] = 0;
   out_8605529000356905395[290] = 0;
   out_8605529000356905395[291] = 0;
   out_8605529000356905395[292] = 0;
   out_8605529000356905395[293] = 0;
   out_8605529000356905395[294] = 0;
   out_8605529000356905395[295] = 0;
   out_8605529000356905395[296] = 0;
   out_8605529000356905395[297] = 0;
   out_8605529000356905395[298] = 0;
   out_8605529000356905395[299] = 0;
   out_8605529000356905395[300] = 0;
   out_8605529000356905395[301] = 0;
   out_8605529000356905395[302] = 0;
   out_8605529000356905395[303] = 0;
   out_8605529000356905395[304] = 0;
   out_8605529000356905395[305] = 0;
   out_8605529000356905395[306] = 0;
   out_8605529000356905395[307] = 0;
   out_8605529000356905395[308] = 1;
   out_8605529000356905395[309] = 0;
   out_8605529000356905395[310] = 0;
   out_8605529000356905395[311] = 0;
   out_8605529000356905395[312] = 0;
   out_8605529000356905395[313] = 0;
   out_8605529000356905395[314] = 0;
   out_8605529000356905395[315] = 0;
   out_8605529000356905395[316] = 0;
   out_8605529000356905395[317] = 0;
   out_8605529000356905395[318] = 0;
   out_8605529000356905395[319] = 0;
   out_8605529000356905395[320] = 0;
   out_8605529000356905395[321] = 0;
   out_8605529000356905395[322] = 0;
   out_8605529000356905395[323] = 0;
   out_8605529000356905395[324] = 0;
   out_8605529000356905395[325] = 0;
   out_8605529000356905395[326] = 0;
   out_8605529000356905395[327] = 0;
   out_8605529000356905395[328] = 0;
   out_8605529000356905395[329] = 0;
   out_8605529000356905395[330] = 1;
   out_8605529000356905395[331] = 0;
   out_8605529000356905395[332] = 0;
   out_8605529000356905395[333] = 0;
   out_8605529000356905395[334] = 0;
   out_8605529000356905395[335] = 0;
   out_8605529000356905395[336] = 0;
   out_8605529000356905395[337] = 0;
   out_8605529000356905395[338] = 0;
   out_8605529000356905395[339] = 0;
   out_8605529000356905395[340] = 0;
   out_8605529000356905395[341] = 0;
   out_8605529000356905395[342] = 0;
   out_8605529000356905395[343] = 0;
   out_8605529000356905395[344] = 0;
   out_8605529000356905395[345] = 0;
   out_8605529000356905395[346] = 0;
   out_8605529000356905395[347] = 0;
   out_8605529000356905395[348] = 0;
   out_8605529000356905395[349] = 0;
   out_8605529000356905395[350] = 0;
   out_8605529000356905395[351] = 0;
   out_8605529000356905395[352] = 1;
   out_8605529000356905395[353] = 0;
   out_8605529000356905395[354] = 0;
   out_8605529000356905395[355] = 0;
   out_8605529000356905395[356] = 0;
   out_8605529000356905395[357] = 0;
   out_8605529000356905395[358] = 0;
   out_8605529000356905395[359] = 0;
   out_8605529000356905395[360] = 0;
   out_8605529000356905395[361] = 0;
   out_8605529000356905395[362] = 0;
   out_8605529000356905395[363] = 0;
   out_8605529000356905395[364] = 0;
   out_8605529000356905395[365] = 0;
   out_8605529000356905395[366] = 0;
   out_8605529000356905395[367] = 0;
   out_8605529000356905395[368] = 0;
   out_8605529000356905395[369] = 0;
   out_8605529000356905395[370] = 0;
   out_8605529000356905395[371] = 0;
   out_8605529000356905395[372] = 0;
   out_8605529000356905395[373] = 0;
   out_8605529000356905395[374] = 1;
   out_8605529000356905395[375] = 0;
   out_8605529000356905395[376] = 0;
   out_8605529000356905395[377] = 0;
   out_8605529000356905395[378] = 0;
   out_8605529000356905395[379] = 0;
   out_8605529000356905395[380] = 0;
   out_8605529000356905395[381] = 0;
   out_8605529000356905395[382] = 0;
   out_8605529000356905395[383] = 0;
   out_8605529000356905395[384] = 0;
   out_8605529000356905395[385] = 0;
   out_8605529000356905395[386] = 0;
   out_8605529000356905395[387] = 0;
   out_8605529000356905395[388] = 0;
   out_8605529000356905395[389] = 0;
   out_8605529000356905395[390] = 0;
   out_8605529000356905395[391] = 0;
   out_8605529000356905395[392] = 0;
   out_8605529000356905395[393] = 0;
   out_8605529000356905395[394] = 0;
   out_8605529000356905395[395] = 0;
   out_8605529000356905395[396] = 1;
   out_8605529000356905395[397] = 0;
   out_8605529000356905395[398] = 0;
   out_8605529000356905395[399] = 0;
   out_8605529000356905395[400] = 0;
   out_8605529000356905395[401] = 0;
   out_8605529000356905395[402] = 0;
   out_8605529000356905395[403] = 0;
   out_8605529000356905395[404] = 0;
   out_8605529000356905395[405] = 0;
   out_8605529000356905395[406] = 0;
   out_8605529000356905395[407] = 0;
   out_8605529000356905395[408] = 0;
   out_8605529000356905395[409] = 0;
   out_8605529000356905395[410] = 0;
   out_8605529000356905395[411] = 0;
   out_8605529000356905395[412] = 0;
   out_8605529000356905395[413] = 0;
   out_8605529000356905395[414] = 0;
   out_8605529000356905395[415] = 0;
   out_8605529000356905395[416] = 0;
   out_8605529000356905395[417] = 0;
   out_8605529000356905395[418] = 1;
   out_8605529000356905395[419] = 0;
   out_8605529000356905395[420] = 0;
   out_8605529000356905395[421] = 0;
   out_8605529000356905395[422] = 0;
   out_8605529000356905395[423] = 0;
   out_8605529000356905395[424] = 0;
   out_8605529000356905395[425] = 0;
   out_8605529000356905395[426] = 0;
   out_8605529000356905395[427] = 0;
   out_8605529000356905395[428] = 0;
   out_8605529000356905395[429] = 0;
   out_8605529000356905395[430] = 0;
   out_8605529000356905395[431] = 0;
   out_8605529000356905395[432] = 0;
   out_8605529000356905395[433] = 0;
   out_8605529000356905395[434] = 0;
   out_8605529000356905395[435] = 0;
   out_8605529000356905395[436] = 0;
   out_8605529000356905395[437] = 0;
   out_8605529000356905395[438] = 0;
   out_8605529000356905395[439] = 0;
   out_8605529000356905395[440] = 1;
}
void h_4(double *state, double *unused, double *out_6159501292472234061) {
   out_6159501292472234061[0] = state[10] + state[13];
   out_6159501292472234061[1] = state[11] + state[14];
   out_6159501292472234061[2] = state[12] + state[15];
}
void H_4(double *state, double *unused, double *out_2291725580751699448) {
   out_2291725580751699448[0] = 0;
   out_2291725580751699448[1] = 0;
   out_2291725580751699448[2] = 0;
   out_2291725580751699448[3] = 0;
   out_2291725580751699448[4] = 0;
   out_2291725580751699448[5] = 0;
   out_2291725580751699448[6] = 0;
   out_2291725580751699448[7] = 0;
   out_2291725580751699448[8] = 0;
   out_2291725580751699448[9] = 0;
   out_2291725580751699448[10] = 1;
   out_2291725580751699448[11] = 0;
   out_2291725580751699448[12] = 0;
   out_2291725580751699448[13] = 1;
   out_2291725580751699448[14] = 0;
   out_2291725580751699448[15] = 0;
   out_2291725580751699448[16] = 0;
   out_2291725580751699448[17] = 0;
   out_2291725580751699448[18] = 0;
   out_2291725580751699448[19] = 0;
   out_2291725580751699448[20] = 0;
   out_2291725580751699448[21] = 0;
   out_2291725580751699448[22] = 0;
   out_2291725580751699448[23] = 0;
   out_2291725580751699448[24] = 0;
   out_2291725580751699448[25] = 0;
   out_2291725580751699448[26] = 0;
   out_2291725580751699448[27] = 0;
   out_2291725580751699448[28] = 0;
   out_2291725580751699448[29] = 0;
   out_2291725580751699448[30] = 0;
   out_2291725580751699448[31] = 0;
   out_2291725580751699448[32] = 0;
   out_2291725580751699448[33] = 1;
   out_2291725580751699448[34] = 0;
   out_2291725580751699448[35] = 0;
   out_2291725580751699448[36] = 1;
   out_2291725580751699448[37] = 0;
   out_2291725580751699448[38] = 0;
   out_2291725580751699448[39] = 0;
   out_2291725580751699448[40] = 0;
   out_2291725580751699448[41] = 0;
   out_2291725580751699448[42] = 0;
   out_2291725580751699448[43] = 0;
   out_2291725580751699448[44] = 0;
   out_2291725580751699448[45] = 0;
   out_2291725580751699448[46] = 0;
   out_2291725580751699448[47] = 0;
   out_2291725580751699448[48] = 0;
   out_2291725580751699448[49] = 0;
   out_2291725580751699448[50] = 0;
   out_2291725580751699448[51] = 0;
   out_2291725580751699448[52] = 0;
   out_2291725580751699448[53] = 0;
   out_2291725580751699448[54] = 0;
   out_2291725580751699448[55] = 0;
   out_2291725580751699448[56] = 1;
   out_2291725580751699448[57] = 0;
   out_2291725580751699448[58] = 0;
   out_2291725580751699448[59] = 1;
   out_2291725580751699448[60] = 0;
   out_2291725580751699448[61] = 0;
   out_2291725580751699448[62] = 0;
   out_2291725580751699448[63] = 0;
   out_2291725580751699448[64] = 0;
   out_2291725580751699448[65] = 0;
}
void h_9(double *state, double *unused, double *out_4339029020216426785) {
   out_4339029020216426785[0] = state[10];
   out_4339029020216426785[1] = state[11];
   out_4339029020216426785[2] = state[12];
}
void H_9(double *state, double *unused, double *out_597135971528379894) {
   out_597135971528379894[0] = 0;
   out_597135971528379894[1] = 0;
   out_597135971528379894[2] = 0;
   out_597135971528379894[3] = 0;
   out_597135971528379894[4] = 0;
   out_597135971528379894[5] = 0;
   out_597135971528379894[6] = 0;
   out_597135971528379894[7] = 0;
   out_597135971528379894[8] = 0;
   out_597135971528379894[9] = 0;
   out_597135971528379894[10] = 1;
   out_597135971528379894[11] = 0;
   out_597135971528379894[12] = 0;
   out_597135971528379894[13] = 0;
   out_597135971528379894[14] = 0;
   out_597135971528379894[15] = 0;
   out_597135971528379894[16] = 0;
   out_597135971528379894[17] = 0;
   out_597135971528379894[18] = 0;
   out_597135971528379894[19] = 0;
   out_597135971528379894[20] = 0;
   out_597135971528379894[21] = 0;
   out_597135971528379894[22] = 0;
   out_597135971528379894[23] = 0;
   out_597135971528379894[24] = 0;
   out_597135971528379894[25] = 0;
   out_597135971528379894[26] = 0;
   out_597135971528379894[27] = 0;
   out_597135971528379894[28] = 0;
   out_597135971528379894[29] = 0;
   out_597135971528379894[30] = 0;
   out_597135971528379894[31] = 0;
   out_597135971528379894[32] = 0;
   out_597135971528379894[33] = 1;
   out_597135971528379894[34] = 0;
   out_597135971528379894[35] = 0;
   out_597135971528379894[36] = 0;
   out_597135971528379894[37] = 0;
   out_597135971528379894[38] = 0;
   out_597135971528379894[39] = 0;
   out_597135971528379894[40] = 0;
   out_597135971528379894[41] = 0;
   out_597135971528379894[42] = 0;
   out_597135971528379894[43] = 0;
   out_597135971528379894[44] = 0;
   out_597135971528379894[45] = 0;
   out_597135971528379894[46] = 0;
   out_597135971528379894[47] = 0;
   out_597135971528379894[48] = 0;
   out_597135971528379894[49] = 0;
   out_597135971528379894[50] = 0;
   out_597135971528379894[51] = 0;
   out_597135971528379894[52] = 0;
   out_597135971528379894[53] = 0;
   out_597135971528379894[54] = 0;
   out_597135971528379894[55] = 0;
   out_597135971528379894[56] = 1;
   out_597135971528379894[57] = 0;
   out_597135971528379894[58] = 0;
   out_597135971528379894[59] = 0;
   out_597135971528379894[60] = 0;
   out_597135971528379894[61] = 0;
   out_597135971528379894[62] = 0;
   out_597135971528379894[63] = 0;
   out_597135971528379894[64] = 0;
   out_597135971528379894[65] = 0;
}
void h_10(double *state, double *unused, double *out_5141291368581977495) {
   out_5141291368581977495[0] = 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0] + state[16] + state[19];
   out_5141291368581977495[1] = 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1] + state[17] + state[20];
   out_5141291368581977495[2] = 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[2] + state[18] + state[21];
}
void H_10(double *state, double *unused, double *out_1583748810162691809) {
   out_1583748810162691809[0] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*pow(state[0], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_1583748810162691809[1] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_1583748810162691809[2] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[2];
   out_1583748810162691809[3] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_1583748810162691809[4] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_1583748810162691809[5] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_1583748810162691809[6] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_1583748810162691809[7] = 0;
   out_1583748810162691809[8] = 0;
   out_1583748810162691809[9] = 0;
   out_1583748810162691809[10] = 0;
   out_1583748810162691809[11] = 0;
   out_1583748810162691809[12] = 0;
   out_1583748810162691809[13] = 0;
   out_1583748810162691809[14] = 0;
   out_1583748810162691809[15] = 0;
   out_1583748810162691809[16] = 1;
   out_1583748810162691809[17] = 0;
   out_1583748810162691809[18] = 0;
   out_1583748810162691809[19] = 1;
   out_1583748810162691809[20] = 0;
   out_1583748810162691809[21] = 0;
   out_1583748810162691809[22] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_1583748810162691809[23] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*pow(state[1], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_1583748810162691809[24] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1]*state[2];
   out_1583748810162691809[25] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_1583748810162691809[26] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_1583748810162691809[27] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_1583748810162691809[28] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_1583748810162691809[29] = 0;
   out_1583748810162691809[30] = 0;
   out_1583748810162691809[31] = 0;
   out_1583748810162691809[32] = 0;
   out_1583748810162691809[33] = 0;
   out_1583748810162691809[34] = 0;
   out_1583748810162691809[35] = 0;
   out_1583748810162691809[36] = 0;
   out_1583748810162691809[37] = 0;
   out_1583748810162691809[38] = 0;
   out_1583748810162691809[39] = 1;
   out_1583748810162691809[40] = 0;
   out_1583748810162691809[41] = 0;
   out_1583748810162691809[42] = 1;
   out_1583748810162691809[43] = 0;
   out_1583748810162691809[44] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[0]*state[2];
   out_1583748810162691809[45] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[1]*state[2];
   out_1583748810162691809[46] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*pow(state[2], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_1583748810162691809[47] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_1583748810162691809[48] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_1583748810162691809[49] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_1583748810162691809[50] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_1583748810162691809[51] = 0;
   out_1583748810162691809[52] = 0;
   out_1583748810162691809[53] = 0;
   out_1583748810162691809[54] = 0;
   out_1583748810162691809[55] = 0;
   out_1583748810162691809[56] = 0;
   out_1583748810162691809[57] = 0;
   out_1583748810162691809[58] = 0;
   out_1583748810162691809[59] = 0;
   out_1583748810162691809[60] = 0;
   out_1583748810162691809[61] = 0;
   out_1583748810162691809[62] = 1;
   out_1583748810162691809[63] = 0;
   out_1583748810162691809[64] = 0;
   out_1583748810162691809[65] = 1;
}
void h_12(double *state, double *unused, double *out_695883697721345826) {
   out_695883697721345826[0] = state[0];
   out_695883697721345826[1] = state[1];
   out_695883697721345826[2] = state[2];
}
void H_12(double *state, double *unused, double *out_1670626555704105781) {
   out_1670626555704105781[0] = 1;
   out_1670626555704105781[1] = 0;
   out_1670626555704105781[2] = 0;
   out_1670626555704105781[3] = 0;
   out_1670626555704105781[4] = 0;
   out_1670626555704105781[5] = 0;
   out_1670626555704105781[6] = 0;
   out_1670626555704105781[7] = 0;
   out_1670626555704105781[8] = 0;
   out_1670626555704105781[9] = 0;
   out_1670626555704105781[10] = 0;
   out_1670626555704105781[11] = 0;
   out_1670626555704105781[12] = 0;
   out_1670626555704105781[13] = 0;
   out_1670626555704105781[14] = 0;
   out_1670626555704105781[15] = 0;
   out_1670626555704105781[16] = 0;
   out_1670626555704105781[17] = 0;
   out_1670626555704105781[18] = 0;
   out_1670626555704105781[19] = 0;
   out_1670626555704105781[20] = 0;
   out_1670626555704105781[21] = 0;
   out_1670626555704105781[22] = 0;
   out_1670626555704105781[23] = 1;
   out_1670626555704105781[24] = 0;
   out_1670626555704105781[25] = 0;
   out_1670626555704105781[26] = 0;
   out_1670626555704105781[27] = 0;
   out_1670626555704105781[28] = 0;
   out_1670626555704105781[29] = 0;
   out_1670626555704105781[30] = 0;
   out_1670626555704105781[31] = 0;
   out_1670626555704105781[32] = 0;
   out_1670626555704105781[33] = 0;
   out_1670626555704105781[34] = 0;
   out_1670626555704105781[35] = 0;
   out_1670626555704105781[36] = 0;
   out_1670626555704105781[37] = 0;
   out_1670626555704105781[38] = 0;
   out_1670626555704105781[39] = 0;
   out_1670626555704105781[40] = 0;
   out_1670626555704105781[41] = 0;
   out_1670626555704105781[42] = 0;
   out_1670626555704105781[43] = 0;
   out_1670626555704105781[44] = 0;
   out_1670626555704105781[45] = 0;
   out_1670626555704105781[46] = 1;
   out_1670626555704105781[47] = 0;
   out_1670626555704105781[48] = 0;
   out_1670626555704105781[49] = 0;
   out_1670626555704105781[50] = 0;
   out_1670626555704105781[51] = 0;
   out_1670626555704105781[52] = 0;
   out_1670626555704105781[53] = 0;
   out_1670626555704105781[54] = 0;
   out_1670626555704105781[55] = 0;
   out_1670626555704105781[56] = 0;
   out_1670626555704105781[57] = 0;
   out_1670626555704105781[58] = 0;
   out_1670626555704105781[59] = 0;
   out_1670626555704105781[60] = 0;
   out_1670626555704105781[61] = 0;
   out_1670626555704105781[62] = 0;
   out_1670626555704105781[63] = 0;
   out_1670626555704105781[64] = 0;
   out_1670626555704105781[65] = 0;
}
void h_35(double *state, double *unused, double *out_1687815605272843674) {
   out_1687815605272843674[0] = state[7];
   out_1687815605272843674[1] = state[8];
   out_1687815605272843674[2] = state[9];
}
void H_35(double *state, double *unused, double *out_1074936476620907928) {
   out_1074936476620907928[0] = 0;
   out_1074936476620907928[1] = 0;
   out_1074936476620907928[2] = 0;
   out_1074936476620907928[3] = 0;
   out_1074936476620907928[4] = 0;
   out_1074936476620907928[5] = 0;
   out_1074936476620907928[6] = 0;
   out_1074936476620907928[7] = 1;
   out_1074936476620907928[8] = 0;
   out_1074936476620907928[9] = 0;
   out_1074936476620907928[10] = 0;
   out_1074936476620907928[11] = 0;
   out_1074936476620907928[12] = 0;
   out_1074936476620907928[13] = 0;
   out_1074936476620907928[14] = 0;
   out_1074936476620907928[15] = 0;
   out_1074936476620907928[16] = 0;
   out_1074936476620907928[17] = 0;
   out_1074936476620907928[18] = 0;
   out_1074936476620907928[19] = 0;
   out_1074936476620907928[20] = 0;
   out_1074936476620907928[21] = 0;
   out_1074936476620907928[22] = 0;
   out_1074936476620907928[23] = 0;
   out_1074936476620907928[24] = 0;
   out_1074936476620907928[25] = 0;
   out_1074936476620907928[26] = 0;
   out_1074936476620907928[27] = 0;
   out_1074936476620907928[28] = 0;
   out_1074936476620907928[29] = 0;
   out_1074936476620907928[30] = 1;
   out_1074936476620907928[31] = 0;
   out_1074936476620907928[32] = 0;
   out_1074936476620907928[33] = 0;
   out_1074936476620907928[34] = 0;
   out_1074936476620907928[35] = 0;
   out_1074936476620907928[36] = 0;
   out_1074936476620907928[37] = 0;
   out_1074936476620907928[38] = 0;
   out_1074936476620907928[39] = 0;
   out_1074936476620907928[40] = 0;
   out_1074936476620907928[41] = 0;
   out_1074936476620907928[42] = 0;
   out_1074936476620907928[43] = 0;
   out_1074936476620907928[44] = 0;
   out_1074936476620907928[45] = 0;
   out_1074936476620907928[46] = 0;
   out_1074936476620907928[47] = 0;
   out_1074936476620907928[48] = 0;
   out_1074936476620907928[49] = 0;
   out_1074936476620907928[50] = 0;
   out_1074936476620907928[51] = 0;
   out_1074936476620907928[52] = 0;
   out_1074936476620907928[53] = 1;
   out_1074936476620907928[54] = 0;
   out_1074936476620907928[55] = 0;
   out_1074936476620907928[56] = 0;
   out_1074936476620907928[57] = 0;
   out_1074936476620907928[58] = 0;
   out_1074936476620907928[59] = 0;
   out_1074936476620907928[60] = 0;
   out_1074936476620907928[61] = 0;
   out_1074936476620907928[62] = 0;
   out_1074936476620907928[63] = 0;
   out_1074936476620907928[64] = 0;
   out_1074936476620907928[65] = 0;
}
void h_32(double *state, double *unused, double *out_7350235652885900174) {
   out_7350235652885900174[0] = state[3];
   out_7350235652885900174[1] = state[4];
   out_7350235652885900174[2] = state[5];
   out_7350235652885900174[3] = state[6];
}
void H_32(double *state, double *unused, double *out_7542120144035369270) {
   out_7542120144035369270[0] = 0;
   out_7542120144035369270[1] = 0;
   out_7542120144035369270[2] = 0;
   out_7542120144035369270[3] = 1;
   out_7542120144035369270[4] = 0;
   out_7542120144035369270[5] = 0;
   out_7542120144035369270[6] = 0;
   out_7542120144035369270[7] = 0;
   out_7542120144035369270[8] = 0;
   out_7542120144035369270[9] = 0;
   out_7542120144035369270[10] = 0;
   out_7542120144035369270[11] = 0;
   out_7542120144035369270[12] = 0;
   out_7542120144035369270[13] = 0;
   out_7542120144035369270[14] = 0;
   out_7542120144035369270[15] = 0;
   out_7542120144035369270[16] = 0;
   out_7542120144035369270[17] = 0;
   out_7542120144035369270[18] = 0;
   out_7542120144035369270[19] = 0;
   out_7542120144035369270[20] = 0;
   out_7542120144035369270[21] = 0;
   out_7542120144035369270[22] = 0;
   out_7542120144035369270[23] = 0;
   out_7542120144035369270[24] = 0;
   out_7542120144035369270[25] = 0;
   out_7542120144035369270[26] = 1;
   out_7542120144035369270[27] = 0;
   out_7542120144035369270[28] = 0;
   out_7542120144035369270[29] = 0;
   out_7542120144035369270[30] = 0;
   out_7542120144035369270[31] = 0;
   out_7542120144035369270[32] = 0;
   out_7542120144035369270[33] = 0;
   out_7542120144035369270[34] = 0;
   out_7542120144035369270[35] = 0;
   out_7542120144035369270[36] = 0;
   out_7542120144035369270[37] = 0;
   out_7542120144035369270[38] = 0;
   out_7542120144035369270[39] = 0;
   out_7542120144035369270[40] = 0;
   out_7542120144035369270[41] = 0;
   out_7542120144035369270[42] = 0;
   out_7542120144035369270[43] = 0;
   out_7542120144035369270[44] = 0;
   out_7542120144035369270[45] = 0;
   out_7542120144035369270[46] = 0;
   out_7542120144035369270[47] = 0;
   out_7542120144035369270[48] = 0;
   out_7542120144035369270[49] = 1;
   out_7542120144035369270[50] = 0;
   out_7542120144035369270[51] = 0;
   out_7542120144035369270[52] = 0;
   out_7542120144035369270[53] = 0;
   out_7542120144035369270[54] = 0;
   out_7542120144035369270[55] = 0;
   out_7542120144035369270[56] = 0;
   out_7542120144035369270[57] = 0;
   out_7542120144035369270[58] = 0;
   out_7542120144035369270[59] = 0;
   out_7542120144035369270[60] = 0;
   out_7542120144035369270[61] = 0;
   out_7542120144035369270[62] = 0;
   out_7542120144035369270[63] = 0;
   out_7542120144035369270[64] = 0;
   out_7542120144035369270[65] = 0;
   out_7542120144035369270[66] = 0;
   out_7542120144035369270[67] = 0;
   out_7542120144035369270[68] = 0;
   out_7542120144035369270[69] = 0;
   out_7542120144035369270[70] = 0;
   out_7542120144035369270[71] = 0;
   out_7542120144035369270[72] = 1;
   out_7542120144035369270[73] = 0;
   out_7542120144035369270[74] = 0;
   out_7542120144035369270[75] = 0;
   out_7542120144035369270[76] = 0;
   out_7542120144035369270[77] = 0;
   out_7542120144035369270[78] = 0;
   out_7542120144035369270[79] = 0;
   out_7542120144035369270[80] = 0;
   out_7542120144035369270[81] = 0;
   out_7542120144035369270[82] = 0;
   out_7542120144035369270[83] = 0;
   out_7542120144035369270[84] = 0;
   out_7542120144035369270[85] = 0;
   out_7542120144035369270[86] = 0;
   out_7542120144035369270[87] = 0;
}
void h_13(double *state, double *unused, double *out_2268991261030991101) {
   out_2268991261030991101[0] = (-2*state[3]*state[5] + 2*state[4]*state[6])*state[9] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[8] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[7];
   out_2268991261030991101[1] = (2*state[3]*state[4] + 2*state[5]*state[6])*state[9] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[7] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[8];
   out_2268991261030991101[2] = (-2*state[3]*state[4] + 2*state[5]*state[6])*state[8] + (2*state[3]*state[5] + 2*state[4]*state[6])*state[7] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[9];
}
void H_13(double *state, double *unused, double *out_7481606090917853108) {
   out_7481606090917853108[0] = 0;
   out_7481606090917853108[1] = 0;
   out_7481606090917853108[2] = 0;
   out_7481606090917853108[3] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_7481606090917853108[4] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_7481606090917853108[5] = -2*state[3]*state[9] + 2*state[4]*state[8] - 2*state[5]*state[7];
   out_7481606090917853108[6] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_7481606090917853108[7] = pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2);
   out_7481606090917853108[8] = 2*state[3]*state[6] + 2*state[4]*state[5];
   out_7481606090917853108[9] = -2*state[3]*state[5] + 2*state[4]*state[6];
   out_7481606090917853108[10] = 0;
   out_7481606090917853108[11] = 0;
   out_7481606090917853108[12] = 0;
   out_7481606090917853108[13] = 0;
   out_7481606090917853108[14] = 0;
   out_7481606090917853108[15] = 0;
   out_7481606090917853108[16] = 0;
   out_7481606090917853108[17] = 0;
   out_7481606090917853108[18] = 0;
   out_7481606090917853108[19] = 0;
   out_7481606090917853108[20] = 0;
   out_7481606090917853108[21] = 0;
   out_7481606090917853108[22] = 0;
   out_7481606090917853108[23] = 0;
   out_7481606090917853108[24] = 0;
   out_7481606090917853108[25] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_7481606090917853108[26] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_7481606090917853108[27] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_7481606090917853108[28] = -2*state[3]*state[7] + 2*state[5]*state[9] - 2*state[6]*state[8];
   out_7481606090917853108[29] = -2*state[3]*state[6] + 2*state[4]*state[5];
   out_7481606090917853108[30] = pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2);
   out_7481606090917853108[31] = 2*state[3]*state[4] + 2*state[5]*state[6];
   out_7481606090917853108[32] = 0;
   out_7481606090917853108[33] = 0;
   out_7481606090917853108[34] = 0;
   out_7481606090917853108[35] = 0;
   out_7481606090917853108[36] = 0;
   out_7481606090917853108[37] = 0;
   out_7481606090917853108[38] = 0;
   out_7481606090917853108[39] = 0;
   out_7481606090917853108[40] = 0;
   out_7481606090917853108[41] = 0;
   out_7481606090917853108[42] = 0;
   out_7481606090917853108[43] = 0;
   out_7481606090917853108[44] = 0;
   out_7481606090917853108[45] = 0;
   out_7481606090917853108[46] = 0;
   out_7481606090917853108[47] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_7481606090917853108[48] = -2*state[3]*state[8] - 2*state[4]*state[9] + 2*state[6]*state[7];
   out_7481606090917853108[49] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_7481606090917853108[50] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_7481606090917853108[51] = 2*state[3]*state[5] + 2*state[4]*state[6];
   out_7481606090917853108[52] = -2*state[3]*state[4] + 2*state[5]*state[6];
   out_7481606090917853108[53] = pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2);
   out_7481606090917853108[54] = 0;
   out_7481606090917853108[55] = 0;
   out_7481606090917853108[56] = 0;
   out_7481606090917853108[57] = 0;
   out_7481606090917853108[58] = 0;
   out_7481606090917853108[59] = 0;
   out_7481606090917853108[60] = 0;
   out_7481606090917853108[61] = 0;
   out_7481606090917853108[62] = 0;
   out_7481606090917853108[63] = 0;
   out_7481606090917853108[64] = 0;
   out_7481606090917853108[65] = 0;
}
void h_14(double *state, double *unused, double *out_4339029020216426785) {
   out_4339029020216426785[0] = state[10];
   out_4339029020216426785[1] = state[11];
   out_4339029020216426785[2] = state[12];
}
void H_14(double *state, double *unused, double *out_597135971528379894) {
   out_597135971528379894[0] = 0;
   out_597135971528379894[1] = 0;
   out_597135971528379894[2] = 0;
   out_597135971528379894[3] = 0;
   out_597135971528379894[4] = 0;
   out_597135971528379894[5] = 0;
   out_597135971528379894[6] = 0;
   out_597135971528379894[7] = 0;
   out_597135971528379894[8] = 0;
   out_597135971528379894[9] = 0;
   out_597135971528379894[10] = 1;
   out_597135971528379894[11] = 0;
   out_597135971528379894[12] = 0;
   out_597135971528379894[13] = 0;
   out_597135971528379894[14] = 0;
   out_597135971528379894[15] = 0;
   out_597135971528379894[16] = 0;
   out_597135971528379894[17] = 0;
   out_597135971528379894[18] = 0;
   out_597135971528379894[19] = 0;
   out_597135971528379894[20] = 0;
   out_597135971528379894[21] = 0;
   out_597135971528379894[22] = 0;
   out_597135971528379894[23] = 0;
   out_597135971528379894[24] = 0;
   out_597135971528379894[25] = 0;
   out_597135971528379894[26] = 0;
   out_597135971528379894[27] = 0;
   out_597135971528379894[28] = 0;
   out_597135971528379894[29] = 0;
   out_597135971528379894[30] = 0;
   out_597135971528379894[31] = 0;
   out_597135971528379894[32] = 0;
   out_597135971528379894[33] = 1;
   out_597135971528379894[34] = 0;
   out_597135971528379894[35] = 0;
   out_597135971528379894[36] = 0;
   out_597135971528379894[37] = 0;
   out_597135971528379894[38] = 0;
   out_597135971528379894[39] = 0;
   out_597135971528379894[40] = 0;
   out_597135971528379894[41] = 0;
   out_597135971528379894[42] = 0;
   out_597135971528379894[43] = 0;
   out_597135971528379894[44] = 0;
   out_597135971528379894[45] = 0;
   out_597135971528379894[46] = 0;
   out_597135971528379894[47] = 0;
   out_597135971528379894[48] = 0;
   out_597135971528379894[49] = 0;
   out_597135971528379894[50] = 0;
   out_597135971528379894[51] = 0;
   out_597135971528379894[52] = 0;
   out_597135971528379894[53] = 0;
   out_597135971528379894[54] = 0;
   out_597135971528379894[55] = 0;
   out_597135971528379894[56] = 1;
   out_597135971528379894[57] = 0;
   out_597135971528379894[58] = 0;
   out_597135971528379894[59] = 0;
   out_597135971528379894[60] = 0;
   out_597135971528379894[61] = 0;
   out_597135971528379894[62] = 0;
   out_597135971528379894[63] = 0;
   out_597135971528379894[64] = 0;
   out_597135971528379894[65] = 0;
}
void h_33(double *state, double *unused, double *out_5085995759364851584) {
   out_5085995759364851584[0] = state[16];
   out_5085995759364851584[1] = state[17];
   out_5085995759364851584[2] = state[18];
}
void H_33(double *state, double *unused, double *out_4225493481259765532) {
   out_4225493481259765532[0] = 0;
   out_4225493481259765532[1] = 0;
   out_4225493481259765532[2] = 0;
   out_4225493481259765532[3] = 0;
   out_4225493481259765532[4] = 0;
   out_4225493481259765532[5] = 0;
   out_4225493481259765532[6] = 0;
   out_4225493481259765532[7] = 0;
   out_4225493481259765532[8] = 0;
   out_4225493481259765532[9] = 0;
   out_4225493481259765532[10] = 0;
   out_4225493481259765532[11] = 0;
   out_4225493481259765532[12] = 0;
   out_4225493481259765532[13] = 0;
   out_4225493481259765532[14] = 0;
   out_4225493481259765532[15] = 0;
   out_4225493481259765532[16] = 1;
   out_4225493481259765532[17] = 0;
   out_4225493481259765532[18] = 0;
   out_4225493481259765532[19] = 0;
   out_4225493481259765532[20] = 0;
   out_4225493481259765532[21] = 0;
   out_4225493481259765532[22] = 0;
   out_4225493481259765532[23] = 0;
   out_4225493481259765532[24] = 0;
   out_4225493481259765532[25] = 0;
   out_4225493481259765532[26] = 0;
   out_4225493481259765532[27] = 0;
   out_4225493481259765532[28] = 0;
   out_4225493481259765532[29] = 0;
   out_4225493481259765532[30] = 0;
   out_4225493481259765532[31] = 0;
   out_4225493481259765532[32] = 0;
   out_4225493481259765532[33] = 0;
   out_4225493481259765532[34] = 0;
   out_4225493481259765532[35] = 0;
   out_4225493481259765532[36] = 0;
   out_4225493481259765532[37] = 0;
   out_4225493481259765532[38] = 0;
   out_4225493481259765532[39] = 1;
   out_4225493481259765532[40] = 0;
   out_4225493481259765532[41] = 0;
   out_4225493481259765532[42] = 0;
   out_4225493481259765532[43] = 0;
   out_4225493481259765532[44] = 0;
   out_4225493481259765532[45] = 0;
   out_4225493481259765532[46] = 0;
   out_4225493481259765532[47] = 0;
   out_4225493481259765532[48] = 0;
   out_4225493481259765532[49] = 0;
   out_4225493481259765532[50] = 0;
   out_4225493481259765532[51] = 0;
   out_4225493481259765532[52] = 0;
   out_4225493481259765532[53] = 0;
   out_4225493481259765532[54] = 0;
   out_4225493481259765532[55] = 0;
   out_4225493481259765532[56] = 0;
   out_4225493481259765532[57] = 0;
   out_4225493481259765532[58] = 0;
   out_4225493481259765532[59] = 0;
   out_4225493481259765532[60] = 0;
   out_4225493481259765532[61] = 0;
   out_4225493481259765532[62] = 1;
   out_4225493481259765532[63] = 0;
   out_4225493481259765532[64] = 0;
   out_4225493481259765532[65] = 0;
}
#include <eigen3/Eigen/Dense>
#include <iostream>

typedef Eigen::Matrix<double, DIM, DIM, Eigen::RowMajor> DDM;
typedef Eigen::Matrix<double, EDIM, EDIM, Eigen::RowMajor> EEM;
typedef Eigen::Matrix<double, DIM, EDIM, Eigen::RowMajor> DEM;

void predict(double *in_x, double *in_P, double *in_Q, double dt) {
  typedef Eigen::Matrix<double, MEDIM, MEDIM, Eigen::RowMajor> RRM;

  double nx[DIM] = {0};
  double in_F[EDIM*EDIM] = {0};

  // functions from sympy
  f_fun(in_x, dt, nx);
  F_fun(in_x, dt, in_F);


  EEM F(in_F);
  EEM P(in_P);
  EEM Q(in_Q);

  RRM F_main = F.topLeftCorner(MEDIM, MEDIM);
  P.topLeftCorner(MEDIM, MEDIM) = (F_main * P.topLeftCorner(MEDIM, MEDIM)) * F_main.transpose();
  P.topRightCorner(MEDIM, EDIM - MEDIM) = F_main * P.topRightCorner(MEDIM, EDIM - MEDIM);
  P.bottomLeftCorner(EDIM - MEDIM, MEDIM) = P.bottomLeftCorner(EDIM - MEDIM, MEDIM) * F_main.transpose();

  P = P + dt*Q;

  // copy out state
  memcpy(in_x, nx, DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
}

// note: extra_args dim only correct when null space projecting
// otherwise 1
template <int ZDIM, int EADIM, bool MAHA_TEST>
void update(double *in_x, double *in_P, Hfun h_fun, Hfun H_fun, Hfun Hea_fun, double *in_z, double *in_R, double *in_ea, double MAHA_THRESHOLD) {
  typedef Eigen::Matrix<double, ZDIM, ZDIM, Eigen::RowMajor> ZZM;
  typedef Eigen::Matrix<double, ZDIM, DIM, Eigen::RowMajor> ZDM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, EDIM, Eigen::RowMajor> XEM;
  //typedef Eigen::Matrix<double, EDIM, ZDIM, Eigen::RowMajor> EZM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, 1> X1M;
  typedef Eigen::Matrix<double, Eigen::Dynamic, Eigen::Dynamic, Eigen::RowMajor> XXM;

  double in_hx[ZDIM] = {0};
  double in_H[ZDIM * DIM] = {0};
  double in_H_mod[EDIM * DIM] = {0};
  double delta_x[EDIM] = {0};
  double x_new[DIM] = {0};


  // state x, P
  Eigen::Matrix<double, ZDIM, 1> z(in_z);
  EEM P(in_P);
  ZZM pre_R(in_R);

  // functions from sympy
  h_fun(in_x, in_ea, in_hx);
  H_fun(in_x, in_ea, in_H);
  ZDM pre_H(in_H);

  // get y (y = z - hx)
  Eigen::Matrix<double, ZDIM, 1> pre_y(in_hx); pre_y = z - pre_y;
  X1M y; XXM H; XXM R;
  if (Hea_fun){
    typedef Eigen::Matrix<double, ZDIM, EADIM, Eigen::RowMajor> ZAM;
    double in_Hea[ZDIM * EADIM] = {0};
    Hea_fun(in_x, in_ea, in_Hea);
    ZAM Hea(in_Hea);
    XXM A = Hea.transpose().fullPivLu().kernel();


    y = A.transpose() * pre_y;
    H = A.transpose() * pre_H;
    R = A.transpose() * pre_R * A;
  } else {
    y = pre_y;
    H = pre_H;
    R = pre_R;
  }
  // get modified H
  H_mod_fun(in_x, in_H_mod);
  DEM H_mod(in_H_mod);
  XEM H_err = H * H_mod;

  // Do mahalobis distance test
  if (MAHA_TEST){
    XXM a = (H_err * P * H_err.transpose() + R).inverse();
    double maha_dist = y.transpose() * a * y;
    if (maha_dist > MAHA_THRESHOLD){
      R = 1.0e16 * R;
    }
  }

  // Outlier resilient weighting
  double weight = 1;//(1.5)/(1 + y.squaredNorm()/R.sum());

  // kalman gains and I_KH
  XXM S = ((H_err * P) * H_err.transpose()) + R/weight;
  XEM KT = S.fullPivLu().solve(H_err * P.transpose());
  //EZM K = KT.transpose(); TODO: WHY DOES THIS NOT COMPILE?
  //EZM K = S.fullPivLu().solve(H_err * P.transpose()).transpose();
  //std::cout << "Here is the matrix rot:\n" << K << std::endl;
  EEM I_KH = Eigen::Matrix<double, EDIM, EDIM>::Identity() - (KT.transpose() * H_err);

  // update state by injecting dx
  Eigen::Matrix<double, EDIM, 1> dx(delta_x);
  dx  = (KT.transpose() * y);
  memcpy(delta_x, dx.data(), EDIM * sizeof(double));
  err_fun(in_x, delta_x, x_new);
  Eigen::Matrix<double, DIM, 1> x(x_new);

  // update cov
  P = ((I_KH * P) * I_KH.transpose()) + ((KT.transpose() * R) * KT);

  // copy out state
  memcpy(in_x, x.data(), DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
  memcpy(in_z, y.data(), y.rows() * sizeof(double));
}




}
extern "C" {

void live_update_4(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_4, H_4, NULL, in_z, in_R, in_ea, MAHA_THRESH_4);
}
void live_update_9(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_9, H_9, NULL, in_z, in_R, in_ea, MAHA_THRESH_9);
}
void live_update_10(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_10, H_10, NULL, in_z, in_R, in_ea, MAHA_THRESH_10);
}
void live_update_12(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_12, H_12, NULL, in_z, in_R, in_ea, MAHA_THRESH_12);
}
void live_update_35(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_35, H_35, NULL, in_z, in_R, in_ea, MAHA_THRESH_35);
}
void live_update_32(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<4, 3, 0>(in_x, in_P, h_32, H_32, NULL, in_z, in_R, in_ea, MAHA_THRESH_32);
}
void live_update_13(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_13, H_13, NULL, in_z, in_R, in_ea, MAHA_THRESH_13);
}
void live_update_14(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_14, H_14, NULL, in_z, in_R, in_ea, MAHA_THRESH_14);
}
void live_update_33(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_33, H_33, NULL, in_z, in_R, in_ea, MAHA_THRESH_33);
}
void live_H(double *in_vec, double *out_5927131129203117575) {
  H(in_vec, out_5927131129203117575);
}
void live_err_fun(double *nom_x, double *delta_x, double *out_166480417200010184) {
  err_fun(nom_x, delta_x, out_166480417200010184);
}
void live_inv_err_fun(double *nom_x, double *true_x, double *out_1046491856692961924) {
  inv_err_fun(nom_x, true_x, out_1046491856692961924);
}
void live_H_mod_fun(double *state, double *out_7997181526798158612) {
  H_mod_fun(state, out_7997181526798158612);
}
void live_f_fun(double *state, double dt, double *out_3066042608104121567) {
  f_fun(state,  dt, out_3066042608104121567);
}
void live_F_fun(double *state, double dt, double *out_8605529000356905395) {
  F_fun(state,  dt, out_8605529000356905395);
}
void live_h_4(double *state, double *unused, double *out_6159501292472234061) {
  h_4(state, unused, out_6159501292472234061);
}
void live_H_4(double *state, double *unused, double *out_2291725580751699448) {
  H_4(state, unused, out_2291725580751699448);
}
void live_h_9(double *state, double *unused, double *out_4339029020216426785) {
  h_9(state, unused, out_4339029020216426785);
}
void live_H_9(double *state, double *unused, double *out_597135971528379894) {
  H_9(state, unused, out_597135971528379894);
}
void live_h_10(double *state, double *unused, double *out_5141291368581977495) {
  h_10(state, unused, out_5141291368581977495);
}
void live_H_10(double *state, double *unused, double *out_1583748810162691809) {
  H_10(state, unused, out_1583748810162691809);
}
void live_h_12(double *state, double *unused, double *out_695883697721345826) {
  h_12(state, unused, out_695883697721345826);
}
void live_H_12(double *state, double *unused, double *out_1670626555704105781) {
  H_12(state, unused, out_1670626555704105781);
}
void live_h_35(double *state, double *unused, double *out_1687815605272843674) {
  h_35(state, unused, out_1687815605272843674);
}
void live_H_35(double *state, double *unused, double *out_1074936476620907928) {
  H_35(state, unused, out_1074936476620907928);
}
void live_h_32(double *state, double *unused, double *out_7350235652885900174) {
  h_32(state, unused, out_7350235652885900174);
}
void live_H_32(double *state, double *unused, double *out_7542120144035369270) {
  H_32(state, unused, out_7542120144035369270);
}
void live_h_13(double *state, double *unused, double *out_2268991261030991101) {
  h_13(state, unused, out_2268991261030991101);
}
void live_H_13(double *state, double *unused, double *out_7481606090917853108) {
  H_13(state, unused, out_7481606090917853108);
}
void live_h_14(double *state, double *unused, double *out_4339029020216426785) {
  h_14(state, unused, out_4339029020216426785);
}
void live_H_14(double *state, double *unused, double *out_597135971528379894) {
  H_14(state, unused, out_597135971528379894);
}
void live_h_33(double *state, double *unused, double *out_5085995759364851584) {
  h_33(state, unused, out_5085995759364851584);
}
void live_H_33(double *state, double *unused, double *out_4225493481259765532) {
  H_33(state, unused, out_4225493481259765532);
}
void live_predict(double *in_x, double *in_P, double *in_Q, double dt) {
  predict(in_x, in_P, in_Q, dt);
}
}

const EKF live = {
  .name = "live",
  .kinds = { 4, 9, 10, 12, 35, 32, 13, 14, 33 },
  .feature_kinds = {  },
  .f_fun = live_f_fun,
  .F_fun = live_F_fun,
  .err_fun = live_err_fun,
  .inv_err_fun = live_inv_err_fun,
  .H_mod_fun = live_H_mod_fun,
  .predict = live_predict,
  .hs = {
    { 4, live_h_4 },
    { 9, live_h_9 },
    { 10, live_h_10 },
    { 12, live_h_12 },
    { 35, live_h_35 },
    { 32, live_h_32 },
    { 13, live_h_13 },
    { 14, live_h_14 },
    { 33, live_h_33 },
  },
  .Hs = {
    { 4, live_H_4 },
    { 9, live_H_9 },
    { 10, live_H_10 },
    { 12, live_H_12 },
    { 35, live_H_35 },
    { 32, live_H_32 },
    { 13, live_H_13 },
    { 14, live_H_14 },
    { 33, live_H_33 },
  },
  .updates = {
    { 4, live_update_4 },
    { 9, live_update_9 },
    { 10, live_update_10 },
    { 12, live_update_12 },
    { 35, live_update_35 },
    { 32, live_update_32 },
    { 13, live_update_13 },
    { 14, live_update_14 },
    { 33, live_update_33 },
  },
  .Hes = {
  },
  .sets = {
  },
  .extra_routines = {
    { "H", live_H },
  },
};

ekf_lib_init(live)
