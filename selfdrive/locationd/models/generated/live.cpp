#include "live.h"

namespace {
#define DIM 22
#define EDIM 21
#define MEDIM 21
typedef void (*Hfun)(double *, double *, double *);
const static double MAHA_THRESH_4 = 7.814727903251177;
const static double MAHA_THRESH_9 = 7.814727903251177;
const static double MAHA_THRESH_10 = 7.814727903251177;
const static double MAHA_THRESH_12 = 7.814727903251177;
const static double MAHA_THRESH_35 = 7.814727903251177;
const static double MAHA_THRESH_32 = 9.487729036781154;
const static double MAHA_THRESH_13 = 7.814727903251177;
const static double MAHA_THRESH_14 = 7.814727903251177;
const static double MAHA_THRESH_33 = 7.814727903251177;

/******************************************************************************
 *                       Code generated with SymPy 1.12                       *
 *                                                                            *
 *              See http://www.sympy.org/ for more information.               *
 *                                                                            *
 *                         This file is part of 'ekf'                         *
 ******************************************************************************/
void H(double *in_vec, double *out_7434436789771466707) {
   out_7434436789771466707[0] = 0;
   out_7434436789771466707[1] = -sin(in_vec[1])*sin(in_vec[2])*in_vec[4] - sin(in_vec[1])*cos(in_vec[2])*in_vec[3] - cos(in_vec[1])*in_vec[5];
   out_7434436789771466707[2] = -sin(in_vec[2])*cos(in_vec[1])*in_vec[3] + cos(in_vec[1])*cos(in_vec[2])*in_vec[4];
   out_7434436789771466707[3] = cos(in_vec[1])*cos(in_vec[2]);
   out_7434436789771466707[4] = sin(in_vec[2])*cos(in_vec[1]);
   out_7434436789771466707[5] = -sin(in_vec[1]);
   out_7434436789771466707[6] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (-sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_7434436789771466707[7] = -sin(in_vec[0])*sin(in_vec[1])*in_vec[5] + sin(in_vec[0])*sin(in_vec[2])*cos(in_vec[1])*in_vec[4] + sin(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_7434436789771466707[8] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]))*in_vec[4];
   out_7434436789771466707[9] = sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]);
   out_7434436789771466707[10] = sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) + cos(in_vec[0])*cos(in_vec[2]);
   out_7434436789771466707[11] = sin(in_vec[0])*cos(in_vec[1]);
   out_7434436789771466707[12] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (-sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) + sin(in_vec[2])*cos(in_vec[0]))*in_vec[3] - sin(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_7434436789771466707[13] = -sin(in_vec[1])*cos(in_vec[0])*in_vec[5] + sin(in_vec[2])*cos(in_vec[0])*cos(in_vec[1])*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_7434436789771466707[14] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (sin(in_vec[0])*cos(in_vec[2]) - sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[3];
   out_7434436789771466707[15] = sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]);
   out_7434436789771466707[16] = -sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]);
   out_7434436789771466707[17] = cos(in_vec[0])*cos(in_vec[1]);
}
void err_fun(double *nom_x, double *delta_x, double *out_1609212297949724591) {
   out_1609212297949724591[0] = delta_x[0] + nom_x[0];
   out_1609212297949724591[1] = delta_x[1] + nom_x[1];
   out_1609212297949724591[2] = delta_x[2] + nom_x[2];
   out_1609212297949724591[3] = -0.5*delta_x[3]*nom_x[4] - 0.5*delta_x[4]*nom_x[5] - 0.5*delta_x[5]*nom_x[6] + 1.0*nom_x[3];
   out_1609212297949724591[4] = 0.5*delta_x[3]*nom_x[3] + 0.5*delta_x[4]*nom_x[6] - 0.5*delta_x[5]*nom_x[5] + 1.0*nom_x[4];
   out_1609212297949724591[5] = -0.5*delta_x[3]*nom_x[6] + 0.5*delta_x[4]*nom_x[3] + 0.5*delta_x[5]*nom_x[4] + 1.0*nom_x[5];
   out_1609212297949724591[6] = 0.5*delta_x[3]*nom_x[5] - 0.5*delta_x[4]*nom_x[4] + 0.5*delta_x[5]*nom_x[3] + 1.0*nom_x[6];
   out_1609212297949724591[7] = delta_x[6] + nom_x[7];
   out_1609212297949724591[8] = delta_x[7] + nom_x[8];
   out_1609212297949724591[9] = delta_x[8] + nom_x[9];
   out_1609212297949724591[10] = delta_x[9] + nom_x[10];
   out_1609212297949724591[11] = delta_x[10] + nom_x[11];
   out_1609212297949724591[12] = delta_x[11] + nom_x[12];
   out_1609212297949724591[13] = delta_x[12] + nom_x[13];
   out_1609212297949724591[14] = delta_x[13] + nom_x[14];
   out_1609212297949724591[15] = delta_x[14] + nom_x[15];
   out_1609212297949724591[16] = delta_x[15] + nom_x[16];
   out_1609212297949724591[17] = delta_x[16] + nom_x[17];
   out_1609212297949724591[18] = delta_x[17] + nom_x[18];
   out_1609212297949724591[19] = delta_x[18] + nom_x[19];
   out_1609212297949724591[20] = delta_x[19] + nom_x[20];
   out_1609212297949724591[21] = delta_x[20] + nom_x[21];
}
void inv_err_fun(double *nom_x, double *true_x, double *out_5609648295481617961) {
   out_5609648295481617961[0] = -nom_x[0] + true_x[0];
   out_5609648295481617961[1] = -nom_x[1] + true_x[1];
   out_5609648295481617961[2] = -nom_x[2] + true_x[2];
   out_5609648295481617961[3] = 2*nom_x[3]*true_x[4] - 2*nom_x[4]*true_x[3] + 2*nom_x[5]*true_x[6] - 2*nom_x[6]*true_x[5];
   out_5609648295481617961[4] = 2*nom_x[3]*true_x[5] - 2*nom_x[4]*true_x[6] - 2*nom_x[5]*true_x[3] + 2*nom_x[6]*true_x[4];
   out_5609648295481617961[5] = 2*nom_x[3]*true_x[6] + 2*nom_x[4]*true_x[5] - 2*nom_x[5]*true_x[4] - 2*nom_x[6]*true_x[3];
   out_5609648295481617961[6] = -nom_x[7] + true_x[7];
   out_5609648295481617961[7] = -nom_x[8] + true_x[8];
   out_5609648295481617961[8] = -nom_x[9] + true_x[9];
   out_5609648295481617961[9] = -nom_x[10] + true_x[10];
   out_5609648295481617961[10] = -nom_x[11] + true_x[11];
   out_5609648295481617961[11] = -nom_x[12] + true_x[12];
   out_5609648295481617961[12] = -nom_x[13] + true_x[13];
   out_5609648295481617961[13] = -nom_x[14] + true_x[14];
   out_5609648295481617961[14] = -nom_x[15] + true_x[15];
   out_5609648295481617961[15] = -nom_x[16] + true_x[16];
   out_5609648295481617961[16] = -nom_x[17] + true_x[17];
   out_5609648295481617961[17] = -nom_x[18] + true_x[18];
   out_5609648295481617961[18] = -nom_x[19] + true_x[19];
   out_5609648295481617961[19] = -nom_x[20] + true_x[20];
   out_5609648295481617961[20] = -nom_x[21] + true_x[21];
}
void H_mod_fun(double *state, double *out_7153323831238007106) {
   out_7153323831238007106[0] = 1.0;
   out_7153323831238007106[1] = 0;
   out_7153323831238007106[2] = 0;
   out_7153323831238007106[3] = 0;
   out_7153323831238007106[4] = 0;
   out_7153323831238007106[5] = 0;
   out_7153323831238007106[6] = 0;
   out_7153323831238007106[7] = 0;
   out_7153323831238007106[8] = 0;
   out_7153323831238007106[9] = 0;
   out_7153323831238007106[10] = 0;
   out_7153323831238007106[11] = 0;
   out_7153323831238007106[12] = 0;
   out_7153323831238007106[13] = 0;
   out_7153323831238007106[14] = 0;
   out_7153323831238007106[15] = 0;
   out_7153323831238007106[16] = 0;
   out_7153323831238007106[17] = 0;
   out_7153323831238007106[18] = 0;
   out_7153323831238007106[19] = 0;
   out_7153323831238007106[20] = 0;
   out_7153323831238007106[21] = 0;
   out_7153323831238007106[22] = 1.0;
   out_7153323831238007106[23] = 0;
   out_7153323831238007106[24] = 0;
   out_7153323831238007106[25] = 0;
   out_7153323831238007106[26] = 0;
   out_7153323831238007106[27] = 0;
   out_7153323831238007106[28] = 0;
   out_7153323831238007106[29] = 0;
   out_7153323831238007106[30] = 0;
   out_7153323831238007106[31] = 0;
   out_7153323831238007106[32] = 0;
   out_7153323831238007106[33] = 0;
   out_7153323831238007106[34] = 0;
   out_7153323831238007106[35] = 0;
   out_7153323831238007106[36] = 0;
   out_7153323831238007106[37] = 0;
   out_7153323831238007106[38] = 0;
   out_7153323831238007106[39] = 0;
   out_7153323831238007106[40] = 0;
   out_7153323831238007106[41] = 0;
   out_7153323831238007106[42] = 0;
   out_7153323831238007106[43] = 0;
   out_7153323831238007106[44] = 1.0;
   out_7153323831238007106[45] = 0;
   out_7153323831238007106[46] = 0;
   out_7153323831238007106[47] = 0;
   out_7153323831238007106[48] = 0;
   out_7153323831238007106[49] = 0;
   out_7153323831238007106[50] = 0;
   out_7153323831238007106[51] = 0;
   out_7153323831238007106[52] = 0;
   out_7153323831238007106[53] = 0;
   out_7153323831238007106[54] = 0;
   out_7153323831238007106[55] = 0;
   out_7153323831238007106[56] = 0;
   out_7153323831238007106[57] = 0;
   out_7153323831238007106[58] = 0;
   out_7153323831238007106[59] = 0;
   out_7153323831238007106[60] = 0;
   out_7153323831238007106[61] = 0;
   out_7153323831238007106[62] = 0;
   out_7153323831238007106[63] = 0;
   out_7153323831238007106[64] = 0;
   out_7153323831238007106[65] = 0;
   out_7153323831238007106[66] = -0.5*state[4];
   out_7153323831238007106[67] = -0.5*state[5];
   out_7153323831238007106[68] = -0.5*state[6];
   out_7153323831238007106[69] = 0;
   out_7153323831238007106[70] = 0;
   out_7153323831238007106[71] = 0;
   out_7153323831238007106[72] = 0;
   out_7153323831238007106[73] = 0;
   out_7153323831238007106[74] = 0;
   out_7153323831238007106[75] = 0;
   out_7153323831238007106[76] = 0;
   out_7153323831238007106[77] = 0;
   out_7153323831238007106[78] = 0;
   out_7153323831238007106[79] = 0;
   out_7153323831238007106[80] = 0;
   out_7153323831238007106[81] = 0;
   out_7153323831238007106[82] = 0;
   out_7153323831238007106[83] = 0;
   out_7153323831238007106[84] = 0;
   out_7153323831238007106[85] = 0;
   out_7153323831238007106[86] = 0;
   out_7153323831238007106[87] = 0.5*state[3];
   out_7153323831238007106[88] = 0.5*state[6];
   out_7153323831238007106[89] = -0.5*state[5];
   out_7153323831238007106[90] = 0;
   out_7153323831238007106[91] = 0;
   out_7153323831238007106[92] = 0;
   out_7153323831238007106[93] = 0;
   out_7153323831238007106[94] = 0;
   out_7153323831238007106[95] = 0;
   out_7153323831238007106[96] = 0;
   out_7153323831238007106[97] = 0;
   out_7153323831238007106[98] = 0;
   out_7153323831238007106[99] = 0;
   out_7153323831238007106[100] = 0;
   out_7153323831238007106[101] = 0;
   out_7153323831238007106[102] = 0;
   out_7153323831238007106[103] = 0;
   out_7153323831238007106[104] = 0;
   out_7153323831238007106[105] = 0;
   out_7153323831238007106[106] = 0;
   out_7153323831238007106[107] = 0;
   out_7153323831238007106[108] = -0.5*state[6];
   out_7153323831238007106[109] = 0.5*state[3];
   out_7153323831238007106[110] = 0.5*state[4];
   out_7153323831238007106[111] = 0;
   out_7153323831238007106[112] = 0;
   out_7153323831238007106[113] = 0;
   out_7153323831238007106[114] = 0;
   out_7153323831238007106[115] = 0;
   out_7153323831238007106[116] = 0;
   out_7153323831238007106[117] = 0;
   out_7153323831238007106[118] = 0;
   out_7153323831238007106[119] = 0;
   out_7153323831238007106[120] = 0;
   out_7153323831238007106[121] = 0;
   out_7153323831238007106[122] = 0;
   out_7153323831238007106[123] = 0;
   out_7153323831238007106[124] = 0;
   out_7153323831238007106[125] = 0;
   out_7153323831238007106[126] = 0;
   out_7153323831238007106[127] = 0;
   out_7153323831238007106[128] = 0;
   out_7153323831238007106[129] = 0.5*state[5];
   out_7153323831238007106[130] = -0.5*state[4];
   out_7153323831238007106[131] = 0.5*state[3];
   out_7153323831238007106[132] = 0;
   out_7153323831238007106[133] = 0;
   out_7153323831238007106[134] = 0;
   out_7153323831238007106[135] = 0;
   out_7153323831238007106[136] = 0;
   out_7153323831238007106[137] = 0;
   out_7153323831238007106[138] = 0;
   out_7153323831238007106[139] = 0;
   out_7153323831238007106[140] = 0;
   out_7153323831238007106[141] = 0;
   out_7153323831238007106[142] = 0;
   out_7153323831238007106[143] = 0;
   out_7153323831238007106[144] = 0;
   out_7153323831238007106[145] = 0;
   out_7153323831238007106[146] = 0;
   out_7153323831238007106[147] = 0;
   out_7153323831238007106[148] = 0;
   out_7153323831238007106[149] = 0;
   out_7153323831238007106[150] = 0;
   out_7153323831238007106[151] = 0;
   out_7153323831238007106[152] = 0;
   out_7153323831238007106[153] = 1.0;
   out_7153323831238007106[154] = 0;
   out_7153323831238007106[155] = 0;
   out_7153323831238007106[156] = 0;
   out_7153323831238007106[157] = 0;
   out_7153323831238007106[158] = 0;
   out_7153323831238007106[159] = 0;
   out_7153323831238007106[160] = 0;
   out_7153323831238007106[161] = 0;
   out_7153323831238007106[162] = 0;
   out_7153323831238007106[163] = 0;
   out_7153323831238007106[164] = 0;
   out_7153323831238007106[165] = 0;
   out_7153323831238007106[166] = 0;
   out_7153323831238007106[167] = 0;
   out_7153323831238007106[168] = 0;
   out_7153323831238007106[169] = 0;
   out_7153323831238007106[170] = 0;
   out_7153323831238007106[171] = 0;
   out_7153323831238007106[172] = 0;
   out_7153323831238007106[173] = 0;
   out_7153323831238007106[174] = 0;
   out_7153323831238007106[175] = 1.0;
   out_7153323831238007106[176] = 0;
   out_7153323831238007106[177] = 0;
   out_7153323831238007106[178] = 0;
   out_7153323831238007106[179] = 0;
   out_7153323831238007106[180] = 0;
   out_7153323831238007106[181] = 0;
   out_7153323831238007106[182] = 0;
   out_7153323831238007106[183] = 0;
   out_7153323831238007106[184] = 0;
   out_7153323831238007106[185] = 0;
   out_7153323831238007106[186] = 0;
   out_7153323831238007106[187] = 0;
   out_7153323831238007106[188] = 0;
   out_7153323831238007106[189] = 0;
   out_7153323831238007106[190] = 0;
   out_7153323831238007106[191] = 0;
   out_7153323831238007106[192] = 0;
   out_7153323831238007106[193] = 0;
   out_7153323831238007106[194] = 0;
   out_7153323831238007106[195] = 0;
   out_7153323831238007106[196] = 0;
   out_7153323831238007106[197] = 1.0;
   out_7153323831238007106[198] = 0;
   out_7153323831238007106[199] = 0;
   out_7153323831238007106[200] = 0;
   out_7153323831238007106[201] = 0;
   out_7153323831238007106[202] = 0;
   out_7153323831238007106[203] = 0;
   out_7153323831238007106[204] = 0;
   out_7153323831238007106[205] = 0;
   out_7153323831238007106[206] = 0;
   out_7153323831238007106[207] = 0;
   out_7153323831238007106[208] = 0;
   out_7153323831238007106[209] = 0;
   out_7153323831238007106[210] = 0;
   out_7153323831238007106[211] = 0;
   out_7153323831238007106[212] = 0;
   out_7153323831238007106[213] = 0;
   out_7153323831238007106[214] = 0;
   out_7153323831238007106[215] = 0;
   out_7153323831238007106[216] = 0;
   out_7153323831238007106[217] = 0;
   out_7153323831238007106[218] = 0;
   out_7153323831238007106[219] = 1.0;
   out_7153323831238007106[220] = 0;
   out_7153323831238007106[221] = 0;
   out_7153323831238007106[222] = 0;
   out_7153323831238007106[223] = 0;
   out_7153323831238007106[224] = 0;
   out_7153323831238007106[225] = 0;
   out_7153323831238007106[226] = 0;
   out_7153323831238007106[227] = 0;
   out_7153323831238007106[228] = 0;
   out_7153323831238007106[229] = 0;
   out_7153323831238007106[230] = 0;
   out_7153323831238007106[231] = 0;
   out_7153323831238007106[232] = 0;
   out_7153323831238007106[233] = 0;
   out_7153323831238007106[234] = 0;
   out_7153323831238007106[235] = 0;
   out_7153323831238007106[236] = 0;
   out_7153323831238007106[237] = 0;
   out_7153323831238007106[238] = 0;
   out_7153323831238007106[239] = 0;
   out_7153323831238007106[240] = 0;
   out_7153323831238007106[241] = 1.0;
   out_7153323831238007106[242] = 0;
   out_7153323831238007106[243] = 0;
   out_7153323831238007106[244] = 0;
   out_7153323831238007106[245] = 0;
   out_7153323831238007106[246] = 0;
   out_7153323831238007106[247] = 0;
   out_7153323831238007106[248] = 0;
   out_7153323831238007106[249] = 0;
   out_7153323831238007106[250] = 0;
   out_7153323831238007106[251] = 0;
   out_7153323831238007106[252] = 0;
   out_7153323831238007106[253] = 0;
   out_7153323831238007106[254] = 0;
   out_7153323831238007106[255] = 0;
   out_7153323831238007106[256] = 0;
   out_7153323831238007106[257] = 0;
   out_7153323831238007106[258] = 0;
   out_7153323831238007106[259] = 0;
   out_7153323831238007106[260] = 0;
   out_7153323831238007106[261] = 0;
   out_7153323831238007106[262] = 0;
   out_7153323831238007106[263] = 1.0;
   out_7153323831238007106[264] = 0;
   out_7153323831238007106[265] = 0;
   out_7153323831238007106[266] = 0;
   out_7153323831238007106[267] = 0;
   out_7153323831238007106[268] = 0;
   out_7153323831238007106[269] = 0;
   out_7153323831238007106[270] = 0;
   out_7153323831238007106[271] = 0;
   out_7153323831238007106[272] = 0;
   out_7153323831238007106[273] = 0;
   out_7153323831238007106[274] = 0;
   out_7153323831238007106[275] = 0;
   out_7153323831238007106[276] = 0;
   out_7153323831238007106[277] = 0;
   out_7153323831238007106[278] = 0;
   out_7153323831238007106[279] = 0;
   out_7153323831238007106[280] = 0;
   out_7153323831238007106[281] = 0;
   out_7153323831238007106[282] = 0;
   out_7153323831238007106[283] = 0;
   out_7153323831238007106[284] = 0;
   out_7153323831238007106[285] = 1.0;
   out_7153323831238007106[286] = 0;
   out_7153323831238007106[287] = 0;
   out_7153323831238007106[288] = 0;
   out_7153323831238007106[289] = 0;
   out_7153323831238007106[290] = 0;
   out_7153323831238007106[291] = 0;
   out_7153323831238007106[292] = 0;
   out_7153323831238007106[293] = 0;
   out_7153323831238007106[294] = 0;
   out_7153323831238007106[295] = 0;
   out_7153323831238007106[296] = 0;
   out_7153323831238007106[297] = 0;
   out_7153323831238007106[298] = 0;
   out_7153323831238007106[299] = 0;
   out_7153323831238007106[300] = 0;
   out_7153323831238007106[301] = 0;
   out_7153323831238007106[302] = 0;
   out_7153323831238007106[303] = 0;
   out_7153323831238007106[304] = 0;
   out_7153323831238007106[305] = 0;
   out_7153323831238007106[306] = 0;
   out_7153323831238007106[307] = 1.0;
   out_7153323831238007106[308] = 0;
   out_7153323831238007106[309] = 0;
   out_7153323831238007106[310] = 0;
   out_7153323831238007106[311] = 0;
   out_7153323831238007106[312] = 0;
   out_7153323831238007106[313] = 0;
   out_7153323831238007106[314] = 0;
   out_7153323831238007106[315] = 0;
   out_7153323831238007106[316] = 0;
   out_7153323831238007106[317] = 0;
   out_7153323831238007106[318] = 0;
   out_7153323831238007106[319] = 0;
   out_7153323831238007106[320] = 0;
   out_7153323831238007106[321] = 0;
   out_7153323831238007106[322] = 0;
   out_7153323831238007106[323] = 0;
   out_7153323831238007106[324] = 0;
   out_7153323831238007106[325] = 0;
   out_7153323831238007106[326] = 0;
   out_7153323831238007106[327] = 0;
   out_7153323831238007106[328] = 0;
   out_7153323831238007106[329] = 1.0;
   out_7153323831238007106[330] = 0;
   out_7153323831238007106[331] = 0;
   out_7153323831238007106[332] = 0;
   out_7153323831238007106[333] = 0;
   out_7153323831238007106[334] = 0;
   out_7153323831238007106[335] = 0;
   out_7153323831238007106[336] = 0;
   out_7153323831238007106[337] = 0;
   out_7153323831238007106[338] = 0;
   out_7153323831238007106[339] = 0;
   out_7153323831238007106[340] = 0;
   out_7153323831238007106[341] = 0;
   out_7153323831238007106[342] = 0;
   out_7153323831238007106[343] = 0;
   out_7153323831238007106[344] = 0;
   out_7153323831238007106[345] = 0;
   out_7153323831238007106[346] = 0;
   out_7153323831238007106[347] = 0;
   out_7153323831238007106[348] = 0;
   out_7153323831238007106[349] = 0;
   out_7153323831238007106[350] = 0;
   out_7153323831238007106[351] = 1.0;
   out_7153323831238007106[352] = 0;
   out_7153323831238007106[353] = 0;
   out_7153323831238007106[354] = 0;
   out_7153323831238007106[355] = 0;
   out_7153323831238007106[356] = 0;
   out_7153323831238007106[357] = 0;
   out_7153323831238007106[358] = 0;
   out_7153323831238007106[359] = 0;
   out_7153323831238007106[360] = 0;
   out_7153323831238007106[361] = 0;
   out_7153323831238007106[362] = 0;
   out_7153323831238007106[363] = 0;
   out_7153323831238007106[364] = 0;
   out_7153323831238007106[365] = 0;
   out_7153323831238007106[366] = 0;
   out_7153323831238007106[367] = 0;
   out_7153323831238007106[368] = 0;
   out_7153323831238007106[369] = 0;
   out_7153323831238007106[370] = 0;
   out_7153323831238007106[371] = 0;
   out_7153323831238007106[372] = 0;
   out_7153323831238007106[373] = 1.0;
   out_7153323831238007106[374] = 0;
   out_7153323831238007106[375] = 0;
   out_7153323831238007106[376] = 0;
   out_7153323831238007106[377] = 0;
   out_7153323831238007106[378] = 0;
   out_7153323831238007106[379] = 0;
   out_7153323831238007106[380] = 0;
   out_7153323831238007106[381] = 0;
   out_7153323831238007106[382] = 0;
   out_7153323831238007106[383] = 0;
   out_7153323831238007106[384] = 0;
   out_7153323831238007106[385] = 0;
   out_7153323831238007106[386] = 0;
   out_7153323831238007106[387] = 0;
   out_7153323831238007106[388] = 0;
   out_7153323831238007106[389] = 0;
   out_7153323831238007106[390] = 0;
   out_7153323831238007106[391] = 0;
   out_7153323831238007106[392] = 0;
   out_7153323831238007106[393] = 0;
   out_7153323831238007106[394] = 0;
   out_7153323831238007106[395] = 1.0;
   out_7153323831238007106[396] = 0;
   out_7153323831238007106[397] = 0;
   out_7153323831238007106[398] = 0;
   out_7153323831238007106[399] = 0;
   out_7153323831238007106[400] = 0;
   out_7153323831238007106[401] = 0;
   out_7153323831238007106[402] = 0;
   out_7153323831238007106[403] = 0;
   out_7153323831238007106[404] = 0;
   out_7153323831238007106[405] = 0;
   out_7153323831238007106[406] = 0;
   out_7153323831238007106[407] = 0;
   out_7153323831238007106[408] = 0;
   out_7153323831238007106[409] = 0;
   out_7153323831238007106[410] = 0;
   out_7153323831238007106[411] = 0;
   out_7153323831238007106[412] = 0;
   out_7153323831238007106[413] = 0;
   out_7153323831238007106[414] = 0;
   out_7153323831238007106[415] = 0;
   out_7153323831238007106[416] = 0;
   out_7153323831238007106[417] = 1.0;
   out_7153323831238007106[418] = 0;
   out_7153323831238007106[419] = 0;
   out_7153323831238007106[420] = 0;
   out_7153323831238007106[421] = 0;
   out_7153323831238007106[422] = 0;
   out_7153323831238007106[423] = 0;
   out_7153323831238007106[424] = 0;
   out_7153323831238007106[425] = 0;
   out_7153323831238007106[426] = 0;
   out_7153323831238007106[427] = 0;
   out_7153323831238007106[428] = 0;
   out_7153323831238007106[429] = 0;
   out_7153323831238007106[430] = 0;
   out_7153323831238007106[431] = 0;
   out_7153323831238007106[432] = 0;
   out_7153323831238007106[433] = 0;
   out_7153323831238007106[434] = 0;
   out_7153323831238007106[435] = 0;
   out_7153323831238007106[436] = 0;
   out_7153323831238007106[437] = 0;
   out_7153323831238007106[438] = 0;
   out_7153323831238007106[439] = 1.0;
   out_7153323831238007106[440] = 0;
   out_7153323831238007106[441] = 0;
   out_7153323831238007106[442] = 0;
   out_7153323831238007106[443] = 0;
   out_7153323831238007106[444] = 0;
   out_7153323831238007106[445] = 0;
   out_7153323831238007106[446] = 0;
   out_7153323831238007106[447] = 0;
   out_7153323831238007106[448] = 0;
   out_7153323831238007106[449] = 0;
   out_7153323831238007106[450] = 0;
   out_7153323831238007106[451] = 0;
   out_7153323831238007106[452] = 0;
   out_7153323831238007106[453] = 0;
   out_7153323831238007106[454] = 0;
   out_7153323831238007106[455] = 0;
   out_7153323831238007106[456] = 0;
   out_7153323831238007106[457] = 0;
   out_7153323831238007106[458] = 0;
   out_7153323831238007106[459] = 0;
   out_7153323831238007106[460] = 0;
   out_7153323831238007106[461] = 1.0;
}
void f_fun(double *state, double dt, double *out_1909445742055462681) {
   out_1909445742055462681[0] = dt*state[7] + state[0];
   out_1909445742055462681[1] = dt*state[8] + state[1];
   out_1909445742055462681[2] = dt*state[9] + state[2];
   out_1909445742055462681[3] = dt*(-0.5*state[4]*state[10] - 0.5*state[5]*state[11] - 0.5*state[6]*state[12]) + state[3];
   out_1909445742055462681[4] = dt*(0.5*state[3]*state[10] + 0.5*state[5]*state[12] - 0.5*state[6]*state[11]) + state[4];
   out_1909445742055462681[5] = dt*(0.5*state[3]*state[11] - 0.5*state[4]*state[12] + 0.5*state[6]*state[10]) + state[5];
   out_1909445742055462681[6] = dt*(0.5*state[3]*state[12] + 0.5*state[4]*state[11] - 0.5*state[5]*state[10]) + state[6];
   out_1909445742055462681[7] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]) + state[7];
   out_1909445742055462681[8] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]) + state[8];
   out_1909445742055462681[9] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]) + state[9];
   out_1909445742055462681[10] = state[10];
   out_1909445742055462681[11] = state[11];
   out_1909445742055462681[12] = state[12];
   out_1909445742055462681[13] = state[13];
   out_1909445742055462681[14] = state[14];
   out_1909445742055462681[15] = state[15];
   out_1909445742055462681[16] = state[16];
   out_1909445742055462681[17] = state[17];
   out_1909445742055462681[18] = state[18];
   out_1909445742055462681[19] = state[19];
   out_1909445742055462681[20] = state[20];
   out_1909445742055462681[21] = state[21];
}
void F_fun(double *state, double dt, double *out_981916931249471487) {
   out_981916931249471487[0] = 1;
   out_981916931249471487[1] = 0;
   out_981916931249471487[2] = 0;
   out_981916931249471487[3] = 0;
   out_981916931249471487[4] = 0;
   out_981916931249471487[5] = 0;
   out_981916931249471487[6] = dt;
   out_981916931249471487[7] = 0;
   out_981916931249471487[8] = 0;
   out_981916931249471487[9] = 0;
   out_981916931249471487[10] = 0;
   out_981916931249471487[11] = 0;
   out_981916931249471487[12] = 0;
   out_981916931249471487[13] = 0;
   out_981916931249471487[14] = 0;
   out_981916931249471487[15] = 0;
   out_981916931249471487[16] = 0;
   out_981916931249471487[17] = 0;
   out_981916931249471487[18] = 0;
   out_981916931249471487[19] = 0;
   out_981916931249471487[20] = 0;
   out_981916931249471487[21] = 0;
   out_981916931249471487[22] = 1;
   out_981916931249471487[23] = 0;
   out_981916931249471487[24] = 0;
   out_981916931249471487[25] = 0;
   out_981916931249471487[26] = 0;
   out_981916931249471487[27] = 0;
   out_981916931249471487[28] = dt;
   out_981916931249471487[29] = 0;
   out_981916931249471487[30] = 0;
   out_981916931249471487[31] = 0;
   out_981916931249471487[32] = 0;
   out_981916931249471487[33] = 0;
   out_981916931249471487[34] = 0;
   out_981916931249471487[35] = 0;
   out_981916931249471487[36] = 0;
   out_981916931249471487[37] = 0;
   out_981916931249471487[38] = 0;
   out_981916931249471487[39] = 0;
   out_981916931249471487[40] = 0;
   out_981916931249471487[41] = 0;
   out_981916931249471487[42] = 0;
   out_981916931249471487[43] = 0;
   out_981916931249471487[44] = 1;
   out_981916931249471487[45] = 0;
   out_981916931249471487[46] = 0;
   out_981916931249471487[47] = 0;
   out_981916931249471487[48] = 0;
   out_981916931249471487[49] = 0;
   out_981916931249471487[50] = dt;
   out_981916931249471487[51] = 0;
   out_981916931249471487[52] = 0;
   out_981916931249471487[53] = 0;
   out_981916931249471487[54] = 0;
   out_981916931249471487[55] = 0;
   out_981916931249471487[56] = 0;
   out_981916931249471487[57] = 0;
   out_981916931249471487[58] = 0;
   out_981916931249471487[59] = 0;
   out_981916931249471487[60] = 0;
   out_981916931249471487[61] = 0;
   out_981916931249471487[62] = 0;
   out_981916931249471487[63] = 0;
   out_981916931249471487[64] = 0;
   out_981916931249471487[65] = 0;
   out_981916931249471487[66] = 1;
   out_981916931249471487[67] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[11] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_981916931249471487[68] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[12] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[10] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[11]);
   out_981916931249471487[69] = 0;
   out_981916931249471487[70] = 0;
   out_981916931249471487[71] = 0;
   out_981916931249471487[72] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_981916931249471487[73] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_981916931249471487[74] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_981916931249471487[75] = 0;
   out_981916931249471487[76] = 0;
   out_981916931249471487[77] = 0;
   out_981916931249471487[78] = 0;
   out_981916931249471487[79] = 0;
   out_981916931249471487[80] = 0;
   out_981916931249471487[81] = 0;
   out_981916931249471487[82] = 0;
   out_981916931249471487[83] = 0;
   out_981916931249471487[84] = 0;
   out_981916931249471487[85] = 0;
   out_981916931249471487[86] = 0;
   out_981916931249471487[87] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[11] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_981916931249471487[88] = 1;
   out_981916931249471487[89] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[12] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[11] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[10]);
   out_981916931249471487[90] = 0;
   out_981916931249471487[91] = 0;
   out_981916931249471487[92] = 0;
   out_981916931249471487[93] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_981916931249471487[94] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_981916931249471487[95] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_981916931249471487[96] = 0;
   out_981916931249471487[97] = 0;
   out_981916931249471487[98] = 0;
   out_981916931249471487[99] = 0;
   out_981916931249471487[100] = 0;
   out_981916931249471487[101] = 0;
   out_981916931249471487[102] = 0;
   out_981916931249471487[103] = 0;
   out_981916931249471487[104] = 0;
   out_981916931249471487[105] = 0;
   out_981916931249471487[106] = 0;
   out_981916931249471487[107] = 0;
   out_981916931249471487[108] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[12] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[10] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[11]);
   out_981916931249471487[109] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[12] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[11] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[10]);
   out_981916931249471487[110] = 1;
   out_981916931249471487[111] = 0;
   out_981916931249471487[112] = 0;
   out_981916931249471487[113] = 0;
   out_981916931249471487[114] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_981916931249471487[115] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_981916931249471487[116] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_981916931249471487[117] = 0;
   out_981916931249471487[118] = 0;
   out_981916931249471487[119] = 0;
   out_981916931249471487[120] = 0;
   out_981916931249471487[121] = 0;
   out_981916931249471487[122] = 0;
   out_981916931249471487[123] = 0;
   out_981916931249471487[124] = 0;
   out_981916931249471487[125] = 0;
   out_981916931249471487[126] = 0;
   out_981916931249471487[127] = 0;
   out_981916931249471487[128] = 0;
   out_981916931249471487[129] = 0;
   out_981916931249471487[130] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_981916931249471487[131] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[18] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[16] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[17]);
   out_981916931249471487[132] = 1;
   out_981916931249471487[133] = 0;
   out_981916931249471487[134] = 0;
   out_981916931249471487[135] = 0;
   out_981916931249471487[136] = 0;
   out_981916931249471487[137] = 0;
   out_981916931249471487[138] = 0;
   out_981916931249471487[139] = 0;
   out_981916931249471487[140] = 0;
   out_981916931249471487[141] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_981916931249471487[142] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_981916931249471487[143] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_981916931249471487[144] = 0;
   out_981916931249471487[145] = 0;
   out_981916931249471487[146] = 0;
   out_981916931249471487[147] = 0;
   out_981916931249471487[148] = 0;
   out_981916931249471487[149] = 0;
   out_981916931249471487[150] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[17] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_981916931249471487[151] = 0;
   out_981916931249471487[152] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]);
   out_981916931249471487[153] = 0;
   out_981916931249471487[154] = 1;
   out_981916931249471487[155] = 0;
   out_981916931249471487[156] = 0;
   out_981916931249471487[157] = 0;
   out_981916931249471487[158] = 0;
   out_981916931249471487[159] = 0;
   out_981916931249471487[160] = 0;
   out_981916931249471487[161] = 0;
   out_981916931249471487[162] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_981916931249471487[163] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_981916931249471487[164] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_981916931249471487[165] = 0;
   out_981916931249471487[166] = 0;
   out_981916931249471487[167] = 0;
   out_981916931249471487[168] = 0;
   out_981916931249471487[169] = 0;
   out_981916931249471487[170] = 0;
   out_981916931249471487[171] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]);
   out_981916931249471487[172] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[18] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[17] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[16]);
   out_981916931249471487[173] = 0;
   out_981916931249471487[174] = 0;
   out_981916931249471487[175] = 0;
   out_981916931249471487[176] = 1;
   out_981916931249471487[177] = 0;
   out_981916931249471487[178] = 0;
   out_981916931249471487[179] = 0;
   out_981916931249471487[180] = 0;
   out_981916931249471487[181] = 0;
   out_981916931249471487[182] = 0;
   out_981916931249471487[183] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_981916931249471487[184] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_981916931249471487[185] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_981916931249471487[186] = 0;
   out_981916931249471487[187] = 0;
   out_981916931249471487[188] = 0;
   out_981916931249471487[189] = 0;
   out_981916931249471487[190] = 0;
   out_981916931249471487[191] = 0;
   out_981916931249471487[192] = 0;
   out_981916931249471487[193] = 0;
   out_981916931249471487[194] = 0;
   out_981916931249471487[195] = 0;
   out_981916931249471487[196] = 0;
   out_981916931249471487[197] = 0;
   out_981916931249471487[198] = 1;
   out_981916931249471487[199] = 0;
   out_981916931249471487[200] = 0;
   out_981916931249471487[201] = 0;
   out_981916931249471487[202] = 0;
   out_981916931249471487[203] = 0;
   out_981916931249471487[204] = 0;
   out_981916931249471487[205] = 0;
   out_981916931249471487[206] = 0;
   out_981916931249471487[207] = 0;
   out_981916931249471487[208] = 0;
   out_981916931249471487[209] = 0;
   out_981916931249471487[210] = 0;
   out_981916931249471487[211] = 0;
   out_981916931249471487[212] = 0;
   out_981916931249471487[213] = 0;
   out_981916931249471487[214] = 0;
   out_981916931249471487[215] = 0;
   out_981916931249471487[216] = 0;
   out_981916931249471487[217] = 0;
   out_981916931249471487[218] = 0;
   out_981916931249471487[219] = 0;
   out_981916931249471487[220] = 1;
   out_981916931249471487[221] = 0;
   out_981916931249471487[222] = 0;
   out_981916931249471487[223] = 0;
   out_981916931249471487[224] = 0;
   out_981916931249471487[225] = 0;
   out_981916931249471487[226] = 0;
   out_981916931249471487[227] = 0;
   out_981916931249471487[228] = 0;
   out_981916931249471487[229] = 0;
   out_981916931249471487[230] = 0;
   out_981916931249471487[231] = 0;
   out_981916931249471487[232] = 0;
   out_981916931249471487[233] = 0;
   out_981916931249471487[234] = 0;
   out_981916931249471487[235] = 0;
   out_981916931249471487[236] = 0;
   out_981916931249471487[237] = 0;
   out_981916931249471487[238] = 0;
   out_981916931249471487[239] = 0;
   out_981916931249471487[240] = 0;
   out_981916931249471487[241] = 0;
   out_981916931249471487[242] = 1;
   out_981916931249471487[243] = 0;
   out_981916931249471487[244] = 0;
   out_981916931249471487[245] = 0;
   out_981916931249471487[246] = 0;
   out_981916931249471487[247] = 0;
   out_981916931249471487[248] = 0;
   out_981916931249471487[249] = 0;
   out_981916931249471487[250] = 0;
   out_981916931249471487[251] = 0;
   out_981916931249471487[252] = 0;
   out_981916931249471487[253] = 0;
   out_981916931249471487[254] = 0;
   out_981916931249471487[255] = 0;
   out_981916931249471487[256] = 0;
   out_981916931249471487[257] = 0;
   out_981916931249471487[258] = 0;
   out_981916931249471487[259] = 0;
   out_981916931249471487[260] = 0;
   out_981916931249471487[261] = 0;
   out_981916931249471487[262] = 0;
   out_981916931249471487[263] = 0;
   out_981916931249471487[264] = 1;
   out_981916931249471487[265] = 0;
   out_981916931249471487[266] = 0;
   out_981916931249471487[267] = 0;
   out_981916931249471487[268] = 0;
   out_981916931249471487[269] = 0;
   out_981916931249471487[270] = 0;
   out_981916931249471487[271] = 0;
   out_981916931249471487[272] = 0;
   out_981916931249471487[273] = 0;
   out_981916931249471487[274] = 0;
   out_981916931249471487[275] = 0;
   out_981916931249471487[276] = 0;
   out_981916931249471487[277] = 0;
   out_981916931249471487[278] = 0;
   out_981916931249471487[279] = 0;
   out_981916931249471487[280] = 0;
   out_981916931249471487[281] = 0;
   out_981916931249471487[282] = 0;
   out_981916931249471487[283] = 0;
   out_981916931249471487[284] = 0;
   out_981916931249471487[285] = 0;
   out_981916931249471487[286] = 1;
   out_981916931249471487[287] = 0;
   out_981916931249471487[288] = 0;
   out_981916931249471487[289] = 0;
   out_981916931249471487[290] = 0;
   out_981916931249471487[291] = 0;
   out_981916931249471487[292] = 0;
   out_981916931249471487[293] = 0;
   out_981916931249471487[294] = 0;
   out_981916931249471487[295] = 0;
   out_981916931249471487[296] = 0;
   out_981916931249471487[297] = 0;
   out_981916931249471487[298] = 0;
   out_981916931249471487[299] = 0;
   out_981916931249471487[300] = 0;
   out_981916931249471487[301] = 0;
   out_981916931249471487[302] = 0;
   out_981916931249471487[303] = 0;
   out_981916931249471487[304] = 0;
   out_981916931249471487[305] = 0;
   out_981916931249471487[306] = 0;
   out_981916931249471487[307] = 0;
   out_981916931249471487[308] = 1;
   out_981916931249471487[309] = 0;
   out_981916931249471487[310] = 0;
   out_981916931249471487[311] = 0;
   out_981916931249471487[312] = 0;
   out_981916931249471487[313] = 0;
   out_981916931249471487[314] = 0;
   out_981916931249471487[315] = 0;
   out_981916931249471487[316] = 0;
   out_981916931249471487[317] = 0;
   out_981916931249471487[318] = 0;
   out_981916931249471487[319] = 0;
   out_981916931249471487[320] = 0;
   out_981916931249471487[321] = 0;
   out_981916931249471487[322] = 0;
   out_981916931249471487[323] = 0;
   out_981916931249471487[324] = 0;
   out_981916931249471487[325] = 0;
   out_981916931249471487[326] = 0;
   out_981916931249471487[327] = 0;
   out_981916931249471487[328] = 0;
   out_981916931249471487[329] = 0;
   out_981916931249471487[330] = 1;
   out_981916931249471487[331] = 0;
   out_981916931249471487[332] = 0;
   out_981916931249471487[333] = 0;
   out_981916931249471487[334] = 0;
   out_981916931249471487[335] = 0;
   out_981916931249471487[336] = 0;
   out_981916931249471487[337] = 0;
   out_981916931249471487[338] = 0;
   out_981916931249471487[339] = 0;
   out_981916931249471487[340] = 0;
   out_981916931249471487[341] = 0;
   out_981916931249471487[342] = 0;
   out_981916931249471487[343] = 0;
   out_981916931249471487[344] = 0;
   out_981916931249471487[345] = 0;
   out_981916931249471487[346] = 0;
   out_981916931249471487[347] = 0;
   out_981916931249471487[348] = 0;
   out_981916931249471487[349] = 0;
   out_981916931249471487[350] = 0;
   out_981916931249471487[351] = 0;
   out_981916931249471487[352] = 1;
   out_981916931249471487[353] = 0;
   out_981916931249471487[354] = 0;
   out_981916931249471487[355] = 0;
   out_981916931249471487[356] = 0;
   out_981916931249471487[357] = 0;
   out_981916931249471487[358] = 0;
   out_981916931249471487[359] = 0;
   out_981916931249471487[360] = 0;
   out_981916931249471487[361] = 0;
   out_981916931249471487[362] = 0;
   out_981916931249471487[363] = 0;
   out_981916931249471487[364] = 0;
   out_981916931249471487[365] = 0;
   out_981916931249471487[366] = 0;
   out_981916931249471487[367] = 0;
   out_981916931249471487[368] = 0;
   out_981916931249471487[369] = 0;
   out_981916931249471487[370] = 0;
   out_981916931249471487[371] = 0;
   out_981916931249471487[372] = 0;
   out_981916931249471487[373] = 0;
   out_981916931249471487[374] = 1;
   out_981916931249471487[375] = 0;
   out_981916931249471487[376] = 0;
   out_981916931249471487[377] = 0;
   out_981916931249471487[378] = 0;
   out_981916931249471487[379] = 0;
   out_981916931249471487[380] = 0;
   out_981916931249471487[381] = 0;
   out_981916931249471487[382] = 0;
   out_981916931249471487[383] = 0;
   out_981916931249471487[384] = 0;
   out_981916931249471487[385] = 0;
   out_981916931249471487[386] = 0;
   out_981916931249471487[387] = 0;
   out_981916931249471487[388] = 0;
   out_981916931249471487[389] = 0;
   out_981916931249471487[390] = 0;
   out_981916931249471487[391] = 0;
   out_981916931249471487[392] = 0;
   out_981916931249471487[393] = 0;
   out_981916931249471487[394] = 0;
   out_981916931249471487[395] = 0;
   out_981916931249471487[396] = 1;
   out_981916931249471487[397] = 0;
   out_981916931249471487[398] = 0;
   out_981916931249471487[399] = 0;
   out_981916931249471487[400] = 0;
   out_981916931249471487[401] = 0;
   out_981916931249471487[402] = 0;
   out_981916931249471487[403] = 0;
   out_981916931249471487[404] = 0;
   out_981916931249471487[405] = 0;
   out_981916931249471487[406] = 0;
   out_981916931249471487[407] = 0;
   out_981916931249471487[408] = 0;
   out_981916931249471487[409] = 0;
   out_981916931249471487[410] = 0;
   out_981916931249471487[411] = 0;
   out_981916931249471487[412] = 0;
   out_981916931249471487[413] = 0;
   out_981916931249471487[414] = 0;
   out_981916931249471487[415] = 0;
   out_981916931249471487[416] = 0;
   out_981916931249471487[417] = 0;
   out_981916931249471487[418] = 1;
   out_981916931249471487[419] = 0;
   out_981916931249471487[420] = 0;
   out_981916931249471487[421] = 0;
   out_981916931249471487[422] = 0;
   out_981916931249471487[423] = 0;
   out_981916931249471487[424] = 0;
   out_981916931249471487[425] = 0;
   out_981916931249471487[426] = 0;
   out_981916931249471487[427] = 0;
   out_981916931249471487[428] = 0;
   out_981916931249471487[429] = 0;
   out_981916931249471487[430] = 0;
   out_981916931249471487[431] = 0;
   out_981916931249471487[432] = 0;
   out_981916931249471487[433] = 0;
   out_981916931249471487[434] = 0;
   out_981916931249471487[435] = 0;
   out_981916931249471487[436] = 0;
   out_981916931249471487[437] = 0;
   out_981916931249471487[438] = 0;
   out_981916931249471487[439] = 0;
   out_981916931249471487[440] = 1;
}
void h_4(double *state, double *unused, double *out_4876981635138551313) {
   out_4876981635138551313[0] = state[10] + state[13];
   out_4876981635138551313[1] = state[11] + state[14];
   out_4876981635138551313[2] = state[12] + state[15];
}
void H_4(double *state, double *unused, double *out_9002525001724971788) {
   out_9002525001724971788[0] = 0;
   out_9002525001724971788[1] = 0;
   out_9002525001724971788[2] = 0;
   out_9002525001724971788[3] = 0;
   out_9002525001724971788[4] = 0;
   out_9002525001724971788[5] = 0;
   out_9002525001724971788[6] = 0;
   out_9002525001724971788[7] = 0;
   out_9002525001724971788[8] = 0;
   out_9002525001724971788[9] = 0;
   out_9002525001724971788[10] = 1;
   out_9002525001724971788[11] = 0;
   out_9002525001724971788[12] = 0;
   out_9002525001724971788[13] = 1;
   out_9002525001724971788[14] = 0;
   out_9002525001724971788[15] = 0;
   out_9002525001724971788[16] = 0;
   out_9002525001724971788[17] = 0;
   out_9002525001724971788[18] = 0;
   out_9002525001724971788[19] = 0;
   out_9002525001724971788[20] = 0;
   out_9002525001724971788[21] = 0;
   out_9002525001724971788[22] = 0;
   out_9002525001724971788[23] = 0;
   out_9002525001724971788[24] = 0;
   out_9002525001724971788[25] = 0;
   out_9002525001724971788[26] = 0;
   out_9002525001724971788[27] = 0;
   out_9002525001724971788[28] = 0;
   out_9002525001724971788[29] = 0;
   out_9002525001724971788[30] = 0;
   out_9002525001724971788[31] = 0;
   out_9002525001724971788[32] = 0;
   out_9002525001724971788[33] = 1;
   out_9002525001724971788[34] = 0;
   out_9002525001724971788[35] = 0;
   out_9002525001724971788[36] = 1;
   out_9002525001724971788[37] = 0;
   out_9002525001724971788[38] = 0;
   out_9002525001724971788[39] = 0;
   out_9002525001724971788[40] = 0;
   out_9002525001724971788[41] = 0;
   out_9002525001724971788[42] = 0;
   out_9002525001724971788[43] = 0;
   out_9002525001724971788[44] = 0;
   out_9002525001724971788[45] = 0;
   out_9002525001724971788[46] = 0;
   out_9002525001724971788[47] = 0;
   out_9002525001724971788[48] = 0;
   out_9002525001724971788[49] = 0;
   out_9002525001724971788[50] = 0;
   out_9002525001724971788[51] = 0;
   out_9002525001724971788[52] = 0;
   out_9002525001724971788[53] = 0;
   out_9002525001724971788[54] = 0;
   out_9002525001724971788[55] = 0;
   out_9002525001724971788[56] = 1;
   out_9002525001724971788[57] = 0;
   out_9002525001724971788[58] = 0;
   out_9002525001724971788[59] = 1;
   out_9002525001724971788[60] = 0;
   out_9002525001724971788[61] = 0;
   out_9002525001724971788[62] = 0;
   out_9002525001724971788[63] = 0;
   out_9002525001724971788[64] = 0;
   out_9002525001724971788[65] = 0;
}
void h_9(double *state, double *unused, double *out_8898108829413608493) {
   out_8898108829413608493[0] = state[10];
   out_8898108829413608493[1] = state[11];
   out_8898108829413608493[2] = state[12];
}
void H_9(double *state, double *unused, double *out_8761335355095381143) {
   out_8761335355095381143[0] = 0;
   out_8761335355095381143[1] = 0;
   out_8761335355095381143[2] = 0;
   out_8761335355095381143[3] = 0;
   out_8761335355095381143[4] = 0;
   out_8761335355095381143[5] = 0;
   out_8761335355095381143[6] = 0;
   out_8761335355095381143[7] = 0;
   out_8761335355095381143[8] = 0;
   out_8761335355095381143[9] = 0;
   out_8761335355095381143[10] = 1;
   out_8761335355095381143[11] = 0;
   out_8761335355095381143[12] = 0;
   out_8761335355095381143[13] = 0;
   out_8761335355095381143[14] = 0;
   out_8761335355095381143[15] = 0;
   out_8761335355095381143[16] = 0;
   out_8761335355095381143[17] = 0;
   out_8761335355095381143[18] = 0;
   out_8761335355095381143[19] = 0;
   out_8761335355095381143[20] = 0;
   out_8761335355095381143[21] = 0;
   out_8761335355095381143[22] = 0;
   out_8761335355095381143[23] = 0;
   out_8761335355095381143[24] = 0;
   out_8761335355095381143[25] = 0;
   out_8761335355095381143[26] = 0;
   out_8761335355095381143[27] = 0;
   out_8761335355095381143[28] = 0;
   out_8761335355095381143[29] = 0;
   out_8761335355095381143[30] = 0;
   out_8761335355095381143[31] = 0;
   out_8761335355095381143[32] = 0;
   out_8761335355095381143[33] = 1;
   out_8761335355095381143[34] = 0;
   out_8761335355095381143[35] = 0;
   out_8761335355095381143[36] = 0;
   out_8761335355095381143[37] = 0;
   out_8761335355095381143[38] = 0;
   out_8761335355095381143[39] = 0;
   out_8761335355095381143[40] = 0;
   out_8761335355095381143[41] = 0;
   out_8761335355095381143[42] = 0;
   out_8761335355095381143[43] = 0;
   out_8761335355095381143[44] = 0;
   out_8761335355095381143[45] = 0;
   out_8761335355095381143[46] = 0;
   out_8761335355095381143[47] = 0;
   out_8761335355095381143[48] = 0;
   out_8761335355095381143[49] = 0;
   out_8761335355095381143[50] = 0;
   out_8761335355095381143[51] = 0;
   out_8761335355095381143[52] = 0;
   out_8761335355095381143[53] = 0;
   out_8761335355095381143[54] = 0;
   out_8761335355095381143[55] = 0;
   out_8761335355095381143[56] = 1;
   out_8761335355095381143[57] = 0;
   out_8761335355095381143[58] = 0;
   out_8761335355095381143[59] = 0;
   out_8761335355095381143[60] = 0;
   out_8761335355095381143[61] = 0;
   out_8761335355095381143[62] = 0;
   out_8761335355095381143[63] = 0;
   out_8761335355095381143[64] = 0;
   out_8761335355095381143[65] = 0;
}
void h_10(double *state, double *unused, double *out_7274649568648185117) {
   out_7274649568648185117[0] = 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0] + state[16] + state[19];
   out_7274649568648185117[1] = 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1] + state[17] + state[20];
   out_7274649568648185117[2] = 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[2] + state[18] + state[21];
}
void H_10(double *state, double *unused, double *out_2334001253560571071) {
   out_2334001253560571071[0] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*pow(state[0], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_2334001253560571071[1] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_2334001253560571071[2] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[2];
   out_2334001253560571071[3] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_2334001253560571071[4] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_2334001253560571071[5] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_2334001253560571071[6] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_2334001253560571071[7] = 0;
   out_2334001253560571071[8] = 0;
   out_2334001253560571071[9] = 0;
   out_2334001253560571071[10] = 0;
   out_2334001253560571071[11] = 0;
   out_2334001253560571071[12] = 0;
   out_2334001253560571071[13] = 0;
   out_2334001253560571071[14] = 0;
   out_2334001253560571071[15] = 0;
   out_2334001253560571071[16] = 1;
   out_2334001253560571071[17] = 0;
   out_2334001253560571071[18] = 0;
   out_2334001253560571071[19] = 1;
   out_2334001253560571071[20] = 0;
   out_2334001253560571071[21] = 0;
   out_2334001253560571071[22] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_2334001253560571071[23] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*pow(state[1], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_2334001253560571071[24] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1]*state[2];
   out_2334001253560571071[25] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_2334001253560571071[26] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_2334001253560571071[27] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_2334001253560571071[28] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_2334001253560571071[29] = 0;
   out_2334001253560571071[30] = 0;
   out_2334001253560571071[31] = 0;
   out_2334001253560571071[32] = 0;
   out_2334001253560571071[33] = 0;
   out_2334001253560571071[34] = 0;
   out_2334001253560571071[35] = 0;
   out_2334001253560571071[36] = 0;
   out_2334001253560571071[37] = 0;
   out_2334001253560571071[38] = 0;
   out_2334001253560571071[39] = 1;
   out_2334001253560571071[40] = 0;
   out_2334001253560571071[41] = 0;
   out_2334001253560571071[42] = 1;
   out_2334001253560571071[43] = 0;
   out_2334001253560571071[44] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[0]*state[2];
   out_2334001253560571071[45] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[1]*state[2];
   out_2334001253560571071[46] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*pow(state[2], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_2334001253560571071[47] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_2334001253560571071[48] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_2334001253560571071[49] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_2334001253560571071[50] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_2334001253560571071[51] = 0;
   out_2334001253560571071[52] = 0;
   out_2334001253560571071[53] = 0;
   out_2334001253560571071[54] = 0;
   out_2334001253560571071[55] = 0;
   out_2334001253560571071[56] = 0;
   out_2334001253560571071[57] = 0;
   out_2334001253560571071[58] = 0;
   out_2334001253560571071[59] = 0;
   out_2334001253560571071[60] = 0;
   out_2334001253560571071[61] = 0;
   out_2334001253560571071[62] = 1;
   out_2334001253560571071[63] = 0;
   out_2334001253560571071[64] = 0;
   out_2334001253560571071[65] = 1;
}
void h_12(double *state, double *unused, double *out_5719602990354587718) {
   out_5719602990354587718[0] = state[0];
   out_5719602990354587718[1] = state[1];
   out_5719602990354587718[2] = state[2];
}
void H_12(double *state, double *unused, double *out_3983068593693009993) {
   out_3983068593693009993[0] = 1;
   out_3983068593693009993[1] = 0;
   out_3983068593693009993[2] = 0;
   out_3983068593693009993[3] = 0;
   out_3983068593693009993[4] = 0;
   out_3983068593693009993[5] = 0;
   out_3983068593693009993[6] = 0;
   out_3983068593693009993[7] = 0;
   out_3983068593693009993[8] = 0;
   out_3983068593693009993[9] = 0;
   out_3983068593693009993[10] = 0;
   out_3983068593693009993[11] = 0;
   out_3983068593693009993[12] = 0;
   out_3983068593693009993[13] = 0;
   out_3983068593693009993[14] = 0;
   out_3983068593693009993[15] = 0;
   out_3983068593693009993[16] = 0;
   out_3983068593693009993[17] = 0;
   out_3983068593693009993[18] = 0;
   out_3983068593693009993[19] = 0;
   out_3983068593693009993[20] = 0;
   out_3983068593693009993[21] = 0;
   out_3983068593693009993[22] = 0;
   out_3983068593693009993[23] = 1;
   out_3983068593693009993[24] = 0;
   out_3983068593693009993[25] = 0;
   out_3983068593693009993[26] = 0;
   out_3983068593693009993[27] = 0;
   out_3983068593693009993[28] = 0;
   out_3983068593693009993[29] = 0;
   out_3983068593693009993[30] = 0;
   out_3983068593693009993[31] = 0;
   out_3983068593693009993[32] = 0;
   out_3983068593693009993[33] = 0;
   out_3983068593693009993[34] = 0;
   out_3983068593693009993[35] = 0;
   out_3983068593693009993[36] = 0;
   out_3983068593693009993[37] = 0;
   out_3983068593693009993[38] = 0;
   out_3983068593693009993[39] = 0;
   out_3983068593693009993[40] = 0;
   out_3983068593693009993[41] = 0;
   out_3983068593693009993[42] = 0;
   out_3983068593693009993[43] = 0;
   out_3983068593693009993[44] = 0;
   out_3983068593693009993[45] = 0;
   out_3983068593693009993[46] = 1;
   out_3983068593693009993[47] = 0;
   out_3983068593693009993[48] = 0;
   out_3983068593693009993[49] = 0;
   out_3983068593693009993[50] = 0;
   out_3983068593693009993[51] = 0;
   out_3983068593693009993[52] = 0;
   out_3983068593693009993[53] = 0;
   out_3983068593693009993[54] = 0;
   out_3983068593693009993[55] = 0;
   out_3983068593693009993[56] = 0;
   out_3983068593693009993[57] = 0;
   out_3983068593693009993[58] = 0;
   out_3983068593693009993[59] = 0;
   out_3983068593693009993[60] = 0;
   out_3983068593693009993[61] = 0;
   out_3983068593693009993[62] = 0;
   out_3983068593693009993[63] = 0;
   out_3983068593693009993[64] = 0;
   out_3983068593693009993[65] = 0;
}
void h_35(double *state, double *unused, double *out_2708259576654430504) {
   out_2708259576654430504[0] = state[7];
   out_2708259576654430504[1] = state[8];
   out_2708259576654430504[2] = state[9];
}
void H_35(double *state, double *unused, double *out_5635862944352364412) {
   out_5635862944352364412[0] = 0;
   out_5635862944352364412[1] = 0;
   out_5635862944352364412[2] = 0;
   out_5635862944352364412[3] = 0;
   out_5635862944352364412[4] = 0;
   out_5635862944352364412[5] = 0;
   out_5635862944352364412[6] = 0;
   out_5635862944352364412[7] = 1;
   out_5635862944352364412[8] = 0;
   out_5635862944352364412[9] = 0;
   out_5635862944352364412[10] = 0;
   out_5635862944352364412[11] = 0;
   out_5635862944352364412[12] = 0;
   out_5635862944352364412[13] = 0;
   out_5635862944352364412[14] = 0;
   out_5635862944352364412[15] = 0;
   out_5635862944352364412[16] = 0;
   out_5635862944352364412[17] = 0;
   out_5635862944352364412[18] = 0;
   out_5635862944352364412[19] = 0;
   out_5635862944352364412[20] = 0;
   out_5635862944352364412[21] = 0;
   out_5635862944352364412[22] = 0;
   out_5635862944352364412[23] = 0;
   out_5635862944352364412[24] = 0;
   out_5635862944352364412[25] = 0;
   out_5635862944352364412[26] = 0;
   out_5635862944352364412[27] = 0;
   out_5635862944352364412[28] = 0;
   out_5635862944352364412[29] = 0;
   out_5635862944352364412[30] = 1;
   out_5635862944352364412[31] = 0;
   out_5635862944352364412[32] = 0;
   out_5635862944352364412[33] = 0;
   out_5635862944352364412[34] = 0;
   out_5635862944352364412[35] = 0;
   out_5635862944352364412[36] = 0;
   out_5635862944352364412[37] = 0;
   out_5635862944352364412[38] = 0;
   out_5635862944352364412[39] = 0;
   out_5635862944352364412[40] = 0;
   out_5635862944352364412[41] = 0;
   out_5635862944352364412[42] = 0;
   out_5635862944352364412[43] = 0;
   out_5635862944352364412[44] = 0;
   out_5635862944352364412[45] = 0;
   out_5635862944352364412[46] = 0;
   out_5635862944352364412[47] = 0;
   out_5635862944352364412[48] = 0;
   out_5635862944352364412[49] = 0;
   out_5635862944352364412[50] = 0;
   out_5635862944352364412[51] = 0;
   out_5635862944352364412[52] = 0;
   out_5635862944352364412[53] = 1;
   out_5635862944352364412[54] = 0;
   out_5635862944352364412[55] = 0;
   out_5635862944352364412[56] = 0;
   out_5635862944352364412[57] = 0;
   out_5635862944352364412[58] = 0;
   out_5635862944352364412[59] = 0;
   out_5635862944352364412[60] = 0;
   out_5635862944352364412[61] = 0;
   out_5635862944352364412[62] = 0;
   out_5635862944352364412[63] = 0;
   out_5635862944352364412[64] = 0;
   out_5635862944352364412[65] = 0;
}
void h_32(double *state, double *unused, double *out_8889120182234263445) {
   out_8889120182234263445[0] = state[3];
   out_8889120182234263445[1] = state[4];
   out_8889120182234263445[2] = state[5];
   out_8889120182234263445[3] = state[6];
}
void H_32(double *state, double *unused, double *out_165441427855248146) {
   out_165441427855248146[0] = 0;
   out_165441427855248146[1] = 0;
   out_165441427855248146[2] = 0;
   out_165441427855248146[3] = 1;
   out_165441427855248146[4] = 0;
   out_165441427855248146[5] = 0;
   out_165441427855248146[6] = 0;
   out_165441427855248146[7] = 0;
   out_165441427855248146[8] = 0;
   out_165441427855248146[9] = 0;
   out_165441427855248146[10] = 0;
   out_165441427855248146[11] = 0;
   out_165441427855248146[12] = 0;
   out_165441427855248146[13] = 0;
   out_165441427855248146[14] = 0;
   out_165441427855248146[15] = 0;
   out_165441427855248146[16] = 0;
   out_165441427855248146[17] = 0;
   out_165441427855248146[18] = 0;
   out_165441427855248146[19] = 0;
   out_165441427855248146[20] = 0;
   out_165441427855248146[21] = 0;
   out_165441427855248146[22] = 0;
   out_165441427855248146[23] = 0;
   out_165441427855248146[24] = 0;
   out_165441427855248146[25] = 0;
   out_165441427855248146[26] = 1;
   out_165441427855248146[27] = 0;
   out_165441427855248146[28] = 0;
   out_165441427855248146[29] = 0;
   out_165441427855248146[30] = 0;
   out_165441427855248146[31] = 0;
   out_165441427855248146[32] = 0;
   out_165441427855248146[33] = 0;
   out_165441427855248146[34] = 0;
   out_165441427855248146[35] = 0;
   out_165441427855248146[36] = 0;
   out_165441427855248146[37] = 0;
   out_165441427855248146[38] = 0;
   out_165441427855248146[39] = 0;
   out_165441427855248146[40] = 0;
   out_165441427855248146[41] = 0;
   out_165441427855248146[42] = 0;
   out_165441427855248146[43] = 0;
   out_165441427855248146[44] = 0;
   out_165441427855248146[45] = 0;
   out_165441427855248146[46] = 0;
   out_165441427855248146[47] = 0;
   out_165441427855248146[48] = 0;
   out_165441427855248146[49] = 1;
   out_165441427855248146[50] = 0;
   out_165441427855248146[51] = 0;
   out_165441427855248146[52] = 0;
   out_165441427855248146[53] = 0;
   out_165441427855248146[54] = 0;
   out_165441427855248146[55] = 0;
   out_165441427855248146[56] = 0;
   out_165441427855248146[57] = 0;
   out_165441427855248146[58] = 0;
   out_165441427855248146[59] = 0;
   out_165441427855248146[60] = 0;
   out_165441427855248146[61] = 0;
   out_165441427855248146[62] = 0;
   out_165441427855248146[63] = 0;
   out_165441427855248146[64] = 0;
   out_165441427855248146[65] = 0;
   out_165441427855248146[66] = 0;
   out_165441427855248146[67] = 0;
   out_165441427855248146[68] = 0;
   out_165441427855248146[69] = 0;
   out_165441427855248146[70] = 0;
   out_165441427855248146[71] = 0;
   out_165441427855248146[72] = 1;
   out_165441427855248146[73] = 0;
   out_165441427855248146[74] = 0;
   out_165441427855248146[75] = 0;
   out_165441427855248146[76] = 0;
   out_165441427855248146[77] = 0;
   out_165441427855248146[78] = 0;
   out_165441427855248146[79] = 0;
   out_165441427855248146[80] = 0;
   out_165441427855248146[81] = 0;
   out_165441427855248146[82] = 0;
   out_165441427855248146[83] = 0;
   out_165441427855248146[84] = 0;
   out_165441427855248146[85] = 0;
   out_165441427855248146[86] = 0;
   out_165441427855248146[87] = 0;
}
void h_13(double *state, double *unused, double *out_172447025109162698) {
   out_172447025109162698[0] = (-2*state[3]*state[5] + 2*state[4]*state[6])*state[9] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[8] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[7];
   out_172447025109162698[1] = (2*state[3]*state[4] + 2*state[5]*state[6])*state[9] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[7] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[8];
   out_172447025109162698[2] = (-2*state[3]*state[4] + 2*state[5]*state[6])*state[8] + (2*state[3]*state[5] + 2*state[4]*state[6])*state[7] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[9];
}
void H_13(double *state, double *unused, double *out_6392899740711514834) {
   out_6392899740711514834[0] = 0;
   out_6392899740711514834[1] = 0;
   out_6392899740711514834[2] = 0;
   out_6392899740711514834[3] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_6392899740711514834[4] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_6392899740711514834[5] = -2*state[3]*state[9] + 2*state[4]*state[8] - 2*state[5]*state[7];
   out_6392899740711514834[6] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_6392899740711514834[7] = pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2);
   out_6392899740711514834[8] = 2*state[3]*state[6] + 2*state[4]*state[5];
   out_6392899740711514834[9] = -2*state[3]*state[5] + 2*state[4]*state[6];
   out_6392899740711514834[10] = 0;
   out_6392899740711514834[11] = 0;
   out_6392899740711514834[12] = 0;
   out_6392899740711514834[13] = 0;
   out_6392899740711514834[14] = 0;
   out_6392899740711514834[15] = 0;
   out_6392899740711514834[16] = 0;
   out_6392899740711514834[17] = 0;
   out_6392899740711514834[18] = 0;
   out_6392899740711514834[19] = 0;
   out_6392899740711514834[20] = 0;
   out_6392899740711514834[21] = 0;
   out_6392899740711514834[22] = 0;
   out_6392899740711514834[23] = 0;
   out_6392899740711514834[24] = 0;
   out_6392899740711514834[25] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_6392899740711514834[26] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_6392899740711514834[27] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_6392899740711514834[28] = -2*state[3]*state[7] + 2*state[5]*state[9] - 2*state[6]*state[8];
   out_6392899740711514834[29] = -2*state[3]*state[6] + 2*state[4]*state[5];
   out_6392899740711514834[30] = pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2);
   out_6392899740711514834[31] = 2*state[3]*state[4] + 2*state[5]*state[6];
   out_6392899740711514834[32] = 0;
   out_6392899740711514834[33] = 0;
   out_6392899740711514834[34] = 0;
   out_6392899740711514834[35] = 0;
   out_6392899740711514834[36] = 0;
   out_6392899740711514834[37] = 0;
   out_6392899740711514834[38] = 0;
   out_6392899740711514834[39] = 0;
   out_6392899740711514834[40] = 0;
   out_6392899740711514834[41] = 0;
   out_6392899740711514834[42] = 0;
   out_6392899740711514834[43] = 0;
   out_6392899740711514834[44] = 0;
   out_6392899740711514834[45] = 0;
   out_6392899740711514834[46] = 0;
   out_6392899740711514834[47] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_6392899740711514834[48] = -2*state[3]*state[8] - 2*state[4]*state[9] + 2*state[6]*state[7];
   out_6392899740711514834[49] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_6392899740711514834[50] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_6392899740711514834[51] = 2*state[3]*state[5] + 2*state[4]*state[6];
   out_6392899740711514834[52] = -2*state[3]*state[4] + 2*state[5]*state[6];
   out_6392899740711514834[53] = pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2);
   out_6392899740711514834[54] = 0;
   out_6392899740711514834[55] = 0;
   out_6392899740711514834[56] = 0;
   out_6392899740711514834[57] = 0;
   out_6392899740711514834[58] = 0;
   out_6392899740711514834[59] = 0;
   out_6392899740711514834[60] = 0;
   out_6392899740711514834[61] = 0;
   out_6392899740711514834[62] = 0;
   out_6392899740711514834[63] = 0;
   out_6392899740711514834[64] = 0;
   out_6392899740711514834[65] = 0;
}
void h_14(double *state, double *unused, double *out_8898108829413608493) {
   out_8898108829413608493[0] = state[10];
   out_8898108829413608493[1] = state[11];
   out_8898108829413608493[2] = state[12];
}
void H_14(double *state, double *unused, double *out_8761335355095381143) {
   out_8761335355095381143[0] = 0;
   out_8761335355095381143[1] = 0;
   out_8761335355095381143[2] = 0;
   out_8761335355095381143[3] = 0;
   out_8761335355095381143[4] = 0;
   out_8761335355095381143[5] = 0;
   out_8761335355095381143[6] = 0;
   out_8761335355095381143[7] = 0;
   out_8761335355095381143[8] = 0;
   out_8761335355095381143[9] = 0;
   out_8761335355095381143[10] = 1;
   out_8761335355095381143[11] = 0;
   out_8761335355095381143[12] = 0;
   out_8761335355095381143[13] = 0;
   out_8761335355095381143[14] = 0;
   out_8761335355095381143[15] = 0;
   out_8761335355095381143[16] = 0;
   out_8761335355095381143[17] = 0;
   out_8761335355095381143[18] = 0;
   out_8761335355095381143[19] = 0;
   out_8761335355095381143[20] = 0;
   out_8761335355095381143[21] = 0;
   out_8761335355095381143[22] = 0;
   out_8761335355095381143[23] = 0;
   out_8761335355095381143[24] = 0;
   out_8761335355095381143[25] = 0;
   out_8761335355095381143[26] = 0;
   out_8761335355095381143[27] = 0;
   out_8761335355095381143[28] = 0;
   out_8761335355095381143[29] = 0;
   out_8761335355095381143[30] = 0;
   out_8761335355095381143[31] = 0;
   out_8761335355095381143[32] = 0;
   out_8761335355095381143[33] = 1;
   out_8761335355095381143[34] = 0;
   out_8761335355095381143[35] = 0;
   out_8761335355095381143[36] = 0;
   out_8761335355095381143[37] = 0;
   out_8761335355095381143[38] = 0;
   out_8761335355095381143[39] = 0;
   out_8761335355095381143[40] = 0;
   out_8761335355095381143[41] = 0;
   out_8761335355095381143[42] = 0;
   out_8761335355095381143[43] = 0;
   out_8761335355095381143[44] = 0;
   out_8761335355095381143[45] = 0;
   out_8761335355095381143[46] = 0;
   out_8761335355095381143[47] = 0;
   out_8761335355095381143[48] = 0;
   out_8761335355095381143[49] = 0;
   out_8761335355095381143[50] = 0;
   out_8761335355095381143[51] = 0;
   out_8761335355095381143[52] = 0;
   out_8761335355095381143[53] = 0;
   out_8761335355095381143[54] = 0;
   out_8761335355095381143[55] = 0;
   out_8761335355095381143[56] = 1;
   out_8761335355095381143[57] = 0;
   out_8761335355095381143[58] = 0;
   out_8761335355095381143[59] = 0;
   out_8761335355095381143[60] = 0;
   out_8761335355095381143[61] = 0;
   out_8761335355095381143[62] = 0;
   out_8761335355095381143[63] = 0;
   out_8761335355095381143[64] = 0;
   out_8761335355095381143[65] = 0;
}
void h_33(double *state, double *unused, double *out_3585973114668776251) {
   out_3585973114668776251[0] = state[16];
   out_3585973114668776251[1] = state[17];
   out_3585973114668776251[2] = state[18];
}
void H_33(double *state, double *unused, double *out_2485305939713506808) {
   out_2485305939713506808[0] = 0;
   out_2485305939713506808[1] = 0;
   out_2485305939713506808[2] = 0;
   out_2485305939713506808[3] = 0;
   out_2485305939713506808[4] = 0;
   out_2485305939713506808[5] = 0;
   out_2485305939713506808[6] = 0;
   out_2485305939713506808[7] = 0;
   out_2485305939713506808[8] = 0;
   out_2485305939713506808[9] = 0;
   out_2485305939713506808[10] = 0;
   out_2485305939713506808[11] = 0;
   out_2485305939713506808[12] = 0;
   out_2485305939713506808[13] = 0;
   out_2485305939713506808[14] = 0;
   out_2485305939713506808[15] = 0;
   out_2485305939713506808[16] = 1;
   out_2485305939713506808[17] = 0;
   out_2485305939713506808[18] = 0;
   out_2485305939713506808[19] = 0;
   out_2485305939713506808[20] = 0;
   out_2485305939713506808[21] = 0;
   out_2485305939713506808[22] = 0;
   out_2485305939713506808[23] = 0;
   out_2485305939713506808[24] = 0;
   out_2485305939713506808[25] = 0;
   out_2485305939713506808[26] = 0;
   out_2485305939713506808[27] = 0;
   out_2485305939713506808[28] = 0;
   out_2485305939713506808[29] = 0;
   out_2485305939713506808[30] = 0;
   out_2485305939713506808[31] = 0;
   out_2485305939713506808[32] = 0;
   out_2485305939713506808[33] = 0;
   out_2485305939713506808[34] = 0;
   out_2485305939713506808[35] = 0;
   out_2485305939713506808[36] = 0;
   out_2485305939713506808[37] = 0;
   out_2485305939713506808[38] = 0;
   out_2485305939713506808[39] = 1;
   out_2485305939713506808[40] = 0;
   out_2485305939713506808[41] = 0;
   out_2485305939713506808[42] = 0;
   out_2485305939713506808[43] = 0;
   out_2485305939713506808[44] = 0;
   out_2485305939713506808[45] = 0;
   out_2485305939713506808[46] = 0;
   out_2485305939713506808[47] = 0;
   out_2485305939713506808[48] = 0;
   out_2485305939713506808[49] = 0;
   out_2485305939713506808[50] = 0;
   out_2485305939713506808[51] = 0;
   out_2485305939713506808[52] = 0;
   out_2485305939713506808[53] = 0;
   out_2485305939713506808[54] = 0;
   out_2485305939713506808[55] = 0;
   out_2485305939713506808[56] = 0;
   out_2485305939713506808[57] = 0;
   out_2485305939713506808[58] = 0;
   out_2485305939713506808[59] = 0;
   out_2485305939713506808[60] = 0;
   out_2485305939713506808[61] = 0;
   out_2485305939713506808[62] = 1;
   out_2485305939713506808[63] = 0;
   out_2485305939713506808[64] = 0;
   out_2485305939713506808[65] = 0;
}
#include <eigen3/Eigen/Dense>
#include <iostream>

typedef Eigen::Matrix<double, DIM, DIM, Eigen::RowMajor> DDM;
typedef Eigen::Matrix<double, EDIM, EDIM, Eigen::RowMajor> EEM;
typedef Eigen::Matrix<double, DIM, EDIM, Eigen::RowMajor> DEM;

void predict(double *in_x, double *in_P, double *in_Q, double dt) {
  typedef Eigen::Matrix<double, MEDIM, MEDIM, Eigen::RowMajor> RRM;

  double nx[DIM] = {0};
  double in_F[EDIM*EDIM] = {0};

  // functions from sympy
  f_fun(in_x, dt, nx);
  F_fun(in_x, dt, in_F);


  EEM F(in_F);
  EEM P(in_P);
  EEM Q(in_Q);

  RRM F_main = F.topLeftCorner(MEDIM, MEDIM);
  P.topLeftCorner(MEDIM, MEDIM) = (F_main * P.topLeftCorner(MEDIM, MEDIM)) * F_main.transpose();
  P.topRightCorner(MEDIM, EDIM - MEDIM) = F_main * P.topRightCorner(MEDIM, EDIM - MEDIM);
  P.bottomLeftCorner(EDIM - MEDIM, MEDIM) = P.bottomLeftCorner(EDIM - MEDIM, MEDIM) * F_main.transpose();

  P = P + dt*Q;

  // copy out state
  memcpy(in_x, nx, DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
}

// note: extra_args dim only correct when null space projecting
// otherwise 1
template <int ZDIM, int EADIM, bool MAHA_TEST>
void update(double *in_x, double *in_P, Hfun h_fun, Hfun H_fun, Hfun Hea_fun, double *in_z, double *in_R, double *in_ea, double MAHA_THRESHOLD) {
  typedef Eigen::Matrix<double, ZDIM, ZDIM, Eigen::RowMajor> ZZM;
  typedef Eigen::Matrix<double, ZDIM, DIM, Eigen::RowMajor> ZDM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, EDIM, Eigen::RowMajor> XEM;
  //typedef Eigen::Matrix<double, EDIM, ZDIM, Eigen::RowMajor> EZM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, 1> X1M;
  typedef Eigen::Matrix<double, Eigen::Dynamic, Eigen::Dynamic, Eigen::RowMajor> XXM;

  double in_hx[ZDIM] = {0};
  double in_H[ZDIM * DIM] = {0};
  double in_H_mod[EDIM * DIM] = {0};
  double delta_x[EDIM] = {0};
  double x_new[DIM] = {0};


  // state x, P
  Eigen::Matrix<double, ZDIM, 1> z(in_z);
  EEM P(in_P);
  ZZM pre_R(in_R);

  // functions from sympy
  h_fun(in_x, in_ea, in_hx);
  H_fun(in_x, in_ea, in_H);
  ZDM pre_H(in_H);

  // get y (y = z - hx)
  Eigen::Matrix<double, ZDIM, 1> pre_y(in_hx); pre_y = z - pre_y;
  X1M y; XXM H; XXM R;
  if (Hea_fun){
    typedef Eigen::Matrix<double, ZDIM, EADIM, Eigen::RowMajor> ZAM;
    double in_Hea[ZDIM * EADIM] = {0};
    Hea_fun(in_x, in_ea, in_Hea);
    ZAM Hea(in_Hea);
    XXM A = Hea.transpose().fullPivLu().kernel();


    y = A.transpose() * pre_y;
    H = A.transpose() * pre_H;
    R = A.transpose() * pre_R * A;
  } else {
    y = pre_y;
    H = pre_H;
    R = pre_R;
  }
  // get modified H
  H_mod_fun(in_x, in_H_mod);
  DEM H_mod(in_H_mod);
  XEM H_err = H * H_mod;

  // Do mahalobis distance test
  if (MAHA_TEST){
    XXM a = (H_err * P * H_err.transpose() + R).inverse();
    double maha_dist = y.transpose() * a * y;
    if (maha_dist > MAHA_THRESHOLD){
      R = 1.0e16 * R;
    }
  }

  // Outlier resilient weighting
  double weight = 1;//(1.5)/(1 + y.squaredNorm()/R.sum());

  // kalman gains and I_KH
  XXM S = ((H_err * P) * H_err.transpose()) + R/weight;
  XEM KT = S.fullPivLu().solve(H_err * P.transpose());
  //EZM K = KT.transpose(); TODO: WHY DOES THIS NOT COMPILE?
  //EZM K = S.fullPivLu().solve(H_err * P.transpose()).transpose();
  //std::cout << "Here is the matrix rot:\n" << K << std::endl;
  EEM I_KH = Eigen::Matrix<double, EDIM, EDIM>::Identity() - (KT.transpose() * H_err);

  // update state by injecting dx
  Eigen::Matrix<double, EDIM, 1> dx(delta_x);
  dx  = (KT.transpose() * y);
  memcpy(delta_x, dx.data(), EDIM * sizeof(double));
  err_fun(in_x, delta_x, x_new);
  Eigen::Matrix<double, DIM, 1> x(x_new);

  // update cov
  P = ((I_KH * P) * I_KH.transpose()) + ((KT.transpose() * R) * KT);

  // copy out state
  memcpy(in_x, x.data(), DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
  memcpy(in_z, y.data(), y.rows() * sizeof(double));
}




}
extern "C" {

void live_update_4(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_4, H_4, NULL, in_z, in_R, in_ea, MAHA_THRESH_4);
}
void live_update_9(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_9, H_9, NULL, in_z, in_R, in_ea, MAHA_THRESH_9);
}
void live_update_10(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_10, H_10, NULL, in_z, in_R, in_ea, MAHA_THRESH_10);
}
void live_update_12(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_12, H_12, NULL, in_z, in_R, in_ea, MAHA_THRESH_12);
}
void live_update_35(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_35, H_35, NULL, in_z, in_R, in_ea, MAHA_THRESH_35);
}
void live_update_32(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<4, 3, 0>(in_x, in_P, h_32, H_32, NULL, in_z, in_R, in_ea, MAHA_THRESH_32);
}
void live_update_13(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_13, H_13, NULL, in_z, in_R, in_ea, MAHA_THRESH_13);
}
void live_update_14(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_14, H_14, NULL, in_z, in_R, in_ea, MAHA_THRESH_14);
}
void live_update_33(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_33, H_33, NULL, in_z, in_R, in_ea, MAHA_THRESH_33);
}
void live_H(double *in_vec, double *out_7434436789771466707) {
  H(in_vec, out_7434436789771466707);
}
void live_err_fun(double *nom_x, double *delta_x, double *out_1609212297949724591) {
  err_fun(nom_x, delta_x, out_1609212297949724591);
}
void live_inv_err_fun(double *nom_x, double *true_x, double *out_5609648295481617961) {
  inv_err_fun(nom_x, true_x, out_5609648295481617961);
}
void live_H_mod_fun(double *state, double *out_7153323831238007106) {
  H_mod_fun(state, out_7153323831238007106);
}
void live_f_fun(double *state, double dt, double *out_1909445742055462681) {
  f_fun(state,  dt, out_1909445742055462681);
}
void live_F_fun(double *state, double dt, double *out_981916931249471487) {
  F_fun(state,  dt, out_981916931249471487);
}
void live_h_4(double *state, double *unused, double *out_4876981635138551313) {
  h_4(state, unused, out_4876981635138551313);
}
void live_H_4(double *state, double *unused, double *out_9002525001724971788) {
  H_4(state, unused, out_9002525001724971788);
}
void live_h_9(double *state, double *unused, double *out_8898108829413608493) {
  h_9(state, unused, out_8898108829413608493);
}
void live_H_9(double *state, double *unused, double *out_8761335355095381143) {
  H_9(state, unused, out_8761335355095381143);
}
void live_h_10(double *state, double *unused, double *out_7274649568648185117) {
  h_10(state, unused, out_7274649568648185117);
}
void live_H_10(double *state, double *unused, double *out_2334001253560571071) {
  H_10(state, unused, out_2334001253560571071);
}
void live_h_12(double *state, double *unused, double *out_5719602990354587718) {
  h_12(state, unused, out_5719602990354587718);
}
void live_H_12(double *state, double *unused, double *out_3983068593693009993) {
  H_12(state, unused, out_3983068593693009993);
}
void live_h_35(double *state, double *unused, double *out_2708259576654430504) {
  h_35(state, unused, out_2708259576654430504);
}
void live_H_35(double *state, double *unused, double *out_5635862944352364412) {
  H_35(state, unused, out_5635862944352364412);
}
void live_h_32(double *state, double *unused, double *out_8889120182234263445) {
  h_32(state, unused, out_8889120182234263445);
}
void live_H_32(double *state, double *unused, double *out_165441427855248146) {
  H_32(state, unused, out_165441427855248146);
}
void live_h_13(double *state, double *unused, double *out_172447025109162698) {
  h_13(state, unused, out_172447025109162698);
}
void live_H_13(double *state, double *unused, double *out_6392899740711514834) {
  H_13(state, unused, out_6392899740711514834);
}
void live_h_14(double *state, double *unused, double *out_8898108829413608493) {
  h_14(state, unused, out_8898108829413608493);
}
void live_H_14(double *state, double *unused, double *out_8761335355095381143) {
  H_14(state, unused, out_8761335355095381143);
}
void live_h_33(double *state, double *unused, double *out_3585973114668776251) {
  h_33(state, unused, out_3585973114668776251);
}
void live_H_33(double *state, double *unused, double *out_2485305939713506808) {
  H_33(state, unused, out_2485305939713506808);
}
void live_predict(double *in_x, double *in_P, double *in_Q, double dt) {
  predict(in_x, in_P, in_Q, dt);
}
}

const EKF live = {
  .name = "live",
  .kinds = { 4, 9, 10, 12, 35, 32, 13, 14, 33 },
  .feature_kinds = {  },
  .f_fun = live_f_fun,
  .F_fun = live_F_fun,
  .err_fun = live_err_fun,
  .inv_err_fun = live_inv_err_fun,
  .H_mod_fun = live_H_mod_fun,
  .predict = live_predict,
  .hs = {
    { 4, live_h_4 },
    { 9, live_h_9 },
    { 10, live_h_10 },
    { 12, live_h_12 },
    { 35, live_h_35 },
    { 32, live_h_32 },
    { 13, live_h_13 },
    { 14, live_h_14 },
    { 33, live_h_33 },
  },
  .Hs = {
    { 4, live_H_4 },
    { 9, live_H_9 },
    { 10, live_H_10 },
    { 12, live_H_12 },
    { 35, live_H_35 },
    { 32, live_H_32 },
    { 13, live_H_13 },
    { 14, live_H_14 },
    { 33, live_H_33 },
  },
  .updates = {
    { 4, live_update_4 },
    { 9, live_update_9 },
    { 10, live_update_10 },
    { 12, live_update_12 },
    { 35, live_update_35 },
    { 32, live_update_32 },
    { 13, live_update_13 },
    { 14, live_update_14 },
    { 33, live_update_33 },
  },
  .Hes = {
  },
  .sets = {
  },
  .extra_routines = {
    { "H", live_H },
  },
};

ekf_lib_init(live)
