#include "live.h"

namespace {
#define DIM 22
#define EDIM 21
#define MEDIM 21
typedef void (*Hfun)(double *, double *, double *);
const static double MAHA_THRESH_4 = 7.814727903251177;
const static double MAHA_THRESH_9 = 7.814727903251177;
const static double MAHA_THRESH_10 = 7.814727903251177;
const static double MAHA_THRESH_12 = 7.814727903251177;
const static double MAHA_THRESH_35 = 7.814727903251177;
const static double MAHA_THRESH_32 = 9.487729036781154;
const static double MAHA_THRESH_13 = 7.814727903251177;
const static double MAHA_THRESH_14 = 7.814727903251177;
const static double MAHA_THRESH_33 = 7.814727903251177;

/******************************************************************************
 *                       Code generated with SymPy 1.12                       *
 *                                                                            *
 *              See http://www.sympy.org/ for more information.               *
 *                                                                            *
 *                         This file is part of 'ekf'                         *
 ******************************************************************************/
void H(double *in_vec, double *out_5191207257923767901) {
   out_5191207257923767901[0] = 0;
   out_5191207257923767901[1] = -sin(in_vec[1])*sin(in_vec[2])*in_vec[4] - sin(in_vec[1])*cos(in_vec[2])*in_vec[3] - cos(in_vec[1])*in_vec[5];
   out_5191207257923767901[2] = -sin(in_vec[2])*cos(in_vec[1])*in_vec[3] + cos(in_vec[1])*cos(in_vec[2])*in_vec[4];
   out_5191207257923767901[3] = cos(in_vec[1])*cos(in_vec[2]);
   out_5191207257923767901[4] = sin(in_vec[2])*cos(in_vec[1]);
   out_5191207257923767901[5] = -sin(in_vec[1]);
   out_5191207257923767901[6] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (-sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_5191207257923767901[7] = -sin(in_vec[0])*sin(in_vec[1])*in_vec[5] + sin(in_vec[0])*sin(in_vec[2])*cos(in_vec[1])*in_vec[4] + sin(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_5191207257923767901[8] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]))*in_vec[4];
   out_5191207257923767901[9] = sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]);
   out_5191207257923767901[10] = sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) + cos(in_vec[0])*cos(in_vec[2]);
   out_5191207257923767901[11] = sin(in_vec[0])*cos(in_vec[1]);
   out_5191207257923767901[12] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (-sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) + sin(in_vec[2])*cos(in_vec[0]))*in_vec[3] - sin(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_5191207257923767901[13] = -sin(in_vec[1])*cos(in_vec[0])*in_vec[5] + sin(in_vec[2])*cos(in_vec[0])*cos(in_vec[1])*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_5191207257923767901[14] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (sin(in_vec[0])*cos(in_vec[2]) - sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[3];
   out_5191207257923767901[15] = sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]);
   out_5191207257923767901[16] = -sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]);
   out_5191207257923767901[17] = cos(in_vec[0])*cos(in_vec[1]);
}
void err_fun(double *nom_x, double *delta_x, double *out_4827146406229907322) {
   out_4827146406229907322[0] = delta_x[0] + nom_x[0];
   out_4827146406229907322[1] = delta_x[1] + nom_x[1];
   out_4827146406229907322[2] = delta_x[2] + nom_x[2];
   out_4827146406229907322[3] = -0.5*delta_x[3]*nom_x[4] - 0.5*delta_x[4]*nom_x[5] - 0.5*delta_x[5]*nom_x[6] + 1.0*nom_x[3];
   out_4827146406229907322[4] = 0.5*delta_x[3]*nom_x[3] + 0.5*delta_x[4]*nom_x[6] - 0.5*delta_x[5]*nom_x[5] + 1.0*nom_x[4];
   out_4827146406229907322[5] = -0.5*delta_x[3]*nom_x[6] + 0.5*delta_x[4]*nom_x[3] + 0.5*delta_x[5]*nom_x[4] + 1.0*nom_x[5];
   out_4827146406229907322[6] = 0.5*delta_x[3]*nom_x[5] - 0.5*delta_x[4]*nom_x[4] + 0.5*delta_x[5]*nom_x[3] + 1.0*nom_x[6];
   out_4827146406229907322[7] = delta_x[6] + nom_x[7];
   out_4827146406229907322[8] = delta_x[7] + nom_x[8];
   out_4827146406229907322[9] = delta_x[8] + nom_x[9];
   out_4827146406229907322[10] = delta_x[9] + nom_x[10];
   out_4827146406229907322[11] = delta_x[10] + nom_x[11];
   out_4827146406229907322[12] = delta_x[11] + nom_x[12];
   out_4827146406229907322[13] = delta_x[12] + nom_x[13];
   out_4827146406229907322[14] = delta_x[13] + nom_x[14];
   out_4827146406229907322[15] = delta_x[14] + nom_x[15];
   out_4827146406229907322[16] = delta_x[15] + nom_x[16];
   out_4827146406229907322[17] = delta_x[16] + nom_x[17];
   out_4827146406229907322[18] = delta_x[17] + nom_x[18];
   out_4827146406229907322[19] = delta_x[18] + nom_x[19];
   out_4827146406229907322[20] = delta_x[19] + nom_x[20];
   out_4827146406229907322[21] = delta_x[20] + nom_x[21];
}
void inv_err_fun(double *nom_x, double *true_x, double *out_9060568120511038035) {
   out_9060568120511038035[0] = -nom_x[0] + true_x[0];
   out_9060568120511038035[1] = -nom_x[1] + true_x[1];
   out_9060568120511038035[2] = -nom_x[2] + true_x[2];
   out_9060568120511038035[3] = 2*nom_x[3]*true_x[4] - 2*nom_x[4]*true_x[3] + 2*nom_x[5]*true_x[6] - 2*nom_x[6]*true_x[5];
   out_9060568120511038035[4] = 2*nom_x[3]*true_x[5] - 2*nom_x[4]*true_x[6] - 2*nom_x[5]*true_x[3] + 2*nom_x[6]*true_x[4];
   out_9060568120511038035[5] = 2*nom_x[3]*true_x[6] + 2*nom_x[4]*true_x[5] - 2*nom_x[5]*true_x[4] - 2*nom_x[6]*true_x[3];
   out_9060568120511038035[6] = -nom_x[7] + true_x[7];
   out_9060568120511038035[7] = -nom_x[8] + true_x[8];
   out_9060568120511038035[8] = -nom_x[9] + true_x[9];
   out_9060568120511038035[9] = -nom_x[10] + true_x[10];
   out_9060568120511038035[10] = -nom_x[11] + true_x[11];
   out_9060568120511038035[11] = -nom_x[12] + true_x[12];
   out_9060568120511038035[12] = -nom_x[13] + true_x[13];
   out_9060568120511038035[13] = -nom_x[14] + true_x[14];
   out_9060568120511038035[14] = -nom_x[15] + true_x[15];
   out_9060568120511038035[15] = -nom_x[16] + true_x[16];
   out_9060568120511038035[16] = -nom_x[17] + true_x[17];
   out_9060568120511038035[17] = -nom_x[18] + true_x[18];
   out_9060568120511038035[18] = -nom_x[19] + true_x[19];
   out_9060568120511038035[19] = -nom_x[20] + true_x[20];
   out_9060568120511038035[20] = -nom_x[21] + true_x[21];
}
void H_mod_fun(double *state, double *out_6285837621319351520) {
   out_6285837621319351520[0] = 1.0;
   out_6285837621319351520[1] = 0;
   out_6285837621319351520[2] = 0;
   out_6285837621319351520[3] = 0;
   out_6285837621319351520[4] = 0;
   out_6285837621319351520[5] = 0;
   out_6285837621319351520[6] = 0;
   out_6285837621319351520[7] = 0;
   out_6285837621319351520[8] = 0;
   out_6285837621319351520[9] = 0;
   out_6285837621319351520[10] = 0;
   out_6285837621319351520[11] = 0;
   out_6285837621319351520[12] = 0;
   out_6285837621319351520[13] = 0;
   out_6285837621319351520[14] = 0;
   out_6285837621319351520[15] = 0;
   out_6285837621319351520[16] = 0;
   out_6285837621319351520[17] = 0;
   out_6285837621319351520[18] = 0;
   out_6285837621319351520[19] = 0;
   out_6285837621319351520[20] = 0;
   out_6285837621319351520[21] = 0;
   out_6285837621319351520[22] = 1.0;
   out_6285837621319351520[23] = 0;
   out_6285837621319351520[24] = 0;
   out_6285837621319351520[25] = 0;
   out_6285837621319351520[26] = 0;
   out_6285837621319351520[27] = 0;
   out_6285837621319351520[28] = 0;
   out_6285837621319351520[29] = 0;
   out_6285837621319351520[30] = 0;
   out_6285837621319351520[31] = 0;
   out_6285837621319351520[32] = 0;
   out_6285837621319351520[33] = 0;
   out_6285837621319351520[34] = 0;
   out_6285837621319351520[35] = 0;
   out_6285837621319351520[36] = 0;
   out_6285837621319351520[37] = 0;
   out_6285837621319351520[38] = 0;
   out_6285837621319351520[39] = 0;
   out_6285837621319351520[40] = 0;
   out_6285837621319351520[41] = 0;
   out_6285837621319351520[42] = 0;
   out_6285837621319351520[43] = 0;
   out_6285837621319351520[44] = 1.0;
   out_6285837621319351520[45] = 0;
   out_6285837621319351520[46] = 0;
   out_6285837621319351520[47] = 0;
   out_6285837621319351520[48] = 0;
   out_6285837621319351520[49] = 0;
   out_6285837621319351520[50] = 0;
   out_6285837621319351520[51] = 0;
   out_6285837621319351520[52] = 0;
   out_6285837621319351520[53] = 0;
   out_6285837621319351520[54] = 0;
   out_6285837621319351520[55] = 0;
   out_6285837621319351520[56] = 0;
   out_6285837621319351520[57] = 0;
   out_6285837621319351520[58] = 0;
   out_6285837621319351520[59] = 0;
   out_6285837621319351520[60] = 0;
   out_6285837621319351520[61] = 0;
   out_6285837621319351520[62] = 0;
   out_6285837621319351520[63] = 0;
   out_6285837621319351520[64] = 0;
   out_6285837621319351520[65] = 0;
   out_6285837621319351520[66] = -0.5*state[4];
   out_6285837621319351520[67] = -0.5*state[5];
   out_6285837621319351520[68] = -0.5*state[6];
   out_6285837621319351520[69] = 0;
   out_6285837621319351520[70] = 0;
   out_6285837621319351520[71] = 0;
   out_6285837621319351520[72] = 0;
   out_6285837621319351520[73] = 0;
   out_6285837621319351520[74] = 0;
   out_6285837621319351520[75] = 0;
   out_6285837621319351520[76] = 0;
   out_6285837621319351520[77] = 0;
   out_6285837621319351520[78] = 0;
   out_6285837621319351520[79] = 0;
   out_6285837621319351520[80] = 0;
   out_6285837621319351520[81] = 0;
   out_6285837621319351520[82] = 0;
   out_6285837621319351520[83] = 0;
   out_6285837621319351520[84] = 0;
   out_6285837621319351520[85] = 0;
   out_6285837621319351520[86] = 0;
   out_6285837621319351520[87] = 0.5*state[3];
   out_6285837621319351520[88] = 0.5*state[6];
   out_6285837621319351520[89] = -0.5*state[5];
   out_6285837621319351520[90] = 0;
   out_6285837621319351520[91] = 0;
   out_6285837621319351520[92] = 0;
   out_6285837621319351520[93] = 0;
   out_6285837621319351520[94] = 0;
   out_6285837621319351520[95] = 0;
   out_6285837621319351520[96] = 0;
   out_6285837621319351520[97] = 0;
   out_6285837621319351520[98] = 0;
   out_6285837621319351520[99] = 0;
   out_6285837621319351520[100] = 0;
   out_6285837621319351520[101] = 0;
   out_6285837621319351520[102] = 0;
   out_6285837621319351520[103] = 0;
   out_6285837621319351520[104] = 0;
   out_6285837621319351520[105] = 0;
   out_6285837621319351520[106] = 0;
   out_6285837621319351520[107] = 0;
   out_6285837621319351520[108] = -0.5*state[6];
   out_6285837621319351520[109] = 0.5*state[3];
   out_6285837621319351520[110] = 0.5*state[4];
   out_6285837621319351520[111] = 0;
   out_6285837621319351520[112] = 0;
   out_6285837621319351520[113] = 0;
   out_6285837621319351520[114] = 0;
   out_6285837621319351520[115] = 0;
   out_6285837621319351520[116] = 0;
   out_6285837621319351520[117] = 0;
   out_6285837621319351520[118] = 0;
   out_6285837621319351520[119] = 0;
   out_6285837621319351520[120] = 0;
   out_6285837621319351520[121] = 0;
   out_6285837621319351520[122] = 0;
   out_6285837621319351520[123] = 0;
   out_6285837621319351520[124] = 0;
   out_6285837621319351520[125] = 0;
   out_6285837621319351520[126] = 0;
   out_6285837621319351520[127] = 0;
   out_6285837621319351520[128] = 0;
   out_6285837621319351520[129] = 0.5*state[5];
   out_6285837621319351520[130] = -0.5*state[4];
   out_6285837621319351520[131] = 0.5*state[3];
   out_6285837621319351520[132] = 0;
   out_6285837621319351520[133] = 0;
   out_6285837621319351520[134] = 0;
   out_6285837621319351520[135] = 0;
   out_6285837621319351520[136] = 0;
   out_6285837621319351520[137] = 0;
   out_6285837621319351520[138] = 0;
   out_6285837621319351520[139] = 0;
   out_6285837621319351520[140] = 0;
   out_6285837621319351520[141] = 0;
   out_6285837621319351520[142] = 0;
   out_6285837621319351520[143] = 0;
   out_6285837621319351520[144] = 0;
   out_6285837621319351520[145] = 0;
   out_6285837621319351520[146] = 0;
   out_6285837621319351520[147] = 0;
   out_6285837621319351520[148] = 0;
   out_6285837621319351520[149] = 0;
   out_6285837621319351520[150] = 0;
   out_6285837621319351520[151] = 0;
   out_6285837621319351520[152] = 0;
   out_6285837621319351520[153] = 1.0;
   out_6285837621319351520[154] = 0;
   out_6285837621319351520[155] = 0;
   out_6285837621319351520[156] = 0;
   out_6285837621319351520[157] = 0;
   out_6285837621319351520[158] = 0;
   out_6285837621319351520[159] = 0;
   out_6285837621319351520[160] = 0;
   out_6285837621319351520[161] = 0;
   out_6285837621319351520[162] = 0;
   out_6285837621319351520[163] = 0;
   out_6285837621319351520[164] = 0;
   out_6285837621319351520[165] = 0;
   out_6285837621319351520[166] = 0;
   out_6285837621319351520[167] = 0;
   out_6285837621319351520[168] = 0;
   out_6285837621319351520[169] = 0;
   out_6285837621319351520[170] = 0;
   out_6285837621319351520[171] = 0;
   out_6285837621319351520[172] = 0;
   out_6285837621319351520[173] = 0;
   out_6285837621319351520[174] = 0;
   out_6285837621319351520[175] = 1.0;
   out_6285837621319351520[176] = 0;
   out_6285837621319351520[177] = 0;
   out_6285837621319351520[178] = 0;
   out_6285837621319351520[179] = 0;
   out_6285837621319351520[180] = 0;
   out_6285837621319351520[181] = 0;
   out_6285837621319351520[182] = 0;
   out_6285837621319351520[183] = 0;
   out_6285837621319351520[184] = 0;
   out_6285837621319351520[185] = 0;
   out_6285837621319351520[186] = 0;
   out_6285837621319351520[187] = 0;
   out_6285837621319351520[188] = 0;
   out_6285837621319351520[189] = 0;
   out_6285837621319351520[190] = 0;
   out_6285837621319351520[191] = 0;
   out_6285837621319351520[192] = 0;
   out_6285837621319351520[193] = 0;
   out_6285837621319351520[194] = 0;
   out_6285837621319351520[195] = 0;
   out_6285837621319351520[196] = 0;
   out_6285837621319351520[197] = 1.0;
   out_6285837621319351520[198] = 0;
   out_6285837621319351520[199] = 0;
   out_6285837621319351520[200] = 0;
   out_6285837621319351520[201] = 0;
   out_6285837621319351520[202] = 0;
   out_6285837621319351520[203] = 0;
   out_6285837621319351520[204] = 0;
   out_6285837621319351520[205] = 0;
   out_6285837621319351520[206] = 0;
   out_6285837621319351520[207] = 0;
   out_6285837621319351520[208] = 0;
   out_6285837621319351520[209] = 0;
   out_6285837621319351520[210] = 0;
   out_6285837621319351520[211] = 0;
   out_6285837621319351520[212] = 0;
   out_6285837621319351520[213] = 0;
   out_6285837621319351520[214] = 0;
   out_6285837621319351520[215] = 0;
   out_6285837621319351520[216] = 0;
   out_6285837621319351520[217] = 0;
   out_6285837621319351520[218] = 0;
   out_6285837621319351520[219] = 1.0;
   out_6285837621319351520[220] = 0;
   out_6285837621319351520[221] = 0;
   out_6285837621319351520[222] = 0;
   out_6285837621319351520[223] = 0;
   out_6285837621319351520[224] = 0;
   out_6285837621319351520[225] = 0;
   out_6285837621319351520[226] = 0;
   out_6285837621319351520[227] = 0;
   out_6285837621319351520[228] = 0;
   out_6285837621319351520[229] = 0;
   out_6285837621319351520[230] = 0;
   out_6285837621319351520[231] = 0;
   out_6285837621319351520[232] = 0;
   out_6285837621319351520[233] = 0;
   out_6285837621319351520[234] = 0;
   out_6285837621319351520[235] = 0;
   out_6285837621319351520[236] = 0;
   out_6285837621319351520[237] = 0;
   out_6285837621319351520[238] = 0;
   out_6285837621319351520[239] = 0;
   out_6285837621319351520[240] = 0;
   out_6285837621319351520[241] = 1.0;
   out_6285837621319351520[242] = 0;
   out_6285837621319351520[243] = 0;
   out_6285837621319351520[244] = 0;
   out_6285837621319351520[245] = 0;
   out_6285837621319351520[246] = 0;
   out_6285837621319351520[247] = 0;
   out_6285837621319351520[248] = 0;
   out_6285837621319351520[249] = 0;
   out_6285837621319351520[250] = 0;
   out_6285837621319351520[251] = 0;
   out_6285837621319351520[252] = 0;
   out_6285837621319351520[253] = 0;
   out_6285837621319351520[254] = 0;
   out_6285837621319351520[255] = 0;
   out_6285837621319351520[256] = 0;
   out_6285837621319351520[257] = 0;
   out_6285837621319351520[258] = 0;
   out_6285837621319351520[259] = 0;
   out_6285837621319351520[260] = 0;
   out_6285837621319351520[261] = 0;
   out_6285837621319351520[262] = 0;
   out_6285837621319351520[263] = 1.0;
   out_6285837621319351520[264] = 0;
   out_6285837621319351520[265] = 0;
   out_6285837621319351520[266] = 0;
   out_6285837621319351520[267] = 0;
   out_6285837621319351520[268] = 0;
   out_6285837621319351520[269] = 0;
   out_6285837621319351520[270] = 0;
   out_6285837621319351520[271] = 0;
   out_6285837621319351520[272] = 0;
   out_6285837621319351520[273] = 0;
   out_6285837621319351520[274] = 0;
   out_6285837621319351520[275] = 0;
   out_6285837621319351520[276] = 0;
   out_6285837621319351520[277] = 0;
   out_6285837621319351520[278] = 0;
   out_6285837621319351520[279] = 0;
   out_6285837621319351520[280] = 0;
   out_6285837621319351520[281] = 0;
   out_6285837621319351520[282] = 0;
   out_6285837621319351520[283] = 0;
   out_6285837621319351520[284] = 0;
   out_6285837621319351520[285] = 1.0;
   out_6285837621319351520[286] = 0;
   out_6285837621319351520[287] = 0;
   out_6285837621319351520[288] = 0;
   out_6285837621319351520[289] = 0;
   out_6285837621319351520[290] = 0;
   out_6285837621319351520[291] = 0;
   out_6285837621319351520[292] = 0;
   out_6285837621319351520[293] = 0;
   out_6285837621319351520[294] = 0;
   out_6285837621319351520[295] = 0;
   out_6285837621319351520[296] = 0;
   out_6285837621319351520[297] = 0;
   out_6285837621319351520[298] = 0;
   out_6285837621319351520[299] = 0;
   out_6285837621319351520[300] = 0;
   out_6285837621319351520[301] = 0;
   out_6285837621319351520[302] = 0;
   out_6285837621319351520[303] = 0;
   out_6285837621319351520[304] = 0;
   out_6285837621319351520[305] = 0;
   out_6285837621319351520[306] = 0;
   out_6285837621319351520[307] = 1.0;
   out_6285837621319351520[308] = 0;
   out_6285837621319351520[309] = 0;
   out_6285837621319351520[310] = 0;
   out_6285837621319351520[311] = 0;
   out_6285837621319351520[312] = 0;
   out_6285837621319351520[313] = 0;
   out_6285837621319351520[314] = 0;
   out_6285837621319351520[315] = 0;
   out_6285837621319351520[316] = 0;
   out_6285837621319351520[317] = 0;
   out_6285837621319351520[318] = 0;
   out_6285837621319351520[319] = 0;
   out_6285837621319351520[320] = 0;
   out_6285837621319351520[321] = 0;
   out_6285837621319351520[322] = 0;
   out_6285837621319351520[323] = 0;
   out_6285837621319351520[324] = 0;
   out_6285837621319351520[325] = 0;
   out_6285837621319351520[326] = 0;
   out_6285837621319351520[327] = 0;
   out_6285837621319351520[328] = 0;
   out_6285837621319351520[329] = 1.0;
   out_6285837621319351520[330] = 0;
   out_6285837621319351520[331] = 0;
   out_6285837621319351520[332] = 0;
   out_6285837621319351520[333] = 0;
   out_6285837621319351520[334] = 0;
   out_6285837621319351520[335] = 0;
   out_6285837621319351520[336] = 0;
   out_6285837621319351520[337] = 0;
   out_6285837621319351520[338] = 0;
   out_6285837621319351520[339] = 0;
   out_6285837621319351520[340] = 0;
   out_6285837621319351520[341] = 0;
   out_6285837621319351520[342] = 0;
   out_6285837621319351520[343] = 0;
   out_6285837621319351520[344] = 0;
   out_6285837621319351520[345] = 0;
   out_6285837621319351520[346] = 0;
   out_6285837621319351520[347] = 0;
   out_6285837621319351520[348] = 0;
   out_6285837621319351520[349] = 0;
   out_6285837621319351520[350] = 0;
   out_6285837621319351520[351] = 1.0;
   out_6285837621319351520[352] = 0;
   out_6285837621319351520[353] = 0;
   out_6285837621319351520[354] = 0;
   out_6285837621319351520[355] = 0;
   out_6285837621319351520[356] = 0;
   out_6285837621319351520[357] = 0;
   out_6285837621319351520[358] = 0;
   out_6285837621319351520[359] = 0;
   out_6285837621319351520[360] = 0;
   out_6285837621319351520[361] = 0;
   out_6285837621319351520[362] = 0;
   out_6285837621319351520[363] = 0;
   out_6285837621319351520[364] = 0;
   out_6285837621319351520[365] = 0;
   out_6285837621319351520[366] = 0;
   out_6285837621319351520[367] = 0;
   out_6285837621319351520[368] = 0;
   out_6285837621319351520[369] = 0;
   out_6285837621319351520[370] = 0;
   out_6285837621319351520[371] = 0;
   out_6285837621319351520[372] = 0;
   out_6285837621319351520[373] = 1.0;
   out_6285837621319351520[374] = 0;
   out_6285837621319351520[375] = 0;
   out_6285837621319351520[376] = 0;
   out_6285837621319351520[377] = 0;
   out_6285837621319351520[378] = 0;
   out_6285837621319351520[379] = 0;
   out_6285837621319351520[380] = 0;
   out_6285837621319351520[381] = 0;
   out_6285837621319351520[382] = 0;
   out_6285837621319351520[383] = 0;
   out_6285837621319351520[384] = 0;
   out_6285837621319351520[385] = 0;
   out_6285837621319351520[386] = 0;
   out_6285837621319351520[387] = 0;
   out_6285837621319351520[388] = 0;
   out_6285837621319351520[389] = 0;
   out_6285837621319351520[390] = 0;
   out_6285837621319351520[391] = 0;
   out_6285837621319351520[392] = 0;
   out_6285837621319351520[393] = 0;
   out_6285837621319351520[394] = 0;
   out_6285837621319351520[395] = 1.0;
   out_6285837621319351520[396] = 0;
   out_6285837621319351520[397] = 0;
   out_6285837621319351520[398] = 0;
   out_6285837621319351520[399] = 0;
   out_6285837621319351520[400] = 0;
   out_6285837621319351520[401] = 0;
   out_6285837621319351520[402] = 0;
   out_6285837621319351520[403] = 0;
   out_6285837621319351520[404] = 0;
   out_6285837621319351520[405] = 0;
   out_6285837621319351520[406] = 0;
   out_6285837621319351520[407] = 0;
   out_6285837621319351520[408] = 0;
   out_6285837621319351520[409] = 0;
   out_6285837621319351520[410] = 0;
   out_6285837621319351520[411] = 0;
   out_6285837621319351520[412] = 0;
   out_6285837621319351520[413] = 0;
   out_6285837621319351520[414] = 0;
   out_6285837621319351520[415] = 0;
   out_6285837621319351520[416] = 0;
   out_6285837621319351520[417] = 1.0;
   out_6285837621319351520[418] = 0;
   out_6285837621319351520[419] = 0;
   out_6285837621319351520[420] = 0;
   out_6285837621319351520[421] = 0;
   out_6285837621319351520[422] = 0;
   out_6285837621319351520[423] = 0;
   out_6285837621319351520[424] = 0;
   out_6285837621319351520[425] = 0;
   out_6285837621319351520[426] = 0;
   out_6285837621319351520[427] = 0;
   out_6285837621319351520[428] = 0;
   out_6285837621319351520[429] = 0;
   out_6285837621319351520[430] = 0;
   out_6285837621319351520[431] = 0;
   out_6285837621319351520[432] = 0;
   out_6285837621319351520[433] = 0;
   out_6285837621319351520[434] = 0;
   out_6285837621319351520[435] = 0;
   out_6285837621319351520[436] = 0;
   out_6285837621319351520[437] = 0;
   out_6285837621319351520[438] = 0;
   out_6285837621319351520[439] = 1.0;
   out_6285837621319351520[440] = 0;
   out_6285837621319351520[441] = 0;
   out_6285837621319351520[442] = 0;
   out_6285837621319351520[443] = 0;
   out_6285837621319351520[444] = 0;
   out_6285837621319351520[445] = 0;
   out_6285837621319351520[446] = 0;
   out_6285837621319351520[447] = 0;
   out_6285837621319351520[448] = 0;
   out_6285837621319351520[449] = 0;
   out_6285837621319351520[450] = 0;
   out_6285837621319351520[451] = 0;
   out_6285837621319351520[452] = 0;
   out_6285837621319351520[453] = 0;
   out_6285837621319351520[454] = 0;
   out_6285837621319351520[455] = 0;
   out_6285837621319351520[456] = 0;
   out_6285837621319351520[457] = 0;
   out_6285837621319351520[458] = 0;
   out_6285837621319351520[459] = 0;
   out_6285837621319351520[460] = 0;
   out_6285837621319351520[461] = 1.0;
}
void f_fun(double *state, double dt, double *out_7267815363621816153) {
   out_7267815363621816153[0] = dt*state[7] + state[0];
   out_7267815363621816153[1] = dt*state[8] + state[1];
   out_7267815363621816153[2] = dt*state[9] + state[2];
   out_7267815363621816153[3] = dt*(-0.5*state[4]*state[10] - 0.5*state[5]*state[11] - 0.5*state[6]*state[12]) + state[3];
   out_7267815363621816153[4] = dt*(0.5*state[3]*state[10] + 0.5*state[5]*state[12] - 0.5*state[6]*state[11]) + state[4];
   out_7267815363621816153[5] = dt*(0.5*state[3]*state[11] - 0.5*state[4]*state[12] + 0.5*state[6]*state[10]) + state[5];
   out_7267815363621816153[6] = dt*(0.5*state[3]*state[12] + 0.5*state[4]*state[11] - 0.5*state[5]*state[10]) + state[6];
   out_7267815363621816153[7] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]) + state[7];
   out_7267815363621816153[8] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]) + state[8];
   out_7267815363621816153[9] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]) + state[9];
   out_7267815363621816153[10] = state[10];
   out_7267815363621816153[11] = state[11];
   out_7267815363621816153[12] = state[12];
   out_7267815363621816153[13] = state[13];
   out_7267815363621816153[14] = state[14];
   out_7267815363621816153[15] = state[15];
   out_7267815363621816153[16] = state[16];
   out_7267815363621816153[17] = state[17];
   out_7267815363621816153[18] = state[18];
   out_7267815363621816153[19] = state[19];
   out_7267815363621816153[20] = state[20];
   out_7267815363621816153[21] = state[21];
}
void F_fun(double *state, double dt, double *out_4165192178605544605) {
   out_4165192178605544605[0] = 1;
   out_4165192178605544605[1] = 0;
   out_4165192178605544605[2] = 0;
   out_4165192178605544605[3] = 0;
   out_4165192178605544605[4] = 0;
   out_4165192178605544605[5] = 0;
   out_4165192178605544605[6] = dt;
   out_4165192178605544605[7] = 0;
   out_4165192178605544605[8] = 0;
   out_4165192178605544605[9] = 0;
   out_4165192178605544605[10] = 0;
   out_4165192178605544605[11] = 0;
   out_4165192178605544605[12] = 0;
   out_4165192178605544605[13] = 0;
   out_4165192178605544605[14] = 0;
   out_4165192178605544605[15] = 0;
   out_4165192178605544605[16] = 0;
   out_4165192178605544605[17] = 0;
   out_4165192178605544605[18] = 0;
   out_4165192178605544605[19] = 0;
   out_4165192178605544605[20] = 0;
   out_4165192178605544605[21] = 0;
   out_4165192178605544605[22] = 1;
   out_4165192178605544605[23] = 0;
   out_4165192178605544605[24] = 0;
   out_4165192178605544605[25] = 0;
   out_4165192178605544605[26] = 0;
   out_4165192178605544605[27] = 0;
   out_4165192178605544605[28] = dt;
   out_4165192178605544605[29] = 0;
   out_4165192178605544605[30] = 0;
   out_4165192178605544605[31] = 0;
   out_4165192178605544605[32] = 0;
   out_4165192178605544605[33] = 0;
   out_4165192178605544605[34] = 0;
   out_4165192178605544605[35] = 0;
   out_4165192178605544605[36] = 0;
   out_4165192178605544605[37] = 0;
   out_4165192178605544605[38] = 0;
   out_4165192178605544605[39] = 0;
   out_4165192178605544605[40] = 0;
   out_4165192178605544605[41] = 0;
   out_4165192178605544605[42] = 0;
   out_4165192178605544605[43] = 0;
   out_4165192178605544605[44] = 1;
   out_4165192178605544605[45] = 0;
   out_4165192178605544605[46] = 0;
   out_4165192178605544605[47] = 0;
   out_4165192178605544605[48] = 0;
   out_4165192178605544605[49] = 0;
   out_4165192178605544605[50] = dt;
   out_4165192178605544605[51] = 0;
   out_4165192178605544605[52] = 0;
   out_4165192178605544605[53] = 0;
   out_4165192178605544605[54] = 0;
   out_4165192178605544605[55] = 0;
   out_4165192178605544605[56] = 0;
   out_4165192178605544605[57] = 0;
   out_4165192178605544605[58] = 0;
   out_4165192178605544605[59] = 0;
   out_4165192178605544605[60] = 0;
   out_4165192178605544605[61] = 0;
   out_4165192178605544605[62] = 0;
   out_4165192178605544605[63] = 0;
   out_4165192178605544605[64] = 0;
   out_4165192178605544605[65] = 0;
   out_4165192178605544605[66] = 1;
   out_4165192178605544605[67] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[11] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_4165192178605544605[68] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[12] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[10] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[11]);
   out_4165192178605544605[69] = 0;
   out_4165192178605544605[70] = 0;
   out_4165192178605544605[71] = 0;
   out_4165192178605544605[72] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_4165192178605544605[73] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_4165192178605544605[74] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_4165192178605544605[75] = 0;
   out_4165192178605544605[76] = 0;
   out_4165192178605544605[77] = 0;
   out_4165192178605544605[78] = 0;
   out_4165192178605544605[79] = 0;
   out_4165192178605544605[80] = 0;
   out_4165192178605544605[81] = 0;
   out_4165192178605544605[82] = 0;
   out_4165192178605544605[83] = 0;
   out_4165192178605544605[84] = 0;
   out_4165192178605544605[85] = 0;
   out_4165192178605544605[86] = 0;
   out_4165192178605544605[87] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[11] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_4165192178605544605[88] = 1;
   out_4165192178605544605[89] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[12] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[11] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[10]);
   out_4165192178605544605[90] = 0;
   out_4165192178605544605[91] = 0;
   out_4165192178605544605[92] = 0;
   out_4165192178605544605[93] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_4165192178605544605[94] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_4165192178605544605[95] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_4165192178605544605[96] = 0;
   out_4165192178605544605[97] = 0;
   out_4165192178605544605[98] = 0;
   out_4165192178605544605[99] = 0;
   out_4165192178605544605[100] = 0;
   out_4165192178605544605[101] = 0;
   out_4165192178605544605[102] = 0;
   out_4165192178605544605[103] = 0;
   out_4165192178605544605[104] = 0;
   out_4165192178605544605[105] = 0;
   out_4165192178605544605[106] = 0;
   out_4165192178605544605[107] = 0;
   out_4165192178605544605[108] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[12] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[10] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[11]);
   out_4165192178605544605[109] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[12] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[11] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[10]);
   out_4165192178605544605[110] = 1;
   out_4165192178605544605[111] = 0;
   out_4165192178605544605[112] = 0;
   out_4165192178605544605[113] = 0;
   out_4165192178605544605[114] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_4165192178605544605[115] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_4165192178605544605[116] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_4165192178605544605[117] = 0;
   out_4165192178605544605[118] = 0;
   out_4165192178605544605[119] = 0;
   out_4165192178605544605[120] = 0;
   out_4165192178605544605[121] = 0;
   out_4165192178605544605[122] = 0;
   out_4165192178605544605[123] = 0;
   out_4165192178605544605[124] = 0;
   out_4165192178605544605[125] = 0;
   out_4165192178605544605[126] = 0;
   out_4165192178605544605[127] = 0;
   out_4165192178605544605[128] = 0;
   out_4165192178605544605[129] = 0;
   out_4165192178605544605[130] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_4165192178605544605[131] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[18] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[16] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[17]);
   out_4165192178605544605[132] = 1;
   out_4165192178605544605[133] = 0;
   out_4165192178605544605[134] = 0;
   out_4165192178605544605[135] = 0;
   out_4165192178605544605[136] = 0;
   out_4165192178605544605[137] = 0;
   out_4165192178605544605[138] = 0;
   out_4165192178605544605[139] = 0;
   out_4165192178605544605[140] = 0;
   out_4165192178605544605[141] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_4165192178605544605[142] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_4165192178605544605[143] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_4165192178605544605[144] = 0;
   out_4165192178605544605[145] = 0;
   out_4165192178605544605[146] = 0;
   out_4165192178605544605[147] = 0;
   out_4165192178605544605[148] = 0;
   out_4165192178605544605[149] = 0;
   out_4165192178605544605[150] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[17] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_4165192178605544605[151] = 0;
   out_4165192178605544605[152] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]);
   out_4165192178605544605[153] = 0;
   out_4165192178605544605[154] = 1;
   out_4165192178605544605[155] = 0;
   out_4165192178605544605[156] = 0;
   out_4165192178605544605[157] = 0;
   out_4165192178605544605[158] = 0;
   out_4165192178605544605[159] = 0;
   out_4165192178605544605[160] = 0;
   out_4165192178605544605[161] = 0;
   out_4165192178605544605[162] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_4165192178605544605[163] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_4165192178605544605[164] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_4165192178605544605[165] = 0;
   out_4165192178605544605[166] = 0;
   out_4165192178605544605[167] = 0;
   out_4165192178605544605[168] = 0;
   out_4165192178605544605[169] = 0;
   out_4165192178605544605[170] = 0;
   out_4165192178605544605[171] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]);
   out_4165192178605544605[172] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[18] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[17] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[16]);
   out_4165192178605544605[173] = 0;
   out_4165192178605544605[174] = 0;
   out_4165192178605544605[175] = 0;
   out_4165192178605544605[176] = 1;
   out_4165192178605544605[177] = 0;
   out_4165192178605544605[178] = 0;
   out_4165192178605544605[179] = 0;
   out_4165192178605544605[180] = 0;
   out_4165192178605544605[181] = 0;
   out_4165192178605544605[182] = 0;
   out_4165192178605544605[183] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_4165192178605544605[184] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_4165192178605544605[185] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_4165192178605544605[186] = 0;
   out_4165192178605544605[187] = 0;
   out_4165192178605544605[188] = 0;
   out_4165192178605544605[189] = 0;
   out_4165192178605544605[190] = 0;
   out_4165192178605544605[191] = 0;
   out_4165192178605544605[192] = 0;
   out_4165192178605544605[193] = 0;
   out_4165192178605544605[194] = 0;
   out_4165192178605544605[195] = 0;
   out_4165192178605544605[196] = 0;
   out_4165192178605544605[197] = 0;
   out_4165192178605544605[198] = 1;
   out_4165192178605544605[199] = 0;
   out_4165192178605544605[200] = 0;
   out_4165192178605544605[201] = 0;
   out_4165192178605544605[202] = 0;
   out_4165192178605544605[203] = 0;
   out_4165192178605544605[204] = 0;
   out_4165192178605544605[205] = 0;
   out_4165192178605544605[206] = 0;
   out_4165192178605544605[207] = 0;
   out_4165192178605544605[208] = 0;
   out_4165192178605544605[209] = 0;
   out_4165192178605544605[210] = 0;
   out_4165192178605544605[211] = 0;
   out_4165192178605544605[212] = 0;
   out_4165192178605544605[213] = 0;
   out_4165192178605544605[214] = 0;
   out_4165192178605544605[215] = 0;
   out_4165192178605544605[216] = 0;
   out_4165192178605544605[217] = 0;
   out_4165192178605544605[218] = 0;
   out_4165192178605544605[219] = 0;
   out_4165192178605544605[220] = 1;
   out_4165192178605544605[221] = 0;
   out_4165192178605544605[222] = 0;
   out_4165192178605544605[223] = 0;
   out_4165192178605544605[224] = 0;
   out_4165192178605544605[225] = 0;
   out_4165192178605544605[226] = 0;
   out_4165192178605544605[227] = 0;
   out_4165192178605544605[228] = 0;
   out_4165192178605544605[229] = 0;
   out_4165192178605544605[230] = 0;
   out_4165192178605544605[231] = 0;
   out_4165192178605544605[232] = 0;
   out_4165192178605544605[233] = 0;
   out_4165192178605544605[234] = 0;
   out_4165192178605544605[235] = 0;
   out_4165192178605544605[236] = 0;
   out_4165192178605544605[237] = 0;
   out_4165192178605544605[238] = 0;
   out_4165192178605544605[239] = 0;
   out_4165192178605544605[240] = 0;
   out_4165192178605544605[241] = 0;
   out_4165192178605544605[242] = 1;
   out_4165192178605544605[243] = 0;
   out_4165192178605544605[244] = 0;
   out_4165192178605544605[245] = 0;
   out_4165192178605544605[246] = 0;
   out_4165192178605544605[247] = 0;
   out_4165192178605544605[248] = 0;
   out_4165192178605544605[249] = 0;
   out_4165192178605544605[250] = 0;
   out_4165192178605544605[251] = 0;
   out_4165192178605544605[252] = 0;
   out_4165192178605544605[253] = 0;
   out_4165192178605544605[254] = 0;
   out_4165192178605544605[255] = 0;
   out_4165192178605544605[256] = 0;
   out_4165192178605544605[257] = 0;
   out_4165192178605544605[258] = 0;
   out_4165192178605544605[259] = 0;
   out_4165192178605544605[260] = 0;
   out_4165192178605544605[261] = 0;
   out_4165192178605544605[262] = 0;
   out_4165192178605544605[263] = 0;
   out_4165192178605544605[264] = 1;
   out_4165192178605544605[265] = 0;
   out_4165192178605544605[266] = 0;
   out_4165192178605544605[267] = 0;
   out_4165192178605544605[268] = 0;
   out_4165192178605544605[269] = 0;
   out_4165192178605544605[270] = 0;
   out_4165192178605544605[271] = 0;
   out_4165192178605544605[272] = 0;
   out_4165192178605544605[273] = 0;
   out_4165192178605544605[274] = 0;
   out_4165192178605544605[275] = 0;
   out_4165192178605544605[276] = 0;
   out_4165192178605544605[277] = 0;
   out_4165192178605544605[278] = 0;
   out_4165192178605544605[279] = 0;
   out_4165192178605544605[280] = 0;
   out_4165192178605544605[281] = 0;
   out_4165192178605544605[282] = 0;
   out_4165192178605544605[283] = 0;
   out_4165192178605544605[284] = 0;
   out_4165192178605544605[285] = 0;
   out_4165192178605544605[286] = 1;
   out_4165192178605544605[287] = 0;
   out_4165192178605544605[288] = 0;
   out_4165192178605544605[289] = 0;
   out_4165192178605544605[290] = 0;
   out_4165192178605544605[291] = 0;
   out_4165192178605544605[292] = 0;
   out_4165192178605544605[293] = 0;
   out_4165192178605544605[294] = 0;
   out_4165192178605544605[295] = 0;
   out_4165192178605544605[296] = 0;
   out_4165192178605544605[297] = 0;
   out_4165192178605544605[298] = 0;
   out_4165192178605544605[299] = 0;
   out_4165192178605544605[300] = 0;
   out_4165192178605544605[301] = 0;
   out_4165192178605544605[302] = 0;
   out_4165192178605544605[303] = 0;
   out_4165192178605544605[304] = 0;
   out_4165192178605544605[305] = 0;
   out_4165192178605544605[306] = 0;
   out_4165192178605544605[307] = 0;
   out_4165192178605544605[308] = 1;
   out_4165192178605544605[309] = 0;
   out_4165192178605544605[310] = 0;
   out_4165192178605544605[311] = 0;
   out_4165192178605544605[312] = 0;
   out_4165192178605544605[313] = 0;
   out_4165192178605544605[314] = 0;
   out_4165192178605544605[315] = 0;
   out_4165192178605544605[316] = 0;
   out_4165192178605544605[317] = 0;
   out_4165192178605544605[318] = 0;
   out_4165192178605544605[319] = 0;
   out_4165192178605544605[320] = 0;
   out_4165192178605544605[321] = 0;
   out_4165192178605544605[322] = 0;
   out_4165192178605544605[323] = 0;
   out_4165192178605544605[324] = 0;
   out_4165192178605544605[325] = 0;
   out_4165192178605544605[326] = 0;
   out_4165192178605544605[327] = 0;
   out_4165192178605544605[328] = 0;
   out_4165192178605544605[329] = 0;
   out_4165192178605544605[330] = 1;
   out_4165192178605544605[331] = 0;
   out_4165192178605544605[332] = 0;
   out_4165192178605544605[333] = 0;
   out_4165192178605544605[334] = 0;
   out_4165192178605544605[335] = 0;
   out_4165192178605544605[336] = 0;
   out_4165192178605544605[337] = 0;
   out_4165192178605544605[338] = 0;
   out_4165192178605544605[339] = 0;
   out_4165192178605544605[340] = 0;
   out_4165192178605544605[341] = 0;
   out_4165192178605544605[342] = 0;
   out_4165192178605544605[343] = 0;
   out_4165192178605544605[344] = 0;
   out_4165192178605544605[345] = 0;
   out_4165192178605544605[346] = 0;
   out_4165192178605544605[347] = 0;
   out_4165192178605544605[348] = 0;
   out_4165192178605544605[349] = 0;
   out_4165192178605544605[350] = 0;
   out_4165192178605544605[351] = 0;
   out_4165192178605544605[352] = 1;
   out_4165192178605544605[353] = 0;
   out_4165192178605544605[354] = 0;
   out_4165192178605544605[355] = 0;
   out_4165192178605544605[356] = 0;
   out_4165192178605544605[357] = 0;
   out_4165192178605544605[358] = 0;
   out_4165192178605544605[359] = 0;
   out_4165192178605544605[360] = 0;
   out_4165192178605544605[361] = 0;
   out_4165192178605544605[362] = 0;
   out_4165192178605544605[363] = 0;
   out_4165192178605544605[364] = 0;
   out_4165192178605544605[365] = 0;
   out_4165192178605544605[366] = 0;
   out_4165192178605544605[367] = 0;
   out_4165192178605544605[368] = 0;
   out_4165192178605544605[369] = 0;
   out_4165192178605544605[370] = 0;
   out_4165192178605544605[371] = 0;
   out_4165192178605544605[372] = 0;
   out_4165192178605544605[373] = 0;
   out_4165192178605544605[374] = 1;
   out_4165192178605544605[375] = 0;
   out_4165192178605544605[376] = 0;
   out_4165192178605544605[377] = 0;
   out_4165192178605544605[378] = 0;
   out_4165192178605544605[379] = 0;
   out_4165192178605544605[380] = 0;
   out_4165192178605544605[381] = 0;
   out_4165192178605544605[382] = 0;
   out_4165192178605544605[383] = 0;
   out_4165192178605544605[384] = 0;
   out_4165192178605544605[385] = 0;
   out_4165192178605544605[386] = 0;
   out_4165192178605544605[387] = 0;
   out_4165192178605544605[388] = 0;
   out_4165192178605544605[389] = 0;
   out_4165192178605544605[390] = 0;
   out_4165192178605544605[391] = 0;
   out_4165192178605544605[392] = 0;
   out_4165192178605544605[393] = 0;
   out_4165192178605544605[394] = 0;
   out_4165192178605544605[395] = 0;
   out_4165192178605544605[396] = 1;
   out_4165192178605544605[397] = 0;
   out_4165192178605544605[398] = 0;
   out_4165192178605544605[399] = 0;
   out_4165192178605544605[400] = 0;
   out_4165192178605544605[401] = 0;
   out_4165192178605544605[402] = 0;
   out_4165192178605544605[403] = 0;
   out_4165192178605544605[404] = 0;
   out_4165192178605544605[405] = 0;
   out_4165192178605544605[406] = 0;
   out_4165192178605544605[407] = 0;
   out_4165192178605544605[408] = 0;
   out_4165192178605544605[409] = 0;
   out_4165192178605544605[410] = 0;
   out_4165192178605544605[411] = 0;
   out_4165192178605544605[412] = 0;
   out_4165192178605544605[413] = 0;
   out_4165192178605544605[414] = 0;
   out_4165192178605544605[415] = 0;
   out_4165192178605544605[416] = 0;
   out_4165192178605544605[417] = 0;
   out_4165192178605544605[418] = 1;
   out_4165192178605544605[419] = 0;
   out_4165192178605544605[420] = 0;
   out_4165192178605544605[421] = 0;
   out_4165192178605544605[422] = 0;
   out_4165192178605544605[423] = 0;
   out_4165192178605544605[424] = 0;
   out_4165192178605544605[425] = 0;
   out_4165192178605544605[426] = 0;
   out_4165192178605544605[427] = 0;
   out_4165192178605544605[428] = 0;
   out_4165192178605544605[429] = 0;
   out_4165192178605544605[430] = 0;
   out_4165192178605544605[431] = 0;
   out_4165192178605544605[432] = 0;
   out_4165192178605544605[433] = 0;
   out_4165192178605544605[434] = 0;
   out_4165192178605544605[435] = 0;
   out_4165192178605544605[436] = 0;
   out_4165192178605544605[437] = 0;
   out_4165192178605544605[438] = 0;
   out_4165192178605544605[439] = 0;
   out_4165192178605544605[440] = 1;
}
void h_4(double *state, double *unused, double *out_4652887510590896033) {
   out_4652887510590896033[0] = state[10] + state[13];
   out_4652887510590896033[1] = state[11] + state[14];
   out_4652887510590896033[2] = state[12] + state[15];
}
void H_4(double *state, double *unused, double *out_810789778125498317) {
   out_810789778125498317[0] = 0;
   out_810789778125498317[1] = 0;
   out_810789778125498317[2] = 0;
   out_810789778125498317[3] = 0;
   out_810789778125498317[4] = 0;
   out_810789778125498317[5] = 0;
   out_810789778125498317[6] = 0;
   out_810789778125498317[7] = 0;
   out_810789778125498317[8] = 0;
   out_810789778125498317[9] = 0;
   out_810789778125498317[10] = 1;
   out_810789778125498317[11] = 0;
   out_810789778125498317[12] = 0;
   out_810789778125498317[13] = 1;
   out_810789778125498317[14] = 0;
   out_810789778125498317[15] = 0;
   out_810789778125498317[16] = 0;
   out_810789778125498317[17] = 0;
   out_810789778125498317[18] = 0;
   out_810789778125498317[19] = 0;
   out_810789778125498317[20] = 0;
   out_810789778125498317[21] = 0;
   out_810789778125498317[22] = 0;
   out_810789778125498317[23] = 0;
   out_810789778125498317[24] = 0;
   out_810789778125498317[25] = 0;
   out_810789778125498317[26] = 0;
   out_810789778125498317[27] = 0;
   out_810789778125498317[28] = 0;
   out_810789778125498317[29] = 0;
   out_810789778125498317[30] = 0;
   out_810789778125498317[31] = 0;
   out_810789778125498317[32] = 0;
   out_810789778125498317[33] = 1;
   out_810789778125498317[34] = 0;
   out_810789778125498317[35] = 0;
   out_810789778125498317[36] = 1;
   out_810789778125498317[37] = 0;
   out_810789778125498317[38] = 0;
   out_810789778125498317[39] = 0;
   out_810789778125498317[40] = 0;
   out_810789778125498317[41] = 0;
   out_810789778125498317[42] = 0;
   out_810789778125498317[43] = 0;
   out_810789778125498317[44] = 0;
   out_810789778125498317[45] = 0;
   out_810789778125498317[46] = 0;
   out_810789778125498317[47] = 0;
   out_810789778125498317[48] = 0;
   out_810789778125498317[49] = 0;
   out_810789778125498317[50] = 0;
   out_810789778125498317[51] = 0;
   out_810789778125498317[52] = 0;
   out_810789778125498317[53] = 0;
   out_810789778125498317[54] = 0;
   out_810789778125498317[55] = 0;
   out_810789778125498317[56] = 1;
   out_810789778125498317[57] = 0;
   out_810789778125498317[58] = 0;
   out_810789778125498317[59] = 1;
   out_810789778125498317[60] = 0;
   out_810789778125498317[61] = 0;
   out_810789778125498317[62] = 0;
   out_810789778125498317[63] = 0;
   out_810789778125498317[64] = 0;
   out_810789778125498317[65] = 0;
}
void h_9(double *state, double *unused, double *out_3501710928290784176) {
   out_3501710928290784176[0] = state[10];
   out_3501710928290784176[1] = state[11];
   out_3501710928290784176[2] = state[12];
}
void H_9(double *state, double *unused, double *out_1051979424755088962) {
   out_1051979424755088962[0] = 0;
   out_1051979424755088962[1] = 0;
   out_1051979424755088962[2] = 0;
   out_1051979424755088962[3] = 0;
   out_1051979424755088962[4] = 0;
   out_1051979424755088962[5] = 0;
   out_1051979424755088962[6] = 0;
   out_1051979424755088962[7] = 0;
   out_1051979424755088962[8] = 0;
   out_1051979424755088962[9] = 0;
   out_1051979424755088962[10] = 1;
   out_1051979424755088962[11] = 0;
   out_1051979424755088962[12] = 0;
   out_1051979424755088962[13] = 0;
   out_1051979424755088962[14] = 0;
   out_1051979424755088962[15] = 0;
   out_1051979424755088962[16] = 0;
   out_1051979424755088962[17] = 0;
   out_1051979424755088962[18] = 0;
   out_1051979424755088962[19] = 0;
   out_1051979424755088962[20] = 0;
   out_1051979424755088962[21] = 0;
   out_1051979424755088962[22] = 0;
   out_1051979424755088962[23] = 0;
   out_1051979424755088962[24] = 0;
   out_1051979424755088962[25] = 0;
   out_1051979424755088962[26] = 0;
   out_1051979424755088962[27] = 0;
   out_1051979424755088962[28] = 0;
   out_1051979424755088962[29] = 0;
   out_1051979424755088962[30] = 0;
   out_1051979424755088962[31] = 0;
   out_1051979424755088962[32] = 0;
   out_1051979424755088962[33] = 1;
   out_1051979424755088962[34] = 0;
   out_1051979424755088962[35] = 0;
   out_1051979424755088962[36] = 0;
   out_1051979424755088962[37] = 0;
   out_1051979424755088962[38] = 0;
   out_1051979424755088962[39] = 0;
   out_1051979424755088962[40] = 0;
   out_1051979424755088962[41] = 0;
   out_1051979424755088962[42] = 0;
   out_1051979424755088962[43] = 0;
   out_1051979424755088962[44] = 0;
   out_1051979424755088962[45] = 0;
   out_1051979424755088962[46] = 0;
   out_1051979424755088962[47] = 0;
   out_1051979424755088962[48] = 0;
   out_1051979424755088962[49] = 0;
   out_1051979424755088962[50] = 0;
   out_1051979424755088962[51] = 0;
   out_1051979424755088962[52] = 0;
   out_1051979424755088962[53] = 0;
   out_1051979424755088962[54] = 0;
   out_1051979424755088962[55] = 0;
   out_1051979424755088962[56] = 1;
   out_1051979424755088962[57] = 0;
   out_1051979424755088962[58] = 0;
   out_1051979424755088962[59] = 0;
   out_1051979424755088962[60] = 0;
   out_1051979424755088962[61] = 0;
   out_1051979424755088962[62] = 0;
   out_1051979424755088962[63] = 0;
   out_1051979424755088962[64] = 0;
   out_1051979424755088962[65] = 0;
}
void h_10(double *state, double *unused, double *out_2413554480529427133) {
   out_2413554480529427133[0] = 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0] + state[16] + state[19];
   out_2413554480529427133[1] = 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1] + state[17] + state[20];
   out_2413554480529427133[2] = 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[2] + state[18] + state[21];
}
void H_10(double *state, double *unused, double *out_893447063974218693) {
   out_893447063974218693[0] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*pow(state[0], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_893447063974218693[1] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_893447063974218693[2] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[2];
   out_893447063974218693[3] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_893447063974218693[4] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_893447063974218693[5] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_893447063974218693[6] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_893447063974218693[7] = 0;
   out_893447063974218693[8] = 0;
   out_893447063974218693[9] = 0;
   out_893447063974218693[10] = 0;
   out_893447063974218693[11] = 0;
   out_893447063974218693[12] = 0;
   out_893447063974218693[13] = 0;
   out_893447063974218693[14] = 0;
   out_893447063974218693[15] = 0;
   out_893447063974218693[16] = 1;
   out_893447063974218693[17] = 0;
   out_893447063974218693[18] = 0;
   out_893447063974218693[19] = 1;
   out_893447063974218693[20] = 0;
   out_893447063974218693[21] = 0;
   out_893447063974218693[22] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_893447063974218693[23] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*pow(state[1], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_893447063974218693[24] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1]*state[2];
   out_893447063974218693[25] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_893447063974218693[26] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_893447063974218693[27] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_893447063974218693[28] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_893447063974218693[29] = 0;
   out_893447063974218693[30] = 0;
   out_893447063974218693[31] = 0;
   out_893447063974218693[32] = 0;
   out_893447063974218693[33] = 0;
   out_893447063974218693[34] = 0;
   out_893447063974218693[35] = 0;
   out_893447063974218693[36] = 0;
   out_893447063974218693[37] = 0;
   out_893447063974218693[38] = 0;
   out_893447063974218693[39] = 1;
   out_893447063974218693[40] = 0;
   out_893447063974218693[41] = 0;
   out_893447063974218693[42] = 1;
   out_893447063974218693[43] = 0;
   out_893447063974218693[44] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[0]*state[2];
   out_893447063974218693[45] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[1]*state[2];
   out_893447063974218693[46] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*pow(state[2], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_893447063974218693[47] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_893447063974218693[48] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_893447063974218693[49] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_893447063974218693[50] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_893447063974218693[51] = 0;
   out_893447063974218693[52] = 0;
   out_893447063974218693[53] = 0;
   out_893447063974218693[54] = 0;
   out_893447063974218693[55] = 0;
   out_893447063974218693[56] = 0;
   out_893447063974218693[57] = 0;
   out_893447063974218693[58] = 0;
   out_893447063974218693[59] = 0;
   out_893447063974218693[60] = 0;
   out_893447063974218693[61] = 0;
   out_893447063974218693[62] = 1;
   out_893447063974218693[63] = 0;
   out_893447063974218693[64] = 0;
   out_893447063974218693[65] = 1;
}
void h_12(double *state, double *unused, double *out_7517024536835625164) {
   out_7517024536835625164[0] = state[0];
   out_7517024536835625164[1] = state[1];
   out_7517024536835625164[2] = state[2];
}
void H_12(double *state, double *unused, double *out_5830246186157460112) {
   out_5830246186157460112[0] = 1;
   out_5830246186157460112[1] = 0;
   out_5830246186157460112[2] = 0;
   out_5830246186157460112[3] = 0;
   out_5830246186157460112[4] = 0;
   out_5830246186157460112[5] = 0;
   out_5830246186157460112[6] = 0;
   out_5830246186157460112[7] = 0;
   out_5830246186157460112[8] = 0;
   out_5830246186157460112[9] = 0;
   out_5830246186157460112[10] = 0;
   out_5830246186157460112[11] = 0;
   out_5830246186157460112[12] = 0;
   out_5830246186157460112[13] = 0;
   out_5830246186157460112[14] = 0;
   out_5830246186157460112[15] = 0;
   out_5830246186157460112[16] = 0;
   out_5830246186157460112[17] = 0;
   out_5830246186157460112[18] = 0;
   out_5830246186157460112[19] = 0;
   out_5830246186157460112[20] = 0;
   out_5830246186157460112[21] = 0;
   out_5830246186157460112[22] = 0;
   out_5830246186157460112[23] = 1;
   out_5830246186157460112[24] = 0;
   out_5830246186157460112[25] = 0;
   out_5830246186157460112[26] = 0;
   out_5830246186157460112[27] = 0;
   out_5830246186157460112[28] = 0;
   out_5830246186157460112[29] = 0;
   out_5830246186157460112[30] = 0;
   out_5830246186157460112[31] = 0;
   out_5830246186157460112[32] = 0;
   out_5830246186157460112[33] = 0;
   out_5830246186157460112[34] = 0;
   out_5830246186157460112[35] = 0;
   out_5830246186157460112[36] = 0;
   out_5830246186157460112[37] = 0;
   out_5830246186157460112[38] = 0;
   out_5830246186157460112[39] = 0;
   out_5830246186157460112[40] = 0;
   out_5830246186157460112[41] = 0;
   out_5830246186157460112[42] = 0;
   out_5830246186157460112[43] = 0;
   out_5830246186157460112[44] = 0;
   out_5830246186157460112[45] = 0;
   out_5830246186157460112[46] = 1;
   out_5830246186157460112[47] = 0;
   out_5830246186157460112[48] = 0;
   out_5830246186157460112[49] = 0;
   out_5830246186157460112[50] = 0;
   out_5830246186157460112[51] = 0;
   out_5830246186157460112[52] = 0;
   out_5830246186157460112[53] = 0;
   out_5830246186157460112[54] = 0;
   out_5830246186157460112[55] = 0;
   out_5830246186157460112[56] = 0;
   out_5830246186157460112[57] = 0;
   out_5830246186157460112[58] = 0;
   out_5830246186157460112[59] = 0;
   out_5830246186157460112[60] = 0;
   out_5830246186157460112[61] = 0;
   out_5830246186157460112[62] = 0;
   out_5830246186157460112[63] = 0;
   out_5830246186157460112[64] = 0;
   out_5830246186157460112[65] = 0;
}
void h_35(double *state, double *unused, double *out_9056128467487379735) {
   out_9056128467487379735[0] = state[7];
   out_9056128467487379735[1] = state[8];
   out_9056128467487379735[2] = state[9];
}
void H_35(double *state, double *unused, double *out_8575809218482473821) {
   out_8575809218482473821[0] = 0;
   out_8575809218482473821[1] = 0;
   out_8575809218482473821[2] = 0;
   out_8575809218482473821[3] = 0;
   out_8575809218482473821[4] = 0;
   out_8575809218482473821[5] = 0;
   out_8575809218482473821[6] = 0;
   out_8575809218482473821[7] = 1;
   out_8575809218482473821[8] = 0;
   out_8575809218482473821[9] = 0;
   out_8575809218482473821[10] = 0;
   out_8575809218482473821[11] = 0;
   out_8575809218482473821[12] = 0;
   out_8575809218482473821[13] = 0;
   out_8575809218482473821[14] = 0;
   out_8575809218482473821[15] = 0;
   out_8575809218482473821[16] = 0;
   out_8575809218482473821[17] = 0;
   out_8575809218482473821[18] = 0;
   out_8575809218482473821[19] = 0;
   out_8575809218482473821[20] = 0;
   out_8575809218482473821[21] = 0;
   out_8575809218482473821[22] = 0;
   out_8575809218482473821[23] = 0;
   out_8575809218482473821[24] = 0;
   out_8575809218482473821[25] = 0;
   out_8575809218482473821[26] = 0;
   out_8575809218482473821[27] = 0;
   out_8575809218482473821[28] = 0;
   out_8575809218482473821[29] = 0;
   out_8575809218482473821[30] = 1;
   out_8575809218482473821[31] = 0;
   out_8575809218482473821[32] = 0;
   out_8575809218482473821[33] = 0;
   out_8575809218482473821[34] = 0;
   out_8575809218482473821[35] = 0;
   out_8575809218482473821[36] = 0;
   out_8575809218482473821[37] = 0;
   out_8575809218482473821[38] = 0;
   out_8575809218482473821[39] = 0;
   out_8575809218482473821[40] = 0;
   out_8575809218482473821[41] = 0;
   out_8575809218482473821[42] = 0;
   out_8575809218482473821[43] = 0;
   out_8575809218482473821[44] = 0;
   out_8575809218482473821[45] = 0;
   out_8575809218482473821[46] = 0;
   out_8575809218482473821[47] = 0;
   out_8575809218482473821[48] = 0;
   out_8575809218482473821[49] = 0;
   out_8575809218482473821[50] = 0;
   out_8575809218482473821[51] = 0;
   out_8575809218482473821[52] = 0;
   out_8575809218482473821[53] = 1;
   out_8575809218482473821[54] = 0;
   out_8575809218482473821[55] = 0;
   out_8575809218482473821[56] = 0;
   out_8575809218482473821[57] = 0;
   out_8575809218482473821[58] = 0;
   out_8575809218482473821[59] = 0;
   out_8575809218482473821[60] = 0;
   out_8575809218482473821[61] = 0;
   out_8575809218482473821[62] = 0;
   out_8575809218482473821[63] = 0;
   out_8575809218482473821[64] = 0;
   out_8575809218482473821[65] = 0;
}
void h_32(double *state, double *unused, double *out_589385856329542852) {
   out_589385856329542852[0] = state[3];
   out_589385856329542852[1] = state[4];
   out_589385856329542852[2] = state[5];
   out_589385856329542852[3] = state[6];
}
void H_32(double *state, double *unused, double *out_4069630483019465237) {
   out_4069630483019465237[0] = 0;
   out_4069630483019465237[1] = 0;
   out_4069630483019465237[2] = 0;
   out_4069630483019465237[3] = 1;
   out_4069630483019465237[4] = 0;
   out_4069630483019465237[5] = 0;
   out_4069630483019465237[6] = 0;
   out_4069630483019465237[7] = 0;
   out_4069630483019465237[8] = 0;
   out_4069630483019465237[9] = 0;
   out_4069630483019465237[10] = 0;
   out_4069630483019465237[11] = 0;
   out_4069630483019465237[12] = 0;
   out_4069630483019465237[13] = 0;
   out_4069630483019465237[14] = 0;
   out_4069630483019465237[15] = 0;
   out_4069630483019465237[16] = 0;
   out_4069630483019465237[17] = 0;
   out_4069630483019465237[18] = 0;
   out_4069630483019465237[19] = 0;
   out_4069630483019465237[20] = 0;
   out_4069630483019465237[21] = 0;
   out_4069630483019465237[22] = 0;
   out_4069630483019465237[23] = 0;
   out_4069630483019465237[24] = 0;
   out_4069630483019465237[25] = 0;
   out_4069630483019465237[26] = 1;
   out_4069630483019465237[27] = 0;
   out_4069630483019465237[28] = 0;
   out_4069630483019465237[29] = 0;
   out_4069630483019465237[30] = 0;
   out_4069630483019465237[31] = 0;
   out_4069630483019465237[32] = 0;
   out_4069630483019465237[33] = 0;
   out_4069630483019465237[34] = 0;
   out_4069630483019465237[35] = 0;
   out_4069630483019465237[36] = 0;
   out_4069630483019465237[37] = 0;
   out_4069630483019465237[38] = 0;
   out_4069630483019465237[39] = 0;
   out_4069630483019465237[40] = 0;
   out_4069630483019465237[41] = 0;
   out_4069630483019465237[42] = 0;
   out_4069630483019465237[43] = 0;
   out_4069630483019465237[44] = 0;
   out_4069630483019465237[45] = 0;
   out_4069630483019465237[46] = 0;
   out_4069630483019465237[47] = 0;
   out_4069630483019465237[48] = 0;
   out_4069630483019465237[49] = 1;
   out_4069630483019465237[50] = 0;
   out_4069630483019465237[51] = 0;
   out_4069630483019465237[52] = 0;
   out_4069630483019465237[53] = 0;
   out_4069630483019465237[54] = 0;
   out_4069630483019465237[55] = 0;
   out_4069630483019465237[56] = 0;
   out_4069630483019465237[57] = 0;
   out_4069630483019465237[58] = 0;
   out_4069630483019465237[59] = 0;
   out_4069630483019465237[60] = 0;
   out_4069630483019465237[61] = 0;
   out_4069630483019465237[62] = 0;
   out_4069630483019465237[63] = 0;
   out_4069630483019465237[64] = 0;
   out_4069630483019465237[65] = 0;
   out_4069630483019465237[66] = 0;
   out_4069630483019465237[67] = 0;
   out_4069630483019465237[68] = 0;
   out_4069630483019465237[69] = 0;
   out_4069630483019465237[70] = 0;
   out_4069630483019465237[71] = 0;
   out_4069630483019465237[72] = 1;
   out_4069630483019465237[73] = 0;
   out_4069630483019465237[74] = 0;
   out_4069630483019465237[75] = 0;
   out_4069630483019465237[76] = 0;
   out_4069630483019465237[77] = 0;
   out_4069630483019465237[78] = 0;
   out_4069630483019465237[79] = 0;
   out_4069630483019465237[80] = 0;
   out_4069630483019465237[81] = 0;
   out_4069630483019465237[82] = 0;
   out_4069630483019465237[83] = 0;
   out_4069630483019465237[84] = 0;
   out_4069630483019465237[85] = 0;
   out_4069630483019465237[86] = 0;
   out_4069630483019465237[87] = 0;
}
void h_13(double *state, double *unused, double *out_7505368976860630355) {
   out_7505368976860630355[0] = (-2*state[3]*state[5] + 2*state[4]*state[6])*state[9] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[8] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[7];
   out_7505368976860630355[1] = (2*state[3]*state[4] + 2*state[5]*state[6])*state[9] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[7] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[8];
   out_7505368976860630355[2] = (-2*state[3]*state[4] + 2*state[5]*state[6])*state[8] + (2*state[3]*state[5] + 2*state[4]*state[6])*state[7] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[9];
}
void H_13(double *state, double *unused, double *out_3739892952041074373) {
   out_3739892952041074373[0] = 0;
   out_3739892952041074373[1] = 0;
   out_3739892952041074373[2] = 0;
   out_3739892952041074373[3] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_3739892952041074373[4] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_3739892952041074373[5] = -2*state[3]*state[9] + 2*state[4]*state[8] - 2*state[5]*state[7];
   out_3739892952041074373[6] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_3739892952041074373[7] = pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2);
   out_3739892952041074373[8] = 2*state[3]*state[6] + 2*state[4]*state[5];
   out_3739892952041074373[9] = -2*state[3]*state[5] + 2*state[4]*state[6];
   out_3739892952041074373[10] = 0;
   out_3739892952041074373[11] = 0;
   out_3739892952041074373[12] = 0;
   out_3739892952041074373[13] = 0;
   out_3739892952041074373[14] = 0;
   out_3739892952041074373[15] = 0;
   out_3739892952041074373[16] = 0;
   out_3739892952041074373[17] = 0;
   out_3739892952041074373[18] = 0;
   out_3739892952041074373[19] = 0;
   out_3739892952041074373[20] = 0;
   out_3739892952041074373[21] = 0;
   out_3739892952041074373[22] = 0;
   out_3739892952041074373[23] = 0;
   out_3739892952041074373[24] = 0;
   out_3739892952041074373[25] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_3739892952041074373[26] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_3739892952041074373[27] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_3739892952041074373[28] = -2*state[3]*state[7] + 2*state[5]*state[9] - 2*state[6]*state[8];
   out_3739892952041074373[29] = -2*state[3]*state[6] + 2*state[4]*state[5];
   out_3739892952041074373[30] = pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2);
   out_3739892952041074373[31] = 2*state[3]*state[4] + 2*state[5]*state[6];
   out_3739892952041074373[32] = 0;
   out_3739892952041074373[33] = 0;
   out_3739892952041074373[34] = 0;
   out_3739892952041074373[35] = 0;
   out_3739892952041074373[36] = 0;
   out_3739892952041074373[37] = 0;
   out_3739892952041074373[38] = 0;
   out_3739892952041074373[39] = 0;
   out_3739892952041074373[40] = 0;
   out_3739892952041074373[41] = 0;
   out_3739892952041074373[42] = 0;
   out_3739892952041074373[43] = 0;
   out_3739892952041074373[44] = 0;
   out_3739892952041074373[45] = 0;
   out_3739892952041074373[46] = 0;
   out_3739892952041074373[47] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_3739892952041074373[48] = -2*state[3]*state[8] - 2*state[4]*state[9] + 2*state[6]*state[7];
   out_3739892952041074373[49] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_3739892952041074373[50] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_3739892952041074373[51] = 2*state[3]*state[5] + 2*state[4]*state[6];
   out_3739892952041074373[52] = -2*state[3]*state[4] + 2*state[5]*state[6];
   out_3739892952041074373[53] = pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2);
   out_3739892952041074373[54] = 0;
   out_3739892952041074373[55] = 0;
   out_3739892952041074373[56] = 0;
   out_3739892952041074373[57] = 0;
   out_3739892952041074373[58] = 0;
   out_3739892952041074373[59] = 0;
   out_3739892952041074373[60] = 0;
   out_3739892952041074373[61] = 0;
   out_3739892952041074373[62] = 0;
   out_3739892952041074373[63] = 0;
   out_3739892952041074373[64] = 0;
   out_3739892952041074373[65] = 0;
}
void h_14(double *state, double *unused, double *out_3501710928290784176) {
   out_3501710928290784176[0] = state[10];
   out_3501710928290784176[1] = state[11];
   out_3501710928290784176[2] = state[12];
}
void H_14(double *state, double *unused, double *out_1051979424755088962) {
   out_1051979424755088962[0] = 0;
   out_1051979424755088962[1] = 0;
   out_1051979424755088962[2] = 0;
   out_1051979424755088962[3] = 0;
   out_1051979424755088962[4] = 0;
   out_1051979424755088962[5] = 0;
   out_1051979424755088962[6] = 0;
   out_1051979424755088962[7] = 0;
   out_1051979424755088962[8] = 0;
   out_1051979424755088962[9] = 0;
   out_1051979424755088962[10] = 1;
   out_1051979424755088962[11] = 0;
   out_1051979424755088962[12] = 0;
   out_1051979424755088962[13] = 0;
   out_1051979424755088962[14] = 0;
   out_1051979424755088962[15] = 0;
   out_1051979424755088962[16] = 0;
   out_1051979424755088962[17] = 0;
   out_1051979424755088962[18] = 0;
   out_1051979424755088962[19] = 0;
   out_1051979424755088962[20] = 0;
   out_1051979424755088962[21] = 0;
   out_1051979424755088962[22] = 0;
   out_1051979424755088962[23] = 0;
   out_1051979424755088962[24] = 0;
   out_1051979424755088962[25] = 0;
   out_1051979424755088962[26] = 0;
   out_1051979424755088962[27] = 0;
   out_1051979424755088962[28] = 0;
   out_1051979424755088962[29] = 0;
   out_1051979424755088962[30] = 0;
   out_1051979424755088962[31] = 0;
   out_1051979424755088962[32] = 0;
   out_1051979424755088962[33] = 1;
   out_1051979424755088962[34] = 0;
   out_1051979424755088962[35] = 0;
   out_1051979424755088962[36] = 0;
   out_1051979424755088962[37] = 0;
   out_1051979424755088962[38] = 0;
   out_1051979424755088962[39] = 0;
   out_1051979424755088962[40] = 0;
   out_1051979424755088962[41] = 0;
   out_1051979424755088962[42] = 0;
   out_1051979424755088962[43] = 0;
   out_1051979424755088962[44] = 0;
   out_1051979424755088962[45] = 0;
   out_1051979424755088962[46] = 0;
   out_1051979424755088962[47] = 0;
   out_1051979424755088962[48] = 0;
   out_1051979424755088962[49] = 0;
   out_1051979424755088962[50] = 0;
   out_1051979424755088962[51] = 0;
   out_1051979424755088962[52] = 0;
   out_1051979424755088962[53] = 0;
   out_1051979424755088962[54] = 0;
   out_1051979424755088962[55] = 0;
   out_1051979424755088962[56] = 1;
   out_1051979424755088962[57] = 0;
   out_1051979424755088962[58] = 0;
   out_1051979424755088962[59] = 0;
   out_1051979424755088962[60] = 0;
   out_1051979424755088962[61] = 0;
   out_1051979424755088962[62] = 0;
   out_1051979424755088962[63] = 0;
   out_1051979424755088962[64] = 0;
   out_1051979424755088962[65] = 0;
}
void h_33(double *state, double *unused, double *out_4593236273075748847) {
   out_4593236273075748847[0] = state[16];
   out_4593236273075748847[1] = state[17];
   out_4593236273075748847[2] = state[18];
}
void H_33(double *state, double *unused, double *out_6720377850588220191) {
   out_6720377850588220191[0] = 0;
   out_6720377850588220191[1] = 0;
   out_6720377850588220191[2] = 0;
   out_6720377850588220191[3] = 0;
   out_6720377850588220191[4] = 0;
   out_6720377850588220191[5] = 0;
   out_6720377850588220191[6] = 0;
   out_6720377850588220191[7] = 0;
   out_6720377850588220191[8] = 0;
   out_6720377850588220191[9] = 0;
   out_6720377850588220191[10] = 0;
   out_6720377850588220191[11] = 0;
   out_6720377850588220191[12] = 0;
   out_6720377850588220191[13] = 0;
   out_6720377850588220191[14] = 0;
   out_6720377850588220191[15] = 0;
   out_6720377850588220191[16] = 1;
   out_6720377850588220191[17] = 0;
   out_6720377850588220191[18] = 0;
   out_6720377850588220191[19] = 0;
   out_6720377850588220191[20] = 0;
   out_6720377850588220191[21] = 0;
   out_6720377850588220191[22] = 0;
   out_6720377850588220191[23] = 0;
   out_6720377850588220191[24] = 0;
   out_6720377850588220191[25] = 0;
   out_6720377850588220191[26] = 0;
   out_6720377850588220191[27] = 0;
   out_6720377850588220191[28] = 0;
   out_6720377850588220191[29] = 0;
   out_6720377850588220191[30] = 0;
   out_6720377850588220191[31] = 0;
   out_6720377850588220191[32] = 0;
   out_6720377850588220191[33] = 0;
   out_6720377850588220191[34] = 0;
   out_6720377850588220191[35] = 0;
   out_6720377850588220191[36] = 0;
   out_6720377850588220191[37] = 0;
   out_6720377850588220191[38] = 0;
   out_6720377850588220191[39] = 1;
   out_6720377850588220191[40] = 0;
   out_6720377850588220191[41] = 0;
   out_6720377850588220191[42] = 0;
   out_6720377850588220191[43] = 0;
   out_6720377850588220191[44] = 0;
   out_6720377850588220191[45] = 0;
   out_6720377850588220191[46] = 0;
   out_6720377850588220191[47] = 0;
   out_6720377850588220191[48] = 0;
   out_6720377850588220191[49] = 0;
   out_6720377850588220191[50] = 0;
   out_6720377850588220191[51] = 0;
   out_6720377850588220191[52] = 0;
   out_6720377850588220191[53] = 0;
   out_6720377850588220191[54] = 0;
   out_6720377850588220191[55] = 0;
   out_6720377850588220191[56] = 0;
   out_6720377850588220191[57] = 0;
   out_6720377850588220191[58] = 0;
   out_6720377850588220191[59] = 0;
   out_6720377850588220191[60] = 0;
   out_6720377850588220191[61] = 0;
   out_6720377850588220191[62] = 1;
   out_6720377850588220191[63] = 0;
   out_6720377850588220191[64] = 0;
   out_6720377850588220191[65] = 0;
}
#include <eigen3/Eigen/Dense>
#include <iostream>

typedef Eigen::Matrix<double, DIM, DIM, Eigen::RowMajor> DDM;
typedef Eigen::Matrix<double, EDIM, EDIM, Eigen::RowMajor> EEM;
typedef Eigen::Matrix<double, DIM, EDIM, Eigen::RowMajor> DEM;

void predict(double *in_x, double *in_P, double *in_Q, double dt) {
  typedef Eigen::Matrix<double, MEDIM, MEDIM, Eigen::RowMajor> RRM;

  double nx[DIM] = {0};
  double in_F[EDIM*EDIM] = {0};

  // functions from sympy
  f_fun(in_x, dt, nx);
  F_fun(in_x, dt, in_F);


  EEM F(in_F);
  EEM P(in_P);
  EEM Q(in_Q);

  RRM F_main = F.topLeftCorner(MEDIM, MEDIM);
  P.topLeftCorner(MEDIM, MEDIM) = (F_main * P.topLeftCorner(MEDIM, MEDIM)) * F_main.transpose();
  P.topRightCorner(MEDIM, EDIM - MEDIM) = F_main * P.topRightCorner(MEDIM, EDIM - MEDIM);
  P.bottomLeftCorner(EDIM - MEDIM, MEDIM) = P.bottomLeftCorner(EDIM - MEDIM, MEDIM) * F_main.transpose();

  P = P + dt*Q;

  // copy out state
  memcpy(in_x, nx, DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
}

// note: extra_args dim only correct when null space projecting
// otherwise 1
template <int ZDIM, int EADIM, bool MAHA_TEST>
void update(double *in_x, double *in_P, Hfun h_fun, Hfun H_fun, Hfun Hea_fun, double *in_z, double *in_R, double *in_ea, double MAHA_THRESHOLD) {
  typedef Eigen::Matrix<double, ZDIM, ZDIM, Eigen::RowMajor> ZZM;
  typedef Eigen::Matrix<double, ZDIM, DIM, Eigen::RowMajor> ZDM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, EDIM, Eigen::RowMajor> XEM;
  //typedef Eigen::Matrix<double, EDIM, ZDIM, Eigen::RowMajor> EZM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, 1> X1M;
  typedef Eigen::Matrix<double, Eigen::Dynamic, Eigen::Dynamic, Eigen::RowMajor> XXM;

  double in_hx[ZDIM] = {0};
  double in_H[ZDIM * DIM] = {0};
  double in_H_mod[EDIM * DIM] = {0};
  double delta_x[EDIM] = {0};
  double x_new[DIM] = {0};


  // state x, P
  Eigen::Matrix<double, ZDIM, 1> z(in_z);
  EEM P(in_P);
  ZZM pre_R(in_R);

  // functions from sympy
  h_fun(in_x, in_ea, in_hx);
  H_fun(in_x, in_ea, in_H);
  ZDM pre_H(in_H);

  // get y (y = z - hx)
  Eigen::Matrix<double, ZDIM, 1> pre_y(in_hx); pre_y = z - pre_y;
  X1M y; XXM H; XXM R;
  if (Hea_fun){
    typedef Eigen::Matrix<double, ZDIM, EADIM, Eigen::RowMajor> ZAM;
    double in_Hea[ZDIM * EADIM] = {0};
    Hea_fun(in_x, in_ea, in_Hea);
    ZAM Hea(in_Hea);
    XXM A = Hea.transpose().fullPivLu().kernel();


    y = A.transpose() * pre_y;
    H = A.transpose() * pre_H;
    R = A.transpose() * pre_R * A;
  } else {
    y = pre_y;
    H = pre_H;
    R = pre_R;
  }
  // get modified H
  H_mod_fun(in_x, in_H_mod);
  DEM H_mod(in_H_mod);
  XEM H_err = H * H_mod;

  // Do mahalobis distance test
  if (MAHA_TEST){
    XXM a = (H_err * P * H_err.transpose() + R).inverse();
    double maha_dist = y.transpose() * a * y;
    if (maha_dist > MAHA_THRESHOLD){
      R = 1.0e16 * R;
    }
  }

  // Outlier resilient weighting
  double weight = 1;//(1.5)/(1 + y.squaredNorm()/R.sum());

  // kalman gains and I_KH
  XXM S = ((H_err * P) * H_err.transpose()) + R/weight;
  XEM KT = S.fullPivLu().solve(H_err * P.transpose());
  //EZM K = KT.transpose(); TODO: WHY DOES THIS NOT COMPILE?
  //EZM K = S.fullPivLu().solve(H_err * P.transpose()).transpose();
  //std::cout << "Here is the matrix rot:\n" << K << std::endl;
  EEM I_KH = Eigen::Matrix<double, EDIM, EDIM>::Identity() - (KT.transpose() * H_err);

  // update state by injecting dx
  Eigen::Matrix<double, EDIM, 1> dx(delta_x);
  dx  = (KT.transpose() * y);
  memcpy(delta_x, dx.data(), EDIM * sizeof(double));
  err_fun(in_x, delta_x, x_new);
  Eigen::Matrix<double, DIM, 1> x(x_new);

  // update cov
  P = ((I_KH * P) * I_KH.transpose()) + ((KT.transpose() * R) * KT);

  // copy out state
  memcpy(in_x, x.data(), DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
  memcpy(in_z, y.data(), y.rows() * sizeof(double));
}




}
extern "C" {

void live_update_4(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_4, H_4, NULL, in_z, in_R, in_ea, MAHA_THRESH_4);
}
void live_update_9(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_9, H_9, NULL, in_z, in_R, in_ea, MAHA_THRESH_9);
}
void live_update_10(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_10, H_10, NULL, in_z, in_R, in_ea, MAHA_THRESH_10);
}
void live_update_12(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_12, H_12, NULL, in_z, in_R, in_ea, MAHA_THRESH_12);
}
void live_update_35(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_35, H_35, NULL, in_z, in_R, in_ea, MAHA_THRESH_35);
}
void live_update_32(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<4, 3, 0>(in_x, in_P, h_32, H_32, NULL, in_z, in_R, in_ea, MAHA_THRESH_32);
}
void live_update_13(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_13, H_13, NULL, in_z, in_R, in_ea, MAHA_THRESH_13);
}
void live_update_14(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_14, H_14, NULL, in_z, in_R, in_ea, MAHA_THRESH_14);
}
void live_update_33(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_33, H_33, NULL, in_z, in_R, in_ea, MAHA_THRESH_33);
}
void live_H(double *in_vec, double *out_5191207257923767901) {
  H(in_vec, out_5191207257923767901);
}
void live_err_fun(double *nom_x, double *delta_x, double *out_4827146406229907322) {
  err_fun(nom_x, delta_x, out_4827146406229907322);
}
void live_inv_err_fun(double *nom_x, double *true_x, double *out_9060568120511038035) {
  inv_err_fun(nom_x, true_x, out_9060568120511038035);
}
void live_H_mod_fun(double *state, double *out_6285837621319351520) {
  H_mod_fun(state, out_6285837621319351520);
}
void live_f_fun(double *state, double dt, double *out_7267815363621816153) {
  f_fun(state,  dt, out_7267815363621816153);
}
void live_F_fun(double *state, double dt, double *out_4165192178605544605) {
  F_fun(state,  dt, out_4165192178605544605);
}
void live_h_4(double *state, double *unused, double *out_4652887510590896033) {
  h_4(state, unused, out_4652887510590896033);
}
void live_H_4(double *state, double *unused, double *out_810789778125498317) {
  H_4(state, unused, out_810789778125498317);
}
void live_h_9(double *state, double *unused, double *out_3501710928290784176) {
  h_9(state, unused, out_3501710928290784176);
}
void live_H_9(double *state, double *unused, double *out_1051979424755088962) {
  H_9(state, unused, out_1051979424755088962);
}
void live_h_10(double *state, double *unused, double *out_2413554480529427133) {
  h_10(state, unused, out_2413554480529427133);
}
void live_H_10(double *state, double *unused, double *out_893447063974218693) {
  H_10(state, unused, out_893447063974218693);
}
void live_h_12(double *state, double *unused, double *out_7517024536835625164) {
  h_12(state, unused, out_7517024536835625164);
}
void live_H_12(double *state, double *unused, double *out_5830246186157460112) {
  H_12(state, unused, out_5830246186157460112);
}
void live_h_35(double *state, double *unused, double *out_9056128467487379735) {
  h_35(state, unused, out_9056128467487379735);
}
void live_H_35(double *state, double *unused, double *out_8575809218482473821) {
  H_35(state, unused, out_8575809218482473821);
}
void live_h_32(double *state, double *unused, double *out_589385856329542852) {
  h_32(state, unused, out_589385856329542852);
}
void live_H_32(double *state, double *unused, double *out_4069630483019465237) {
  H_32(state, unused, out_4069630483019465237);
}
void live_h_13(double *state, double *unused, double *out_7505368976860630355) {
  h_13(state, unused, out_7505368976860630355);
}
void live_H_13(double *state, double *unused, double *out_3739892952041074373) {
  H_13(state, unused, out_3739892952041074373);
}
void live_h_14(double *state, double *unused, double *out_3501710928290784176) {
  h_14(state, unused, out_3501710928290784176);
}
void live_H_14(double *state, double *unused, double *out_1051979424755088962) {
  H_14(state, unused, out_1051979424755088962);
}
void live_h_33(double *state, double *unused, double *out_4593236273075748847) {
  h_33(state, unused, out_4593236273075748847);
}
void live_H_33(double *state, double *unused, double *out_6720377850588220191) {
  H_33(state, unused, out_6720377850588220191);
}
void live_predict(double *in_x, double *in_P, double *in_Q, double dt) {
  predict(in_x, in_P, in_Q, dt);
}
}

const EKF live = {
  .name = "live",
  .kinds = { 4, 9, 10, 12, 35, 32, 13, 14, 33 },
  .feature_kinds = {  },
  .f_fun = live_f_fun,
  .F_fun = live_F_fun,
  .err_fun = live_err_fun,
  .inv_err_fun = live_inv_err_fun,
  .H_mod_fun = live_H_mod_fun,
  .predict = live_predict,
  .hs = {
    { 4, live_h_4 },
    { 9, live_h_9 },
    { 10, live_h_10 },
    { 12, live_h_12 },
    { 35, live_h_35 },
    { 32, live_h_32 },
    { 13, live_h_13 },
    { 14, live_h_14 },
    { 33, live_h_33 },
  },
  .Hs = {
    { 4, live_H_4 },
    { 9, live_H_9 },
    { 10, live_H_10 },
    { 12, live_H_12 },
    { 35, live_H_35 },
    { 32, live_H_32 },
    { 13, live_H_13 },
    { 14, live_H_14 },
    { 33, live_H_33 },
  },
  .updates = {
    { 4, live_update_4 },
    { 9, live_update_9 },
    { 10, live_update_10 },
    { 12, live_update_12 },
    { 35, live_update_35 },
    { 32, live_update_32 },
    { 13, live_update_13 },
    { 14, live_update_14 },
    { 33, live_update_33 },
  },
  .Hes = {
  },
  .sets = {
  },
  .extra_routines = {
    { "H", live_H },
  },
};

ekf_lib_init(live)
