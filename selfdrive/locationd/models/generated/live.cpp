#include "live.h"

namespace {
#define DIM 22
#define EDIM 21
#define MEDIM 21
typedef void (*Hfun)(double *, double *, double *);
const static double MAHA_THRESH_4 = 7.814727903251177;
const static double MAHA_THRESH_9 = 7.814727903251177;
const static double MAHA_THRESH_10 = 7.814727903251177;
const static double MAHA_THRESH_12 = 7.814727903251177;
const static double MAHA_THRESH_35 = 7.814727903251177;
const static double MAHA_THRESH_32 = 9.487729036781154;
const static double MAHA_THRESH_13 = 7.814727903251177;
const static double MAHA_THRESH_14 = 7.814727903251177;
const static double MAHA_THRESH_33 = 7.814727903251177;

/******************************************************************************
 *                      Code generated with SymPy 1.13.2                      *
 *                                                                            *
 *              See http://www.sympy.org/ for more information.               *
 *                                                                            *
 *                         This file is part of 'ekf'                         *
 ******************************************************************************/
void H(double *in_vec, double *out_940843807028553333) {
   out_940843807028553333[0] = 0;
   out_940843807028553333[1] = -sin(in_vec[1])*sin(in_vec[2])*in_vec[4] - sin(in_vec[1])*cos(in_vec[2])*in_vec[3] - cos(in_vec[1])*in_vec[5];
   out_940843807028553333[2] = -sin(in_vec[2])*cos(in_vec[1])*in_vec[3] + cos(in_vec[1])*cos(in_vec[2])*in_vec[4];
   out_940843807028553333[3] = cos(in_vec[1])*cos(in_vec[2]);
   out_940843807028553333[4] = sin(in_vec[2])*cos(in_vec[1]);
   out_940843807028553333[5] = -sin(in_vec[1]);
   out_940843807028553333[6] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (-sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_940843807028553333[7] = -sin(in_vec[0])*sin(in_vec[1])*in_vec[5] + sin(in_vec[0])*sin(in_vec[2])*cos(in_vec[1])*in_vec[4] + sin(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_940843807028553333[8] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]))*in_vec[4];
   out_940843807028553333[9] = sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]);
   out_940843807028553333[10] = sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) + cos(in_vec[0])*cos(in_vec[2]);
   out_940843807028553333[11] = sin(in_vec[0])*cos(in_vec[1]);
   out_940843807028553333[12] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (-sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) + sin(in_vec[2])*cos(in_vec[0]))*in_vec[3] - sin(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_940843807028553333[13] = -sin(in_vec[1])*cos(in_vec[0])*in_vec[5] + sin(in_vec[2])*cos(in_vec[0])*cos(in_vec[1])*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_940843807028553333[14] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (sin(in_vec[0])*cos(in_vec[2]) - sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[3];
   out_940843807028553333[15] = sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]);
   out_940843807028553333[16] = -sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]);
   out_940843807028553333[17] = cos(in_vec[0])*cos(in_vec[1]);
}
void err_fun(double *nom_x, double *delta_x, double *out_6475219860258303377) {
   out_6475219860258303377[0] = delta_x[0] + nom_x[0];
   out_6475219860258303377[1] = delta_x[1] + nom_x[1];
   out_6475219860258303377[2] = delta_x[2] + nom_x[2];
   out_6475219860258303377[3] = -0.5*delta_x[3]*nom_x[4] - 0.5*delta_x[4]*nom_x[5] - 0.5*delta_x[5]*nom_x[6] + 1.0*nom_x[3];
   out_6475219860258303377[4] = 0.5*delta_x[3]*nom_x[3] + 0.5*delta_x[4]*nom_x[6] - 0.5*delta_x[5]*nom_x[5] + 1.0*nom_x[4];
   out_6475219860258303377[5] = -0.5*delta_x[3]*nom_x[6] + 0.5*delta_x[4]*nom_x[3] + 0.5*delta_x[5]*nom_x[4] + 1.0*nom_x[5];
   out_6475219860258303377[6] = 0.5*delta_x[3]*nom_x[5] - 0.5*delta_x[4]*nom_x[4] + 0.5*delta_x[5]*nom_x[3] + 1.0*nom_x[6];
   out_6475219860258303377[7] = delta_x[6] + nom_x[7];
   out_6475219860258303377[8] = delta_x[7] + nom_x[8];
   out_6475219860258303377[9] = delta_x[8] + nom_x[9];
   out_6475219860258303377[10] = delta_x[9] + nom_x[10];
   out_6475219860258303377[11] = delta_x[10] + nom_x[11];
   out_6475219860258303377[12] = delta_x[11] + nom_x[12];
   out_6475219860258303377[13] = delta_x[12] + nom_x[13];
   out_6475219860258303377[14] = delta_x[13] + nom_x[14];
   out_6475219860258303377[15] = delta_x[14] + nom_x[15];
   out_6475219860258303377[16] = delta_x[15] + nom_x[16];
   out_6475219860258303377[17] = delta_x[16] + nom_x[17];
   out_6475219860258303377[18] = delta_x[17] + nom_x[18];
   out_6475219860258303377[19] = delta_x[18] + nom_x[19];
   out_6475219860258303377[20] = delta_x[19] + nom_x[20];
   out_6475219860258303377[21] = delta_x[20] + nom_x[21];
}
void inv_err_fun(double *nom_x, double *true_x, double *out_731005450586961185) {
   out_731005450586961185[0] = -nom_x[0] + true_x[0];
   out_731005450586961185[1] = -nom_x[1] + true_x[1];
   out_731005450586961185[2] = -nom_x[2] + true_x[2];
   out_731005450586961185[3] = 2*nom_x[3]*true_x[4] - 2*nom_x[4]*true_x[3] + 2*nom_x[5]*true_x[6] - 2*nom_x[6]*true_x[5];
   out_731005450586961185[4] = 2*nom_x[3]*true_x[5] - 2*nom_x[4]*true_x[6] - 2*nom_x[5]*true_x[3] + 2*nom_x[6]*true_x[4];
   out_731005450586961185[5] = 2*nom_x[3]*true_x[6] + 2*nom_x[4]*true_x[5] - 2*nom_x[5]*true_x[4] - 2*nom_x[6]*true_x[3];
   out_731005450586961185[6] = -nom_x[7] + true_x[7];
   out_731005450586961185[7] = -nom_x[8] + true_x[8];
   out_731005450586961185[8] = -nom_x[9] + true_x[9];
   out_731005450586961185[9] = -nom_x[10] + true_x[10];
   out_731005450586961185[10] = -nom_x[11] + true_x[11];
   out_731005450586961185[11] = -nom_x[12] + true_x[12];
   out_731005450586961185[12] = -nom_x[13] + true_x[13];
   out_731005450586961185[13] = -nom_x[14] + true_x[14];
   out_731005450586961185[14] = -nom_x[15] + true_x[15];
   out_731005450586961185[15] = -nom_x[16] + true_x[16];
   out_731005450586961185[16] = -nom_x[17] + true_x[17];
   out_731005450586961185[17] = -nom_x[18] + true_x[18];
   out_731005450586961185[18] = -nom_x[19] + true_x[19];
   out_731005450586961185[19] = -nom_x[20] + true_x[20];
   out_731005450586961185[20] = -nom_x[21] + true_x[21];
}
void H_mod_fun(double *state, double *out_3792573742677824370) {
   out_3792573742677824370[0] = 1.0;
   out_3792573742677824370[1] = 0;
   out_3792573742677824370[2] = 0;
   out_3792573742677824370[3] = 0.0;
   out_3792573742677824370[4] = 0.0;
   out_3792573742677824370[5] = 0.0;
   out_3792573742677824370[6] = 0.0;
   out_3792573742677824370[7] = 0.0;
   out_3792573742677824370[8] = 0.0;
   out_3792573742677824370[9] = 0.0;
   out_3792573742677824370[10] = 0.0;
   out_3792573742677824370[11] = 0.0;
   out_3792573742677824370[12] = 0.0;
   out_3792573742677824370[13] = 0.0;
   out_3792573742677824370[14] = 0.0;
   out_3792573742677824370[15] = 0.0;
   out_3792573742677824370[16] = 0.0;
   out_3792573742677824370[17] = 0.0;
   out_3792573742677824370[18] = 0.0;
   out_3792573742677824370[19] = 0.0;
   out_3792573742677824370[20] = 0.0;
   out_3792573742677824370[21] = 0;
   out_3792573742677824370[22] = 1.0;
   out_3792573742677824370[23] = 0;
   out_3792573742677824370[24] = 0.0;
   out_3792573742677824370[25] = 0.0;
   out_3792573742677824370[26] = 0.0;
   out_3792573742677824370[27] = 0.0;
   out_3792573742677824370[28] = 0.0;
   out_3792573742677824370[29] = 0.0;
   out_3792573742677824370[30] = 0.0;
   out_3792573742677824370[31] = 0.0;
   out_3792573742677824370[32] = 0.0;
   out_3792573742677824370[33] = 0.0;
   out_3792573742677824370[34] = 0.0;
   out_3792573742677824370[35] = 0.0;
   out_3792573742677824370[36] = 0.0;
   out_3792573742677824370[37] = 0.0;
   out_3792573742677824370[38] = 0.0;
   out_3792573742677824370[39] = 0.0;
   out_3792573742677824370[40] = 0.0;
   out_3792573742677824370[41] = 0.0;
   out_3792573742677824370[42] = 0;
   out_3792573742677824370[43] = 0;
   out_3792573742677824370[44] = 1.0;
   out_3792573742677824370[45] = 0.0;
   out_3792573742677824370[46] = 0.0;
   out_3792573742677824370[47] = 0.0;
   out_3792573742677824370[48] = 0.0;
   out_3792573742677824370[49] = 0.0;
   out_3792573742677824370[50] = 0.0;
   out_3792573742677824370[51] = 0.0;
   out_3792573742677824370[52] = 0.0;
   out_3792573742677824370[53] = 0.0;
   out_3792573742677824370[54] = 0.0;
   out_3792573742677824370[55] = 0.0;
   out_3792573742677824370[56] = 0.0;
   out_3792573742677824370[57] = 0.0;
   out_3792573742677824370[58] = 0.0;
   out_3792573742677824370[59] = 0.0;
   out_3792573742677824370[60] = 0.0;
   out_3792573742677824370[61] = 0.0;
   out_3792573742677824370[62] = 0.0;
   out_3792573742677824370[63] = 0.0;
   out_3792573742677824370[64] = 0.0;
   out_3792573742677824370[65] = 0.0;
   out_3792573742677824370[66] = -0.5*state[4];
   out_3792573742677824370[67] = -0.5*state[5];
   out_3792573742677824370[68] = -0.5*state[6];
   out_3792573742677824370[69] = 0.0;
   out_3792573742677824370[70] = 0.0;
   out_3792573742677824370[71] = 0.0;
   out_3792573742677824370[72] = 0.0;
   out_3792573742677824370[73] = 0.0;
   out_3792573742677824370[74] = 0.0;
   out_3792573742677824370[75] = 0.0;
   out_3792573742677824370[76] = 0.0;
   out_3792573742677824370[77] = 0.0;
   out_3792573742677824370[78] = 0.0;
   out_3792573742677824370[79] = 0.0;
   out_3792573742677824370[80] = 0.0;
   out_3792573742677824370[81] = 0.0;
   out_3792573742677824370[82] = 0.0;
   out_3792573742677824370[83] = 0.0;
   out_3792573742677824370[84] = 0.0;
   out_3792573742677824370[85] = 0.0;
   out_3792573742677824370[86] = 0.0;
   out_3792573742677824370[87] = 0.5*state[3];
   out_3792573742677824370[88] = 0.5*state[6];
   out_3792573742677824370[89] = -0.5*state[5];
   out_3792573742677824370[90] = 0.0;
   out_3792573742677824370[91] = 0.0;
   out_3792573742677824370[92] = 0.0;
   out_3792573742677824370[93] = 0.0;
   out_3792573742677824370[94] = 0.0;
   out_3792573742677824370[95] = 0.0;
   out_3792573742677824370[96] = 0.0;
   out_3792573742677824370[97] = 0.0;
   out_3792573742677824370[98] = 0.0;
   out_3792573742677824370[99] = 0.0;
   out_3792573742677824370[100] = 0.0;
   out_3792573742677824370[101] = 0.0;
   out_3792573742677824370[102] = 0.0;
   out_3792573742677824370[103] = 0.0;
   out_3792573742677824370[104] = 0.0;
   out_3792573742677824370[105] = 0.0;
   out_3792573742677824370[106] = 0.0;
   out_3792573742677824370[107] = 0.0;
   out_3792573742677824370[108] = -0.5*state[6];
   out_3792573742677824370[109] = 0.5*state[3];
   out_3792573742677824370[110] = 0.5*state[4];
   out_3792573742677824370[111] = 0.0;
   out_3792573742677824370[112] = 0.0;
   out_3792573742677824370[113] = 0.0;
   out_3792573742677824370[114] = 0.0;
   out_3792573742677824370[115] = 0.0;
   out_3792573742677824370[116] = 0.0;
   out_3792573742677824370[117] = 0.0;
   out_3792573742677824370[118] = 0.0;
   out_3792573742677824370[119] = 0.0;
   out_3792573742677824370[120] = 0.0;
   out_3792573742677824370[121] = 0.0;
   out_3792573742677824370[122] = 0.0;
   out_3792573742677824370[123] = 0.0;
   out_3792573742677824370[124] = 0.0;
   out_3792573742677824370[125] = 0.0;
   out_3792573742677824370[126] = 0.0;
   out_3792573742677824370[127] = 0.0;
   out_3792573742677824370[128] = 0.0;
   out_3792573742677824370[129] = 0.5*state[5];
   out_3792573742677824370[130] = -0.5*state[4];
   out_3792573742677824370[131] = 0.5*state[3];
   out_3792573742677824370[132] = 0.0;
   out_3792573742677824370[133] = 0.0;
   out_3792573742677824370[134] = 0.0;
   out_3792573742677824370[135] = 0.0;
   out_3792573742677824370[136] = 0.0;
   out_3792573742677824370[137] = 0.0;
   out_3792573742677824370[138] = 0.0;
   out_3792573742677824370[139] = 0.0;
   out_3792573742677824370[140] = 0.0;
   out_3792573742677824370[141] = 0.0;
   out_3792573742677824370[142] = 0.0;
   out_3792573742677824370[143] = 0.0;
   out_3792573742677824370[144] = 0.0;
   out_3792573742677824370[145] = 0.0;
   out_3792573742677824370[146] = 0.0;
   out_3792573742677824370[147] = 0.0;
   out_3792573742677824370[148] = 0.0;
   out_3792573742677824370[149] = 0.0;
   out_3792573742677824370[150] = 0.0;
   out_3792573742677824370[151] = 0.0;
   out_3792573742677824370[152] = 0.0;
   out_3792573742677824370[153] = 1.0;
   out_3792573742677824370[154] = 0;
   out_3792573742677824370[155] = 0;
   out_3792573742677824370[156] = 0;
   out_3792573742677824370[157] = 0;
   out_3792573742677824370[158] = 0;
   out_3792573742677824370[159] = 0;
   out_3792573742677824370[160] = 0;
   out_3792573742677824370[161] = 0;
   out_3792573742677824370[162] = 0;
   out_3792573742677824370[163] = 0;
   out_3792573742677824370[164] = 0;
   out_3792573742677824370[165] = 0;
   out_3792573742677824370[166] = 0;
   out_3792573742677824370[167] = 0;
   out_3792573742677824370[168] = 0.0;
   out_3792573742677824370[169] = 0.0;
   out_3792573742677824370[170] = 0.0;
   out_3792573742677824370[171] = 0.0;
   out_3792573742677824370[172] = 0.0;
   out_3792573742677824370[173] = 0.0;
   out_3792573742677824370[174] = 0;
   out_3792573742677824370[175] = 1.0;
   out_3792573742677824370[176] = 0;
   out_3792573742677824370[177] = 0;
   out_3792573742677824370[178] = 0;
   out_3792573742677824370[179] = 0;
   out_3792573742677824370[180] = 0;
   out_3792573742677824370[181] = 0;
   out_3792573742677824370[182] = 0;
   out_3792573742677824370[183] = 0;
   out_3792573742677824370[184] = 0;
   out_3792573742677824370[185] = 0;
   out_3792573742677824370[186] = 0;
   out_3792573742677824370[187] = 0;
   out_3792573742677824370[188] = 0;
   out_3792573742677824370[189] = 0.0;
   out_3792573742677824370[190] = 0.0;
   out_3792573742677824370[191] = 0.0;
   out_3792573742677824370[192] = 0.0;
   out_3792573742677824370[193] = 0.0;
   out_3792573742677824370[194] = 0.0;
   out_3792573742677824370[195] = 0;
   out_3792573742677824370[196] = 0;
   out_3792573742677824370[197] = 1.0;
   out_3792573742677824370[198] = 0;
   out_3792573742677824370[199] = 0;
   out_3792573742677824370[200] = 0;
   out_3792573742677824370[201] = 0;
   out_3792573742677824370[202] = 0;
   out_3792573742677824370[203] = 0;
   out_3792573742677824370[204] = 0;
   out_3792573742677824370[205] = 0;
   out_3792573742677824370[206] = 0;
   out_3792573742677824370[207] = 0;
   out_3792573742677824370[208] = 0;
   out_3792573742677824370[209] = 0;
   out_3792573742677824370[210] = 0.0;
   out_3792573742677824370[211] = 0.0;
   out_3792573742677824370[212] = 0.0;
   out_3792573742677824370[213] = 0.0;
   out_3792573742677824370[214] = 0.0;
   out_3792573742677824370[215] = 0.0;
   out_3792573742677824370[216] = 0;
   out_3792573742677824370[217] = 0;
   out_3792573742677824370[218] = 0;
   out_3792573742677824370[219] = 1.0;
   out_3792573742677824370[220] = 0;
   out_3792573742677824370[221] = 0;
   out_3792573742677824370[222] = 0;
   out_3792573742677824370[223] = 0;
   out_3792573742677824370[224] = 0;
   out_3792573742677824370[225] = 0;
   out_3792573742677824370[226] = 0;
   out_3792573742677824370[227] = 0;
   out_3792573742677824370[228] = 0;
   out_3792573742677824370[229] = 0;
   out_3792573742677824370[230] = 0;
   out_3792573742677824370[231] = 0.0;
   out_3792573742677824370[232] = 0.0;
   out_3792573742677824370[233] = 0.0;
   out_3792573742677824370[234] = 0.0;
   out_3792573742677824370[235] = 0.0;
   out_3792573742677824370[236] = 0.0;
   out_3792573742677824370[237] = 0;
   out_3792573742677824370[238] = 0;
   out_3792573742677824370[239] = 0;
   out_3792573742677824370[240] = 0;
   out_3792573742677824370[241] = 1.0;
   out_3792573742677824370[242] = 0;
   out_3792573742677824370[243] = 0;
   out_3792573742677824370[244] = 0;
   out_3792573742677824370[245] = 0;
   out_3792573742677824370[246] = 0;
   out_3792573742677824370[247] = 0;
   out_3792573742677824370[248] = 0;
   out_3792573742677824370[249] = 0;
   out_3792573742677824370[250] = 0;
   out_3792573742677824370[251] = 0;
   out_3792573742677824370[252] = 0.0;
   out_3792573742677824370[253] = 0.0;
   out_3792573742677824370[254] = 0.0;
   out_3792573742677824370[255] = 0.0;
   out_3792573742677824370[256] = 0.0;
   out_3792573742677824370[257] = 0.0;
   out_3792573742677824370[258] = 0;
   out_3792573742677824370[259] = 0;
   out_3792573742677824370[260] = 0;
   out_3792573742677824370[261] = 0;
   out_3792573742677824370[262] = 0;
   out_3792573742677824370[263] = 1.0;
   out_3792573742677824370[264] = 0;
   out_3792573742677824370[265] = 0;
   out_3792573742677824370[266] = 0;
   out_3792573742677824370[267] = 0;
   out_3792573742677824370[268] = 0;
   out_3792573742677824370[269] = 0;
   out_3792573742677824370[270] = 0;
   out_3792573742677824370[271] = 0;
   out_3792573742677824370[272] = 0;
   out_3792573742677824370[273] = 0.0;
   out_3792573742677824370[274] = 0.0;
   out_3792573742677824370[275] = 0.0;
   out_3792573742677824370[276] = 0.0;
   out_3792573742677824370[277] = 0.0;
   out_3792573742677824370[278] = 0.0;
   out_3792573742677824370[279] = 0;
   out_3792573742677824370[280] = 0;
   out_3792573742677824370[281] = 0;
   out_3792573742677824370[282] = 0;
   out_3792573742677824370[283] = 0;
   out_3792573742677824370[284] = 0;
   out_3792573742677824370[285] = 1.0;
   out_3792573742677824370[286] = 0;
   out_3792573742677824370[287] = 0;
   out_3792573742677824370[288] = 0;
   out_3792573742677824370[289] = 0;
   out_3792573742677824370[290] = 0;
   out_3792573742677824370[291] = 0;
   out_3792573742677824370[292] = 0;
   out_3792573742677824370[293] = 0;
   out_3792573742677824370[294] = 0.0;
   out_3792573742677824370[295] = 0.0;
   out_3792573742677824370[296] = 0.0;
   out_3792573742677824370[297] = 0.0;
   out_3792573742677824370[298] = 0.0;
   out_3792573742677824370[299] = 0.0;
   out_3792573742677824370[300] = 0;
   out_3792573742677824370[301] = 0;
   out_3792573742677824370[302] = 0;
   out_3792573742677824370[303] = 0;
   out_3792573742677824370[304] = 0;
   out_3792573742677824370[305] = 0;
   out_3792573742677824370[306] = 0;
   out_3792573742677824370[307] = 1.0;
   out_3792573742677824370[308] = 0;
   out_3792573742677824370[309] = 0;
   out_3792573742677824370[310] = 0;
   out_3792573742677824370[311] = 0;
   out_3792573742677824370[312] = 0;
   out_3792573742677824370[313] = 0;
   out_3792573742677824370[314] = 0;
   out_3792573742677824370[315] = 0.0;
   out_3792573742677824370[316] = 0.0;
   out_3792573742677824370[317] = 0.0;
   out_3792573742677824370[318] = 0.0;
   out_3792573742677824370[319] = 0.0;
   out_3792573742677824370[320] = 0.0;
   out_3792573742677824370[321] = 0;
   out_3792573742677824370[322] = 0;
   out_3792573742677824370[323] = 0;
   out_3792573742677824370[324] = 0;
   out_3792573742677824370[325] = 0;
   out_3792573742677824370[326] = 0;
   out_3792573742677824370[327] = 0;
   out_3792573742677824370[328] = 0;
   out_3792573742677824370[329] = 1.0;
   out_3792573742677824370[330] = 0;
   out_3792573742677824370[331] = 0;
   out_3792573742677824370[332] = 0;
   out_3792573742677824370[333] = 0;
   out_3792573742677824370[334] = 0;
   out_3792573742677824370[335] = 0;
   out_3792573742677824370[336] = 0.0;
   out_3792573742677824370[337] = 0.0;
   out_3792573742677824370[338] = 0.0;
   out_3792573742677824370[339] = 0.0;
   out_3792573742677824370[340] = 0.0;
   out_3792573742677824370[341] = 0.0;
   out_3792573742677824370[342] = 0;
   out_3792573742677824370[343] = 0;
   out_3792573742677824370[344] = 0;
   out_3792573742677824370[345] = 0;
   out_3792573742677824370[346] = 0;
   out_3792573742677824370[347] = 0;
   out_3792573742677824370[348] = 0;
   out_3792573742677824370[349] = 0;
   out_3792573742677824370[350] = 0;
   out_3792573742677824370[351] = 1.0;
   out_3792573742677824370[352] = 0;
   out_3792573742677824370[353] = 0;
   out_3792573742677824370[354] = 0;
   out_3792573742677824370[355] = 0;
   out_3792573742677824370[356] = 0;
   out_3792573742677824370[357] = 0.0;
   out_3792573742677824370[358] = 0.0;
   out_3792573742677824370[359] = 0.0;
   out_3792573742677824370[360] = 0.0;
   out_3792573742677824370[361] = 0.0;
   out_3792573742677824370[362] = 0.0;
   out_3792573742677824370[363] = 0;
   out_3792573742677824370[364] = 0;
   out_3792573742677824370[365] = 0;
   out_3792573742677824370[366] = 0;
   out_3792573742677824370[367] = 0;
   out_3792573742677824370[368] = 0;
   out_3792573742677824370[369] = 0;
   out_3792573742677824370[370] = 0;
   out_3792573742677824370[371] = 0;
   out_3792573742677824370[372] = 0;
   out_3792573742677824370[373] = 1.0;
   out_3792573742677824370[374] = 0;
   out_3792573742677824370[375] = 0;
   out_3792573742677824370[376] = 0;
   out_3792573742677824370[377] = 0;
   out_3792573742677824370[378] = 0.0;
   out_3792573742677824370[379] = 0.0;
   out_3792573742677824370[380] = 0.0;
   out_3792573742677824370[381] = 0.0;
   out_3792573742677824370[382] = 0.0;
   out_3792573742677824370[383] = 0.0;
   out_3792573742677824370[384] = 0;
   out_3792573742677824370[385] = 0;
   out_3792573742677824370[386] = 0;
   out_3792573742677824370[387] = 0;
   out_3792573742677824370[388] = 0;
   out_3792573742677824370[389] = 0;
   out_3792573742677824370[390] = 0;
   out_3792573742677824370[391] = 0;
   out_3792573742677824370[392] = 0;
   out_3792573742677824370[393] = 0;
   out_3792573742677824370[394] = 0;
   out_3792573742677824370[395] = 1.0;
   out_3792573742677824370[396] = 0;
   out_3792573742677824370[397] = 0;
   out_3792573742677824370[398] = 0;
   out_3792573742677824370[399] = 0.0;
   out_3792573742677824370[400] = 0.0;
   out_3792573742677824370[401] = 0.0;
   out_3792573742677824370[402] = 0.0;
   out_3792573742677824370[403] = 0.0;
   out_3792573742677824370[404] = 0.0;
   out_3792573742677824370[405] = 0;
   out_3792573742677824370[406] = 0;
   out_3792573742677824370[407] = 0;
   out_3792573742677824370[408] = 0;
   out_3792573742677824370[409] = 0;
   out_3792573742677824370[410] = 0;
   out_3792573742677824370[411] = 0;
   out_3792573742677824370[412] = 0;
   out_3792573742677824370[413] = 0;
   out_3792573742677824370[414] = 0;
   out_3792573742677824370[415] = 0;
   out_3792573742677824370[416] = 0;
   out_3792573742677824370[417] = 1.0;
   out_3792573742677824370[418] = 0;
   out_3792573742677824370[419] = 0;
   out_3792573742677824370[420] = 0.0;
   out_3792573742677824370[421] = 0.0;
   out_3792573742677824370[422] = 0.0;
   out_3792573742677824370[423] = 0.0;
   out_3792573742677824370[424] = 0.0;
   out_3792573742677824370[425] = 0.0;
   out_3792573742677824370[426] = 0;
   out_3792573742677824370[427] = 0;
   out_3792573742677824370[428] = 0;
   out_3792573742677824370[429] = 0;
   out_3792573742677824370[430] = 0;
   out_3792573742677824370[431] = 0;
   out_3792573742677824370[432] = 0;
   out_3792573742677824370[433] = 0;
   out_3792573742677824370[434] = 0;
   out_3792573742677824370[435] = 0;
   out_3792573742677824370[436] = 0;
   out_3792573742677824370[437] = 0;
   out_3792573742677824370[438] = 0;
   out_3792573742677824370[439] = 1.0;
   out_3792573742677824370[440] = 0;
   out_3792573742677824370[441] = 0.0;
   out_3792573742677824370[442] = 0.0;
   out_3792573742677824370[443] = 0.0;
   out_3792573742677824370[444] = 0.0;
   out_3792573742677824370[445] = 0.0;
   out_3792573742677824370[446] = 0.0;
   out_3792573742677824370[447] = 0;
   out_3792573742677824370[448] = 0;
   out_3792573742677824370[449] = 0;
   out_3792573742677824370[450] = 0;
   out_3792573742677824370[451] = 0;
   out_3792573742677824370[452] = 0;
   out_3792573742677824370[453] = 0;
   out_3792573742677824370[454] = 0;
   out_3792573742677824370[455] = 0;
   out_3792573742677824370[456] = 0;
   out_3792573742677824370[457] = 0;
   out_3792573742677824370[458] = 0;
   out_3792573742677824370[459] = 0;
   out_3792573742677824370[460] = 0;
   out_3792573742677824370[461] = 1.0;
}
void f_fun(double *state, double dt, double *out_2926573968287117650) {
   out_2926573968287117650[0] = dt*state[7] + state[0];
   out_2926573968287117650[1] = dt*state[8] + state[1];
   out_2926573968287117650[2] = dt*state[9] + state[2];
   out_2926573968287117650[3] = dt*(-0.5*state[4]*state[10] - 0.5*state[5]*state[11] - 0.5*state[6]*state[12]) + state[3];
   out_2926573968287117650[4] = dt*(0.5*state[3]*state[10] + 0.5*state[5]*state[12] - 0.5*state[6]*state[11]) + state[4];
   out_2926573968287117650[5] = dt*(0.5*state[3]*state[11] - 0.5*state[4]*state[12] + 0.5*state[6]*state[10]) + state[5];
   out_2926573968287117650[6] = dt*(0.5*state[3]*state[12] + 0.5*state[4]*state[11] - 0.5*state[5]*state[10]) + state[6];
   out_2926573968287117650[7] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]) + state[7];
   out_2926573968287117650[8] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]) + state[8];
   out_2926573968287117650[9] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]) + state[9];
   out_2926573968287117650[10] = state[10];
   out_2926573968287117650[11] = state[11];
   out_2926573968287117650[12] = state[12];
   out_2926573968287117650[13] = state[13];
   out_2926573968287117650[14] = state[14];
   out_2926573968287117650[15] = state[15];
   out_2926573968287117650[16] = state[16];
   out_2926573968287117650[17] = state[17];
   out_2926573968287117650[18] = state[18];
   out_2926573968287117650[19] = state[19];
   out_2926573968287117650[20] = state[20];
   out_2926573968287117650[21] = state[21];
}
void F_fun(double *state, double dt, double *out_7302336487450048470) {
   out_7302336487450048470[0] = 1;
   out_7302336487450048470[1] = 0;
   out_7302336487450048470[2] = 0;
   out_7302336487450048470[3] = 0;
   out_7302336487450048470[4] = 0;
   out_7302336487450048470[5] = 0;
   out_7302336487450048470[6] = dt;
   out_7302336487450048470[7] = 0;
   out_7302336487450048470[8] = 0;
   out_7302336487450048470[9] = 0;
   out_7302336487450048470[10] = 0;
   out_7302336487450048470[11] = 0;
   out_7302336487450048470[12] = 0;
   out_7302336487450048470[13] = 0;
   out_7302336487450048470[14] = 0;
   out_7302336487450048470[15] = 0;
   out_7302336487450048470[16] = 0;
   out_7302336487450048470[17] = 0;
   out_7302336487450048470[18] = 0;
   out_7302336487450048470[19] = 0;
   out_7302336487450048470[20] = 0;
   out_7302336487450048470[21] = 0;
   out_7302336487450048470[22] = 1;
   out_7302336487450048470[23] = 0;
   out_7302336487450048470[24] = 0;
   out_7302336487450048470[25] = 0;
   out_7302336487450048470[26] = 0;
   out_7302336487450048470[27] = 0;
   out_7302336487450048470[28] = dt;
   out_7302336487450048470[29] = 0;
   out_7302336487450048470[30] = 0;
   out_7302336487450048470[31] = 0;
   out_7302336487450048470[32] = 0;
   out_7302336487450048470[33] = 0;
   out_7302336487450048470[34] = 0;
   out_7302336487450048470[35] = 0;
   out_7302336487450048470[36] = 0;
   out_7302336487450048470[37] = 0;
   out_7302336487450048470[38] = 0;
   out_7302336487450048470[39] = 0;
   out_7302336487450048470[40] = 0;
   out_7302336487450048470[41] = 0;
   out_7302336487450048470[42] = 0;
   out_7302336487450048470[43] = 0;
   out_7302336487450048470[44] = 1;
   out_7302336487450048470[45] = 0;
   out_7302336487450048470[46] = 0;
   out_7302336487450048470[47] = 0;
   out_7302336487450048470[48] = 0;
   out_7302336487450048470[49] = 0;
   out_7302336487450048470[50] = dt;
   out_7302336487450048470[51] = 0;
   out_7302336487450048470[52] = 0;
   out_7302336487450048470[53] = 0;
   out_7302336487450048470[54] = 0;
   out_7302336487450048470[55] = 0;
   out_7302336487450048470[56] = 0;
   out_7302336487450048470[57] = 0;
   out_7302336487450048470[58] = 0;
   out_7302336487450048470[59] = 0;
   out_7302336487450048470[60] = 0;
   out_7302336487450048470[61] = 0;
   out_7302336487450048470[62] = 0;
   out_7302336487450048470[63] = 0;
   out_7302336487450048470[64] = 0;
   out_7302336487450048470[65] = 0;
   out_7302336487450048470[66] = 1;
   out_7302336487450048470[67] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[11] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_7302336487450048470[68] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[12] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[10] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[11]);
   out_7302336487450048470[69] = 0;
   out_7302336487450048470[70] = 0;
   out_7302336487450048470[71] = 0;
   out_7302336487450048470[72] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_7302336487450048470[73] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_7302336487450048470[74] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_7302336487450048470[75] = 0;
   out_7302336487450048470[76] = 0;
   out_7302336487450048470[77] = 0;
   out_7302336487450048470[78] = 0;
   out_7302336487450048470[79] = 0;
   out_7302336487450048470[80] = 0;
   out_7302336487450048470[81] = 0;
   out_7302336487450048470[82] = 0;
   out_7302336487450048470[83] = 0;
   out_7302336487450048470[84] = 0;
   out_7302336487450048470[85] = 0;
   out_7302336487450048470[86] = 0;
   out_7302336487450048470[87] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[11] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_7302336487450048470[88] = 1;
   out_7302336487450048470[89] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[12] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[11] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[10]);
   out_7302336487450048470[90] = 0;
   out_7302336487450048470[91] = 0;
   out_7302336487450048470[92] = 0;
   out_7302336487450048470[93] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_7302336487450048470[94] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_7302336487450048470[95] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_7302336487450048470[96] = 0;
   out_7302336487450048470[97] = 0;
   out_7302336487450048470[98] = 0;
   out_7302336487450048470[99] = 0;
   out_7302336487450048470[100] = 0;
   out_7302336487450048470[101] = 0;
   out_7302336487450048470[102] = 0;
   out_7302336487450048470[103] = 0;
   out_7302336487450048470[104] = 0;
   out_7302336487450048470[105] = 0;
   out_7302336487450048470[106] = 0;
   out_7302336487450048470[107] = 0;
   out_7302336487450048470[108] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[12] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[10] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[11]);
   out_7302336487450048470[109] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[12] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[11] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[10]);
   out_7302336487450048470[110] = 1;
   out_7302336487450048470[111] = 0;
   out_7302336487450048470[112] = 0;
   out_7302336487450048470[113] = 0;
   out_7302336487450048470[114] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_7302336487450048470[115] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_7302336487450048470[116] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_7302336487450048470[117] = 0;
   out_7302336487450048470[118] = 0;
   out_7302336487450048470[119] = 0;
   out_7302336487450048470[120] = 0;
   out_7302336487450048470[121] = 0;
   out_7302336487450048470[122] = 0;
   out_7302336487450048470[123] = 0;
   out_7302336487450048470[124] = 0;
   out_7302336487450048470[125] = 0;
   out_7302336487450048470[126] = 0;
   out_7302336487450048470[127] = 0;
   out_7302336487450048470[128] = 0;
   out_7302336487450048470[129] = 0;
   out_7302336487450048470[130] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_7302336487450048470[131] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[18] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[16] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[17]);
   out_7302336487450048470[132] = 1;
   out_7302336487450048470[133] = 0;
   out_7302336487450048470[134] = 0;
   out_7302336487450048470[135] = 0;
   out_7302336487450048470[136] = 0;
   out_7302336487450048470[137] = 0;
   out_7302336487450048470[138] = 0;
   out_7302336487450048470[139] = 0;
   out_7302336487450048470[140] = 0;
   out_7302336487450048470[141] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_7302336487450048470[142] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_7302336487450048470[143] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_7302336487450048470[144] = 0;
   out_7302336487450048470[145] = 0;
   out_7302336487450048470[146] = 0;
   out_7302336487450048470[147] = 0;
   out_7302336487450048470[148] = 0;
   out_7302336487450048470[149] = 0;
   out_7302336487450048470[150] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[17] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_7302336487450048470[151] = 0;
   out_7302336487450048470[152] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]);
   out_7302336487450048470[153] = 0;
   out_7302336487450048470[154] = 1;
   out_7302336487450048470[155] = 0;
   out_7302336487450048470[156] = 0;
   out_7302336487450048470[157] = 0;
   out_7302336487450048470[158] = 0;
   out_7302336487450048470[159] = 0;
   out_7302336487450048470[160] = 0;
   out_7302336487450048470[161] = 0;
   out_7302336487450048470[162] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_7302336487450048470[163] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_7302336487450048470[164] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_7302336487450048470[165] = 0;
   out_7302336487450048470[166] = 0;
   out_7302336487450048470[167] = 0;
   out_7302336487450048470[168] = 0;
   out_7302336487450048470[169] = 0;
   out_7302336487450048470[170] = 0;
   out_7302336487450048470[171] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]);
   out_7302336487450048470[172] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[18] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[17] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[16]);
   out_7302336487450048470[173] = 0;
   out_7302336487450048470[174] = 0;
   out_7302336487450048470[175] = 0;
   out_7302336487450048470[176] = 1;
   out_7302336487450048470[177] = 0;
   out_7302336487450048470[178] = 0;
   out_7302336487450048470[179] = 0;
   out_7302336487450048470[180] = 0;
   out_7302336487450048470[181] = 0;
   out_7302336487450048470[182] = 0;
   out_7302336487450048470[183] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_7302336487450048470[184] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_7302336487450048470[185] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_7302336487450048470[186] = 0;
   out_7302336487450048470[187] = 0;
   out_7302336487450048470[188] = 0;
   out_7302336487450048470[189] = 0;
   out_7302336487450048470[190] = 0;
   out_7302336487450048470[191] = 0;
   out_7302336487450048470[192] = 0;
   out_7302336487450048470[193] = 0;
   out_7302336487450048470[194] = 0;
   out_7302336487450048470[195] = 0;
   out_7302336487450048470[196] = 0;
   out_7302336487450048470[197] = 0;
   out_7302336487450048470[198] = 1;
   out_7302336487450048470[199] = 0;
   out_7302336487450048470[200] = 0;
   out_7302336487450048470[201] = 0;
   out_7302336487450048470[202] = 0;
   out_7302336487450048470[203] = 0;
   out_7302336487450048470[204] = 0;
   out_7302336487450048470[205] = 0;
   out_7302336487450048470[206] = 0;
   out_7302336487450048470[207] = 0;
   out_7302336487450048470[208] = 0;
   out_7302336487450048470[209] = 0;
   out_7302336487450048470[210] = 0;
   out_7302336487450048470[211] = 0;
   out_7302336487450048470[212] = 0;
   out_7302336487450048470[213] = 0;
   out_7302336487450048470[214] = 0;
   out_7302336487450048470[215] = 0;
   out_7302336487450048470[216] = 0;
   out_7302336487450048470[217] = 0;
   out_7302336487450048470[218] = 0;
   out_7302336487450048470[219] = 0;
   out_7302336487450048470[220] = 1;
   out_7302336487450048470[221] = 0;
   out_7302336487450048470[222] = 0;
   out_7302336487450048470[223] = 0;
   out_7302336487450048470[224] = 0;
   out_7302336487450048470[225] = 0;
   out_7302336487450048470[226] = 0;
   out_7302336487450048470[227] = 0;
   out_7302336487450048470[228] = 0;
   out_7302336487450048470[229] = 0;
   out_7302336487450048470[230] = 0;
   out_7302336487450048470[231] = 0;
   out_7302336487450048470[232] = 0;
   out_7302336487450048470[233] = 0;
   out_7302336487450048470[234] = 0;
   out_7302336487450048470[235] = 0;
   out_7302336487450048470[236] = 0;
   out_7302336487450048470[237] = 0;
   out_7302336487450048470[238] = 0;
   out_7302336487450048470[239] = 0;
   out_7302336487450048470[240] = 0;
   out_7302336487450048470[241] = 0;
   out_7302336487450048470[242] = 1;
   out_7302336487450048470[243] = 0;
   out_7302336487450048470[244] = 0;
   out_7302336487450048470[245] = 0;
   out_7302336487450048470[246] = 0;
   out_7302336487450048470[247] = 0;
   out_7302336487450048470[248] = 0;
   out_7302336487450048470[249] = 0;
   out_7302336487450048470[250] = 0;
   out_7302336487450048470[251] = 0;
   out_7302336487450048470[252] = 0;
   out_7302336487450048470[253] = 0;
   out_7302336487450048470[254] = 0;
   out_7302336487450048470[255] = 0;
   out_7302336487450048470[256] = 0;
   out_7302336487450048470[257] = 0;
   out_7302336487450048470[258] = 0;
   out_7302336487450048470[259] = 0;
   out_7302336487450048470[260] = 0;
   out_7302336487450048470[261] = 0;
   out_7302336487450048470[262] = 0;
   out_7302336487450048470[263] = 0;
   out_7302336487450048470[264] = 1;
   out_7302336487450048470[265] = 0;
   out_7302336487450048470[266] = 0;
   out_7302336487450048470[267] = 0;
   out_7302336487450048470[268] = 0;
   out_7302336487450048470[269] = 0;
   out_7302336487450048470[270] = 0;
   out_7302336487450048470[271] = 0;
   out_7302336487450048470[272] = 0;
   out_7302336487450048470[273] = 0;
   out_7302336487450048470[274] = 0;
   out_7302336487450048470[275] = 0;
   out_7302336487450048470[276] = 0;
   out_7302336487450048470[277] = 0;
   out_7302336487450048470[278] = 0;
   out_7302336487450048470[279] = 0;
   out_7302336487450048470[280] = 0;
   out_7302336487450048470[281] = 0;
   out_7302336487450048470[282] = 0;
   out_7302336487450048470[283] = 0;
   out_7302336487450048470[284] = 0;
   out_7302336487450048470[285] = 0;
   out_7302336487450048470[286] = 1;
   out_7302336487450048470[287] = 0;
   out_7302336487450048470[288] = 0;
   out_7302336487450048470[289] = 0;
   out_7302336487450048470[290] = 0;
   out_7302336487450048470[291] = 0;
   out_7302336487450048470[292] = 0;
   out_7302336487450048470[293] = 0;
   out_7302336487450048470[294] = 0;
   out_7302336487450048470[295] = 0;
   out_7302336487450048470[296] = 0;
   out_7302336487450048470[297] = 0;
   out_7302336487450048470[298] = 0;
   out_7302336487450048470[299] = 0;
   out_7302336487450048470[300] = 0;
   out_7302336487450048470[301] = 0;
   out_7302336487450048470[302] = 0;
   out_7302336487450048470[303] = 0;
   out_7302336487450048470[304] = 0;
   out_7302336487450048470[305] = 0;
   out_7302336487450048470[306] = 0;
   out_7302336487450048470[307] = 0;
   out_7302336487450048470[308] = 1;
   out_7302336487450048470[309] = 0;
   out_7302336487450048470[310] = 0;
   out_7302336487450048470[311] = 0;
   out_7302336487450048470[312] = 0;
   out_7302336487450048470[313] = 0;
   out_7302336487450048470[314] = 0;
   out_7302336487450048470[315] = 0;
   out_7302336487450048470[316] = 0;
   out_7302336487450048470[317] = 0;
   out_7302336487450048470[318] = 0;
   out_7302336487450048470[319] = 0;
   out_7302336487450048470[320] = 0;
   out_7302336487450048470[321] = 0;
   out_7302336487450048470[322] = 0;
   out_7302336487450048470[323] = 0;
   out_7302336487450048470[324] = 0;
   out_7302336487450048470[325] = 0;
   out_7302336487450048470[326] = 0;
   out_7302336487450048470[327] = 0;
   out_7302336487450048470[328] = 0;
   out_7302336487450048470[329] = 0;
   out_7302336487450048470[330] = 1;
   out_7302336487450048470[331] = 0;
   out_7302336487450048470[332] = 0;
   out_7302336487450048470[333] = 0;
   out_7302336487450048470[334] = 0;
   out_7302336487450048470[335] = 0;
   out_7302336487450048470[336] = 0;
   out_7302336487450048470[337] = 0;
   out_7302336487450048470[338] = 0;
   out_7302336487450048470[339] = 0;
   out_7302336487450048470[340] = 0;
   out_7302336487450048470[341] = 0;
   out_7302336487450048470[342] = 0;
   out_7302336487450048470[343] = 0;
   out_7302336487450048470[344] = 0;
   out_7302336487450048470[345] = 0;
   out_7302336487450048470[346] = 0;
   out_7302336487450048470[347] = 0;
   out_7302336487450048470[348] = 0;
   out_7302336487450048470[349] = 0;
   out_7302336487450048470[350] = 0;
   out_7302336487450048470[351] = 0;
   out_7302336487450048470[352] = 1;
   out_7302336487450048470[353] = 0;
   out_7302336487450048470[354] = 0;
   out_7302336487450048470[355] = 0;
   out_7302336487450048470[356] = 0;
   out_7302336487450048470[357] = 0;
   out_7302336487450048470[358] = 0;
   out_7302336487450048470[359] = 0;
   out_7302336487450048470[360] = 0;
   out_7302336487450048470[361] = 0;
   out_7302336487450048470[362] = 0;
   out_7302336487450048470[363] = 0;
   out_7302336487450048470[364] = 0;
   out_7302336487450048470[365] = 0;
   out_7302336487450048470[366] = 0;
   out_7302336487450048470[367] = 0;
   out_7302336487450048470[368] = 0;
   out_7302336487450048470[369] = 0;
   out_7302336487450048470[370] = 0;
   out_7302336487450048470[371] = 0;
   out_7302336487450048470[372] = 0;
   out_7302336487450048470[373] = 0;
   out_7302336487450048470[374] = 1;
   out_7302336487450048470[375] = 0;
   out_7302336487450048470[376] = 0;
   out_7302336487450048470[377] = 0;
   out_7302336487450048470[378] = 0;
   out_7302336487450048470[379] = 0;
   out_7302336487450048470[380] = 0;
   out_7302336487450048470[381] = 0;
   out_7302336487450048470[382] = 0;
   out_7302336487450048470[383] = 0;
   out_7302336487450048470[384] = 0;
   out_7302336487450048470[385] = 0;
   out_7302336487450048470[386] = 0;
   out_7302336487450048470[387] = 0;
   out_7302336487450048470[388] = 0;
   out_7302336487450048470[389] = 0;
   out_7302336487450048470[390] = 0;
   out_7302336487450048470[391] = 0;
   out_7302336487450048470[392] = 0;
   out_7302336487450048470[393] = 0;
   out_7302336487450048470[394] = 0;
   out_7302336487450048470[395] = 0;
   out_7302336487450048470[396] = 1;
   out_7302336487450048470[397] = 0;
   out_7302336487450048470[398] = 0;
   out_7302336487450048470[399] = 0;
   out_7302336487450048470[400] = 0;
   out_7302336487450048470[401] = 0;
   out_7302336487450048470[402] = 0;
   out_7302336487450048470[403] = 0;
   out_7302336487450048470[404] = 0;
   out_7302336487450048470[405] = 0;
   out_7302336487450048470[406] = 0;
   out_7302336487450048470[407] = 0;
   out_7302336487450048470[408] = 0;
   out_7302336487450048470[409] = 0;
   out_7302336487450048470[410] = 0;
   out_7302336487450048470[411] = 0;
   out_7302336487450048470[412] = 0;
   out_7302336487450048470[413] = 0;
   out_7302336487450048470[414] = 0;
   out_7302336487450048470[415] = 0;
   out_7302336487450048470[416] = 0;
   out_7302336487450048470[417] = 0;
   out_7302336487450048470[418] = 1;
   out_7302336487450048470[419] = 0;
   out_7302336487450048470[420] = 0;
   out_7302336487450048470[421] = 0;
   out_7302336487450048470[422] = 0;
   out_7302336487450048470[423] = 0;
   out_7302336487450048470[424] = 0;
   out_7302336487450048470[425] = 0;
   out_7302336487450048470[426] = 0;
   out_7302336487450048470[427] = 0;
   out_7302336487450048470[428] = 0;
   out_7302336487450048470[429] = 0;
   out_7302336487450048470[430] = 0;
   out_7302336487450048470[431] = 0;
   out_7302336487450048470[432] = 0;
   out_7302336487450048470[433] = 0;
   out_7302336487450048470[434] = 0;
   out_7302336487450048470[435] = 0;
   out_7302336487450048470[436] = 0;
   out_7302336487450048470[437] = 0;
   out_7302336487450048470[438] = 0;
   out_7302336487450048470[439] = 0;
   out_7302336487450048470[440] = 1;
}
void h_4(double *state, double *unused, double *out_4553528708946782793) {
   out_4553528708946782793[0] = state[10] + state[13];
   out_4553528708946782793[1] = state[11] + state[14];
   out_4553528708946782793[2] = state[12] + state[15];
}
void H_4(double *state, double *unused, double *out_6891359557898868582) {
   out_6891359557898868582[0] = 0;
   out_6891359557898868582[1] = 0;
   out_6891359557898868582[2] = 0;
   out_6891359557898868582[3] = 0;
   out_6891359557898868582[4] = 0;
   out_6891359557898868582[5] = 0;
   out_6891359557898868582[6] = 0;
   out_6891359557898868582[7] = 0;
   out_6891359557898868582[8] = 0;
   out_6891359557898868582[9] = 0;
   out_6891359557898868582[10] = 1;
   out_6891359557898868582[11] = 0;
   out_6891359557898868582[12] = 0;
   out_6891359557898868582[13] = 1;
   out_6891359557898868582[14] = 0;
   out_6891359557898868582[15] = 0;
   out_6891359557898868582[16] = 0;
   out_6891359557898868582[17] = 0;
   out_6891359557898868582[18] = 0;
   out_6891359557898868582[19] = 0;
   out_6891359557898868582[20] = 0;
   out_6891359557898868582[21] = 0;
   out_6891359557898868582[22] = 0;
   out_6891359557898868582[23] = 0;
   out_6891359557898868582[24] = 0;
   out_6891359557898868582[25] = 0;
   out_6891359557898868582[26] = 0;
   out_6891359557898868582[27] = 0;
   out_6891359557898868582[28] = 0;
   out_6891359557898868582[29] = 0;
   out_6891359557898868582[30] = 0;
   out_6891359557898868582[31] = 0;
   out_6891359557898868582[32] = 0;
   out_6891359557898868582[33] = 1;
   out_6891359557898868582[34] = 0;
   out_6891359557898868582[35] = 0;
   out_6891359557898868582[36] = 1;
   out_6891359557898868582[37] = 0;
   out_6891359557898868582[38] = 0;
   out_6891359557898868582[39] = 0;
   out_6891359557898868582[40] = 0;
   out_6891359557898868582[41] = 0;
   out_6891359557898868582[42] = 0;
   out_6891359557898868582[43] = 0;
   out_6891359557898868582[44] = 0;
   out_6891359557898868582[45] = 0;
   out_6891359557898868582[46] = 0;
   out_6891359557898868582[47] = 0;
   out_6891359557898868582[48] = 0;
   out_6891359557898868582[49] = 0;
   out_6891359557898868582[50] = 0;
   out_6891359557898868582[51] = 0;
   out_6891359557898868582[52] = 0;
   out_6891359557898868582[53] = 0;
   out_6891359557898868582[54] = 0;
   out_6891359557898868582[55] = 0;
   out_6891359557898868582[56] = 1;
   out_6891359557898868582[57] = 0;
   out_6891359557898868582[58] = 0;
   out_6891359557898868582[59] = 1;
   out_6891359557898868582[60] = 0;
   out_6891359557898868582[61] = 0;
   out_6891359557898868582[62] = 0;
   out_6891359557898868582[63] = 0;
   out_6891359557898868582[64] = 0;
   out_6891359557898868582[65] = 0;
}
void h_9(double *state, double *unused, double *out_837096616367711032) {
   out_837096616367711032[0] = state[10];
   out_837096616367711032[1] = state[11];
   out_837096616367711032[2] = state[12];
}
void H_9(double *state, double *unused, double *out_6650169911269277937) {
   out_6650169911269277937[0] = 0;
   out_6650169911269277937[1] = 0;
   out_6650169911269277937[2] = 0;
   out_6650169911269277937[3] = 0;
   out_6650169911269277937[4] = 0;
   out_6650169911269277937[5] = 0;
   out_6650169911269277937[6] = 0;
   out_6650169911269277937[7] = 0;
   out_6650169911269277937[8] = 0;
   out_6650169911269277937[9] = 0;
   out_6650169911269277937[10] = 1;
   out_6650169911269277937[11] = 0;
   out_6650169911269277937[12] = 0;
   out_6650169911269277937[13] = 0;
   out_6650169911269277937[14] = 0;
   out_6650169911269277937[15] = 0;
   out_6650169911269277937[16] = 0;
   out_6650169911269277937[17] = 0;
   out_6650169911269277937[18] = 0;
   out_6650169911269277937[19] = 0;
   out_6650169911269277937[20] = 0;
   out_6650169911269277937[21] = 0;
   out_6650169911269277937[22] = 0;
   out_6650169911269277937[23] = 0;
   out_6650169911269277937[24] = 0;
   out_6650169911269277937[25] = 0;
   out_6650169911269277937[26] = 0;
   out_6650169911269277937[27] = 0;
   out_6650169911269277937[28] = 0;
   out_6650169911269277937[29] = 0;
   out_6650169911269277937[30] = 0;
   out_6650169911269277937[31] = 0;
   out_6650169911269277937[32] = 0;
   out_6650169911269277937[33] = 1;
   out_6650169911269277937[34] = 0;
   out_6650169911269277937[35] = 0;
   out_6650169911269277937[36] = 0;
   out_6650169911269277937[37] = 0;
   out_6650169911269277937[38] = 0;
   out_6650169911269277937[39] = 0;
   out_6650169911269277937[40] = 0;
   out_6650169911269277937[41] = 0;
   out_6650169911269277937[42] = 0;
   out_6650169911269277937[43] = 0;
   out_6650169911269277937[44] = 0;
   out_6650169911269277937[45] = 0;
   out_6650169911269277937[46] = 0;
   out_6650169911269277937[47] = 0;
   out_6650169911269277937[48] = 0;
   out_6650169911269277937[49] = 0;
   out_6650169911269277937[50] = 0;
   out_6650169911269277937[51] = 0;
   out_6650169911269277937[52] = 0;
   out_6650169911269277937[53] = 0;
   out_6650169911269277937[54] = 0;
   out_6650169911269277937[55] = 0;
   out_6650169911269277937[56] = 1;
   out_6650169911269277937[57] = 0;
   out_6650169911269277937[58] = 0;
   out_6650169911269277937[59] = 0;
   out_6650169911269277937[60] = 0;
   out_6650169911269277937[61] = 0;
   out_6650169911269277937[62] = 0;
   out_6650169911269277937[63] = 0;
   out_6650169911269277937[64] = 0;
   out_6650169911269277937[65] = 0;
}
void h_10(double *state, double *unused, double *out_9072472061399710640) {
   out_9072472061399710640[0] = 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0] + state[16] + state[19];
   out_9072472061399710640[1] = 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1] + state[17] + state[20];
   out_9072472061399710640[2] = 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[2] + state[18] + state[21];
}
void H_10(double *state, double *unused, double *out_9171296170384997829) {
   out_9171296170384997829[0] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*pow(state[0], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_9171296170384997829[1] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_9171296170384997829[2] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[2];
   out_9171296170384997829[3] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_9171296170384997829[4] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_9171296170384997829[5] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_9171296170384997829[6] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_9171296170384997829[7] = 0;
   out_9171296170384997829[8] = 0;
   out_9171296170384997829[9] = 0;
   out_9171296170384997829[10] = 0;
   out_9171296170384997829[11] = 0;
   out_9171296170384997829[12] = 0;
   out_9171296170384997829[13] = 0;
   out_9171296170384997829[14] = 0;
   out_9171296170384997829[15] = 0;
   out_9171296170384997829[16] = 1;
   out_9171296170384997829[17] = 0;
   out_9171296170384997829[18] = 0;
   out_9171296170384997829[19] = 1;
   out_9171296170384997829[20] = 0;
   out_9171296170384997829[21] = 0;
   out_9171296170384997829[22] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_9171296170384997829[23] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*pow(state[1], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_9171296170384997829[24] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1]*state[2];
   out_9171296170384997829[25] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_9171296170384997829[26] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_9171296170384997829[27] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_9171296170384997829[28] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_9171296170384997829[29] = 0;
   out_9171296170384997829[30] = 0;
   out_9171296170384997829[31] = 0;
   out_9171296170384997829[32] = 0;
   out_9171296170384997829[33] = 0;
   out_9171296170384997829[34] = 0;
   out_9171296170384997829[35] = 0;
   out_9171296170384997829[36] = 0;
   out_9171296170384997829[37] = 0;
   out_9171296170384997829[38] = 0;
   out_9171296170384997829[39] = 1;
   out_9171296170384997829[40] = 0;
   out_9171296170384997829[41] = 0;
   out_9171296170384997829[42] = 1;
   out_9171296170384997829[43] = 0;
   out_9171296170384997829[44] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[0]*state[2];
   out_9171296170384997829[45] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[1]*state[2];
   out_9171296170384997829[46] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*pow(state[2], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_9171296170384997829[47] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_9171296170384997829[48] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_9171296170384997829[49] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_9171296170384997829[50] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_9171296170384997829[51] = 0;
   out_9171296170384997829[52] = 0;
   out_9171296170384997829[53] = 0;
   out_9171296170384997829[54] = 0;
   out_9171296170384997829[55] = 0;
   out_9171296170384997829[56] = 0;
   out_9171296170384997829[57] = 0;
   out_9171296170384997829[58] = 0;
   out_9171296170384997829[59] = 0;
   out_9171296170384997829[60] = 0;
   out_9171296170384997829[61] = 0;
   out_9171296170384997829[62] = 1;
   out_9171296170384997829[63] = 0;
   out_9171296170384997829[64] = 0;
   out_9171296170384997829[65] = 1;
}
void h_12(double *state, double *unused, double *out_4169451466133569989) {
   out_4169451466133569989[0] = state[0];
   out_4169451466133569989[1] = state[1];
   out_4169451466133569989[2] = state[2];
}
void H_12(double *state, double *unused, double *out_1871903149866906787) {
   out_1871903149866906787[0] = 1;
   out_1871903149866906787[1] = 0;
   out_1871903149866906787[2] = 0;
   out_1871903149866906787[3] = 0;
   out_1871903149866906787[4] = 0;
   out_1871903149866906787[5] = 0;
   out_1871903149866906787[6] = 0;
   out_1871903149866906787[7] = 0;
   out_1871903149866906787[8] = 0;
   out_1871903149866906787[9] = 0;
   out_1871903149866906787[10] = 0;
   out_1871903149866906787[11] = 0;
   out_1871903149866906787[12] = 0;
   out_1871903149866906787[13] = 0;
   out_1871903149866906787[14] = 0;
   out_1871903149866906787[15] = 0;
   out_1871903149866906787[16] = 0;
   out_1871903149866906787[17] = 0;
   out_1871903149866906787[18] = 0;
   out_1871903149866906787[19] = 0;
   out_1871903149866906787[20] = 0;
   out_1871903149866906787[21] = 0;
   out_1871903149866906787[22] = 0;
   out_1871903149866906787[23] = 1;
   out_1871903149866906787[24] = 0;
   out_1871903149866906787[25] = 0;
   out_1871903149866906787[26] = 0;
   out_1871903149866906787[27] = 0;
   out_1871903149866906787[28] = 0;
   out_1871903149866906787[29] = 0;
   out_1871903149866906787[30] = 0;
   out_1871903149866906787[31] = 0;
   out_1871903149866906787[32] = 0;
   out_1871903149866906787[33] = 0;
   out_1871903149866906787[34] = 0;
   out_1871903149866906787[35] = 0;
   out_1871903149866906787[36] = 0;
   out_1871903149866906787[37] = 0;
   out_1871903149866906787[38] = 0;
   out_1871903149866906787[39] = 0;
   out_1871903149866906787[40] = 0;
   out_1871903149866906787[41] = 0;
   out_1871903149866906787[42] = 0;
   out_1871903149866906787[43] = 0;
   out_1871903149866906787[44] = 0;
   out_1871903149866906787[45] = 0;
   out_1871903149866906787[46] = 1;
   out_1871903149866906787[47] = 0;
   out_1871903149866906787[48] = 0;
   out_1871903149866906787[49] = 0;
   out_1871903149866906787[50] = 0;
   out_1871903149866906787[51] = 0;
   out_1871903149866906787[52] = 0;
   out_1871903149866906787[53] = 0;
   out_1871903149866906787[54] = 0;
   out_1871903149866906787[55] = 0;
   out_1871903149866906787[56] = 0;
   out_1871903149866906787[57] = 0;
   out_1871903149866906787[58] = 0;
   out_1871903149866906787[59] = 0;
   out_1871903149866906787[60] = 0;
   out_1871903149866906787[61] = 0;
   out_1871903149866906787[62] = 0;
   out_1871903149866906787[63] = 0;
   out_1871903149866906787[64] = 0;
   out_1871903149866906787[65] = 0;
}
void h_35(double *state, double *unused, double *out_645006476430343456) {
   out_645006476430343456[0] = state[7];
   out_645006476430343456[1] = state[8];
   out_645006476430343456[2] = state[9];
}
void H_35(double *state, double *unused, double *out_873659882458106922) {
   out_873659882458106922[0] = 0;
   out_873659882458106922[1] = 0;
   out_873659882458106922[2] = 0;
   out_873659882458106922[3] = 0;
   out_873659882458106922[4] = 0;
   out_873659882458106922[5] = 0;
   out_873659882458106922[6] = 0;
   out_873659882458106922[7] = 1;
   out_873659882458106922[8] = 0;
   out_873659882458106922[9] = 0;
   out_873659882458106922[10] = 0;
   out_873659882458106922[11] = 0;
   out_873659882458106922[12] = 0;
   out_873659882458106922[13] = 0;
   out_873659882458106922[14] = 0;
   out_873659882458106922[15] = 0;
   out_873659882458106922[16] = 0;
   out_873659882458106922[17] = 0;
   out_873659882458106922[18] = 0;
   out_873659882458106922[19] = 0;
   out_873659882458106922[20] = 0;
   out_873659882458106922[21] = 0;
   out_873659882458106922[22] = 0;
   out_873659882458106922[23] = 0;
   out_873659882458106922[24] = 0;
   out_873659882458106922[25] = 0;
   out_873659882458106922[26] = 0;
   out_873659882458106922[27] = 0;
   out_873659882458106922[28] = 0;
   out_873659882458106922[29] = 0;
   out_873659882458106922[30] = 1;
   out_873659882458106922[31] = 0;
   out_873659882458106922[32] = 0;
   out_873659882458106922[33] = 0;
   out_873659882458106922[34] = 0;
   out_873659882458106922[35] = 0;
   out_873659882458106922[36] = 0;
   out_873659882458106922[37] = 0;
   out_873659882458106922[38] = 0;
   out_873659882458106922[39] = 0;
   out_873659882458106922[40] = 0;
   out_873659882458106922[41] = 0;
   out_873659882458106922[42] = 0;
   out_873659882458106922[43] = 0;
   out_873659882458106922[44] = 0;
   out_873659882458106922[45] = 0;
   out_873659882458106922[46] = 0;
   out_873659882458106922[47] = 0;
   out_873659882458106922[48] = 0;
   out_873659882458106922[49] = 0;
   out_873659882458106922[50] = 0;
   out_873659882458106922[51] = 0;
   out_873659882458106922[52] = 0;
   out_873659882458106922[53] = 1;
   out_873659882458106922[54] = 0;
   out_873659882458106922[55] = 0;
   out_873659882458106922[56] = 0;
   out_873659882458106922[57] = 0;
   out_873659882458106922[58] = 0;
   out_873659882458106922[59] = 0;
   out_873659882458106922[60] = 0;
   out_873659882458106922[61] = 0;
   out_873659882458106922[62] = 0;
   out_873659882458106922[63] = 0;
   out_873659882458106922[64] = 0;
   out_873659882458106922[65] = 0;
}
void h_32(double *state, double *unused, double *out_685483665455785730) {
   out_685483665455785730[0] = state[3];
   out_685483665455785730[1] = state[4];
   out_685483665455785730[2] = state[5];
   out_685483665455785730[3] = state[6];
}
void H_32(double *state, double *unused, double *out_6674964254665719480) {
   out_6674964254665719480[0] = 0;
   out_6674964254665719480[1] = 0;
   out_6674964254665719480[2] = 0;
   out_6674964254665719480[3] = 1;
   out_6674964254665719480[4] = 0;
   out_6674964254665719480[5] = 0;
   out_6674964254665719480[6] = 0;
   out_6674964254665719480[7] = 0;
   out_6674964254665719480[8] = 0;
   out_6674964254665719480[9] = 0;
   out_6674964254665719480[10] = 0;
   out_6674964254665719480[11] = 0;
   out_6674964254665719480[12] = 0;
   out_6674964254665719480[13] = 0;
   out_6674964254665719480[14] = 0;
   out_6674964254665719480[15] = 0;
   out_6674964254665719480[16] = 0;
   out_6674964254665719480[17] = 0;
   out_6674964254665719480[18] = 0;
   out_6674964254665719480[19] = 0;
   out_6674964254665719480[20] = 0;
   out_6674964254665719480[21] = 0;
   out_6674964254665719480[22] = 0;
   out_6674964254665719480[23] = 0;
   out_6674964254665719480[24] = 0;
   out_6674964254665719480[25] = 0;
   out_6674964254665719480[26] = 1;
   out_6674964254665719480[27] = 0;
   out_6674964254665719480[28] = 0;
   out_6674964254665719480[29] = 0;
   out_6674964254665719480[30] = 0;
   out_6674964254665719480[31] = 0;
   out_6674964254665719480[32] = 0;
   out_6674964254665719480[33] = 0;
   out_6674964254665719480[34] = 0;
   out_6674964254665719480[35] = 0;
   out_6674964254665719480[36] = 0;
   out_6674964254665719480[37] = 0;
   out_6674964254665719480[38] = 0;
   out_6674964254665719480[39] = 0;
   out_6674964254665719480[40] = 0;
   out_6674964254665719480[41] = 0;
   out_6674964254665719480[42] = 0;
   out_6674964254665719480[43] = 0;
   out_6674964254665719480[44] = 0;
   out_6674964254665719480[45] = 0;
   out_6674964254665719480[46] = 0;
   out_6674964254665719480[47] = 0;
   out_6674964254665719480[48] = 0;
   out_6674964254665719480[49] = 1;
   out_6674964254665719480[50] = 0;
   out_6674964254665719480[51] = 0;
   out_6674964254665719480[52] = 0;
   out_6674964254665719480[53] = 0;
   out_6674964254665719480[54] = 0;
   out_6674964254665719480[55] = 0;
   out_6674964254665719480[56] = 0;
   out_6674964254665719480[57] = 0;
   out_6674964254665719480[58] = 0;
   out_6674964254665719480[59] = 0;
   out_6674964254665719480[60] = 0;
   out_6674964254665719480[61] = 0;
   out_6674964254665719480[62] = 0;
   out_6674964254665719480[63] = 0;
   out_6674964254665719480[64] = 0;
   out_6674964254665719480[65] = 0;
   out_6674964254665719480[66] = 0;
   out_6674964254665719480[67] = 0;
   out_6674964254665719480[68] = 0;
   out_6674964254665719480[69] = 0;
   out_6674964254665719480[70] = 0;
   out_6674964254665719480[71] = 0;
   out_6674964254665719480[72] = 1;
   out_6674964254665719480[73] = 0;
   out_6674964254665719480[74] = 0;
   out_6674964254665719480[75] = 0;
   out_6674964254665719480[76] = 0;
   out_6674964254665719480[77] = 0;
   out_6674964254665719480[78] = 0;
   out_6674964254665719480[79] = 0;
   out_6674964254665719480[80] = 0;
   out_6674964254665719480[81] = 0;
   out_6674964254665719480[82] = 0;
   out_6674964254665719480[83] = 0;
   out_6674964254665719480[84] = 0;
   out_6674964254665719480[85] = 0;
   out_6674964254665719480[86] = 0;
   out_6674964254665719480[87] = 0;
}
void h_13(double *state, double *unused, double *out_172093727282423569) {
   out_172093727282423569[0] = (-2*state[3]*state[5] + 2*state[4]*state[6])*state[9] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[8] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[7];
   out_172093727282423569[1] = (2*state[3]*state[4] + 2*state[5]*state[6])*state[9] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[7] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[8];
   out_172093727282423569[2] = (-2*state[3]*state[4] + 2*state[5]*state[6])*state[8] + (2*state[3]*state[5] + 2*state[4]*state[6])*state[7] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[9];
}
void H_13(double *state, double *unused, double *out_7598295634699158786) {
   out_7598295634699158786[0] = 0;
   out_7598295634699158786[1] = 0;
   out_7598295634699158786[2] = 0;
   out_7598295634699158786[3] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_7598295634699158786[4] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_7598295634699158786[5] = -2*state[3]*state[9] + 2*state[4]*state[8] - 2*state[5]*state[7];
   out_7598295634699158786[6] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_7598295634699158786[7] = pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2);
   out_7598295634699158786[8] = 2*state[3]*state[6] + 2*state[4]*state[5];
   out_7598295634699158786[9] = -2*state[3]*state[5] + 2*state[4]*state[6];
   out_7598295634699158786[10] = 0;
   out_7598295634699158786[11] = 0;
   out_7598295634699158786[12] = 0;
   out_7598295634699158786[13] = 0;
   out_7598295634699158786[14] = 0;
   out_7598295634699158786[15] = 0;
   out_7598295634699158786[16] = 0;
   out_7598295634699158786[17] = 0;
   out_7598295634699158786[18] = 0;
   out_7598295634699158786[19] = 0;
   out_7598295634699158786[20] = 0;
   out_7598295634699158786[21] = 0;
   out_7598295634699158786[22] = 0;
   out_7598295634699158786[23] = 0;
   out_7598295634699158786[24] = 0;
   out_7598295634699158786[25] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_7598295634699158786[26] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_7598295634699158786[27] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_7598295634699158786[28] = -2*state[3]*state[7] + 2*state[5]*state[9] - 2*state[6]*state[8];
   out_7598295634699158786[29] = -2*state[3]*state[6] + 2*state[4]*state[5];
   out_7598295634699158786[30] = pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2);
   out_7598295634699158786[31] = 2*state[3]*state[4] + 2*state[5]*state[6];
   out_7598295634699158786[32] = 0;
   out_7598295634699158786[33] = 0;
   out_7598295634699158786[34] = 0;
   out_7598295634699158786[35] = 0;
   out_7598295634699158786[36] = 0;
   out_7598295634699158786[37] = 0;
   out_7598295634699158786[38] = 0;
   out_7598295634699158786[39] = 0;
   out_7598295634699158786[40] = 0;
   out_7598295634699158786[41] = 0;
   out_7598295634699158786[42] = 0;
   out_7598295634699158786[43] = 0;
   out_7598295634699158786[44] = 0;
   out_7598295634699158786[45] = 0;
   out_7598295634699158786[46] = 0;
   out_7598295634699158786[47] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_7598295634699158786[48] = -2*state[3]*state[8] - 2*state[4]*state[9] + 2*state[6]*state[7];
   out_7598295634699158786[49] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_7598295634699158786[50] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_7598295634699158786[51] = 2*state[3]*state[5] + 2*state[4]*state[6];
   out_7598295634699158786[52] = -2*state[3]*state[4] + 2*state[5]*state[6];
   out_7598295634699158786[53] = pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2);
   out_7598295634699158786[54] = 0;
   out_7598295634699158786[55] = 0;
   out_7598295634699158786[56] = 0;
   out_7598295634699158786[57] = 0;
   out_7598295634699158786[58] = 0;
   out_7598295634699158786[59] = 0;
   out_7598295634699158786[60] = 0;
   out_7598295634699158786[61] = 0;
   out_7598295634699158786[62] = 0;
   out_7598295634699158786[63] = 0;
   out_7598295634699158786[64] = 0;
   out_7598295634699158786[65] = 0;
}
void h_14(double *state, double *unused, double *out_837096616367711032) {
   out_837096616367711032[0] = state[10];
   out_837096616367711032[1] = state[11];
   out_837096616367711032[2] = state[12];
}
void H_14(double *state, double *unused, double *out_6650169911269277937) {
   out_6650169911269277937[0] = 0;
   out_6650169911269277937[1] = 0;
   out_6650169911269277937[2] = 0;
   out_6650169911269277937[3] = 0;
   out_6650169911269277937[4] = 0;
   out_6650169911269277937[5] = 0;
   out_6650169911269277937[6] = 0;
   out_6650169911269277937[7] = 0;
   out_6650169911269277937[8] = 0;
   out_6650169911269277937[9] = 0;
   out_6650169911269277937[10] = 1;
   out_6650169911269277937[11] = 0;
   out_6650169911269277937[12] = 0;
   out_6650169911269277937[13] = 0;
   out_6650169911269277937[14] = 0;
   out_6650169911269277937[15] = 0;
   out_6650169911269277937[16] = 0;
   out_6650169911269277937[17] = 0;
   out_6650169911269277937[18] = 0;
   out_6650169911269277937[19] = 0;
   out_6650169911269277937[20] = 0;
   out_6650169911269277937[21] = 0;
   out_6650169911269277937[22] = 0;
   out_6650169911269277937[23] = 0;
   out_6650169911269277937[24] = 0;
   out_6650169911269277937[25] = 0;
   out_6650169911269277937[26] = 0;
   out_6650169911269277937[27] = 0;
   out_6650169911269277937[28] = 0;
   out_6650169911269277937[29] = 0;
   out_6650169911269277937[30] = 0;
   out_6650169911269277937[31] = 0;
   out_6650169911269277937[32] = 0;
   out_6650169911269277937[33] = 1;
   out_6650169911269277937[34] = 0;
   out_6650169911269277937[35] = 0;
   out_6650169911269277937[36] = 0;
   out_6650169911269277937[37] = 0;
   out_6650169911269277937[38] = 0;
   out_6650169911269277937[39] = 0;
   out_6650169911269277937[40] = 0;
   out_6650169911269277937[41] = 0;
   out_6650169911269277937[42] = 0;
   out_6650169911269277937[43] = 0;
   out_6650169911269277937[44] = 0;
   out_6650169911269277937[45] = 0;
   out_6650169911269277937[46] = 0;
   out_6650169911269277937[47] = 0;
   out_6650169911269277937[48] = 0;
   out_6650169911269277937[49] = 0;
   out_6650169911269277937[50] = 0;
   out_6650169911269277937[51] = 0;
   out_6650169911269277937[52] = 0;
   out_6650169911269277937[53] = 0;
   out_6650169911269277937[54] = 0;
   out_6650169911269277937[55] = 0;
   out_6650169911269277937[56] = 1;
   out_6650169911269277937[57] = 0;
   out_6650169911269277937[58] = 0;
   out_6650169911269277937[59] = 0;
   out_6650169911269277937[60] = 0;
   out_6650169911269277937[61] = 0;
   out_6650169911269277937[62] = 0;
   out_6650169911269277937[63] = 0;
   out_6650169911269277937[64] = 0;
   out_6650169911269277937[65] = 0;
}
void h_33(double *state, double *unused, double *out_478936899145568400) {
   out_478936899145568400[0] = state[16];
   out_478936899145568400[1] = state[17];
   out_478936899145568400[2] = state[18];
}
void H_33(double *state, double *unused, double *out_4024216887096964526) {
   out_4024216887096964526[0] = 0;
   out_4024216887096964526[1] = 0;
   out_4024216887096964526[2] = 0;
   out_4024216887096964526[3] = 0;
   out_4024216887096964526[4] = 0;
   out_4024216887096964526[5] = 0;
   out_4024216887096964526[6] = 0;
   out_4024216887096964526[7] = 0;
   out_4024216887096964526[8] = 0;
   out_4024216887096964526[9] = 0;
   out_4024216887096964526[10] = 0;
   out_4024216887096964526[11] = 0;
   out_4024216887096964526[12] = 0;
   out_4024216887096964526[13] = 0;
   out_4024216887096964526[14] = 0;
   out_4024216887096964526[15] = 0;
   out_4024216887096964526[16] = 1;
   out_4024216887096964526[17] = 0;
   out_4024216887096964526[18] = 0;
   out_4024216887096964526[19] = 0;
   out_4024216887096964526[20] = 0;
   out_4024216887096964526[21] = 0;
   out_4024216887096964526[22] = 0;
   out_4024216887096964526[23] = 0;
   out_4024216887096964526[24] = 0;
   out_4024216887096964526[25] = 0;
   out_4024216887096964526[26] = 0;
   out_4024216887096964526[27] = 0;
   out_4024216887096964526[28] = 0;
   out_4024216887096964526[29] = 0;
   out_4024216887096964526[30] = 0;
   out_4024216887096964526[31] = 0;
   out_4024216887096964526[32] = 0;
   out_4024216887096964526[33] = 0;
   out_4024216887096964526[34] = 0;
   out_4024216887096964526[35] = 0;
   out_4024216887096964526[36] = 0;
   out_4024216887096964526[37] = 0;
   out_4024216887096964526[38] = 0;
   out_4024216887096964526[39] = 1;
   out_4024216887096964526[40] = 0;
   out_4024216887096964526[41] = 0;
   out_4024216887096964526[42] = 0;
   out_4024216887096964526[43] = 0;
   out_4024216887096964526[44] = 0;
   out_4024216887096964526[45] = 0;
   out_4024216887096964526[46] = 0;
   out_4024216887096964526[47] = 0;
   out_4024216887096964526[48] = 0;
   out_4024216887096964526[49] = 0;
   out_4024216887096964526[50] = 0;
   out_4024216887096964526[51] = 0;
   out_4024216887096964526[52] = 0;
   out_4024216887096964526[53] = 0;
   out_4024216887096964526[54] = 0;
   out_4024216887096964526[55] = 0;
   out_4024216887096964526[56] = 0;
   out_4024216887096964526[57] = 0;
   out_4024216887096964526[58] = 0;
   out_4024216887096964526[59] = 0;
   out_4024216887096964526[60] = 0;
   out_4024216887096964526[61] = 0;
   out_4024216887096964526[62] = 1;
   out_4024216887096964526[63] = 0;
   out_4024216887096964526[64] = 0;
   out_4024216887096964526[65] = 0;
}
#include <eigen3/Eigen/Dense>
#include <iostream>

typedef Eigen::Matrix<double, DIM, DIM, Eigen::RowMajor> DDM;
typedef Eigen::Matrix<double, EDIM, EDIM, Eigen::RowMajor> EEM;
typedef Eigen::Matrix<double, DIM, EDIM, Eigen::RowMajor> DEM;

void predict(double *in_x, double *in_P, double *in_Q, double dt) {
  typedef Eigen::Matrix<double, MEDIM, MEDIM, Eigen::RowMajor> RRM;

  double nx[DIM] = {0};
  double in_F[EDIM*EDIM] = {0};

  // functions from sympy
  f_fun(in_x, dt, nx);
  F_fun(in_x, dt, in_F);


  EEM F(in_F);
  EEM P(in_P);
  EEM Q(in_Q);

  RRM F_main = F.topLeftCorner(MEDIM, MEDIM);
  P.topLeftCorner(MEDIM, MEDIM) = (F_main * P.topLeftCorner(MEDIM, MEDIM)) * F_main.transpose();
  P.topRightCorner(MEDIM, EDIM - MEDIM) = F_main * P.topRightCorner(MEDIM, EDIM - MEDIM);
  P.bottomLeftCorner(EDIM - MEDIM, MEDIM) = P.bottomLeftCorner(EDIM - MEDIM, MEDIM) * F_main.transpose();

  P = P + dt*Q;

  // copy out state
  memcpy(in_x, nx, DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
}

// note: extra_args dim only correct when null space projecting
// otherwise 1
template <int ZDIM, int EADIM, bool MAHA_TEST>
void update(double *in_x, double *in_P, Hfun h_fun, Hfun H_fun, Hfun Hea_fun, double *in_z, double *in_R, double *in_ea, double MAHA_THRESHOLD) {
  typedef Eigen::Matrix<double, ZDIM, ZDIM, Eigen::RowMajor> ZZM;
  typedef Eigen::Matrix<double, ZDIM, DIM, Eigen::RowMajor> ZDM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, EDIM, Eigen::RowMajor> XEM;
  //typedef Eigen::Matrix<double, EDIM, ZDIM, Eigen::RowMajor> EZM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, 1> X1M;
  typedef Eigen::Matrix<double, Eigen::Dynamic, Eigen::Dynamic, Eigen::RowMajor> XXM;

  double in_hx[ZDIM] = {0};
  double in_H[ZDIM * DIM] = {0};
  double in_H_mod[EDIM * DIM] = {0};
  double delta_x[EDIM] = {0};
  double x_new[DIM] = {0};


  // state x, P
  Eigen::Matrix<double, ZDIM, 1> z(in_z);
  EEM P(in_P);
  ZZM pre_R(in_R);

  // functions from sympy
  h_fun(in_x, in_ea, in_hx);
  H_fun(in_x, in_ea, in_H);
  ZDM pre_H(in_H);

  // get y (y = z - hx)
  Eigen::Matrix<double, ZDIM, 1> pre_y(in_hx); pre_y = z - pre_y;
  X1M y; XXM H; XXM R;
  if (Hea_fun){
    typedef Eigen::Matrix<double, ZDIM, EADIM, Eigen::RowMajor> ZAM;
    double in_Hea[ZDIM * EADIM] = {0};
    Hea_fun(in_x, in_ea, in_Hea);
    ZAM Hea(in_Hea);
    XXM A = Hea.transpose().fullPivLu().kernel();


    y = A.transpose() * pre_y;
    H = A.transpose() * pre_H;
    R = A.transpose() * pre_R * A;
  } else {
    y = pre_y;
    H = pre_H;
    R = pre_R;
  }
  // get modified H
  H_mod_fun(in_x, in_H_mod);
  DEM H_mod(in_H_mod);
  XEM H_err = H * H_mod;

  // Do mahalobis distance test
  if (MAHA_TEST){
    XXM a = (H_err * P * H_err.transpose() + R).inverse();
    double maha_dist = y.transpose() * a * y;
    if (maha_dist > MAHA_THRESHOLD){
      R = 1.0e16 * R;
    }
  }

  // Outlier resilient weighting
  double weight = 1;//(1.5)/(1 + y.squaredNorm()/R.sum());

  // kalman gains and I_KH
  XXM S = ((H_err * P) * H_err.transpose()) + R/weight;
  XEM KT = S.fullPivLu().solve(H_err * P.transpose());
  //EZM K = KT.transpose(); TODO: WHY DOES THIS NOT COMPILE?
  //EZM K = S.fullPivLu().solve(H_err * P.transpose()).transpose();
  //std::cout << "Here is the matrix rot:\n" << K << std::endl;
  EEM I_KH = Eigen::Matrix<double, EDIM, EDIM>::Identity() - (KT.transpose() * H_err);

  // update state by injecting dx
  Eigen::Matrix<double, EDIM, 1> dx(delta_x);
  dx  = (KT.transpose() * y);
  memcpy(delta_x, dx.data(), EDIM * sizeof(double));
  err_fun(in_x, delta_x, x_new);
  Eigen::Matrix<double, DIM, 1> x(x_new);

  // update cov
  P = ((I_KH * P) * I_KH.transpose()) + ((KT.transpose() * R) * KT);

  // copy out state
  memcpy(in_x, x.data(), DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
  memcpy(in_z, y.data(), y.rows() * sizeof(double));
}




}
extern "C" {

void live_update_4(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_4, H_4, NULL, in_z, in_R, in_ea, MAHA_THRESH_4);
}
void live_update_9(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_9, H_9, NULL, in_z, in_R, in_ea, MAHA_THRESH_9);
}
void live_update_10(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_10, H_10, NULL, in_z, in_R, in_ea, MAHA_THRESH_10);
}
void live_update_12(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_12, H_12, NULL, in_z, in_R, in_ea, MAHA_THRESH_12);
}
void live_update_35(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_35, H_35, NULL, in_z, in_R, in_ea, MAHA_THRESH_35);
}
void live_update_32(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<4, 3, 0>(in_x, in_P, h_32, H_32, NULL, in_z, in_R, in_ea, MAHA_THRESH_32);
}
void live_update_13(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_13, H_13, NULL, in_z, in_R, in_ea, MAHA_THRESH_13);
}
void live_update_14(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_14, H_14, NULL, in_z, in_R, in_ea, MAHA_THRESH_14);
}
void live_update_33(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_33, H_33, NULL, in_z, in_R, in_ea, MAHA_THRESH_33);
}
void live_H(double *in_vec, double *out_940843807028553333) {
  H(in_vec, out_940843807028553333);
}
void live_err_fun(double *nom_x, double *delta_x, double *out_6475219860258303377) {
  err_fun(nom_x, delta_x, out_6475219860258303377);
}
void live_inv_err_fun(double *nom_x, double *true_x, double *out_731005450586961185) {
  inv_err_fun(nom_x, true_x, out_731005450586961185);
}
void live_H_mod_fun(double *state, double *out_3792573742677824370) {
  H_mod_fun(state, out_3792573742677824370);
}
void live_f_fun(double *state, double dt, double *out_2926573968287117650) {
  f_fun(state,  dt, out_2926573968287117650);
}
void live_F_fun(double *state, double dt, double *out_7302336487450048470) {
  F_fun(state,  dt, out_7302336487450048470);
}
void live_h_4(double *state, double *unused, double *out_4553528708946782793) {
  h_4(state, unused, out_4553528708946782793);
}
void live_H_4(double *state, double *unused, double *out_6891359557898868582) {
  H_4(state, unused, out_6891359557898868582);
}
void live_h_9(double *state, double *unused, double *out_837096616367711032) {
  h_9(state, unused, out_837096616367711032);
}
void live_H_9(double *state, double *unused, double *out_6650169911269277937) {
  H_9(state, unused, out_6650169911269277937);
}
void live_h_10(double *state, double *unused, double *out_9072472061399710640) {
  h_10(state, unused, out_9072472061399710640);
}
void live_H_10(double *state, double *unused, double *out_9171296170384997829) {
  H_10(state, unused, out_9171296170384997829);
}
void live_h_12(double *state, double *unused, double *out_4169451466133569989) {
  h_12(state, unused, out_4169451466133569989);
}
void live_H_12(double *state, double *unused, double *out_1871903149866906787) {
  H_12(state, unused, out_1871903149866906787);
}
void live_h_35(double *state, double *unused, double *out_645006476430343456) {
  h_35(state, unused, out_645006476430343456);
}
void live_H_35(double *state, double *unused, double *out_873659882458106922) {
  H_35(state, unused, out_873659882458106922);
}
void live_h_32(double *state, double *unused, double *out_685483665455785730) {
  h_32(state, unused, out_685483665455785730);
}
void live_H_32(double *state, double *unused, double *out_6674964254665719480) {
  H_32(state, unused, out_6674964254665719480);
}
void live_h_13(double *state, double *unused, double *out_172093727282423569) {
  h_13(state, unused, out_172093727282423569);
}
void live_H_13(double *state, double *unused, double *out_7598295634699158786) {
  H_13(state, unused, out_7598295634699158786);
}
void live_h_14(double *state, double *unused, double *out_837096616367711032) {
  h_14(state, unused, out_837096616367711032);
}
void live_H_14(double *state, double *unused, double *out_6650169911269277937) {
  H_14(state, unused, out_6650169911269277937);
}
void live_h_33(double *state, double *unused, double *out_478936899145568400) {
  h_33(state, unused, out_478936899145568400);
}
void live_H_33(double *state, double *unused, double *out_4024216887096964526) {
  H_33(state, unused, out_4024216887096964526);
}
void live_predict(double *in_x, double *in_P, double *in_Q, double dt) {
  predict(in_x, in_P, in_Q, dt);
}
}

const EKF live = {
  .name = "live",
  .kinds = { 4, 9, 10, 12, 35, 32, 13, 14, 33 },
  .feature_kinds = {  },
  .f_fun = live_f_fun,
  .F_fun = live_F_fun,
  .err_fun = live_err_fun,
  .inv_err_fun = live_inv_err_fun,
  .H_mod_fun = live_H_mod_fun,
  .predict = live_predict,
  .hs = {
    { 4, live_h_4 },
    { 9, live_h_9 },
    { 10, live_h_10 },
    { 12, live_h_12 },
    { 35, live_h_35 },
    { 32, live_h_32 },
    { 13, live_h_13 },
    { 14, live_h_14 },
    { 33, live_h_33 },
  },
  .Hs = {
    { 4, live_H_4 },
    { 9, live_H_9 },
    { 10, live_H_10 },
    { 12, live_H_12 },
    { 35, live_H_35 },
    { 32, live_H_32 },
    { 13, live_H_13 },
    { 14, live_H_14 },
    { 33, live_H_33 },
  },
  .updates = {
    { 4, live_update_4 },
    { 9, live_update_9 },
    { 10, live_update_10 },
    { 12, live_update_12 },
    { 35, live_update_35 },
    { 32, live_update_32 },
    { 13, live_update_13 },
    { 14, live_update_14 },
    { 33, live_update_33 },
  },
  .Hes = {
  },
  .sets = {
  },
  .extra_routines = {
    { "H", live_H },
  },
};

ekf_lib_init(live)
